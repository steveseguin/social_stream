var AN = Object.defineProperty;
var IN = (B, R, F) => R in B ? AN(B, R, { enumerable: !0, configurable: !0, writable: !0, value: F }) : B[R] = F;
var sD = (B, R, F) => IN(B, typeof R != "symbol" ? R + "" : R, F);
/*!
 * ONNX Runtime Web v1.22.0
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */
var Sw = Object.defineProperty, CN = Object.getOwnPropertyDescriptor, QN = Object.getOwnPropertyNames, gN = Object.prototype.hasOwnProperty, BN = ((B) => typeof require < "u" ? require : typeof Proxy < "u" ? new Proxy(B, { get: (R, F) => (typeof require < "u" ? require : R)[F] }) : B)(function(B) {
  if (typeof require < "u") return require.apply(this, arguments);
  throw Error('Dynamic require of "' + B + '" is not supported');
}), sA = (B, R) => () => (B && (R = B(B = 0)), R), nB = (B, R) => {
  for (var F in R) Sw(B, F, { get: R[F], enumerable: !0 });
}, EN = (B, R, F, i) => {
  if (R && typeof R == "object" || typeof R == "function") for (let s of QN(R)) !gN.call(B, s) && s !== F && Sw(B, s, { get: () => R[s], enumerable: !(i = CN(R, s)) || i.enumerable });
  return B;
}, qE = (B) => EN(Sw({}, "__esModule", { value: !0 }), B), yE, gg, hB, jD, gJ, BJ = sA(() => {
  yE = /* @__PURE__ */ new Map(), gg = [], hB = (B, R, F) => {
    if (R && typeof R.init == "function" && typeof R.createInferenceSessionHandler == "function") {
      let i = yE.get(B);
      if (i === void 0) yE.set(B, { backend: R, priority: F });
      else {
        if (i.priority > F) return;
        if (i.priority === F && i.backend !== R) throw new Error(`cannot register backend "${B}" using priority ${F}`);
      }
      if (F >= 0) {
        let s = gg.indexOf(B);
        s !== -1 && gg.splice(s, 1);
        for (let N = 0; N < gg.length; N++) if (yE.get(gg[N]).priority <= F) {
          gg.splice(N, 0, B);
          return;
        }
        gg.push(B);
      }
      return;
    }
    throw new TypeError("not a valid backend");
  }, jD = async (B) => {
    let R = yE.get(B);
    if (!R) return "backend not found.";
    if (R.initialized) return R.backend;
    if (R.aborted) return R.error;
    {
      let F = !!R.initPromise;
      try {
        return F || (R.initPromise = R.backend.init(B)), await R.initPromise, R.initialized = !0, R.backend;
      } catch (i) {
        return F || (R.error = `${i}`, R.aborted = !0), R.error;
      } finally {
        delete R.initPromise;
      }
    }
  }, gJ = async (B) => {
    let R = B.executionProviders || [], F = R.map((l) => typeof l == "string" ? l : l.name), i = F.length === 0 ? gg : F, s, N = [], j = /* @__PURE__ */ new Set();
    for (let l of i) {
      let k = await jD(l);
      typeof k == "string" ? N.push({ name: l, err: k }) : (s || (s = k), s === k && j.add(l));
    }
    if (!s) throw new Error(`no available backend found. ERR: ${N.map((l) => `[${l.name}] ${l.err}`).join(", ")}`);
    for (let { name: l, err: k } of N) F.includes(l) && console.warn(`removing requested execution provider "${l}" from session options because it is not available: ${k}`);
    let h = R.filter((l) => j.has(typeof l == "string" ? l : l.name));
    return [s, new Proxy(B, { get: (l, k) => k === "executionProviders" ? h : Reflect.get(l, k) })];
  };
}), UN = sA(() => {
  BJ();
}), EJ, RN = sA(() => {
  EJ = "1.22.0";
}), AR, eC, UJ = sA(() => {
  RN(), AR = "warning", eC = { wasm: {}, webgl: {}, webgpu: {}, versions: { common: EJ }, set logLevel(B) {
    if (B !== void 0) {
      if (typeof B != "string" || ["verbose", "info", "warning", "error", "fatal"].indexOf(B) === -1) throw new Error(`Unsupported logging level: ${B}`);
      AR = B;
    }
  }, get logLevel() {
    return AR;
  } }, Object.defineProperty(eC, "logLevel", { enumerable: !0 });
}), LI, wN = sA(() => {
  UJ(), LI = eC;
}), RJ, wJ, DN = sA(() => {
  RJ = (B, R) => {
    let F = typeof document < "u" ? document.createElement("canvas") : new OffscreenCanvas(1, 1);
    F.width = B.dims[3], F.height = B.dims[2];
    let i = F.getContext("2d");
    if (i != null) {
      let s, N;
      (R == null ? void 0 : R.tensorLayout) !== void 0 && R.tensorLayout === "NHWC" ? (s = B.dims[2], N = B.dims[3]) : (s = B.dims[3], N = B.dims[2]);
      let j = (R == null ? void 0 : R.format) !== void 0 ? R.format : "RGB", h = R == null ? void 0 : R.norm, l, k;
      h === void 0 || h.mean === void 0 ? l = [255, 255, 255, 255] : typeof h.mean == "number" ? l = [h.mean, h.mean, h.mean, h.mean] : (l = [h.mean[0], h.mean[1], h.mean[2], 0], h.mean[3] !== void 0 && (l[3] = h.mean[3])), h === void 0 || h.bias === void 0 ? k = [0, 0, 0, 0] : typeof h.bias == "number" ? k = [h.bias, h.bias, h.bias, h.bias] : (k = [h.bias[0], h.bias[1], h.bias[2], 0], h.bias[3] !== void 0 && (k[3] = h.bias[3]));
      let q = N * s, d = 0, b = q, P = q * 2, W = -1;
      j === "RGBA" ? (d = 0, b = q, P = q * 2, W = q * 3) : j === "RGB" ? (d = 0, b = q, P = q * 2) : j === "RBG" && (d = 0, P = q, b = q * 2);
      for (let r = 0; r < N; r++) for (let $ = 0; $ < s; $++) {
        let m = (B.data[d++] - k[0]) * l[0], z = (B.data[b++] - k[1]) * l[1], IA = (B.data[P++] - k[2]) * l[2], M = W === -1 ? 255 : (B.data[W++] - k[3]) * l[3];
        i.fillStyle = "rgba(" + m + "," + z + "," + IA + "," + M + ")", i.fillRect($, r, 1, 1);
      }
      if ("toDataURL" in F) return F.toDataURL();
      throw new Error("toDataURL is not supported");
    } else throw new Error("Can not access image data");
  }, wJ = (B, R) => {
    let F = typeof document < "u" ? document.createElement("canvas").getContext("2d") : new OffscreenCanvas(1, 1).getContext("2d"), i;
    if (F != null) {
      let s, N, j;
      (R == null ? void 0 : R.tensorLayout) !== void 0 && R.tensorLayout === "NHWC" ? (s = B.dims[2], N = B.dims[1], j = B.dims[3]) : (s = B.dims[3], N = B.dims[2], j = B.dims[1]);
      let h = R !== void 0 && R.format !== void 0 ? R.format : "RGB", l = R == null ? void 0 : R.norm, k, q;
      l === void 0 || l.mean === void 0 ? k = [255, 255, 255, 255] : typeof l.mean == "number" ? k = [l.mean, l.mean, l.mean, l.mean] : (k = [l.mean[0], l.mean[1], l.mean[2], 255], l.mean[3] !== void 0 && (k[3] = l.mean[3])), l === void 0 || l.bias === void 0 ? q = [0, 0, 0, 0] : typeof l.bias == "number" ? q = [l.bias, l.bias, l.bias, l.bias] : (q = [l.bias[0], l.bias[1], l.bias[2], 0], l.bias[3] !== void 0 && (q[3] = l.bias[3]));
      let d = N * s;
      if (R !== void 0 && (R.format !== void 0 && j === 4 && R.format !== "RGBA" || j === 3 && R.format !== "RGB" && R.format !== "BGR")) throw new Error("Tensor format doesn't match input tensor dims");
      let b = 4, P = 0, W = 1, r = 2, $ = 3, m = 0, z = d, IA = d * 2, M = -1;
      h === "RGBA" ? (m = 0, z = d, IA = d * 2, M = d * 3) : h === "RGB" ? (m = 0, z = d, IA = d * 2) : h === "RBG" && (m = 0, IA = d, z = d * 2), i = F.createImageData(s, N);
      for (let L = 0; L < N * s; P += b, W += b, r += b, $ += b, L++) i.data[P] = (B.data[m++] - q[0]) * k[0], i.data[W] = (B.data[z++] - q[1]) * k[1], i.data[r] = (B.data[IA++] - q[2]) * k[2], i.data[$] = M === -1 ? 255 : (B.data[M++] - q[3]) * k[3];
    } else throw new Error("Can not access image data");
    return i;
  };
}), iU, DJ, FJ, MJ, GJ, JJ, FN = sA(() => {
  hw(), iU = (B, R) => {
    if (B === void 0) throw new Error("Image buffer must be defined");
    if (R.height === void 0 || R.width === void 0) throw new Error("Image height and width must be defined");
    if (R.tensorLayout === "NHWC") throw new Error("NHWC Tensor layout is not supported yet");
    let { height: F, width: i } = R, s = R.norm ?? { mean: 255, bias: 0 }, N, j;
    typeof s.mean == "number" ? N = [s.mean, s.mean, s.mean, s.mean] : N = [s.mean[0], s.mean[1], s.mean[2], s.mean[3] ?? 255], typeof s.bias == "number" ? j = [s.bias, s.bias, s.bias, s.bias] : j = [s.bias[0], s.bias[1], s.bias[2], s.bias[3] ?? 0];
    let h = R.format !== void 0 ? R.format : "RGBA", l = R.tensorFormat !== void 0 && R.tensorFormat !== void 0 ? R.tensorFormat : "RGB", k = F * i, q = l === "RGBA" ? new Float32Array(k * 4) : new Float32Array(k * 3), d = 4, b = 0, P = 1, W = 2, r = 3, $ = 0, m = k, z = k * 2, IA = -1;
    h === "RGB" && (d = 3, b = 0, P = 1, W = 2, r = -1), l === "RGBA" ? IA = k * 3 : l === "RBG" ? ($ = 0, z = k, m = k * 2) : l === "BGR" && (z = 0, m = k, $ = k * 2);
    for (let M = 0; M < k; M++, b += d, W += d, P += d, r += d) q[$++] = (B[b] + j[0]) / N[0], q[m++] = (B[P] + j[1]) / N[1], q[z++] = (B[W] + j[2]) / N[2], IA !== -1 && r !== -1 && (q[IA++] = (B[r] + j[3]) / N[3]);
    return l === "RGBA" ? new fC("float32", q, [1, 4, F, i]) : new fC("float32", q, [1, 3, F, i]);
  }, DJ = async (B, R) => {
    let F = typeof HTMLImageElement < "u" && B instanceof HTMLImageElement, i = typeof ImageData < "u" && B instanceof ImageData, s = typeof ImageBitmap < "u" && B instanceof ImageBitmap, N = typeof B == "string", j, h = R ?? {}, l = () => {
      if (typeof document < "u") return document.createElement("canvas");
      if (typeof OffscreenCanvas < "u") return new OffscreenCanvas(1, 1);
      throw new Error("Canvas is not supported");
    }, k = (q) => typeof HTMLCanvasElement < "u" && q instanceof HTMLCanvasElement || q instanceof OffscreenCanvas ? q.getContext("2d") : null;
    if (F) {
      let q = l();
      q.width = B.width, q.height = B.height;
      let d = k(q);
      if (d != null) {
        let b = B.height, P = B.width;
        if (R !== void 0 && R.resizedHeight !== void 0 && R.resizedWidth !== void 0 && (b = R.resizedHeight, P = R.resizedWidth), R !== void 0) {
          if (h = R, R.tensorFormat !== void 0) throw new Error("Image input config format must be RGBA for HTMLImageElement");
          h.tensorFormat = "RGBA", h.height = b, h.width = P;
        } else h.tensorFormat = "RGBA", h.height = b, h.width = P;
        d.drawImage(B, 0, 0), j = d.getImageData(0, 0, P, b).data;
      } else throw new Error("Can not access image data");
    } else if (i) {
      let q, d;
      if (R !== void 0 && R.resizedWidth !== void 0 && R.resizedHeight !== void 0 ? (q = R.resizedHeight, d = R.resizedWidth) : (q = B.height, d = B.width), R !== void 0 && (h = R), h.format = "RGBA", h.height = q, h.width = d, R !== void 0) {
        let b = l();
        b.width = d, b.height = q;
        let P = k(b);
        if (P != null) P.putImageData(B, 0, 0), j = P.getImageData(0, 0, d, q).data;
        else throw new Error("Can not access image data");
      } else j = B.data;
    } else if (s) {
      if (R === void 0) throw new Error("Please provide image config with format for Imagebitmap");
      let q = l();
      q.width = B.width, q.height = B.height;
      let d = k(q);
      if (d != null) {
        let b = B.height, P = B.width;
        return d.drawImage(B, 0, 0, P, b), j = d.getImageData(0, 0, P, b).data, h.height = b, h.width = P, iU(j, h);
      } else throw new Error("Can not access image data");
    } else {
      if (N) return new Promise((q, d) => {
        let b = l(), P = k(b);
        if (!B || !P) return d();
        let W = new Image();
        W.crossOrigin = "Anonymous", W.src = B, W.onload = () => {
          b.width = W.width, b.height = W.height, P.drawImage(W, 0, 0, b.width, b.height);
          let r = P.getImageData(0, 0, b.width, b.height);
          h.height = b.height, h.width = b.width, q(iU(r.data, h));
        };
      });
      throw new Error("Input data provided is not supported - aborted tensor creation");
    }
    if (j !== void 0) return iU(j, h);
    throw new Error("Input data provided is not supported - aborted tensor creation");
  }, FJ = (B, R) => {
    let { width: F, height: i, download: s, dispose: N } = R, j = [1, i, F, 4];
    return new fC({ location: "texture", type: "float32", texture: B, dims: j, download: s, dispose: N });
  }, MJ = (B, R) => {
    let { dataType: F, dims: i, download: s, dispose: N } = R;
    return new fC({ location: "gpu-buffer", type: F ?? "float32", gpuBuffer: B, dims: i, download: s, dispose: N });
  }, GJ = (B, R) => {
    let { dataType: F, dims: i, download: s, dispose: N } = R;
    return new fC({ location: "ml-tensor", type: F ?? "float32", mlTensor: B, dims: i, download: s, dispose: N });
  }, JJ = (B, R, F) => new fC({ location: "cpu-pinned", type: B, data: R, dims: F ?? [R.length] });
}), dg, kE, IR, iJ, MN = sA(() => {
  dg = /* @__PURE__ */ new Map([["float32", Float32Array], ["uint8", Uint8Array], ["int8", Int8Array], ["uint16", Uint16Array], ["int16", Int16Array], ["int32", Int32Array], ["bool", Uint8Array], ["float64", Float64Array], ["uint32", Uint32Array], ["int4", Uint8Array], ["uint4", Uint8Array]]), kE = /* @__PURE__ */ new Map([[Float32Array, "float32"], [Uint8Array, "uint8"], [Int8Array, "int8"], [Uint16Array, "uint16"], [Int16Array, "int16"], [Int32Array, "int32"], [Float64Array, "float64"], [Uint32Array, "uint32"]]), IR = !1, iJ = () => {
    if (!IR) {
      IR = !0;
      let B = typeof BigInt64Array < "u" && BigInt64Array.from, R = typeof BigUint64Array < "u" && BigUint64Array.from, F = globalThis.Float16Array, i = typeof F < "u" && F.from;
      B && (dg.set("int64", BigInt64Array), kE.set(BigInt64Array, "int64")), R && (dg.set("uint64", BigUint64Array), kE.set(BigUint64Array, "uint64")), i ? (dg.set("float16", F), kE.set(F, "float16")) : dg.set("float16", Uint16Array);
    }
  };
}), yJ, oJ, GN = sA(() => {
  hw(), yJ = (B) => {
    let R = 1;
    for (let F = 0; F < B.length; F++) {
      let i = B[F];
      if (typeof i != "number" || !Number.isSafeInteger(i)) throw new TypeError(`dims[${F}] must be an integer, got: ${i}`);
      if (i < 0) throw new RangeError(`dims[${F}] must be a non-negative integer, got: ${i}`);
      R *= i;
    }
    return R;
  }, oJ = (B, R) => {
    switch (B.location) {
      case "cpu":
        return new fC(B.type, B.data, R);
      case "cpu-pinned":
        return new fC({ location: "cpu-pinned", data: B.data, type: B.type, dims: R });
      case "texture":
        return new fC({ location: "texture", texture: B.texture, type: B.type, dims: R });
      case "gpu-buffer":
        return new fC({ location: "gpu-buffer", gpuBuffer: B.gpuBuffer, type: B.type, dims: R });
      case "ml-tensor":
        return new fC({ location: "ml-tensor", mlTensor: B.mlTensor, type: B.type, dims: R });
      default:
        throw new Error(`tensorReshape: tensor location ${B.location} is not supported`);
    }
  };
}), fC, hw = sA(() => {
  DN(), FN(), MN(), GN(), fC = class {
    constructor(B, R, F) {
      iJ();
      let i, s;
      if (typeof B == "object" && "location" in B) switch (this.dataLocation = B.location, i = B.type, s = B.dims, B.location) {
        case "cpu-pinned": {
          let j = dg.get(i);
          if (!j) throw new TypeError(`unsupported type "${i}" to create tensor from pinned buffer`);
          if (!(B.data instanceof j)) throw new TypeError(`buffer should be of type ${j.name}`);
          this.cpuData = B.data;
          break;
        }
        case "texture": {
          if (i !== "float32") throw new TypeError(`unsupported type "${i}" to create tensor from texture`);
          this.gpuTextureData = B.texture, this.downloader = B.download, this.disposer = B.dispose;
          break;
        }
        case "gpu-buffer": {
          if (i !== "float32" && i !== "float16" && i !== "int32" && i !== "int64" && i !== "uint32" && i !== "uint8" && i !== "bool" && i !== "uint4" && i !== "int4") throw new TypeError(`unsupported type "${i}" to create tensor from gpu buffer`);
          this.gpuBufferData = B.gpuBuffer, this.downloader = B.download, this.disposer = B.dispose;
          break;
        }
        case "ml-tensor": {
          if (i !== "float32" && i !== "float16" && i !== "int32" && i !== "int64" && i !== "uint32" && i !== "uint64" && i !== "int8" && i !== "uint8" && i !== "bool" && i !== "uint4" && i !== "int4") throw new TypeError(`unsupported type "${i}" to create tensor from MLTensor`);
          this.mlTensorData = B.mlTensor, this.downloader = B.download, this.disposer = B.dispose;
          break;
        }
        default:
          throw new Error(`Tensor constructor: unsupported location '${this.dataLocation}'`);
      }
      else {
        let j, h;
        if (typeof B == "string") if (i = B, h = F, B === "string") {
          if (!Array.isArray(R)) throw new TypeError("A string tensor's data must be a string array.");
          j = R;
        } else {
          let l = dg.get(B);
          if (l === void 0) throw new TypeError(`Unsupported tensor type: ${B}.`);
          if (Array.isArray(R)) {
            if (B === "float16" && l === Uint16Array || B === "uint4" || B === "int4") throw new TypeError(`Creating a ${B} tensor from number array is not supported. Please use ${l.name} as data.`);
            B === "uint64" || B === "int64" ? j = l.from(R, BigInt) : j = l.from(R);
          } else if (R instanceof l) j = R;
          else if (R instanceof Uint8ClampedArray) if (B === "uint8") j = Uint8Array.from(R);
          else throw new TypeError("A Uint8ClampedArray tensor's data must be type of uint8");
          else if (B === "float16" && R instanceof Uint16Array && l !== Uint16Array) j = new globalThis.Float16Array(R.buffer, R.byteOffset, R.length);
          else throw new TypeError(`A ${i} tensor's data must be type of ${l}`);
        }
        else if (h = R, Array.isArray(B)) {
          if (B.length === 0) throw new TypeError("Tensor type cannot be inferred from an empty array.");
          let l = typeof B[0];
          if (l === "string") i = "string", j = B;
          else if (l === "boolean") i = "bool", j = Uint8Array.from(B);
          else throw new TypeError(`Invalid element type of data array: ${l}.`);
        } else if (B instanceof Uint8ClampedArray) i = "uint8", j = Uint8Array.from(B);
        else {
          let l = kE.get(B.constructor);
          if (l === void 0) throw new TypeError(`Unsupported type for tensor data: ${B.constructor}.`);
          i = l, j = B;
        }
        if (h === void 0) h = [j.length];
        else if (!Array.isArray(h)) throw new TypeError("A tensor's dims must be a number array");
        s = h, this.cpuData = j, this.dataLocation = "cpu";
      }
      let N = yJ(s);
      if (this.cpuData && N !== this.cpuData.length && !((i === "uint4" || i === "int4") && Math.ceil(N / 2) === this.cpuData.length)) throw new Error(`Tensor's size(${N}) does not match data length(${this.cpuData.length}).`);
      this.type = i, this.dims = s, this.size = N;
    }
    static async fromImage(B, R) {
      return DJ(B, R);
    }
    static fromTexture(B, R) {
      return FJ(B, R);
    }
    static fromGpuBuffer(B, R) {
      return MJ(B, R);
    }
    static fromMLTensor(B, R) {
      return GJ(B, R);
    }
    static fromPinnedBuffer(B, R, F) {
      return JJ(B, R, F);
    }
    toDataURL(B) {
      return RJ(this, B);
    }
    toImageData(B) {
      return wJ(this, B);
    }
    get data() {
      if (this.ensureValid(), !this.cpuData) throw new Error("The data is not on CPU. Use `getData()` to download GPU data to CPU, or use `texture` or `gpuBuffer` property to access the GPU data directly.");
      return this.cpuData;
    }
    get location() {
      return this.dataLocation;
    }
    get texture() {
      if (this.ensureValid(), !this.gpuTextureData) throw new Error("The data is not stored as a WebGL texture.");
      return this.gpuTextureData;
    }
    get gpuBuffer() {
      if (this.ensureValid(), !this.gpuBufferData) throw new Error("The data is not stored as a WebGPU buffer.");
      return this.gpuBufferData;
    }
    get mlTensor() {
      if (this.ensureValid(), !this.mlTensorData) throw new Error("The data is not stored as a WebNN MLTensor.");
      return this.mlTensorData;
    }
    async getData(B) {
      switch (this.ensureValid(), this.dataLocation) {
        case "cpu":
        case "cpu-pinned":
          return this.data;
        case "texture":
        case "gpu-buffer":
        case "ml-tensor": {
          if (!this.downloader) throw new Error("The current tensor is not created with a specified data downloader.");
          if (this.isDownloading) throw new Error("The current tensor is being downloaded.");
          try {
            this.isDownloading = !0;
            let R = await this.downloader();
            return this.downloader = void 0, this.dataLocation = "cpu", this.cpuData = R, B && this.disposer && (this.disposer(), this.disposer = void 0), R;
          } finally {
            this.isDownloading = !1;
          }
        }
        default:
          throw new Error(`cannot get data from location: ${this.dataLocation}`);
      }
    }
    dispose() {
      if (this.isDownloading) throw new Error("The current tensor is being downloaded.");
      this.disposer && (this.disposer(), this.disposer = void 0), this.cpuData = void 0, this.gpuTextureData = void 0, this.gpuBufferData = void 0, this.mlTensorData = void 0, this.downloader = void 0, this.isDownloading = void 0, this.dataLocation = "none";
    }
    ensureValid() {
      if (this.dataLocation === "none") throw new Error("The tensor is disposed.");
    }
    reshape(B) {
      if (this.ensureValid(), this.downloader || this.disposer) throw new Error("Cannot reshape a tensor that owns GPU resource.");
      return oJ(this, B);
    }
  };
}), pC, NJ = sA(() => {
  hw(), pC = fC;
}), ZU, CR, lQ, DQ, sJ = sA(() => {
  UJ(), ZU = (B, R) => {
    (typeof eC.trace > "u" ? !eC.wasm.trace : !eC.trace) || console.timeStamp(`${B}::ORT::${R}`);
  }, CR = (B, R) => {
    var s;
    let F = ((s = new Error().stack) == null ? void 0 : s.split(/\r\n|\r|\n/g)) || [], i = !1;
    for (let N = 0; N < F.length; N++) {
      if (i && !F[N].includes("TRACE_FUNC")) {
        let j = `FUNC_${B}::${F[N].trim().split(" ")[1]}`;
        R && (j += `::${R}`), ZU("CPU", j);
        return;
      }
      F[N].includes("TRACE_FUNC") && (i = !0);
    }
  }, lQ = (B) => {
    (typeof eC.trace > "u" ? !eC.wasm.trace : !eC.trace) || CR("BEGIN", B);
  }, DQ = (B) => {
    (typeof eC.trace > "u" ? !eC.wasm.trace : !eC.trace) || CR("END", B);
  };
}), jJ, JN = sA(() => {
  BJ(), NJ(), sJ(), jJ = class SJ {
    constructor(R) {
      this.handler = R;
    }
    async run(R, F, i) {
      lQ();
      let s = {}, N = {};
      if (typeof R != "object" || R === null || R instanceof pC || Array.isArray(R)) throw new TypeError("'feeds' must be an object that use input names as keys and OnnxValue as corresponding values.");
      let j = !0;
      if (typeof F == "object") {
        if (F === null) throw new TypeError("Unexpected argument[1]: cannot be null.");
        if (F instanceof pC) throw new TypeError("'fetches' cannot be a Tensor");
        if (Array.isArray(F)) {
          if (F.length === 0) throw new TypeError("'fetches' cannot be an empty array.");
          j = !1;
          for (let k of F) {
            if (typeof k != "string") throw new TypeError("'fetches' must be a string array or an object.");
            if (this.outputNames.indexOf(k) === -1) throw new RangeError(`'fetches' contains invalid output name: ${k}.`);
            s[k] = null;
          }
          if (typeof i == "object" && i !== null) N = i;
          else if (typeof i < "u") throw new TypeError("'options' must be an object.");
        } else {
          let k = !1, q = Object.getOwnPropertyNames(F);
          for (let d of this.outputNames) if (q.indexOf(d) !== -1) {
            let b = F[d];
            (b === null || b instanceof pC) && (k = !0, j = !1, s[d] = b);
          }
          if (k) {
            if (typeof i == "object" && i !== null) N = i;
            else if (typeof i < "u") throw new TypeError("'options' must be an object.");
          } else N = F;
        }
      } else if (typeof F < "u") throw new TypeError("Unexpected argument[1]: must be 'fetches' or 'options'.");
      for (let k of this.inputNames) if (typeof R[k] > "u") throw new Error(`input '${k}' is missing in 'feeds'.`);
      if (j) for (let k of this.outputNames) s[k] = null;
      let h = await this.handler.run(R, s, N), l = {};
      for (let k in h) if (Object.hasOwnProperty.call(h, k)) {
        let q = h[k];
        q instanceof pC ? l[k] = q : l[k] = new pC(q.type, q.data, q.dims);
      }
      return DQ(), l;
    }
    async release() {
      return this.handler.dispose();
    }
    static async create(R, F, i, s) {
      lQ();
      let N, j = {};
      if (typeof R == "string") {
        if (N = R, typeof F == "object" && F !== null) j = F;
        else if (typeof F < "u") throw new TypeError("'options' must be an object.");
      } else if (R instanceof Uint8Array) {
        if (N = R, typeof F == "object" && F !== null) j = F;
        else if (typeof F < "u") throw new TypeError("'options' must be an object.");
      } else if (R instanceof ArrayBuffer || typeof SharedArrayBuffer < "u" && R instanceof SharedArrayBuffer) {
        let q = R, d = 0, b = R.byteLength;
        if (typeof F == "object" && F !== null) j = F;
        else if (typeof F == "number") {
          if (d = F, !Number.isSafeInteger(d)) throw new RangeError("'byteOffset' must be an integer.");
          if (d < 0 || d >= q.byteLength) throw new RangeError(`'byteOffset' is out of range [0, ${q.byteLength}).`);
          if (b = R.byteLength - d, typeof i == "number") {
            if (b = i, !Number.isSafeInteger(b)) throw new RangeError("'byteLength' must be an integer.");
            if (b <= 0 || d + b > q.byteLength) throw new RangeError(`'byteLength' is out of range (0, ${q.byteLength - d}].`);
            if (typeof s == "object" && s !== null) j = s;
            else if (typeof s < "u") throw new TypeError("'options' must be an object.");
          } else if (typeof i < "u") throw new TypeError("'byteLength' must be a number.");
        } else if (typeof F < "u") throw new TypeError("'options' must be an object.");
        N = new Uint8Array(q, d, b);
      } else throw new TypeError("Unexpected argument[0]: must be 'path' or 'buffer'.");
      let [h, l] = await gJ(j), k = await h.createInferenceSessionHandler(N, l);
      return DQ(), new SJ(k);
    }
    startProfiling() {
      this.handler.startProfiling();
    }
    endProfiling() {
      this.handler.endProfiling();
    }
    get inputNames() {
      return this.handler.inputNames;
    }
    get outputNames() {
      return this.handler.outputNames;
    }
    get inputMetadata() {
      return this.handler.inputMetadata;
    }
    get outputMetadata() {
      return this.handler.outputMetadata;
    }
  };
}), Lw, iN = sA(() => {
  JN(), Lw = jJ;
}), yN = sA(() => {
}), oN = sA(() => {
}), NN = sA(() => {
}), sN = sA(() => {
}), jN = {};
nB(jN, { InferenceSession: () => Lw, TRACE: () => ZU, TRACE_FUNC_BEGIN: () => lQ, TRACE_FUNC_END: () => DQ, Tensor: () => pC, env: () => LI, registerBackend: () => hB });
var FQ = sA(() => {
  UN(), wN(), iN(), NJ(), yN(), oN(), sJ(), NN(), sN();
}), Yw = sA(() => {
}), hJ = {};
nB(hJ, { default: () => LJ });
var QR, gR, LJ, SN = sA(() => {
  var B;
  co(), pg(), Kw(), QR = "ort-wasm-proxy-worker", gR = ((B = globalThis.self) == null ? void 0 : B.name) === QR, gR && (self.onmessage = (R) => {
    let { type: F, in: i } = R.data;
    try {
      switch (F) {
        case "init-wasm":
          lw(i.wasm).then(() => {
            Ww(i).then(() => {
              postMessage({ type: F });
            }, (s) => {
              postMessage({ type: F, err: s });
            });
          }, (s) => {
            postMessage({ type: F, err: s });
          });
          break;
        case "init-ep": {
          let { epName: s, env: N } = i;
          Ow(N, s).then(() => {
            postMessage({ type: F });
          }, (j) => {
            postMessage({ type: F, err: j });
          });
          break;
        }
        case "copy-from": {
          let { buffer: s } = i, N = xU(s);
          postMessage({ type: F, out: N });
          break;
        }
        case "create": {
          let { model: s, options: N } = i;
          zw(s, N).then((j) => {
            postMessage({ type: F, out: j });
          }, (j) => {
            postMessage({ type: F, err: j });
          });
          break;
        }
        case "release":
          Xw(i), postMessage({ type: F });
          break;
        case "run": {
          let { sessionId: s, inputIndices: N, inputs: j, outputIndices: h, options: l } = i;
          rw(s, N, j, h, new Array(h.length).fill(null), l).then((k) => {
            k.some((q) => q[3] !== "cpu") ? postMessage({ type: F, err: "Proxy does not support non-cpu tensor location." }) : postMessage({ type: F, out: k }, ew([...j, ...k]));
          }, (k) => {
            postMessage({ type: F, err: k });
          });
          break;
        }
        case "end-profiling":
          mw(i), postMessage({ type: F });
          break;
        default:
      }
    } catch (s) {
      postMessage({ type: F, err: s });
    }
  }), LJ = gR ? null : (R) => new Worker(R ?? PC, { type: "module", name: QR });
}), YJ = {};
nB(YJ, { default: () => KJ });
var BR, ER, KJ, SD, hN = sA(() => {
  var B, R;
  ER = (BR = import.meta.url, async function(F = {}) {
    var bQ;
    var i, s, N = F, j = new Promise((K, Z) => {
      i = K, s = Z;
    }), h = typeof window == "object", l = typeof WorkerGlobalScope < "u", k = l && ((bQ = self.name) == null ? void 0 : bQ.startsWith("em-pthread"));
    N.mountExternalData = (K, Z) => {
      K.startsWith("./") && (K = K.substring(2)), (N.Fb || (N.Fb = /* @__PURE__ */ new Map())).set(K, Z);
    }, N.unmountExternalData = () => {
      delete N.Fb;
    };
    var q = globalThis.SharedArrayBuffer ?? new WebAssembly.Memory({ initial: 0, maximum: 0, qc: !0 }).buffer.constructor;
    let d = (K) => async (...Z) => {
      var f;
      try {
        if (N.Gb) throw Error("Session already started");
        let X = N.Gb = { ec: Z[0], errors: [] }, u = await K(...Z);
        if (N.Gb !== X) throw Error("Session mismatch");
        (f = N.Kb) == null || f.flush();
        let gA = X.errors;
        if (0 < gA.length) {
          let DA = await Promise.all(gA);
          if (DA = DA.filter((oA) => oA), 0 < DA.length) throw Error(DA.join(`
`));
        }
        return u;
      } finally {
        N.Gb = null;
      }
    };
    N.jsepInit = (K, Z) => {
      if (K === "webgpu") {
        [N.Kb, N.Vb, N.Zb, N.Lb, N.Yb, N.kb, N.$b, N.bc, N.Wb, N.Xb, N.ac] = Z;
        let f = N.Kb;
        N.jsepRegisterBuffer = (X, u, gA, DA) => f.registerBuffer(X, u, gA, DA), N.jsepGetBuffer = (X) => f.getBuffer(X), N.jsepCreateDownloader = (X, u, gA) => f.createDownloader(X, u, gA), N.jsepOnCreateSession = (X) => {
          f.onCreateSession(X);
        }, N.jsepOnReleaseSession = (X) => {
          f.onReleaseSession(X);
        }, N.jsepOnRunStart = (X) => f.onRunStart(X), N.cc = (X, u) => {
          f.upload(X, u);
        };
      } else if (K === "webnn") {
        let f = Z[0];
        [N.oc, N.Ob, N.webnnEnsureTensor, N.Pb, N.webnnDownloadTensor] = Z.slice(1), N.webnnReleaseTensorId = N.Ob, N.webnnUploadTensor = N.Pb, N.webnnOnRunStart = (X) => f.onRunStart(X), N.webnnOnRunEnd = f.onRunEnd.bind(f), N.webnnRegisterMLContext = (X, u) => {
          f.registerMLContext(X, u);
        }, N.webnnOnReleaseSession = (X) => {
          f.onReleaseSession(X);
        }, N.webnnCreateMLTensorDownloader = (X, u) => f.createMLTensorDownloader(X, u), N.webnnRegisterMLTensor = (X, u, gA, DA) => f.registerMLTensor(X, u, gA, DA), N.webnnCreateMLContext = (X) => f.createMLContext(X), N.webnnRegisterMLConstant = (X, u, gA, DA, oA, hA) => f.registerMLConstant(X, u, gA, DA, oA, N.Fb, hA), N.webnnRegisterGraphInput = f.registerGraphInput.bind(f), N.webnnIsGraphInput = f.isGraphInput.bind(f), N.webnnRegisterGraphOutput = f.registerGraphOutput.bind(f), N.webnnIsGraphOutput = f.isGraphOutput.bind(f), N.webnnCreateTemporaryTensor = f.createTemporaryTensor.bind(f), N.webnnIsGraphInputOutputTypeSupported = f.isGraphInputOutputTypeSupported.bind(f);
      }
    };
    let b = () => {
      let K = (Z, f, X) => (...u) => {
        let gA = YC, DA = f == null ? void 0 : f();
        u = Z(...u);
        let oA = f == null ? void 0 : f();
        return DA !== oA && (Z = oA, X(DA), f = X = null), YC != gA ? new Promise((hA, dA) => {
          BC = { resolve: hA, reject: dA };
        }) : u;
      };
      (() => {
        for (let Z of ["_OrtAppendExecutionProvider", "_OrtCreateSession", "_OrtRun", "_OrtRunWithBinding", "_OrtBindInput"]) N[Z] = K(N[Z], () => N[Z], (f) => N[Z] = f);
      })(), d !== void 0 && (N._OrtRun = d(N._OrtRun), N._OrtRunWithBinding = d(N._OrtRunWithBinding)), b = void 0;
    };
    N.asyncInit = () => {
      b == null || b();
    };
    var P, W, r = Object.assign({}, N), $ = (K, Z) => {
      throw Z;
    }, m = "";
    (h || l) && (l ? m = self.location.href : typeof document < "u" && document.currentScript && (m = document.currentScript.src), BR && (m = BR), m = m.startsWith("blob:") ? "" : m.slice(0, m.replace(/[?#].*/, "").lastIndexOf("/") + 1), l && (W = (K) => {
      var Z = new XMLHttpRequest();
      return Z.open("GET", K, !1), Z.responseType = "arraybuffer", Z.send(null), new Uint8Array(Z.response);
    }), P = async (K) => {
      if (MA(K)) return new Promise((f, X) => {
        var u = new XMLHttpRequest();
        u.open("GET", K, !0), u.responseType = "arraybuffer", u.onload = () => {
          u.status == 200 || u.status == 0 && u.response ? f(u.response) : X(u.status);
        }, u.onerror = X, u.send(null);
      });
      var Z = await fetch(K, { credentials: "same-origin" });
      if (Z.ok) return Z.arrayBuffer();
      throw Error(Z.status + " : " + Z.url);
    });
    var z = console.log.bind(console), IA = console.error.bind(console), M = z, L = IA;
    Object.assign(N, r), r = null;
    var A, G, a, UA, H, T, cA, GA, aA, rA, lA, vA, HA, PA = N.wasmBinary, YI = !1, MA = (K) => K.startsWith("file://");
    function jA() {
      return A.buffer != UA.buffer && yI(), UA;
    }
    function LA() {
      return A.buffer != UA.buffer && yI(), H;
    }
    function XA() {
      return A.buffer != UA.buffer && yI(), T;
    }
    function $I() {
      return A.buffer != UA.buffer && yI(), cA;
    }
    function JA() {
      return A.buffer != UA.buffer && yI(), GA;
    }
    function iI() {
      return A.buffer != UA.buffer && yI(), aA;
    }
    function WQ() {
      return A.buffer != UA.buffer && yI(), rA;
    }
    function DC() {
      return A.buffer != UA.buffer && yI(), HA;
    }
    if (k) {
      let K = function(Z) {
        try {
          var f = Z.data, X = f.Cb;
          if (X === "load") {
            let u = [];
            self.onmessage = (gA) => u.push(gA), self.startWorker = () => {
              postMessage({ Cb: "loaded" });
              for (let gA of u) K(gA);
              self.onmessage = K;
            };
            for (let gA of f.Sb) N[gA] && !N[gA].proxy || (N[gA] = (...DA) => {
              postMessage({ Cb: "callHandler", Rb: gA, args: DA });
            }, gA == "print" && (M = N[gA]), gA == "printErr" && (L = N[gA]));
            A = f.lc, yI(), dC(f.mc);
          } else if (X === "run") {
            aQ(f.Bb), xC(f.Bb, 0, 0, 1, 0, 0), VB(), AB(f.Bb), vC || (pI(), vC = !0);
            try {
              TE(f.hc, f.Ib);
            } catch (u) {
              if (u != "unwind") throw u;
            }
          } else f.target !== "setimmediate" && (X === "checkMailbox" ? vC && Jg() : X && (L(`worker: received unknown command ${X}`), L(f)));
        } catch (u) {
          throw MB(), u;
        }
      };
      var dC, vC = !1;
      L = function(...Z) {
        Z = Z.join(" "), console.error(Z);
      }, self.alert = function(...Z) {
        postMessage({ Cb: "alert", text: Z.join(" "), jc: Yg() });
      }, self.onunhandledrejection = (Z) => {
        throw Z.reason || Z;
      }, self.onmessage = K;
    }
    function yI() {
      var K = A.buffer;
      N.HEAP8 = UA = new Int8Array(K), N.HEAP16 = T = new Int16Array(K), N.HEAPU8 = H = new Uint8Array(K), N.HEAPU16 = cA = new Uint16Array(K), N.HEAP32 = GA = new Int32Array(K), N.HEAPU32 = aA = new Uint32Array(K), N.HEAPF32 = rA = new Float32Array(K), N.HEAPF64 = HA = new Float64Array(K), N.HEAP64 = lA = new BigInt64Array(K), N.HEAPU64 = vA = new BigUint64Array(K);
    }
    function nI() {
      k ? startWorker(N) : xA.Da();
    }
    k || (A = new WebAssembly.Memory({ initial: 256, maximum: 65536, shared: !0 }), yI());
    var hC, kQ = 0, cQ = null;
    function bE() {
      if (--kQ == 0 && cQ) {
        var K = cQ;
        cQ = null, K();
      }
    }
    function t(K) {
      throw L(K = "Aborted(" + K + ")"), YI = !0, K = new WebAssembly.RuntimeError(K + ". Build with -sASSERTIONS for more info."), s(K), K;
    }
    function HQ() {
      return { a: { L: dB, Aa: QA, b: PE, $: iC, A: rg, pa: TB, X: _A, Z: cC, qa: xB, na: PB, ga: Fg, ma: fB, J: pB, Y: ZQ, V: tB, oa: eg, W: vg, va: fE, E: OB, Q: pE, O: tE, D: WE, v: nQ, r: Mg, P: OE, z: rB, R: $g, ja: CI, T: eE, aa: pA, M: IB, F: CB, ia: AB, sa: mB, t: vE, Ca: zC, w: QB, o: gB, m: NQ, c: XQ, Ba: _E, n: $E, j: IU, u: EB, p: og, f: rI, s: YA, l: yC, e: uB, k: UB, h: CU, g: QU, d: gU, da: BU, ea: $B, fa: EU, ba: sQ, ca: jQ, N: RB, xa: VQ, ua: UU, i: RU, C: KA, G: wB, ta: IE, x: DB, ra: IC, U: NC, q: AE, y: sg, K: jg, S: CE, za: Sg, ya: _Q, ka: SA, la: HC, _: $C, B: gE, I: wU, ha: Ag, H: BE, a: A, wa: _C } };
    }
    var MQ = { 840156: (K, Z, f, X, u) => {
      if (N === void 0 || !N.Fb) return 1;
      if ((K = qI(Number(K >>> 0))).startsWith("./") && (K = K.substring(2)), !(K = N.Fb.get(K))) return 2;
      if (Z = Number(Z >>> 0), f = Number(f >>> 0), X = Number(X >>> 0), Z + f > K.byteLength) return 3;
      try {
        let gA = K.subarray(Z, Z + f);
        switch (u) {
          case 0:
            LA().set(gA, X >>> 0);
            break;
          case 1:
            N.nc ? N.nc(X, gA) : N.cc(X, gA);
            break;
          default:
            return 4;
        }
        return 0;
      } catch {
        return 4;
      }
    }, 840980: (K, Z, f) => {
      N.Pb(K, LA().subarray(Z >>> 0, Z + f >>> 0));
    }, 841044: () => N.oc(), 841086: (K) => {
      N.Ob(K);
    }, 841123: () => {
      N.Wb();
    }, 841154: () => {
      N.Xb();
    }, 841183: () => {
      N.ac();
    }, 841208: (K) => N.Vb(K), 841241: (K) => N.Zb(K), 841273: (K, Z, f) => {
      N.Lb(Number(K), Number(Z), Number(f), !0);
    }, 841336: (K, Z, f) => {
      N.Lb(Number(K), Number(Z), Number(f));
    }, 841393: () => typeof wasmOffsetConverter < "u", 841450: (K) => {
      N.kb("Abs", K, void 0);
    }, 841501: (K) => {
      N.kb("Neg", K, void 0);
    }, 841552: (K) => {
      N.kb("Floor", K, void 0);
    }, 841605: (K) => {
      N.kb("Ceil", K, void 0);
    }, 841657: (K) => {
      N.kb("Reciprocal", K, void 0);
    }, 841715: (K) => {
      N.kb("Sqrt", K, void 0);
    }, 841767: (K) => {
      N.kb("Exp", K, void 0);
    }, 841818: (K) => {
      N.kb("Erf", K, void 0);
    }, 841869: (K) => {
      N.kb("Sigmoid", K, void 0);
    }, 841924: (K, Z, f) => {
      N.kb("HardSigmoid", K, { alpha: Z, beta: f });
    }, 842003: (K) => {
      N.kb("Log", K, void 0);
    }, 842054: (K) => {
      N.kb("Sin", K, void 0);
    }, 842105: (K) => {
      N.kb("Cos", K, void 0);
    }, 842156: (K) => {
      N.kb("Tan", K, void 0);
    }, 842207: (K) => {
      N.kb("Asin", K, void 0);
    }, 842259: (K) => {
      N.kb("Acos", K, void 0);
    }, 842311: (K) => {
      N.kb("Atan", K, void 0);
    }, 842363: (K) => {
      N.kb("Sinh", K, void 0);
    }, 842415: (K) => {
      N.kb("Cosh", K, void 0);
    }, 842467: (K) => {
      N.kb("Asinh", K, void 0);
    }, 842520: (K) => {
      N.kb("Acosh", K, void 0);
    }, 842573: (K) => {
      N.kb("Atanh", K, void 0);
    }, 842626: (K) => {
      N.kb("Tanh", K, void 0);
    }, 842678: (K) => {
      N.kb("Not", K, void 0);
    }, 842729: (K, Z, f) => {
      N.kb("Clip", K, { min: Z, max: f });
    }, 842798: (K) => {
      N.kb("Clip", K, void 0);
    }, 842850: (K, Z) => {
      N.kb("Elu", K, { alpha: Z });
    }, 842908: (K) => {
      N.kb("Gelu", K, void 0);
    }, 842960: (K) => {
      N.kb("Relu", K, void 0);
    }, 843012: (K, Z) => {
      N.kb("LeakyRelu", K, { alpha: Z });
    }, 843076: (K, Z) => {
      N.kb("ThresholdedRelu", K, { alpha: Z });
    }, 843146: (K, Z) => {
      N.kb("Cast", K, { to: Z });
    }, 843204: (K) => {
      N.kb("Add", K, void 0);
    }, 843255: (K) => {
      N.kb("Sub", K, void 0);
    }, 843306: (K) => {
      N.kb("Mul", K, void 0);
    }, 843357: (K) => {
      N.kb("Div", K, void 0);
    }, 843408: (K) => {
      N.kb("Pow", K, void 0);
    }, 843459: (K) => {
      N.kb("Equal", K, void 0);
    }, 843512: (K) => {
      N.kb("Greater", K, void 0);
    }, 843567: (K) => {
      N.kb("GreaterOrEqual", K, void 0);
    }, 843629: (K) => {
      N.kb("Less", K, void 0);
    }, 843681: (K) => {
      N.kb("LessOrEqual", K, void 0);
    }, 843740: (K, Z, f, X, u) => {
      N.kb("ReduceMean", K, { keepDims: !!Z, noopWithEmptyAxes: !!f, axes: X ? Array.from(JA().subarray(Number(X) >>> 0, Number(u) >>> 0)) : [] });
    }, 843915: (K, Z, f, X, u) => {
      N.kb("ReduceMax", K, { keepDims: !!Z, noopWithEmptyAxes: !!f, axes: X ? Array.from(JA().subarray(Number(X) >>> 0, Number(u) >>> 0)) : [] });
    }, 844089: (K, Z, f, X, u) => {
      N.kb("ReduceMin", K, { keepDims: !!Z, noopWithEmptyAxes: !!f, axes: X ? Array.from(JA().subarray(Number(X) >>> 0, Number(u) >>> 0)) : [] });
    }, 844263: (K, Z, f, X, u) => {
      N.kb("ReduceProd", K, { keepDims: !!Z, noopWithEmptyAxes: !!f, axes: X ? Array.from(JA().subarray(Number(X) >>> 0, Number(u) >>> 0)) : [] });
    }, 844438: (K, Z, f, X, u) => {
      N.kb("ReduceSum", K, { keepDims: !!Z, noopWithEmptyAxes: !!f, axes: X ? Array.from(JA().subarray(Number(X) >>> 0, Number(u) >>> 0)) : [] });
    }, 844612: (K, Z, f, X, u) => {
      N.kb("ReduceL1", K, { keepDims: !!Z, noopWithEmptyAxes: !!f, axes: X ? Array.from(JA().subarray(Number(X) >>> 0, Number(u) >>> 0)) : [] });
    }, 844785: (K, Z, f, X, u) => {
      N.kb("ReduceL2", K, { keepDims: !!Z, noopWithEmptyAxes: !!f, axes: X ? Array.from(JA().subarray(Number(X) >>> 0, Number(u) >>> 0)) : [] });
    }, 844958: (K, Z, f, X, u) => {
      N.kb("ReduceLogSum", K, { keepDims: !!Z, noopWithEmptyAxes: !!f, axes: X ? Array.from(JA().subarray(Number(X) >>> 0, Number(u) >>> 0)) : [] });
    }, 845135: (K, Z, f, X, u) => {
      N.kb("ReduceSumSquare", K, { keepDims: !!Z, noopWithEmptyAxes: !!f, axes: X ? Array.from(JA().subarray(Number(X) >>> 0, Number(u) >>> 0)) : [] });
    }, 845315: (K, Z, f, X, u) => {
      N.kb("ReduceLogSumExp", K, { keepDims: !!Z, noopWithEmptyAxes: !!f, axes: X ? Array.from(JA().subarray(Number(X) >>> 0, Number(u) >>> 0)) : [] });
    }, 845495: (K) => {
      N.kb("Where", K, void 0);
    }, 845548: (K, Z, f) => {
      N.kb("Transpose", K, { perm: Z ? Array.from(JA().subarray(Number(Z) >>> 0, Number(f) >>> 0)) : [] });
    }, 845672: (K, Z, f, X) => {
      N.kb("DepthToSpace", K, { blocksize: Z, mode: qI(f), format: X ? "NHWC" : "NCHW" });
    }, 845805: (K, Z, f, X) => {
      N.kb("DepthToSpace", K, { blocksize: Z, mode: qI(f), format: X ? "NHWC" : "NCHW" });
    }, 845938: (K, Z, f, X, u, gA, DA, oA, hA, dA, OA, UI, eA, eI, CQ) => {
      N.kb("ConvTranspose", K, { format: hA ? "NHWC" : "NCHW", autoPad: Z, dilations: [f], group: X, kernelShape: [u], pads: [gA, DA], strides: [oA], wIsConst: () => !!jA()[dA >>> 0], outputPadding: OA ? Array.from(JA().subarray(Number(OA) >>> 0, Number(UI) >>> 0)) : [], outputShape: eA ? Array.from(JA().subarray(Number(eA) >>> 0, Number(eI) >>> 0)) : [], activation: qI(CQ) });
    }, 846371: (K, Z, f, X, u, gA, DA, oA, hA, dA, OA, UI, eA, eI) => {
      N.kb("ConvTranspose", K, { format: oA ? "NHWC" : "NCHW", autoPad: Z, dilations: Array.from(JA().subarray(Number(f) >>> 0, 2 + (Number(f) >>> 0) >>> 0)), group: X, kernelShape: Array.from(JA().subarray(Number(u) >>> 0, 2 + (Number(u) >>> 0) >>> 0)), pads: Array.from(JA().subarray(Number(gA) >>> 0, 4 + (Number(gA) >>> 0) >>> 0)), strides: Array.from(JA().subarray(Number(DA) >>> 0, 2 + (Number(DA) >>> 0) >>> 0)), wIsConst: () => !!jA()[hA >>> 0], outputPadding: dA ? Array.from(JA().subarray(Number(dA) >>> 0, Number(OA) >>> 0)) : [], outputShape: UI ? Array.from(JA().subarray(Number(UI) >>> 0, Number(eA) >>> 0)) : [], activation: qI(eI) });
    }, 847032: (K, Z, f, X, u, gA, DA, oA, hA, dA, OA, UI, eA, eI, CQ) => {
      N.kb("ConvTranspose", K, { format: hA ? "NHWC" : "NCHW", autoPad: Z, dilations: [f], group: X, kernelShape: [u], pads: [gA, DA], strides: [oA], wIsConst: () => !!jA()[dA >>> 0], outputPadding: OA ? Array.from(JA().subarray(Number(OA) >>> 0, Number(UI) >>> 0)) : [], outputShape: eA ? Array.from(JA().subarray(Number(eA) >>> 0, Number(eI) >>> 0)) : [], activation: qI(CQ) });
    }, 847465: (K, Z, f, X, u, gA, DA, oA, hA, dA, OA, UI, eA, eI) => {
      N.kb("ConvTranspose", K, { format: oA ? "NHWC" : "NCHW", autoPad: Z, dilations: Array.from(JA().subarray(Number(f) >>> 0, 2 + (Number(f) >>> 0) >>> 0)), group: X, kernelShape: Array.from(JA().subarray(Number(u) >>> 0, 2 + (Number(u) >>> 0) >>> 0)), pads: Array.from(JA().subarray(Number(gA) >>> 0, 4 + (Number(gA) >>> 0) >>> 0)), strides: Array.from(JA().subarray(Number(DA) >>> 0, 2 + (Number(DA) >>> 0) >>> 0)), wIsConst: () => !!jA()[hA >>> 0], outputPadding: dA ? Array.from(JA().subarray(Number(dA) >>> 0, Number(OA) >>> 0)) : [], outputShape: UI ? Array.from(JA().subarray(Number(UI) >>> 0, Number(eA) >>> 0)) : [], activation: qI(eI) });
    }, 848126: (K, Z) => {
      N.kb("GlobalAveragePool", K, { format: Z ? "NHWC" : "NCHW" });
    }, 848217: (K, Z, f, X, u, gA, DA, oA, hA, dA, OA, UI, eA, eI) => {
      N.kb("AveragePool", K, { format: eI ? "NHWC" : "NCHW", auto_pad: Z, ceil_mode: f, count_include_pad: X, storage_order: u, dilations: gA ? Array.from(JA().subarray(Number(gA) >>> 0, Number(DA) >>> 0)) : [], kernel_shape: oA ? Array.from(JA().subarray(Number(oA) >>> 0, Number(hA) >>> 0)) : [], pads: dA ? Array.from(JA().subarray(Number(dA) >>> 0, Number(OA) >>> 0)) : [], strides: UI ? Array.from(JA().subarray(Number(UI) >>> 0, Number(eA) >>> 0)) : [] });
    }, 848696: (K, Z) => {
      N.kb("GlobalAveragePool", K, { format: Z ? "NHWC" : "NCHW" });
    }, 848787: (K, Z, f, X, u, gA, DA, oA, hA, dA, OA, UI, eA, eI) => {
      N.kb("AveragePool", K, { format: eI ? "NHWC" : "NCHW", auto_pad: Z, ceil_mode: f, count_include_pad: X, storage_order: u, dilations: gA ? Array.from(JA().subarray(Number(gA) >>> 0, Number(DA) >>> 0)) : [], kernel_shape: oA ? Array.from(JA().subarray(Number(oA) >>> 0, Number(hA) >>> 0)) : [], pads: dA ? Array.from(JA().subarray(Number(dA) >>> 0, Number(OA) >>> 0)) : [], strides: UI ? Array.from(JA().subarray(Number(UI) >>> 0, Number(eA) >>> 0)) : [] });
    }, 849266: (K, Z) => {
      N.kb("GlobalMaxPool", K, { format: Z ? "NHWC" : "NCHW" });
    }, 849353: (K, Z, f, X, u, gA, DA, oA, hA, dA, OA, UI, eA, eI) => {
      N.kb("MaxPool", K, { format: eI ? "NHWC" : "NCHW", auto_pad: Z, ceil_mode: f, count_include_pad: X, storage_order: u, dilations: gA ? Array.from(JA().subarray(Number(gA) >>> 0, Number(DA) >>> 0)) : [], kernel_shape: oA ? Array.from(JA().subarray(Number(oA) >>> 0, Number(hA) >>> 0)) : [], pads: dA ? Array.from(JA().subarray(Number(dA) >>> 0, Number(OA) >>> 0)) : [], strides: UI ? Array.from(JA().subarray(Number(UI) >>> 0, Number(eA) >>> 0)) : [] });
    }, 849828: (K, Z) => {
      N.kb("GlobalMaxPool", K, { format: Z ? "NHWC" : "NCHW" });
    }, 849915: (K, Z, f, X, u, gA, DA, oA, hA, dA, OA, UI, eA, eI) => {
      N.kb("MaxPool", K, { format: eI ? "NHWC" : "NCHW", auto_pad: Z, ceil_mode: f, count_include_pad: X, storage_order: u, dilations: gA ? Array.from(JA().subarray(Number(gA) >>> 0, Number(DA) >>> 0)) : [], kernel_shape: oA ? Array.from(JA().subarray(Number(oA) >>> 0, Number(hA) >>> 0)) : [], pads: dA ? Array.from(JA().subarray(Number(dA) >>> 0, Number(OA) >>> 0)) : [], strides: UI ? Array.from(JA().subarray(Number(UI) >>> 0, Number(eA) >>> 0)) : [] });
    }, 850390: (K, Z, f, X, u) => {
      N.kb("Gemm", K, { alpha: Z, beta: f, transA: X, transB: u });
    }, 850494: (K) => {
      N.kb("MatMul", K, void 0);
    }, 850548: (K, Z, f, X) => {
      N.kb("ArgMax", K, { keepDims: !!Z, selectLastIndex: !!f, axis: X });
    }, 850656: (K, Z, f, X) => {
      N.kb("ArgMin", K, { keepDims: !!Z, selectLastIndex: !!f, axis: X });
    }, 850764: (K, Z) => {
      N.kb("Softmax", K, { axis: Z });
    }, 850827: (K, Z) => {
      N.kb("Concat", K, { axis: Z });
    }, 850887: (K, Z, f, X, u) => {
      N.kb("Split", K, { axis: Z, numOutputs: f, splitSizes: X ? Array.from(JA().subarray(Number(X) >>> 0, Number(u) >>> 0)) : [] });
    }, 851043: (K) => {
      N.kb("Expand", K, void 0);
    }, 851097: (K, Z) => {
      N.kb("Gather", K, { axis: Number(Z) });
    }, 851168: (K, Z) => {
      N.kb("GatherElements", K, { axis: Number(Z) });
    }, 851247: (K, Z) => {
      N.kb("GatherND", K, { batch_dims: Number(Z) });
    }, 851326: (K, Z, f, X, u, gA, DA, oA, hA, dA, OA) => {
      N.kb("Resize", K, { antialias: Z, axes: f ? Array.from(JA().subarray(Number(f) >>> 0, Number(X) >>> 0)) : [], coordinateTransformMode: qI(u), cubicCoeffA: gA, excludeOutside: DA, extrapolationValue: oA, keepAspectRatioPolicy: qI(hA), mode: qI(dA), nearestMode: qI(OA) });
    }, 851688: (K, Z, f, X, u, gA, DA) => {
      N.kb("Slice", K, { starts: Z ? Array.from(JA().subarray(Number(Z) >>> 0, Number(f) >>> 0)) : [], ends: X ? Array.from(JA().subarray(Number(X) >>> 0, Number(u) >>> 0)) : [], axes: gA ? Array.from(JA().subarray(Number(gA) >>> 0, Number(DA) >>> 0)) : [] });
    }, 851952: (K) => {
      N.kb("Tile", K, void 0);
    }, 852004: (K, Z, f) => {
      N.kb("InstanceNormalization", K, { epsilon: Z, format: f ? "NHWC" : "NCHW" });
    }, 852118: (K, Z, f) => {
      N.kb("InstanceNormalization", K, { epsilon: Z, format: f ? "NHWC" : "NCHW" });
    }, 852232: (K) => {
      N.kb("Range", K, void 0);
    }, 852285: (K, Z) => {
      N.kb("Einsum", K, { equation: qI(Z) });
    }, 852366: (K, Z, f, X, u) => {
      N.kb("Pad", K, { mode: Z, value: f, pads: X ? Array.from(JA().subarray(Number(X) >>> 0, Number(u) >>> 0)) : [] });
    }, 852509: (K, Z, f, X, u, gA) => {
      N.kb("BatchNormalization", K, { epsilon: Z, momentum: f, spatial: !!u, trainingMode: !!X, format: gA ? "NHWC" : "NCHW" });
    }, 852678: (K, Z, f, X, u, gA) => {
      N.kb("BatchNormalization", K, { epsilon: Z, momentum: f, spatial: !!u, trainingMode: !!X, format: gA ? "NHWC" : "NCHW" });
    }, 852847: (K, Z, f) => {
      N.kb("CumSum", K, { exclusive: Number(Z), reverse: Number(f) });
    }, 852944: (K, Z, f) => {
      N.kb("DequantizeLinear", K, { axis: Z, blockSize: f });
    }, 853034: (K, Z, f, X, u) => {
      N.kb("GridSample", K, { align_corners: Z, mode: qI(f), padding_mode: qI(X), format: u ? "NHWC" : "NCHW" });
    }, 853204: (K, Z, f, X, u) => {
      N.kb("GridSample", K, { align_corners: Z, mode: qI(f), padding_mode: qI(X), format: u ? "NHWC" : "NCHW" });
    }, 853374: (K, Z) => {
      N.kb("ScatterND", K, { reduction: qI(Z) });
    }, 853459: (K, Z, f, X, u, gA, DA, oA, hA) => {
      N.kb("Attention", K, { numHeads: Z, isUnidirectional: f, maskFilterValue: X, scale: u, doRotary: gA, qkvHiddenSizes: DA ? Array.from(JA().subarray(Number(oA) >>> 0, Number(oA) + DA >>> 0)) : [], pastPresentShareBuffer: !!hA });
    }, 853731: (K) => {
      N.kb("BiasAdd", K, void 0);
    }, 853786: (K) => {
      N.kb("BiasSplitGelu", K, void 0);
    }, 853847: (K) => {
      N.kb("FastGelu", K, void 0);
    }, 853903: (K, Z, f, X, u, gA, DA, oA, hA, dA, OA, UI, eA, eI, CQ, iB) => {
      N.kb("Conv", K, { format: UI ? "NHWC" : "NCHW", auto_pad: Z, dilations: f ? Array.from(JA().subarray(Number(f) >>> 0, Number(X) >>> 0)) : [], group: u, kernel_shape: gA ? Array.from(JA().subarray(Number(gA) >>> 0, Number(DA) >>> 0)) : [], pads: oA ? Array.from(JA().subarray(Number(oA) >>> 0, Number(hA) >>> 0)) : [], strides: dA ? Array.from(JA().subarray(Number(dA) >>> 0, Number(OA) >>> 0)) : [], w_is_const: () => !!jA()[Number(eA) >>> 0], activation: qI(eI), activation_params: CQ ? Array.from(WQ().subarray(Number(CQ) >>> 0, Number(iB) >>> 0)) : [] });
    }, 854487: (K) => {
      N.kb("Gelu", K, void 0);
    }, 854539: (K, Z, f, X, u, gA, DA, oA, hA) => {
      N.kb("GroupQueryAttention", K, { numHeads: Z, kvNumHeads: f, scale: X, softcap: u, doRotary: gA, rotaryInterleaved: DA, smoothSoftmax: oA, localWindowSize: hA });
    }, 854756: (K, Z, f, X) => {
      N.kb("LayerNormalization", K, { axis: Z, epsilon: f, simplified: !!X });
    }, 854867: (K, Z, f, X) => {
      N.kb("LayerNormalization", K, { axis: Z, epsilon: f, simplified: !!X });
    }, 854978: (K, Z, f, X, u, gA) => {
      N.kb("MatMulNBits", K, { k: Z, n: f, accuracyLevel: X, bits: u, blockSize: gA });
    }, 855105: (K, Z, f, X, u, gA) => {
      N.kb("MultiHeadAttention", K, { numHeads: Z, isUnidirectional: f, maskFilterValue: X, scale: u, doRotary: gA });
    }, 855264: (K, Z) => {
      N.kb("QuickGelu", K, { alpha: Z });
    }, 855328: (K, Z, f, X, u) => {
      N.kb("RotaryEmbedding", K, { interleaved: !!Z, numHeads: f, rotaryEmbeddingDim: X, scale: u });
    }, 855467: (K, Z, f) => {
      N.kb("SkipLayerNormalization", K, { epsilon: Z, simplified: !!f });
    }, 855569: (K, Z, f) => {
      N.kb("SkipLayerNormalization", K, { epsilon: Z, simplified: !!f });
    }, 855671: (K, Z, f, X) => {
      N.kb("GatherBlockQuantized", K, { gatherAxis: Z, quantizeAxis: f, blockSize: X });
    }, 855792: (K) => {
      N.$b(K);
    }, 855826: (K, Z) => N.bc(Number(K), Number(Z), N.Gb.ec, N.Gb.errors) };
    function QA(K, Z, f) {
      return oQ(async () => {
        await N.Yb(Number(K), Number(Z), Number(f));
      });
    }
    function dB() {
      return typeof wasmOffsetConverter < "u";
    }
    class GQ {
      constructor(Z) {
        sD(this, "name", "ExitStatus");
        this.message = `Program terminated with exit(${Z})`, this.status = Z;
      }
    }
    var Wg = (K) => {
      K.terminate(), K.onmessage = () => {
      };
    }, Og = [], qB = (K) => {
      QI.length == 0 && (Xg(), zg(QI[0]));
      var Z = QI.pop();
      if (!Z) return 6;
      KI.push(Z), JQ[K.Bb] = Z, Z.Bb = K.Bb;
      var f = { Cb: "run", hc: K.fc, Ib: K.Ib, Bb: K.Bb };
      return Z.postMessage(f, K.Nb), 0;
    }, uC = 0, EI = (K, Z, ...f) => {
      for (var X = 2 * f.length, u = GB(), gA = Kg(8 * X), DA = gA >>> 3, oA = 0; oA < f.length; oA++) {
        var hA = f[oA];
        typeof hA == "bigint" ? (lA[DA + 2 * oA] = 1n, lA[DA + 2 * oA + 1] = hA) : (lA[DA + 2 * oA] = 0n, DC()[DA + 2 * oA + 1 >>> 0] = hA);
      }
      return K = rC(K, 0, X, gA, Z), Cg(u), K;
    };
    function _C(K) {
      if (k) return EI(0, 1, K);
      if (a = K, !(0 < uC)) {
        for (var Z of KI) Wg(Z);
        for (Z of QI) Wg(Z);
        QI = [], KI = [], JQ = {}, YI = !0;
      }
      $(0, new GQ(K));
    }
    function OQ(K) {
      if (k) return EI(1, 0, K);
      $C(K);
    }
    var $C = (K) => {
      if (a = K, k) throw OQ(K), "unwind";
      _C(K);
    }, QI = [], KI = [], kC = [], JQ = {}, AC = (K) => {
      var Z = K.Bb;
      delete JQ[Z], QI.push(K), KI.splice(KI.indexOf(K), 1), K.Bb = 0, RE(Z);
    };
    function VB() {
      kC.forEach((K) => K());
    }
    var zg = (K) => new Promise((Z) => {
      K.onmessage = (u) => {
        var gA = (u = u.data).Cb;
        if (u.Hb && u.Hb != Yg()) {
          var DA = JQ[u.Hb];
          DA ? DA.postMessage(u, u.Nb) : L(`Internal error! Worker sent a message "${gA}" to target pthread ${u.Hb}, but that thread no longer exists!`);
        } else gA === "checkMailbox" ? Jg() : gA === "spawnThread" ? qB(u) : gA === "cleanupThread" ? AC(JQ[u.ic]) : gA === "loaded" ? (K.loaded = !0, Z(K)) : gA === "alert" ? alert(`Thread ${u.jc}: ${u.text}`) : u.target === "setimmediate" ? K.postMessage(u) : gA === "callHandler" ? N[u.Rb](...u.args) : gA && L(`worker sent an unknown command ${gA}`);
      }, K.onerror = (u) => {
        throw L(`worker sent an error! ${u.filename}:${u.lineno}: ${u.message}`), u;
      };
      var f, X = [];
      for (f of []) N.propertyIsEnumerable(f) && X.push(f);
      K.postMessage({ Cb: "load", Sb: X, lc: A, mc: G });
    });
    function Xg() {
      var K = new Worker((() => {
        let Z = URL;
        return import.meta.url > "file:" && import.meta.url < "file;" ? new Z("ort.bundle.min.mjs", import.meta.url) : new URL(import.meta.url);
      })(), { type: "module", workerData: "em-pthread", name: "em-pthread" });
      QI.push(K);
    }
    var aQ = (K) => {
      yI();
      var Z = iI()[K + 52 >>> 2 >>> 0];
      K = iI()[K + 56 >>> 2 >>> 0], mC(Z, Z - K), Cg(Z);
    }, TE = (K, Z) => {
      uC = 0, K = JB(K, Z), 0 < uC ? a = K : OI(K);
    };
    class xE {
      constructor(Z) {
        this.Jb = Z - 24;
      }
    }
    function PE(K, Z, f) {
      var X = new xE(K >>>= 0);
      throw Z >>>= 0, f >>>= 0, iI()[X.Jb + 16 >>> 2 >>> 0] = 0, iI()[X.Jb + 4 >>> 2 >>> 0] = Z, iI()[X.Jb + 8 >>> 2 >>> 0] = f, K;
    }
    function DI(K, Z, f, X) {
      return k ? EI(2, 1, K, Z, f, X) : iC(K, Z, f, X);
    }
    function iC(K, Z, f, X) {
      if (K >>>= 0, f >>>= 0, X >>>= 0, q === void 0) return 6;
      var u = [];
      return k && u.length === 0 ? DI(K, Z >>>= 0, f, X) : (K = { fc: f, Bb: K, Ib: X, Nb: u }, k ? (K.Cb = "spawnThread", postMessage(K, u), 0) : qB(K));
    }
    var bB = typeof TextDecoder < "u" ? new TextDecoder() : void 0, Dg = (K, Z = 0, f = NaN) => {
      var X = (Z >>>= 0) + f;
      for (f = Z; K[f] && !(f >= X); ) ++f;
      if (16 < f - Z && K.buffer && bB) return bB.decode(K.buffer instanceof ArrayBuffer ? K.subarray(Z, f) : K.slice(Z, f));
      for (X = ""; Z < f; ) {
        var u = K[Z++];
        if (128 & u) {
          var gA = 63 & K[Z++];
          if ((224 & u) == 192) X += String.fromCharCode((31 & u) << 6 | gA);
          else {
            var DA = 63 & K[Z++];
            65536 > (u = (240 & u) == 224 ? (15 & u) << 12 | gA << 6 | DA : (7 & u) << 18 | gA << 12 | DA << 6 | 63 & K[Z++]) ? X += String.fromCharCode(u) : (u -= 65536, X += String.fromCharCode(55296 | u >> 10, 56320 | 1023 & u));
          }
        } else X += String.fromCharCode(u);
      }
      return X;
    }, qI = (K, Z) => (K >>>= 0) ? Dg(LA(), K, Z) : "";
    function rg(K, Z, f) {
      return k ? EI(3, 1, K, Z, f) : 0;
    }
    function TB(K, Z) {
      if (k) return EI(4, 1, K, Z);
    }
    var mg = (K) => {
      for (var Z = 0, f = 0; f < K.length; ++f) {
        var X = K.charCodeAt(f);
        127 >= X ? Z++ : 2047 >= X ? Z += 2 : 55296 <= X && 57343 >= X ? (Z += 4, ++f) : Z += 3;
      }
      return Z;
    }, WI = (K, Z, f) => {
      var X = LA();
      if (Z >>>= 0, 0 < f) {
        var u = Z;
        f = Z + f - 1;
        for (var gA = 0; gA < K.length; ++gA) {
          var DA = K.charCodeAt(gA);
          if (55296 <= DA && 57343 >= DA && (DA = 65536 + ((1023 & DA) << 10) | 1023 & K.charCodeAt(++gA)), 127 >= DA) {
            if (Z >= f) break;
            X[Z++ >>> 0] = DA;
          } else {
            if (2047 >= DA) {
              if (Z + 1 >= f) break;
              X[Z++ >>> 0] = 192 | DA >> 6;
            } else {
              if (65535 >= DA) {
                if (Z + 2 >= f) break;
                X[Z++ >>> 0] = 224 | DA >> 12;
              } else {
                if (Z + 3 >= f) break;
                X[Z++ >>> 0] = 240 | DA >> 18, X[Z++ >>> 0] = 128 | DA >> 12 & 63;
              }
              X[Z++ >>> 0] = 128 | DA >> 6 & 63;
            }
            X[Z++ >>> 0] = 128 | 63 & DA;
          }
        }
        X[Z >>> 0] = 0, K = Z - u;
      } else K = 0;
      return K;
    };
    function _A(K, Z) {
      if (k) return EI(5, 1, K, Z);
    }
    function cC(K, Z, f) {
      if (k) return EI(6, 1, K, Z, f);
    }
    function xB(K, Z, f) {
      return k ? EI(7, 1, K, Z, f) : 0;
    }
    function PB(K, Z) {
      if (k) return EI(8, 1, K, Z);
    }
    function Fg(K, Z, f) {
      if (k) return EI(9, 1, K, Z, f);
    }
    function fB(K, Z, f, X) {
      if (k) return EI(10, 1, K, Z, f, X);
    }
    function pB(K, Z, f, X) {
      if (k) return EI(11, 1, K, Z, f, X);
    }
    function ZQ(K, Z, f, X) {
      if (k) return EI(12, 1, K, Z, f, X);
    }
    function tB(K) {
      if (k) return EI(13, 1, K);
    }
    function eg(K, Z) {
      if (k) return EI(14, 1, K, Z);
    }
    function vg(K, Z, f) {
      if (k) return EI(15, 1, K, Z, f);
    }
    var WB, gC, fE = () => t(""), qC = (K) => {
      for (var Z = ""; LA()[K >>> 0]; ) Z += WB[LA()[K++ >>> 0]];
      return Z;
    }, ug = {}, iQ = {};
    function VC(K, Z, f = {}) {
      return function(X, u, gA = {}) {
        var DA = u.name;
        if (!X) throw new gC(`type "${DA}" must have a positive integer typeid pointer`);
        if (iQ.hasOwnProperty(X)) {
          if (gA.Tb) return;
          throw new gC(`Cannot register type '${DA}' twice`);
        }
        iQ[X] = u, ug.hasOwnProperty(X) && (u = ug[X], delete ug[X], u.forEach((oA) => oA()));
      }(K, Z, f);
    }
    var XI = (K, Z, f) => {
      switch (Z) {
        case 1:
          return f ? (X) => jA()[X >>> 0] : (X) => LA()[X >>> 0];
        case 2:
          return f ? (X) => XA()[X >>> 1 >>> 0] : (X) => $I()[X >>> 1 >>> 0];
        case 4:
          return f ? (X) => JA()[X >>> 2 >>> 0] : (X) => iI()[X >>> 2 >>> 0];
        case 8:
          return f ? (X) => lA[X >>> 3] : (X) => vA[X >>> 3];
        default:
          throw new TypeError(`invalid integer width (${Z}): ${K}`);
      }
    };
    function OB(K, Z, f) {
      f >>>= 0, VC(K >>>= 0, { name: Z = qC(Z >>> 0), fromWireType: (X) => X, toWireType: function(X, u) {
        if (typeof u != "bigint" && typeof u != "number") throw u = u === null ? "null" : (X = typeof u) == "object" || X === "array" || X === "function" ? u.toString() : "" + u, new TypeError(`Cannot convert "${u}" to ${this.name}`);
        return typeof u == "number" && (u = BigInt(u)), u;
      }, Db: WC, readValueFromPointer: XI(Z, f, Z.indexOf("u") == -1), Eb: null });
    }
    var WC = 8;
    function pE(K, Z, f, X) {
      VC(K >>>= 0, { name: Z = qC(Z >>> 0), fromWireType: function(u) {
        return !!u;
      }, toWireType: function(u, gA) {
        return gA ? f : X;
      }, Db: WC, readValueFromPointer: function(u) {
        return this.fromWireType(LA()[u >>> 0]);
      }, Eb: null });
    }
    var zQ = [], OC = [];
    function XQ(K) {
      9 < (K >>>= 0) && --OC[K + 1] == 0 && (OC[K] = void 0, zQ.push(K));
    }
    var uI = (K) => {
      if (!K) throw new gC("Cannot use deleted val. handle = " + K);
      return OC[K];
    }, bA = (K) => {
      switch (K) {
        case void 0:
          return 2;
        case null:
          return 4;
        case !0:
          return 6;
        case !1:
          return 8;
        default:
          let Z = zQ.pop() || OC.length;
          return OC[Z] = K, OC[Z + 1] = 1, Z;
      }
    };
    function LC(K) {
      return this.fromWireType(iI()[K >>> 2 >>> 0]);
    }
    var yQ = { name: "emscripten::val", fromWireType: (K) => {
      var Z = uI(K);
      return XQ(K), Z;
    }, toWireType: (K, Z) => bA(Z), Db: WC, readValueFromPointer: LC, Eb: null };
    function tE(K) {
      return VC(K >>> 0, yQ);
    }
    var zB = (K, Z) => {
      switch (Z) {
        case 4:
          return function(f) {
            return this.fromWireType(WQ()[f >>> 2 >>> 0]);
          };
        case 8:
          return function(f) {
            return this.fromWireType(DC()[f >>> 3 >>> 0]);
          };
        default:
          throw new TypeError(`invalid float width (${Z}): ${K}`);
      }
    };
    function WE(K, Z, f) {
      f >>>= 0, VC(K >>>= 0, { name: Z = qC(Z >>> 0), fromWireType: (X) => X, toWireType: (X, u) => u, Db: WC, readValueFromPointer: zB(Z, f), Eb: null });
    }
    function nQ(K, Z, f, X, u) {
      if (K >>>= 0, f >>>= 0, Z = qC(Z >>> 0), u === -1 && (u = 4294967295), u = (oA) => oA, X === 0) {
        var gA = 32 - 8 * f;
        u = (oA) => oA << gA >>> gA;
      }
      var DA = Z.includes("unsigned") ? function(oA, hA) {
        return hA >>> 0;
      } : function(oA, hA) {
        return hA;
      };
      VC(K, { name: Z, fromWireType: u, toWireType: DA, Db: WC, readValueFromPointer: XI(Z, f, X !== 0), Eb: null });
    }
    function Mg(K, Z, f) {
      function X(gA) {
        var DA = iI()[gA >>> 2 >>> 0];
        return gA = iI()[gA + 4 >>> 2 >>> 0], new u(jA().buffer, gA, DA);
      }
      var u = [Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array, BigInt64Array, BigUint64Array][Z];
      VC(K >>>= 0, { name: f = qC(f >>> 0), fromWireType: X, Db: WC, readValueFromPointer: X }, { Tb: !0 });
    }
    function OE(K, Z) {
      VC(K >>>= 0, { name: Z = qC(Z >>> 0), fromWireType: function(f) {
        for (var X, u = iI()[f >>> 2 >>> 0], gA = f + 4, DA = gA, oA = 0; oA <= u; ++oA) {
          var hA = gA + oA;
          oA != u && LA()[hA >>> 0] != 0 || (DA = qI(DA, hA - DA), X === void 0 ? X = DA : (X += "\0", X += DA), DA = hA + 1);
        }
        return TC(f), X;
      }, toWireType: function(f, X) {
        X instanceof ArrayBuffer && (X = new Uint8Array(X));
        var u = typeof X == "string";
        if (!(u || X instanceof Uint8Array || X instanceof Uint8ClampedArray || X instanceof Int8Array)) throw new gC("Cannot pass non-string to std::string");
        var gA = u ? mg(X) : X.length, DA = tA(4 + gA + 1), oA = DA + 4;
        if (iI()[DA >>> 2 >>> 0] = gA, u) WI(X, oA, gA + 1);
        else if (u) for (u = 0; u < gA; ++u) {
          var hA = X.charCodeAt(u);
          if (255 < hA) throw TC(DA), new gC("String has UTF-16 code units that do not fit in 8 bits");
          LA()[oA + u >>> 0] = hA;
        }
        else for (u = 0; u < gA; ++u) LA()[oA + u >>> 0] = X[u];
        return f !== null && f.push(TC, DA), DA;
      }, Db: WC, readValueFromPointer: LC, Eb(f) {
        TC(f);
      } });
    }
    var XB = typeof TextDecoder < "u" ? new TextDecoder("utf-16le") : void 0, zE = (K, Z) => {
      for (var f = K >> 1, X = f + Z / 2; !(f >= X) && $I()[f >>> 0]; ) ++f;
      if (32 < (f <<= 1) - K && XB) return XB.decode(LA().slice(K, f));
      for (f = "", X = 0; !(X >= Z / 2); ++X) {
        var u = XA()[K + 2 * X >>> 1 >>> 0];
        if (u == 0) break;
        f += String.fromCharCode(u);
      }
      return f;
    }, XE = (K, Z, f) => {
      if (f ?? (f = 2147483647), 2 > f) return 0;
      var X = Z;
      f = (f -= 2) < 2 * K.length ? f / 2 : K.length;
      for (var u = 0; u < f; ++u) {
        var gA = K.charCodeAt(u);
        XA()[Z >>> 1 >>> 0] = gA, Z += 2;
      }
      return XA()[Z >>> 1 >>> 0] = 0, Z - X;
    }, rE = (K) => 2 * K.length, _g = (K, Z) => {
      for (var f = 0, X = ""; !(f >= Z / 4); ) {
        var u = JA()[K + 4 * f >>> 2 >>> 0];
        if (u == 0) break;
        ++f, 65536 <= u ? (u -= 65536, X += String.fromCharCode(55296 | u >> 10, 56320 | 1023 & u)) : X += String.fromCharCode(u);
      }
      return X;
    }, mE = (K, Z, f) => {
      if (Z >>>= 0, f ?? (f = 2147483647), 4 > f) return 0;
      var X = Z;
      f = X + f - 4;
      for (var u = 0; u < K.length; ++u) {
        var gA = K.charCodeAt(u);
        if (55296 <= gA && 57343 >= gA && (gA = 65536 + ((1023 & gA) << 10) | 1023 & K.charCodeAt(++u)), JA()[Z >>> 2 >>> 0] = gA, (Z += 4) + 4 > f) break;
      }
      return JA()[Z >>> 2 >>> 0] = 0, Z - X;
    }, Gg = (K) => {
      for (var Z = 0, f = 0; f < K.length; ++f) {
        var X = K.charCodeAt(f);
        55296 <= X && 57343 >= X && ++f, Z += 4;
      }
      return Z;
    };
    function rB(K, Z, f) {
      if (K >>>= 0, Z >>>= 0, f = qC(f >>>= 0), Z === 2) var X = zE, u = XE, gA = rE, DA = (oA) => $I()[oA >>> 1 >>> 0];
      else Z === 4 && (X = _g, u = mE, gA = Gg, DA = (oA) => iI()[oA >>> 2 >>> 0]);
      VC(K, { name: f, fromWireType: (oA) => {
        for (var hA, dA = iI()[oA >>> 2 >>> 0], OA = oA + 4, UI = 0; UI <= dA; ++UI) {
          var eA = oA + 4 + UI * Z;
          UI != dA && DA(eA) != 0 || (OA = X(OA, eA - OA), hA === void 0 ? hA = OA : (hA += "\0", hA += OA), OA = eA + Z);
        }
        return TC(oA), hA;
      }, toWireType: (oA, hA) => {
        if (typeof hA != "string") throw new gC(`Cannot pass non-string to C++ string type ${f}`);
        var dA = gA(hA), OA = tA(4 + dA + Z);
        return iI()[OA >>> 2 >>> 0] = dA / Z, u(hA, OA + 4, dA + Z), oA !== null && oA.push(TC, OA), OA;
      }, Db: WC, readValueFromPointer: LC, Eb(oA) {
        TC(oA);
      } });
    }
    function $g(K, Z) {
      VC(K >>>= 0, { Ub: !0, name: Z = qC(Z >>> 0), Db: 0, fromWireType: () => {
      }, toWireType: () => {
      } });
    }
    function CI(K) {
      xC(K >>> 0, !l, 1, !h, 131072, !1), VB();
    }
    var rQ = (K) => {
      if (!YI) try {
        if (K(), !(0 < uC)) try {
          k ? OI(a) : $C(a);
        } catch (Z) {
          Z instanceof GQ || Z == "unwind" || $(0, Z);
        }
      } catch (Z) {
        Z instanceof GQ || Z == "unwind" || $(0, Z);
      }
    };
    function AB(K) {
      K >>>= 0, typeof Atomics.kc == "function" && (Atomics.kc(JA(), K >>> 2, K).value.then(Jg), K += 128, Atomics.store(JA(), K >>> 2, 1));
    }
    var Jg = () => {
      var K = Yg();
      K && (AB(K), rQ(mI));
    };
    function eE(K, Z) {
      (K >>>= 0) == Z >>> 0 ? setTimeout(Jg) : k ? postMessage({ Hb: K, Cb: "checkMailbox" }) : (K = JQ[K]) && K.postMessage({ Cb: "checkMailbox" });
    }
    var AQ = [];
    function pA(K, Z, f, X, u) {
      for (Z >>>= 0, X /= 2, AQ.length = X, f = u >>> 0 >>> 3, u = 0; u < X; u++) AQ[u] = lA[f + 2 * u] ? lA[f + 2 * u + 1] : DC()[f + 2 * u + 1 >>> 0];
      return (Z ? MQ[Z] : DU[K])(...AQ);
    }
    var IB = () => {
      uC = 0;
    };
    function CB(K) {
      K >>>= 0, k ? postMessage({ Cb: "cleanupThread", ic: K }) : AC(JQ[K]);
    }
    function mB(K) {
    }
    var ig = (K, Z) => {
      var f = iQ[K];
      if (f === void 0) throw K = UE(K), f = qC(K), TC(K), new gC(`${Z} has unknown type ${f}`);
      return f;
    }, eB = (K, Z, f) => {
      var X = [];
      return K = K.toWireType(X, f), X.length && (iI()[Z >>> 2 >>> 0] = bA(X)), K;
    };
    function vE(K, Z, f) {
      return Z >>>= 0, f >>>= 0, K = uI(K >>> 0), Z = ig(Z, "emval::as"), eB(Z, f, K);
    }
    function zC(K, Z) {
      return Z >>>= 0, K = uI(K >>> 0), (Z = ig(Z, "emval::as")).toWireType(null, K);
    }
    var XC = (K) => {
      try {
        K();
      } catch (Z) {
        t(Z);
      }
    }, FC = 0, YC = null, bC = 0, mQ = [], yg = {}, dQ = {}, PI = 0, BC = null, uE = [];
    function oQ(K) {
      return function(Z) {
        if (!YI) {
          if (FC === 0) {
            var f = !1, X = !1;
            Z((u = 0) => {
              if (!YI && (bC = u, f = !0, X)) {
                FC = 2, XC(() => wE(YC)), typeof MainLoop < "u" && MainLoop.Qb && MainLoop.resume(), u = !1;
                try {
                  var gA = function() {
                    var hA = JA()[YC + 8 >>> 2 >>> 0];
                    return hA = xA[dQ[hA]], --uC, hA();
                  }();
                } catch (hA) {
                  gA = hA, u = !0;
                }
                var DA = !1;
                if (!YC) {
                  var oA = BC;
                  oA && (BC = null, (u ? oA.reject : oA.resolve)(gA), DA = !0);
                }
                if (u && !DA) throw gA;
              }
            }), X = !0, f || (FC = 1, YC = function() {
              var u = tA(65548), gA = u + 12;
              iI()[u >>> 2 >>> 0] = gA, iI()[u + 4 >>> 2 >>> 0] = gA + 65536, gA = mQ[0];
              var DA = yg[gA];
              return DA === void 0 && (DA = PI++, yg[gA] = DA, dQ[DA] = gA), gA = DA, JA()[u + 8 >>> 2 >>> 0] = gA, u;
            }(), typeof MainLoop < "u" && MainLoop.Qb && MainLoop.pause(), XC(() => aI(YC)));
          } else FC === 2 ? (FC = 0, XC(EC), TC(YC), YC = null, uE.forEach(rQ)) : t(`invalid state: ${FC}`);
          return bC;
        }
      }((Z) => {
        K().then(Z);
      });
    }
    function QB(K) {
      return K >>>= 0, oQ(async () => {
        var Z = await uI(K);
        return bA(Z);
      });
    }
    var qQ = [];
    function gB(K, Z, f, X) {
      return f >>>= 0, X >>>= 0, (K = qQ[K >>> 0])(null, Z = uI(Z >>> 0), f, X);
    }
    var mA = {}, fI = (K) => {
      var Z = mA[K];
      return Z === void 0 ? qC(K) : Z;
    };
    function NQ(K, Z, f, X, u) {
      return f >>>= 0, X >>>= 0, u >>>= 0, (K = qQ[K >>> 0])(Z = uI(Z >>> 0), Z[f = fI(f)], X, u);
    }
    function _E(K, Z) {
      return Z >>>= 0, (K = uI(K >>> 0)) == uI(Z);
    }
    var vB = () => typeof globalThis == "object" ? globalThis : Function("return this")();
    function $E(K) {
      return (K >>>= 0) == 0 ? bA(vB()) : (K = fI(K), bA(vB()[K]));
    }
    var AU = (K) => {
      var Z = qQ.length;
      return qQ.push(K), Z;
    }, eQ = (K, Z) => {
      for (var f = Array(K), X = 0; X < K; ++X) f[X] = ig(iI()[Z + 4 * X >>> 2 >>> 0], "parameter " + X);
      return f;
    }, BB = (K, Z) => Object.defineProperty(Z, "name", { value: K });
    function IU(K, Z, f) {
      var X = (Z = eQ(K, Z >>> 0)).shift();
      K--;
      var u = `return function (obj, func, destructorsRef, args) {
`, gA = 0, DA = [];
      f === 0 && DA.push("obj");
      for (var oA = ["retType"], hA = [X], dA = 0; dA < K; ++dA) DA.push("arg" + dA), oA.push("argType" + dA), hA.push(Z[dA]), u += `  var arg${dA} = argType${dA}.readValueFromPointer(args${gA ? "+" + gA : ""});
`, gA += Z[dA].Db;
      return u += `  var rv = ${f === 1 ? "new func" : "func.call"}(${DA.join(", ")});
`, X.Ub || (oA.push("emval_returnValue"), hA.push(eB), u += `  return emval_returnValue(retType, destructorsRef, rv);
`), oA.push(u + `};
`), K = function(OA) {
        var UI = Function;
        if (!(UI instanceof Function)) throw new TypeError(`new_ called with constructor type ${typeof UI} which is not a function`);
        var eA = BB(UI.name || "unknownFunctionName", function() {
        });
        return eA.prototype = UI.prototype, eA = new eA(), (OA = UI.apply(eA, OA)) instanceof Object ? OA : eA;
      }(oA)(...hA), f = `methodCaller<(${Z.map((OA) => OA.name).join(", ")}) => ${X.name}>`, AU(BB(f, K));
    }
    function EB(K) {
      return K = fI(K >>> 0), bA(N[K]);
    }
    function og(K, Z) {
      return Z >>>= 0, K = uI(K >>> 0), Z = uI(Z), bA(K[Z]);
    }
    function rI(K) {
      9 < (K >>>= 0) && (OC[K + 1] += 1);
    }
    function YA() {
      return bA([]);
    }
    function yC(K) {
      K = uI(K >>> 0);
      for (var Z = Array(K.length), f = 0; f < K.length; f++) Z[f] = K[f];
      return bA(Z);
    }
    function uB(K) {
      return bA(fI(K >>> 0));
    }
    function UB() {
      return bA({});
    }
    function CU(K) {
      for (var Z = uI(K >>>= 0); Z.length; ) {
        var f = Z.pop();
        Z.pop()(f);
      }
      XQ(K);
    }
    function QU(K, Z, f) {
      Z >>>= 0, f >>>= 0, K = uI(K >>> 0), Z = uI(Z), f = uI(f), K[Z] = f;
    }
    function gU(K, Z) {
      return Z >>>= 0, K = (K = ig(K >>> 0, "_emval_take_value")).readValueFromPointer(Z), bA(K);
    }
    function BU(K, Z) {
      K = -9007199254740992 > K || 9007199254740992 < K ? NaN : Number(K), Z >>>= 0, K = new Date(1e3 * K), JA()[Z >>> 2 >>> 0] = K.getUTCSeconds(), JA()[Z + 4 >>> 2 >>> 0] = K.getUTCMinutes(), JA()[Z + 8 >>> 2 >>> 0] = K.getUTCHours(), JA()[Z + 12 >>> 2 >>> 0] = K.getUTCDate(), JA()[Z + 16 >>> 2 >>> 0] = K.getUTCMonth(), JA()[Z + 20 >>> 2 >>> 0] = K.getUTCFullYear() - 1900, JA()[Z + 24 >>> 2 >>> 0] = K.getUTCDay(), K = (K.getTime() - Date.UTC(K.getUTCFullYear(), 0, 1, 0, 0, 0, 0)) / 864e5 | 0, JA()[Z + 28 >>> 2 >>> 0] = K;
    }
    var _B = (K) => K % 4 == 0 && (K % 100 != 0 || K % 400 == 0), vQ = [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335], MI = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];
    function $B(K, Z) {
      K = -9007199254740992 > K || 9007199254740992 < K ? NaN : Number(K), Z >>>= 0, K = new Date(1e3 * K), JA()[Z >>> 2 >>> 0] = K.getSeconds(), JA()[Z + 4 >>> 2 >>> 0] = K.getMinutes(), JA()[Z + 8 >>> 2 >>> 0] = K.getHours(), JA()[Z + 12 >>> 2 >>> 0] = K.getDate(), JA()[Z + 16 >>> 2 >>> 0] = K.getMonth(), JA()[Z + 20 >>> 2 >>> 0] = K.getFullYear() - 1900, JA()[Z + 24 >>> 2 >>> 0] = K.getDay();
      var f = (_B(K.getFullYear()) ? vQ : MI)[K.getMonth()] + K.getDate() - 1 | 0;
      JA()[Z + 28 >>> 2 >>> 0] = f, JA()[Z + 36 >>> 2 >>> 0] = -60 * K.getTimezoneOffset(), f = new Date(K.getFullYear(), 6, 1).getTimezoneOffset();
      var X = new Date(K.getFullYear(), 0, 1).getTimezoneOffset();
      K = 0 | (f != X && K.getTimezoneOffset() == Math.min(X, f)), JA()[Z + 32 >>> 2 >>> 0] = K;
    }
    function EU(K) {
      K >>>= 0;
      var Z = new Date(JA()[K + 20 >>> 2 >>> 0] + 1900, JA()[K + 16 >>> 2 >>> 0], JA()[K + 12 >>> 2 >>> 0], JA()[K + 8 >>> 2 >>> 0], JA()[K + 4 >>> 2 >>> 0], JA()[K >>> 2 >>> 0], 0), f = JA()[K + 32 >>> 2 >>> 0], X = Z.getTimezoneOffset(), u = new Date(Z.getFullYear(), 6, 1).getTimezoneOffset(), gA = new Date(Z.getFullYear(), 0, 1).getTimezoneOffset(), DA = Math.min(gA, u);
      return 0 > f ? JA()[K + 32 >>> 2 >>> 0] = +(u != gA && DA == X) : 0 < f != (DA == X) && (u = Math.max(gA, u), Z.setTime(Z.getTime() + 6e4 * ((0 < f ? DA : u) - X))), JA()[K + 24 >>> 2 >>> 0] = Z.getDay(), f = (_B(Z.getFullYear()) ? vQ : MI)[Z.getMonth()] + Z.getDate() - 1 | 0, JA()[K + 28 >>> 2 >>> 0] = f, JA()[K >>> 2 >>> 0] = Z.getSeconds(), JA()[K + 4 >>> 2 >>> 0] = Z.getMinutes(), JA()[K + 8 >>> 2 >>> 0] = Z.getHours(), JA()[K + 12 >>> 2 >>> 0] = Z.getDate(), JA()[K + 16 >>> 2 >>> 0] = Z.getMonth(), JA()[K + 20 >>> 2 >>> 0] = Z.getYear(), K = Z.getTime(), BigInt(isNaN(K) ? -1 : K / 1e3);
    }
    function sQ(K, Z, f, X, u, gA, DA) {
      return k ? EI(16, 1, K, Z, f, X, u, gA, DA) : -52;
    }
    function jQ(K, Z, f, X, u, gA) {
      if (k) return EI(17, 1, K, Z, f, X, u, gA);
    }
    var oC = {}, AE = () => performance.timeOrigin + performance.now();
    function RB(K, Z) {
      if (k) return EI(18, 1, K, Z);
      if (oC[K] && (clearTimeout(oC[K].id), delete oC[K]), !Z) return 0;
      var f = setTimeout(() => {
        delete oC[K], rQ(() => IQ(K, performance.timeOrigin + performance.now()));
      }, Z);
      return oC[K] = { id: f, rc: Z }, 0;
    }
    function VQ(K, Z, f, X) {
      K >>>= 0, Z >>>= 0, f >>>= 0, X >>>= 0;
      var u = (/* @__PURE__ */ new Date()).getFullYear(), gA = new Date(u, 0, 1).getTimezoneOffset();
      u = new Date(u, 6, 1).getTimezoneOffset();
      var DA = Math.max(gA, u);
      iI()[K >>> 2 >>> 0] = 60 * DA, JA()[Z >>> 2 >>> 0] = +(gA != u), K = (Z = (oA) => {
        var hA = Math.abs(oA);
        return `UTC${0 <= oA ? "-" : "+"}${String(Math.floor(hA / 60)).padStart(2, "0")}${String(hA % 60).padStart(2, "0")}`;
      })(gA), Z = Z(u), u < gA ? (WI(K, f, 17), WI(Z, X, 17)) : (WI(K, X, 17), WI(Z, f, 17));
    }
    var IE = () => Date.now();
    function UU(K, Z, f) {
      return 0 <= K && 3 >= K ? (K === 0 ? K = Date.now() : K = performance.timeOrigin + performance.now(), lA[f >>> 0 >>> 3] = BigInt(Math.round(1e6 * K)), 0) : 28;
    }
    var Ng = [], iA = (K, Z) => {
      Ng.length = 0;
      for (var f; f = LA()[K++ >>> 0]; ) {
        var X = f != 105;
        Z += (X &= f != 112) && Z % 8 ? 4 : 0, Ng.push(f == 112 ? iI()[Z >>> 2 >>> 0] : f == 106 ? lA[Z >>> 3] : f == 105 ? JA()[Z >>> 2 >>> 0] : DC()[Z >>> 3 >>> 0]), Z += X ? 8 : 4;
      }
      return Ng;
    };
    function RU(K, Z, f) {
      return K >>>= 0, Z = iA(Z >>> 0, f >>> 0), MQ[K](...Z);
    }
    function KA(K, Z, f) {
      return K >>>= 0, Z = iA(Z >>> 0, f >>> 0), MQ[K](...Z);
    }
    var wB = () => {
    };
    function DB(K, Z) {
      return L(qI(K >>> 0, Z >>> 0));
    }
    var IC = () => {
      throw uC += 1, "unwind";
    };
    function NC() {
      return 4294901760;
    }
    var sg = () => navigator.hardwareConcurrency;
    function jg() {
      return t("Cannot use emscripten_pc_get_function without -sUSE_OFFSET_CONVERTER"), 0;
    }
    function CE(K) {
      K >>>= 0;
      var Z = LA().length;
      if (K <= Z || 4294901760 < K) return !1;
      for (var f = 1; 4 >= f; f *= 2) {
        var X = Z * (1 + 0.2 / f);
        X = Math.min(X, K + 100663296);
        A: {
          X = (Math.min(4294901760, 65536 * Math.ceil(Math.max(K, X) / 65536)) - A.buffer.byteLength + 65535) / 65536 | 0;
          try {
            A.grow(X), yI();
            var u = 1;
            break A;
          } catch {
          }
          u = void 0;
        }
        if (u) return !0;
      }
      return !1;
    }
    var HI = () => (t("Cannot use convertFrameToPC (needed by __builtin_return_address) without -sUSE_OFFSET_CONVERTER"), 0), uQ = {}, QE = (K) => {
      K.forEach((Z) => {
        HI();
      });
    };
    function Sg() {
      var K = Error().stack.toString().split(`
`);
      return K[0] == "Error" && K.shift(), QE(K), uQ.Mb = HI(), uQ.dc = K, uQ.Mb;
    }
    function _Q(K, Z, f) {
      if (K >>>= 0, Z >>>= 0, uQ.Mb == K) var X = uQ.dc;
      else (X = Error().stack.toString().split(`
`))[0] == "Error" && X.shift(), QE(X);
      for (var u = 3; X[u] && HI() != K; ) ++u;
      for (K = 0; K < f && X[K + u]; ++K) JA()[Z + 4 * K >>> 2 >>> 0] = HI();
      return K;
    }
    var FB, hg = {}, $Q = () => {
      if (!FB) {
        var K, Z = { USER: "web_user", LOGNAME: "web_user", PATH: "/", PWD: "/", HOME: "/home/web_user", LANG: (typeof navigator == "object" && navigator.languages && navigator.languages[0] || "C").replace("-", "_") + ".UTF-8", _: "./this.program" };
        for (K in hg) hg[K] === void 0 ? delete Z[K] : Z[K] = hg[K];
        var f = [];
        for (K in Z) f.push(`${K}=${Z[K]}`);
        FB = f;
      }
      return FB;
    };
    function SA(K, Z) {
      if (k) return EI(19, 1, K, Z);
      K >>>= 0, Z >>>= 0;
      var f = 0;
      return $Q().forEach((X, u) => {
        var gA = Z + f;
        for (u = iI()[K + 4 * u >>> 2 >>> 0] = gA, gA = 0; gA < X.length; ++gA) jA()[u++ >>> 0] = X.charCodeAt(gA);
        jA()[u >>> 0] = 0, f += X.length + 1;
      }), 0;
    }
    function HC(K, Z) {
      if (k) return EI(20, 1, K, Z);
      K >>>= 0, Z >>>= 0;
      var f = $Q();
      iI()[K >>> 2 >>> 0] = f.length;
      var X = 0;
      return f.forEach((u) => X += u.length + 1), iI()[Z >>> 2 >>> 0] = X, 0;
    }
    function gE(K) {
      return k ? EI(21, 1, K) : 52;
    }
    function wU(K, Z, f, X) {
      return k ? EI(22, 1, K, Z, f, X) : 52;
    }
    function Ag(K, Z, f, X) {
      return k ? EI(23, 1, K, Z, f, X) : 70;
    }
    var Ig = [null, [], []];
    function BE(K, Z, f, X) {
      if (k) return EI(24, 1, K, Z, f, X);
      Z >>>= 0, f >>>= 0, X >>>= 0;
      for (var u = 0, gA = 0; gA < f; gA++) {
        var DA = iI()[Z >>> 2 >>> 0], oA = iI()[Z + 4 >>> 2 >>> 0];
        Z += 8;
        for (var hA = 0; hA < oA; hA++) {
          var dA = LA()[DA + hA >>> 0], OA = Ig[K];
          dA === 0 || dA === 10 ? ((K === 1 ? M : L)(Dg(OA)), OA.length = 0) : OA.push(dA);
        }
        u += oA;
      }
      return iI()[X >>> 2 >>> 0] = u, 0;
    }
    k || function() {
      for (var K = N.numThreads - 1; K--; ) Xg();
      Og.unshift(() => {
        kQ++, function(Z) {
          k ? Z() : Promise.all(QI.map(zg)).then(Z);
        }(() => bE());
      });
    }();
    for (var EE = Array(256), Lg = 0; 256 > Lg; ++Lg) EE[Lg] = String.fromCharCode(Lg);
    WB = EE, gC = N.BindingError = class extends Error {
      constructor(K) {
        super(K), this.name = "BindingError";
      }
    }, N.InternalError = class extends Error {
      constructor(K) {
        super(K), this.name = "InternalError";
      }
    }, OC.push(0, 1, void 0, 1, null, 1, !0, 1, !1, 1), N.count_emval_handles = () => OC.length / 2 - 5 - zQ.length;
    var xA, DU = [_C, OQ, DI, rg, TB, _A, cC, xB, PB, Fg, fB, pB, ZQ, tB, eg, vg, sQ, jQ, RB, SA, HC, gE, wU, Ag, BE];
    (async function() {
      function K(X, u) {
        return xA = X.exports, xA = function() {
          var gA = xA, DA = {};
          for (let [oA, hA] of Object.entries(gA)) DA[oA] = typeof hA == "function" ? (...dA) => {
            mQ.push(oA);
            try {
              return hA(...dA);
            } finally {
              YI || (mQ.pop(), YC && FC === 1 && mQ.length === 0 && (FC = 0, uC += 1, XC(Qg), typeof Fibers < "u" && Fibers.sc()));
            }
          } : hA;
          return DA;
        }(), xA = function() {
          var gA = xA, DA = (hA) => (dA) => hA(dA) >>> 0, oA = (hA) => () => hA() >>> 0;
          return (gA = Object.assign({}, gA)).Ea = DA(gA.Ea), gA.gb = oA(gA.gb), gA.ib = DA(gA.ib), gA.ub = DA(gA.ub), gA.vb = oA(gA.vb), gA.__cxa_get_exception_ptr = DA(gA.__cxa_get_exception_ptr), gA;
        }(), kC.push(xA.jb), G = u, bE(), xA;
      }
      kQ++;
      var Z = HQ();
      if (N.instantiateWasm) return new Promise((X) => {
        N.instantiateWasm(Z, (u, gA) => {
          K(u, gA), X(u.exports);
        });
      });
      if (k) return new Promise((X) => {
        dC = (u) => {
          var gA = new WebAssembly.Instance(u, HQ());
          X(K(gA, u));
        };
      });
      hC ?? (hC = N.locateFile ? N.locateFile ? N.locateFile("kitten-tts/ort-wasm-simd-threaded.jsep.wasm", m) : m + "kitten-tts/ort-wasm-simd-threaded.jsep.wasm" : new URL("kitten-tts/ort-wasm-simd-threaded.jsep.wasm", import.meta.url).href);
      try {
        var f = await async function(X) {
          var u = hC;
          if (!PA && typeof WebAssembly.instantiateStreaming == "function" && !MA(u)) try {
            var gA = fetch(u, { credentials: "same-origin" });
            return await WebAssembly.instantiateStreaming(gA, X);
          } catch (DA) {
            L(`wasm streaming compile failed: ${DA}`), L("falling back to ArrayBuffer instantiation");
          }
          return async function(DA, oA) {
            try {
              var hA = await async function(dA) {
                if (!PA) try {
                  var OA = await P(dA);
                  return new Uint8Array(OA);
                } catch {
                }
                if (dA == hC && PA) dA = new Uint8Array(PA);
                else {
                  if (!W) throw "both async and sync fetching of the wasm failed";
                  dA = W(dA);
                }
                return dA;
              }(DA);
              return await WebAssembly.instantiate(hA, oA);
            } catch (dA) {
              L(`failed to asynchronously prepare wasm: ${dA}`), t(dA);
            }
          }(u, X);
        }(Z);
        return K(f.instance, f.module);
      } catch (X) {
        return s(X), Promise.reject(X);
      }
    })();
    var UE = (K) => (UE = xA.Ea)(K), pI = () => (pI = xA.Fa)();
    N._OrtInit = (K, Z) => (N._OrtInit = xA.Ga)(K, Z), N._OrtGetLastError = (K, Z) => (N._OrtGetLastError = xA.Ha)(K, Z), N._OrtCreateSessionOptions = (K, Z, f, X, u, gA, DA, oA, hA, dA) => (N._OrtCreateSessionOptions = xA.Ia)(K, Z, f, X, u, gA, DA, oA, hA, dA), N._OrtAppendExecutionProvider = (K, Z, f, X, u) => (N._OrtAppendExecutionProvider = xA.Ja)(K, Z, f, X, u), N._OrtAddFreeDimensionOverride = (K, Z, f) => (N._OrtAddFreeDimensionOverride = xA.Ka)(K, Z, f), N._OrtAddSessionConfigEntry = (K, Z, f) => (N._OrtAddSessionConfigEntry = xA.La)(K, Z, f), N._OrtReleaseSessionOptions = (K) => (N._OrtReleaseSessionOptions = xA.Ma)(K), N._OrtCreateSession = (K, Z, f) => (N._OrtCreateSession = xA.Na)(K, Z, f), N._OrtReleaseSession = (K) => (N._OrtReleaseSession = xA.Oa)(K), N._OrtGetInputOutputCount = (K, Z, f) => (N._OrtGetInputOutputCount = xA.Pa)(K, Z, f), N._OrtGetInputOutputMetadata = (K, Z, f, X) => (N._OrtGetInputOutputMetadata = xA.Qa)(K, Z, f, X), N._OrtFree = (K) => (N._OrtFree = xA.Ra)(K), N._OrtCreateTensor = (K, Z, f, X, u, gA) => (N._OrtCreateTensor = xA.Sa)(K, Z, f, X, u, gA), N._OrtGetTensorData = (K, Z, f, X, u) => (N._OrtGetTensorData = xA.Ta)(K, Z, f, X, u), N._OrtReleaseTensor = (K) => (N._OrtReleaseTensor = xA.Ua)(K), N._OrtCreateRunOptions = (K, Z, f, X) => (N._OrtCreateRunOptions = xA.Va)(K, Z, f, X), N._OrtAddRunConfigEntry = (K, Z, f) => (N._OrtAddRunConfigEntry = xA.Wa)(K, Z, f), N._OrtReleaseRunOptions = (K) => (N._OrtReleaseRunOptions = xA.Xa)(K), N._OrtCreateBinding = (K) => (N._OrtCreateBinding = xA.Ya)(K), N._OrtBindInput = (K, Z, f) => (N._OrtBindInput = xA.Za)(K, Z, f), N._OrtBindOutput = (K, Z, f, X) => (N._OrtBindOutput = xA._a)(K, Z, f, X), N._OrtClearBoundOutputs = (K) => (N._OrtClearBoundOutputs = xA.$a)(K), N._OrtReleaseBinding = (K) => (N._OrtReleaseBinding = xA.ab)(K), N._OrtRunWithBinding = (K, Z, f, X, u) => (N._OrtRunWithBinding = xA.bb)(K, Z, f, X, u), N._OrtRun = (K, Z, f, X, u, gA, DA, oA) => (N._OrtRun = xA.cb)(K, Z, f, X, u, gA, DA, oA), N._OrtEndProfiling = (K) => (N._OrtEndProfiling = xA.db)(K), N._JsepOutput = (K, Z, f) => (N._JsepOutput = xA.eb)(K, Z, f), N._JsepGetNodeName = (K) => (N._JsepGetNodeName = xA.fb)(K);
    var Yg = () => (Yg = xA.gb)(), TC = N._free = (K) => (TC = N._free = xA.hb)(K), tA = N._malloc = (K) => (tA = N._malloc = xA.ib)(K), xC = (K, Z, f, X, u, gA) => (xC = xA.lb)(K, Z, f, X, u, gA), MB = () => (MB = xA.mb)(), rC = (K, Z, f, X, u) => (rC = xA.nb)(K, Z, f, X, u), RE = (K) => (RE = xA.ob)(K), OI = (K) => (OI = xA.pb)(K), IQ = (K, Z) => (IQ = xA.qb)(K, Z), mI = () => (mI = xA.rb)(), mC = (K, Z) => (mC = xA.sb)(K, Z), Cg = (K) => (Cg = xA.tb)(K), Kg = (K) => (Kg = xA.ub)(K), GB = () => (GB = xA.vb)(), JB = N.dynCall_ii = (K, Z) => (JB = N.dynCall_ii = xA.wb)(K, Z), aI = (K) => (aI = xA.xb)(K), Qg = () => (Qg = xA.yb)(), wE = (K) => (wE = xA.zb)(K), EC = () => (EC = xA.Ab)();
    return N.stackSave = () => GB(), N.stackRestore = (K) => Cg(K), N.stackAlloc = (K) => Kg(K), N.setValue = function(K, Z, f = "i8") {
      switch (f.endsWith("*") && (f = "*"), f) {
        case "i1":
        case "i8":
          jA()[K >>> 0] = Z;
          break;
        case "i16":
          XA()[K >>> 1 >>> 0] = Z;
          break;
        case "i32":
          JA()[K >>> 2 >>> 0] = Z;
          break;
        case "i64":
          lA[K >>> 3] = BigInt(Z);
          break;
        case "float":
          WQ()[K >>> 2 >>> 0] = Z;
          break;
        case "double":
          DC()[K >>> 3 >>> 0] = Z;
          break;
        case "*":
          iI()[K >>> 2 >>> 0] = Z;
          break;
        default:
          t(`invalid type for setValue: ${f}`);
      }
    }, N.getValue = function(K, Z = "i8") {
      switch (Z.endsWith("*") && (Z = "*"), Z) {
        case "i1":
        case "i8":
          return jA()[K >>> 0];
        case "i16":
          return XA()[K >>> 1 >>> 0];
        case "i32":
          return JA()[K >>> 2 >>> 0];
        case "i64":
          return lA[K >>> 3];
        case "float":
          return WQ()[K >>> 2 >>> 0];
        case "double":
          return DC()[K >>> 3 >>> 0];
        case "*":
          return iI()[K >>> 2 >>> 0];
        default:
          t(`invalid type for getValue: ${Z}`);
      }
    }, N.UTF8ToString = qI, N.stringToUTF8 = WI, N.lengthBytesUTF8 = mg, function K() {
      if (0 < kQ) cQ = K;
      else if (k) i(N), nI();
      else {
        for (; 0 < Og.length; ) Og.shift()(N);
        0 < kQ ? cQ = K : (N.calledRun = !0, YI || (nI(), i(N)));
      }
    }(), N.PTR_SIZE = 4, j;
  }), KJ = ER, SD = (R = (B = globalThis.self) == null ? void 0 : B.name) == null ? void 0 : R.startsWith("em-pthread"), SD && ER();
}), UR, Bw, hD, PC, lJ, yU, LD, YD, RR, KD, wR, kJ, DR, cJ, Kw = sA(() => {
  Yw(), UR = typeof location > "u" ? void 0 : location.origin, Bw = import.meta.url > "file:" && import.meta.url < "file;", hD = () => {
    {
      if (Bw) {
        let B = URL;
        return new URL(new B("ort.bundle.min.mjs", import.meta.url).href, UR).href;
      }
      return import.meta.url;
    }
  }, PC = hD(), lJ = () => {
    if (PC && !PC.startsWith("blob:")) return PC.substring(0, PC.lastIndexOf("/") + 1);
  }, yU = (B, R) => {
    try {
      let F = R ?? PC;
      return (F ? new URL(B, F) : new URL(B)).origin === UR;
    } catch {
      return !1;
    }
  }, LD = (B, R) => {
    let F = R ?? PC;
    try {
      return (F ? new URL(B, F) : new URL(B)).href;
    } catch {
      return;
    }
  }, YD = (B, R) => `${R ?? "./"}${B}`, RR = async (B) => {
    let R = await (await fetch(B, { credentials: "same-origin" })).blob();
    return URL.createObjectURL(R);
  }, KD = async (B) => (await import(
    /*webpackIgnore:true*/
    B
  )).default, wR = (SN(), qE(hJ)).default, kJ = async () => {
    if (!PC) throw new Error("Failed to load proxy worker: cannot determine the script source URL.");
    if (yU(PC)) return [void 0, wR()];
    let B = await RR(PC);
    return [B, wR(B)];
  }, DR = (hN(), qE(YJ)).default, cJ = async (B, R, F) => {
    if (!B && !R && DR && PC && yU(PC)) return [void 0, DR];
    {
      let i = "ort-wasm-simd-threaded.jsep.mjs", s = B ?? LD(i, R), N = F && s && !yU(s, R), j = N ? await RR(s) : s ?? YD(i, R);
      return [N ? j : void 0, await KD(j)];
    }
  };
}), FR, oU, oE, MR, lD, kD, cD, lw, cI, pg = sA(() => {
  Kw(), oU = !1, oE = !1, MR = !1, lD = () => {
    if (typeof SharedArrayBuffer > "u") return !1;
    try {
      return typeof MessageChannel < "u" && new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)), WebAssembly.validate(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 5, 4, 1, 3, 1, 1, 10, 11, 1, 9, 0, 65, 0, 254, 16, 2, 0, 26, 11]));
    } catch {
      return !1;
    }
  }, kD = () => {
    try {
      return WebAssembly.validate(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 10, 30, 1, 28, 0, 65, 0, 253, 15, 253, 12, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 253, 186, 1, 26, 11]));
    } catch {
      return !1;
    }
  }, cD = () => {
    try {
      return WebAssembly.validate(new Uint8Array([0, 97, 115, 109, 1, 0, 0, 0, 1, 5, 1, 96, 0, 1, 123, 3, 2, 1, 0, 10, 19, 1, 17, 0, 65, 1, 253, 15, 65, 2, 253, 15, 65, 3, 253, 15, 253, 147, 2, 11]));
    } catch {
      return !1;
    }
  }, lw = async (B) => {
    if (oU) return Promise.resolve();
    if (oE) throw new Error("multiple calls to 'initializeWebAssembly()' detected.");
    if (MR) throw new Error("previous call to 'initializeWebAssembly()' failed.");
    oE = !0;
    let R = B.initTimeout, F = B.numThreads;
    if (B.simd !== !1) {
      if (B.simd === "relaxed") {
        if (!cD()) throw new Error("Relaxed WebAssembly SIMD is not supported in the current environment.");
      } else if (!kD()) throw new Error("WebAssembly SIMD is not supported in the current environment.");
    }
    let i = lD();
    F > 1 && !i && (typeof self < "u" && !self.crossOriginIsolated && console.warn("env.wasm.numThreads is set to " + F + ", but this will not work unless you enable crossOriginIsolated mode. See https://web.dev/cross-origin-isolation-guide/ for more info."), console.warn("WebAssembly multi-threading is not supported in the current environment. Falling back to single-threading."), B.numThreads = F = 1);
    let s = B.wasmPaths, N = typeof s == "string" ? s : void 0, j = s == null ? void 0 : s.mjs, h = (j == null ? void 0 : j.href) ?? j, l = s == null ? void 0 : s.wasm, k = (l == null ? void 0 : l.href) ?? l, q = B.wasmBinary, [d, b] = await cJ(h, N, F > 1), P = !1, W = [];
    if (R > 0 && W.push(new Promise((r) => {
      setTimeout(() => {
        P = !0, r();
      }, R);
    })), W.push(new Promise((r, $) => {
      let m = { numThreads: F };
      if (q) m.wasmBinary = q;
      else if (k || N) m.locateFile = (z) => k ?? N + z;
      else if (h && h.indexOf("blob:") !== 0) m.locateFile = (z) => new URL(z, h).href;
      else if (d) {
        let z = lJ();
        z && (m.locateFile = (IA) => z + IA);
      }
      b(m).then((z) => {
        oE = !1, oU = !0, FR = z, r(), d && URL.revokeObjectURL(d);
      }, (z) => {
        oE = !1, MR = !0, $(z);
      });
    })), await Promise.race(W), P) throw new Error(`WebAssembly backend initializing failed due to timeout: ${R}ms`);
  }, cI = () => {
    if (oU && FR) return FR;
    throw new Error("WebAssembly is not initialized yet.");
  };
}), wQ, nU, jI, kw = sA(() => {
  pg(), wQ = (B, R) => {
    let F = cI(), i = F.lengthBytesUTF8(B) + 1, s = F._malloc(i);
    return F.stringToUTF8(B, s, i), R.push(s), s;
  }, nU = (B, R, F, i) => {
    if (typeof B == "object" && B !== null) {
      if (F.has(B)) throw new Error("Circular reference in options");
      F.add(B);
    }
    Object.entries(B).forEach(([s, N]) => {
      let j = R ? R + s : s;
      if (typeof N == "object") nU(N, j + ".", F, i);
      else if (typeof N == "string" || typeof N == "number") i(j, N.toString());
      else if (typeof N == "boolean") i(j, N ? "1" : "0");
      else throw new Error(`Can't handle extra config type: ${typeof N}`);
    });
  }, jI = (B) => {
    let R = cI(), F = R.stackSave();
    try {
      let i = R.PTR_SIZE, s = R.stackAlloc(2 * i);
      R._OrtGetLastError(s, s + i);
      let N = Number(R.getValue(s, i === 4 ? "i32" : "i64")), j = R.getValue(s + i, "*"), h = j ? R.UTF8ToString(j) : "";
      throw new Error(`${B} ERROR_CODE: ${N}, ERROR_MESSAGE: ${h}`);
    } finally {
      R.stackRestore(F);
    }
  };
}), HJ, LN = sA(() => {
  pg(), kw(), HJ = (B) => {
    let R = cI(), F = 0, i = [], s = B || {};
    try {
      if ((B == null ? void 0 : B.logSeverityLevel) === void 0) s.logSeverityLevel = 2;
      else if (typeof B.logSeverityLevel != "number" || !Number.isInteger(B.logSeverityLevel) || B.logSeverityLevel < 0 || B.logSeverityLevel > 4) throw new Error(`log serverity level is not valid: ${B.logSeverityLevel}`);
      if ((B == null ? void 0 : B.logVerbosityLevel) === void 0) s.logVerbosityLevel = 0;
      else if (typeof B.logVerbosityLevel != "number" || !Number.isInteger(B.logVerbosityLevel)) throw new Error(`log verbosity level is not valid: ${B.logVerbosityLevel}`);
      (B == null ? void 0 : B.terminate) === void 0 && (s.terminate = !1);
      let N = 0;
      return (B == null ? void 0 : B.tag) !== void 0 && (N = wQ(B.tag, i)), F = R._OrtCreateRunOptions(s.logSeverityLevel, s.logVerbosityLevel, !!s.terminate, N), F === 0 && jI("Can't create run options."), (B == null ? void 0 : B.extra) !== void 0 && nU(B.extra, "", /* @__PURE__ */ new WeakSet(), (j, h) => {
        let l = wQ(j, i), k = wQ(h, i);
        R._OrtAddRunConfigEntry(F, l, k) !== 0 && jI(`Can't set a run config entry: ${j} - ${h}.`);
      }), [F, i];
    } catch (N) {
      throw F !== 0 && R._OrtReleaseRunOptions(F), i.forEach((j) => R._free(j)), N;
    }
  };
}), HD, aD, ZD, NE, nD, aJ, YN = sA(() => {
  pg(), kw(), HD = (B) => {
    switch (B) {
      case "disabled":
        return 0;
      case "basic":
        return 1;
      case "extended":
        return 2;
      case "all":
        return 99;
      default:
        throw new Error(`unsupported graph optimization level: ${B}`);
    }
  }, aD = (B) => {
    switch (B) {
      case "sequential":
        return 0;
      case "parallel":
        return 1;
      default:
        throw new Error(`unsupported execution mode: ${B}`);
    }
  }, ZD = (B) => {
    B.extra || (B.extra = {}), B.extra.session || (B.extra.session = {});
    let R = B.extra.session;
    R.use_ort_model_bytes_directly || (R.use_ort_model_bytes_directly = "1"), B.executionProviders && B.executionProviders.some((F) => (typeof F == "string" ? F : F.name) === "webgpu") && (B.enableMemPattern = !1);
  }, NE = (B, R, F, i) => {
    let s = wQ(R, i), N = wQ(F, i);
    cI()._OrtAddSessionConfigEntry(B, s, N) !== 0 && jI(`Can't set a session config entry: ${R} - ${F}.`);
  }, nD = async (B, R, F) => {
    for (let i of R) {
      let s = typeof i == "string" ? i : i.name, N = [];
      switch (s) {
        case "webnn":
          if (s = "WEBNN", typeof i != "string") {
            let q = i == null ? void 0 : i.deviceType;
            q && NE(B, "deviceType", q, F);
          }
          break;
        case "webgpu":
          if (s = "JS", typeof i != "string") {
            let q = i;
            if (q != null && q.preferredLayout) {
              if (q.preferredLayout !== "NCHW" && q.preferredLayout !== "NHWC") throw new Error(`preferredLayout must be either 'NCHW' or 'NHWC': ${q.preferredLayout}`);
              NE(B, "preferredLayout", q.preferredLayout, F);
            }
          }
          break;
        case "wasm":
        case "cpu":
          continue;
        default:
          throw new Error(`not supported execution provider: ${s}`);
      }
      let j = wQ(s, F), h = N.length, l = 0, k = 0;
      if (h > 0) {
        l = cI()._malloc(h * cI().PTR_SIZE), F.push(l), k = cI()._malloc(h * cI().PTR_SIZE), F.push(k);
        for (let q = 0; q < h; q++) cI().setValue(l + q * cI().PTR_SIZE, N[q][0], "*"), cI().setValue(k + q * cI().PTR_SIZE, N[q][1], "*");
      }
      await cI()._OrtAppendExecutionProvider(B, j, l, k, h) !== 0 && jI(`Can't append execution provider: ${s}.`);
    }
  }, aJ = async (B) => {
    let R = cI(), F = 0, i = [], s = B || {};
    ZD(s);
    try {
      let N = HD(s.graphOptimizationLevel ?? "all"), j = aD(s.executionMode ?? "sequential"), h = typeof s.logId == "string" ? wQ(s.logId, i) : 0, l = s.logSeverityLevel ?? 2;
      if (!Number.isInteger(l) || l < 0 || l > 4) throw new Error(`log serverity level is not valid: ${l}`);
      let k = s.logVerbosityLevel ?? 0;
      if (!Number.isInteger(k) || k < 0 || k > 4) throw new Error(`log verbosity level is not valid: ${k}`);
      let q = typeof s.optimizedModelFilePath == "string" ? wQ(s.optimizedModelFilePath, i) : 0;
      if (F = R._OrtCreateSessionOptions(N, !!s.enableCpuMemArena, !!s.enableMemPattern, j, !!s.enableProfiling, 0, h, l, k, q), F === 0 && jI("Can't create session options."), s.executionProviders && await nD(F, s.executionProviders, i), s.enableGraphCapture !== void 0) {
        if (typeof s.enableGraphCapture != "boolean") throw new Error(`enableGraphCapture must be a boolean value: ${s.enableGraphCapture}`);
        NE(F, "enableGraphCapture", s.enableGraphCapture.toString(), i);
      }
      if (s.freeDimensionOverrides) for (let [d, b] of Object.entries(s.freeDimensionOverrides)) {
        if (typeof d != "string") throw new Error(`free dimension override name must be a string: ${d}`);
        if (typeof b != "number" || !Number.isInteger(b) || b < 0) throw new Error(`free dimension override value must be a non-negative integer: ${b}`);
        let P = wQ(d, i);
        R._OrtAddFreeDimensionOverride(F, P, b) !== 0 && jI(`Can't set a free dimension override: ${d} - ${b}.`);
      }
      return s.extra !== void 0 && nU(s.extra, "", /* @__PURE__ */ new WeakSet(), (d, b) => {
        NE(F, d, b, i);
      }), [F, i];
    } catch (N) {
      throw F !== 0 && R._OrtReleaseSessionOptions(F) !== 0 && jI("Can't release session options."), i.forEach((j) => R._free(j)), N;
    }
  };
}), qg, fQ, Vg, WU, dU, cw, Hw, Ew, zA = sA(() => {
  qg = (B) => {
    switch (B) {
      case "int8":
        return 3;
      case "uint8":
        return 2;
      case "bool":
        return 9;
      case "int16":
        return 5;
      case "uint16":
        return 4;
      case "int32":
        return 6;
      case "uint32":
        return 12;
      case "float16":
        return 10;
      case "float32":
        return 1;
      case "float64":
        return 11;
      case "string":
        return 8;
      case "int64":
        return 7;
      case "uint64":
        return 13;
      case "int4":
        return 22;
      case "uint4":
        return 21;
      default:
        throw new Error(`unsupported data type: ${B}`);
    }
  }, fQ = (B) => {
    switch (B) {
      case 3:
        return "int8";
      case 2:
        return "uint8";
      case 9:
        return "bool";
      case 5:
        return "int16";
      case 4:
        return "uint16";
      case 6:
        return "int32";
      case 12:
        return "uint32";
      case 10:
        return "float16";
      case 1:
        return "float32";
      case 11:
        return "float64";
      case 8:
        return "string";
      case 7:
        return "int64";
      case 13:
        return "uint64";
      case 22:
        return "int4";
      case 21:
        return "uint4";
      default:
        throw new Error(`unsupported data type: ${B}`);
    }
  }, Vg = (B, R) => {
    let F = [-1, 4, 1, 1, 2, 2, 4, 8, -1, 1, 2, 8, 4, 8, -1, -1, -1, -1, -1, -1, -1, 0.5, 0.5][B], i = typeof R == "number" ? R : R.reduce((s, N) => s * N, 1);
    return F > 0 ? Math.ceil(i * F) : void 0;
  }, WU = (B) => {
    switch (B) {
      case "float16":
        return typeof Float16Array < "u" && Float16Array.from ? Float16Array : Uint16Array;
      case "float32":
        return Float32Array;
      case "uint8":
        return Uint8Array;
      case "int8":
        return Int8Array;
      case "uint16":
        return Uint16Array;
      case "int16":
        return Int16Array;
      case "int32":
        return Int32Array;
      case "bool":
        return Uint8Array;
      case "float64":
        return Float64Array;
      case "uint32":
        return Uint32Array;
      case "int64":
        return BigInt64Array;
      case "uint64":
        return BigUint64Array;
      default:
        throw new Error(`unsupported type: ${B}`);
    }
  }, dU = (B) => {
    switch (B) {
      case "verbose":
        return 0;
      case "info":
        return 1;
      case "warning":
        return 2;
      case "error":
        return 3;
      case "fatal":
        return 4;
      default:
        throw new Error(`unsupported logging level: ${B}`);
    }
  }, cw = (B) => B === "float32" || B === "float16" || B === "int32" || B === "int64" || B === "uint32" || B === "uint8" || B === "bool" || B === "uint4" || B === "int4", Hw = (B) => B === "float32" || B === "float16" || B === "int32" || B === "int64" || B === "uint32" || B === "uint64" || B === "int8" || B === "uint8" || B === "bool" || B === "uint4" || B === "int4", Ew = (B) => {
    switch (B) {
      case "none":
        return 0;
      case "cpu":
        return 1;
      case "cpu-pinned":
        return 2;
      case "texture":
        return 3;
      case "gpu-buffer":
        return 4;
      case "ml-tensor":
        return 5;
      default:
        throw new Error(`unsupported data location: ${B}`);
    }
  };
}), aw, ZJ = sA(() => {
  Yw(), aw = async (B) => {
    if (typeof B == "string") {
      let R = await fetch(B);
      if (!R.ok) throw new Error(`failed to load external data file: ${B}`);
      let F = R.headers.get("Content-Length"), i = F ? parseInt(F, 10) : 0;
      if (i < 1073741824) return new Uint8Array(await R.arrayBuffer());
      {
        if (!R.body) throw new Error(`failed to load external data file: ${B}, no response body.`);
        let s = R.body.getReader(), N;
        try {
          N = new ArrayBuffer(i);
        } catch (h) {
          if (h instanceof RangeError) {
            let l = Math.ceil(i / 65536);
            N = new WebAssembly.Memory({ initial: l, maximum: l }).buffer;
          } else throw h;
        }
        let j = 0;
        for (; ; ) {
          let { done: h, value: l } = await s.read();
          if (h) break;
          let k = l.byteLength;
          new Uint8Array(N, j, k).set(l), j += k;
        }
        return new Uint8Array(N, 0, i);
      }
    } else return B instanceof Blob ? new Uint8Array(await B.arrayBuffer()) : B instanceof Uint8Array ? B : new Uint8Array(B);
  };
}), dD, qD, VD, bD, Zw, TD, wI, tQ = sA(() => {
  zA(), dD = ["V", "I", "W", "E", "F"], qD = (B, R) => {
    console.log(`[${dD[B]},${(/* @__PURE__ */ new Date()).toISOString()}]${R}`);
  }, Zw = (B, R) => {
    VD = B, bD = R;
  }, TD = (B, R) => {
    let F = dU(B), i = dU(VD);
    F >= i && qD(F, typeof R == "function" ? R() : R);
  }, wI = (...B) => {
    bD && TD(...B);
  };
}), xD, cB, RA, qU, nJ, dJ, qJ, $A = sA(() => {
  xD = class {
    static calcMatMulShape(B, R) {
      return B[1] !== R[0] ? void 0 : [B[0], R[1]];
    }
  }, cB = class {
    static calcShape(B, R, F = !1) {
      let i = B.length, s = R.length;
      if (i === 0) return R;
      if (s === 0) return B;
      let N = Math.max(B.length, R.length), j = new Array(N);
      if (F) {
        if (i < 2 || s < 2) return;
        let h = xD.calcMatMulShape([B[i - 2], B[i - 1]], [R[s - 2], R[s - 1]]);
        if (h === void 0) return;
        [j[N - 2], j[N - 1]] = h;
      }
      for (let h = F ? 3 : 1; h <= N; h++) {
        let l = i - h < 0 ? 1 : B[i - h], k = s - h < 0 ? 1 : R[s - h];
        if (l !== k && l > 1 && k > 1) return;
        let q = Math.max(l, k);
        if (l && k) j[N - h] = Math.max(l, k);
        else {
          if (q > 1) return;
          j[N - h] = 0;
        }
      }
      return j;
    }
    static isValidBroadcast(B, R) {
      let F = B.length, i = R.length;
      if (F > i) return !1;
      for (let s = 1; s <= F; s++) if (B[F - s] !== 1 && B[F - s] !== R[i - s]) return !1;
      return !0;
    }
  }, RA = class cU {
    static size(R) {
      return cU.getSizeFromDimensionRange(R, 0, R.length);
    }
    static convertShape(R, F = 4) {
      let i = R.length;
      if (i === 0) return [];
      let s = new Array(i), N = i - 1;
      for (; N >= 0; ) {
        if (R[N] % F === 0) {
          s[N] = R[N] / F;
          break;
        }
        if (F % R[N] !== 0) throw new Error("cannot convert shape");
        s[N] = 1, F /= R[N], N--;
      }
      for (N--; N >= 0; N--) s[N] = R[N];
      return s;
    }
    static sizeFromDimension(R, F) {
      if (F < 0 || F > R.length) throw new Error(`invalid dimension of ${F} for sizeFromDimension as Tensor has ${R.length} dimensions.`);
      return cU.getSizeFromDimensionRange(R, F, R.length);
    }
    static sizeToDimension(R, F) {
      if (F < 0 || F > R.length) throw new Error(`invalid dimension of ${F} for sizeToDimension as Tensor has ${R.length} dimensions.`);
      return cU.getSizeFromDimensionRange(R, 0, F);
    }
    static getSizeFromDimensionRange(R, F, i) {
      let s = 1;
      for (let N = F; N < i; N++) {
        if (R[N] < 0) throw new Error("cannot get valid size from specified dimension range. Most likely the range contains negative values in them.");
        s *= Number(R[N]);
      }
      return s;
    }
    static computeStrides(R) {
      let F = R.length;
      if (F === 0) return [];
      if (F === 1) return [1];
      let i = new Array(F);
      i[F - 1] = 1, i[F - 2] = R[F - 1];
      for (let s = F - 3; s >= 0; --s) i[s] = i[s + 1] * R[s + 1];
      return i;
    }
    static normalizeAxis(R, F) {
      if (R < -F && R >= F) throw new Error("unsupported axis for this operation.");
      return R < 0 ? R + F : R;
    }
    static normalizeAxes(R, F) {
      return R.map((i) => this.normalizeAxis(i, F ?? R.length));
    }
    static sortBasedOnPerm(R, F) {
      return F ? F.map((i) => R[i]) : R.slice().reverse();
    }
    static padShape(R, F) {
      let i = R.length;
      return R.map((s, N) => s + F[N] + F[N + i]);
    }
    static areEqual(R, F) {
      return R.length !== F.length ? !1 : R.every((i, s) => i === F[s]);
    }
  }, qU = class cE {
    static adjustPoolAttributes(R, F, i, s, N, j) {
      if (!R && i.length !== F.length - 2) throw new Error("length of specified kernel shapes should be 2 less than length of input dimensions");
      if (R) for (let h = 0; h < F.length - 2; h++) h >= i.length ? i.push(F[h + 2]) : i[h] = F[h + 2];
      for (let h = 0; h < i.length; h++) if (h < s.length) {
        if (s[h] < 0) throw new Error("strides should be greater than or equal to 1");
      } else s.push(1);
      for (let h = 0; h < i.length; h++) if (h < N.length) {
        if (N[h] < 0) throw new Error("dilations should be greater than or equal to 1");
      } else N.push(1);
      for (let h = 0; h < i.length * 2; h++) if (h < j.length) {
        if (j[h] < 0) throw new Error("pad should be greater than or equal to 1");
      } else j.push(0);
      for (let h = 0; h < i.length; h++) {
        if (i[h] <= 0) throw new Error("kernel shapes need to be greater than 0");
        if (j[h] >= i[h] || j[h + i.length] >= i[h]) throw new Error("pads should be smaller than kernel");
      }
    }
    static adjustPadsBasedOnAutoPad(R, F, i, s, N, j, h) {
      if (h) {
        if (N.length !== 2 * (R.length - 2)) throw new Error("length of pads should be twice the length of data dimensions");
        if (F.length !== R.length - 2) throw new Error("length of strides should be the length of data dimensions");
        if (s.length !== R.length - 2) throw new Error("length of kernel shapes should be the length of data dimensions");
        for (let l = 0; l < R.length - 2; l++) cE.adjustPadAndReturnShape(R[l + (j ? 1 : 2)], F[l], i[l], s[l], N, l, l + R.length - 2, h);
      }
    }
    static computePoolOutputShape(R, F, i, s, N, j, h) {
      if (F.length <= 0) throw new Error("input shape must be of size greater than 0");
      let l = [F[0], F[1]];
      return cE.computeShapeHelper(R, F, l, i, s, N, j, h), l;
    }
    static computeConvOutputShape(R, F, i, s, N, j, h) {
      if (R.length <= 0 || F.length <= 0) throw new Error("invalid input tensor dims or invalid filter tensor dims");
      let l = [R[0], F[0]];
      return cE.computeShapeHelper(!1, R, l, i, s, N, j, h), l;
    }
    static computeShapeHelper(R, F, i, s, N, j, h, l) {
      if (R) for (let k = 0; k < F.length - 2; k++) i.push(1);
      else for (let k = 0; k < F.length - 2; k++) i.push(cE.adjustPadAndReturnShape(F[k + 2], s[k], N[k], j[k], h, k, k + F.length - 2, l));
    }
    static adjustPadAndReturnShape(R, F, i, s, N, j, h, l) {
      let k = i * (s - 1) + 1;
      if (l && l !== "NOTSET") switch (l) {
        case "VALID":
          return N[j] = 0, N[h] = 0, Math.floor((R - k) / F + 1);
        case "SAME_LOWER":
        case "SAME_UPPER":
          if (i !== 1) throw new Error("Dilation not supported for SAME_UPPER or SAME_LOWER");
          {
            let q = ((R + F - 1) / F - 1) * F + s - R;
            return N[j] = Math.floor(l === "SAME_LOWER" ? (q + 1) / 2 : q / 2), N[h] = q - N[j], Math.floor((R + q - s) / F + 1);
          }
        default:
          throw new Error("Unsupported AutoPad type");
      }
      else return Math.floor((R + N[j] + N[h] - k) / F + 1);
    }
  }, nJ = class {
    static getShapeOfGemmResult(B, R, F, i, s) {
      if (B.length !== 2 || F.length !== 2) throw new Error("shape need to be of size 2");
      let N, j, h;
      R ? (N = B[1], j = B[0]) : (N = B[0], j = B[1]);
      let l = -1;
      if (i ? (h = F[0], l = 1) : (h = F[1], l = 0), F[l] !== j) throw new Error("dimension mismatch");
      if (N <= 0 || h <= 0 || j <= 0) throw new Error("invalid shape specified");
      if (s && !cB.isValidBroadcast(s, [N, h])) throw new Error("gemm: invalid bias shape for broadcast");
      return [N, h, j];
    }
  }, dJ = -34028234663852886e22, qJ = 34028234663852886e22;
}), nw, VJ = sA(() => {
  zA(), nw = (B, R) => new (WU(R))(B);
}), GR, Uw, JR, PD, iR, fD, yR, oR, NR, pD, bJ, KN = sA(() => {
  zA(), tQ(), GR = /* @__PURE__ */ new Map([["float32", 32], ["float16", 16], ["int32", 32], ["uint32", 32], ["int64", 64], ["uint64", 64], ["int8", 8], ["uint8", 8], ["int4", 4], ["uint4", 4]]), Uw = (B, R) => {
    if (R === "int32") return B;
    let F = GR.get(R);
    if (!F) throw new Error(`WebNN backend does not support data type: ${R}`);
    let i = F / 8;
    if (B.byteLength % i !== 0) throw new Error(`Invalid Uint8Array length - must be a multiple of ${i}.`);
    let s = B.byteLength / i, N = new (WU(R))(B.buffer, B.byteOffset, s);
    switch (R) {
      case "int64":
      case "uint64": {
        let j = new Int32Array(s);
        for (let h = 0; h < s; h++) {
          let l = N[h];
          if (l > 2147483647n || l < -2147483648n) throw new Error("Can not convert int64 data to int32 - value out of range.");
          j[h] = Number(l);
        }
        return new Uint8Array(j.buffer);
      }
      case "int8":
      case "uint8":
      case "uint32": {
        if (R === "uint32" && N.some((h) => h > 2147483647)) throw new Error("Can not convert uint32 data to int32 - value out of range.");
        let j = Int32Array.from(N, Number);
        return new Uint8Array(j.buffer);
      }
      default:
        throw new Error(`Unsupported data conversion from ${R} to 'int32'`);
    }
  }, JR = (B, R) => {
    if (R === "int32") return B;
    if (B.byteLength % 4 !== 0) throw new Error("Invalid Uint8Array length - must be a multiple of 4 (int32).");
    let F = B.byteLength / 4, i = new Int32Array(B.buffer, B.byteOffset, F);
    switch (R) {
      case "int64": {
        let s = BigInt64Array.from(i, BigInt);
        return new Uint8Array(s.buffer);
      }
      case "uint64": {
        if (i.some((N) => N < 0)) throw new Error("Can not convert int32 data to uin64 - negative value found.");
        let s = BigUint64Array.from(i, BigInt);
        return new Uint8Array(s.buffer);
      }
      case "int8": {
        if (i.some((N) => N < -128 || N > 127)) throw new Error("Can not convert int32 data to int8 - value out of range.");
        let s = Int8Array.from(i, Number);
        return new Uint8Array(s.buffer);
      }
      case "uint8": {
        if (i.some((s) => s < 0 || s > 255)) throw new Error("Can not convert int32 data to uint8 - value out of range.");
        return Uint8Array.from(i, Number);
      }
      case "uint32": {
        if (i.some((N) => N < 0)) throw new Error("Can not convert int32 data to uint32 - negative value found.");
        let s = Uint32Array.from(i, Number);
        return new Uint8Array(s.buffer);
      }
      default:
        throw new Error(`Unsupported data conversion from 'int32' to ${R}`);
    }
  }, PD = 1, iR = () => PD++, fD = /* @__PURE__ */ new Map([["int8", "int32"], ["uint8", "int32"], ["uint32", "int32"], ["int64", "int32"]]), yR = (B, R) => {
    let F = GR.get(B);
    if (!F) throw new Error(`WebNN backend does not support data type: ${B}`);
    return R.length > 0 ? Math.ceil(R.reduce((i, s) => i * s) * F / 8) : 0;
  }, oR = class {
    constructor(B) {
      this.isDataConverted = !1;
      let { sessionId: R, context: F, tensor: i, dataType: s, shape: N, fallbackDataType: j } = B;
      this.sessionId = R, this.mlContext = F, this.mlTensor = i, this.dataType = s, this.tensorShape = N, this.fallbackDataType = j;
    }
    get tensor() {
      return this.mlTensor;
    }
    get type() {
      return this.dataType;
    }
    get fallbackType() {
      return this.fallbackDataType;
    }
    get shape() {
      return this.tensorShape;
    }
    get byteLength() {
      return yR(this.dataType, this.tensorShape);
    }
    destroy() {
      wI("verbose", () => "[WebNN] TensorWrapper.destroy"), this.mlTensor.destroy();
    }
    write(B) {
      this.mlContext.writeTensor(this.mlTensor, B);
    }
    async read(B) {
      if (this.fallbackDataType) {
        let R = await this.mlContext.readTensor(this.mlTensor), F = JR(new Uint8Array(R), this.dataType);
        if (B) {
          (B instanceof ArrayBuffer ? new Uint8Array(B) : new Uint8Array(B.buffer, B.byteOffset, B.byteLength)).set(F);
          return;
        } else return F.buffer;
      } else return B ? this.mlContext.readTensor(this.mlTensor, B) : this.mlContext.readTensor(this.mlTensor);
    }
    canReuseTensor(B, R, F) {
      return this.mlContext === B && this.dataType === R && this.tensorShape.length === F.length && this.tensorShape.every((i, s) => i === F[s]);
    }
    setIsDataConverted(B) {
      this.isDataConverted = B;
    }
  }, NR = class {
    constructor(B, R) {
      this.tensorManager = B, this.wrapper = R;
    }
    get tensorWrapper() {
      return this.wrapper;
    }
    releaseTensor() {
      this.tensorWrapper && (this.tensorManager.releaseTensor(this.tensorWrapper), this.wrapper = void 0);
    }
    async ensureTensor(B, R, F, i) {
      let s = this.tensorManager.getMLContext(B), N;
      if (!s.opSupportLimits().input.dataTypes.includes(R)) {
        if (N = fD.get(R), !N || !s.opSupportLimits().input.dataTypes.includes(N)) throw new Error(`WebNN backend does not support data type: ${R}`);
        wI("verbose", () => `[WebNN] TensorIdTracker.ensureTensor: fallback dataType from ${R} to ${N}`);
      }
      if (this.wrapper) {
        if (this.wrapper.canReuseTensor(s, R, F)) return this.wrapper.tensor;
        if (i) {
          if (this.wrapper.byteLength !== yR(R, F)) throw new Error("Unable to copy data to tensor with different size.");
          this.activeUpload = new Uint8Array(await this.wrapper.read());
        }
        this.tensorManager.releaseTensor(this.wrapper);
      }
      let j = typeof MLTensorUsage > "u" ? void 0 : MLTensorUsage.READ | MLTensorUsage.WRITE;
      return this.wrapper = await this.tensorManager.getCachedTensor(B, R, F, j, !0, !0, N), i && this.activeUpload && (this.wrapper.write(this.activeUpload), this.activeUpload = void 0), this.wrapper.tensor;
    }
    upload(B) {
      let R = B;
      if (this.wrapper) {
        if (this.wrapper.fallbackType) if (this.wrapper.fallbackType === "int32") R = Uw(B, this.wrapper.type), this.wrapper.setIsDataConverted(!0);
        else throw new Error(`Unsupported fallback data type: ${this.wrapper.fallbackType}`);
        if (B.byteLength === this.wrapper.byteLength) {
          this.wrapper.write(R);
          return;
        } else wI("verbose", () => "Data size does not match tensor size. Releasing tensor."), this.releaseTensor();
      }
      this.activeUpload ? this.activeUpload.set(R) : this.activeUpload = new Uint8Array(R);
    }
    async download(B) {
      var R, F;
      if (this.activeUpload) {
        let i = (R = this.wrapper) != null && R.isDataConverted ? JR(this.activeUpload, (F = this.wrapper) == null ? void 0 : F.type) : this.activeUpload;
        if (B) {
          B instanceof ArrayBuffer ? new Uint8Array(B).set(i) : new Uint8Array(B.buffer, B.byteOffset, B.byteLength).set(i);
          return;
        } else return i.buffer;
      }
      if (!this.wrapper) throw new Error("Tensor has not been created.");
      return B ? this.wrapper.read(B) : this.wrapper.read();
    }
  }, pD = class {
    constructor(B) {
      this.backend = B, this.tensorTrackersById = /* @__PURE__ */ new Map(), this.freeTensors = [], this.externalTensors = /* @__PURE__ */ new Set();
    }
    getMLContext(B) {
      let R = this.backend.getMLContext(B);
      if (!R) throw new Error("MLContext not found for session.");
      return R;
    }
    reserveTensorId() {
      let B = iR();
      return this.tensorTrackersById.set(B, new NR(this)), B;
    }
    releaseTensorId(B) {
      let R = this.tensorTrackersById.get(B);
      R && (this.tensorTrackersById.delete(B), R.tensorWrapper && this.releaseTensor(R.tensorWrapper));
    }
    async ensureTensor(B, R, F, i, s) {
      wI("verbose", () => `[WebNN] TensorManager.ensureTensor {tensorId: ${R}, dataType: ${F}, shape: ${i}, copyOld: ${s}}`);
      let N = this.tensorTrackersById.get(R);
      if (!N) throw new Error("Tensor not found.");
      return N.ensureTensor(B, F, i, s);
    }
    upload(B, R) {
      let F = this.tensorTrackersById.get(B);
      if (!F) throw new Error("Tensor not found.");
      F.upload(R);
    }
    async download(B, R) {
      wI("verbose", () => `[WebNN] TensorManager.download {tensorId: ${B}, dstBuffer: ${R == null ? void 0 : R.byteLength}}`);
      let F = this.tensorTrackersById.get(B);
      if (!F) throw new Error("Tensor not found.");
      return F.download(R);
    }
    releaseTensorsForSession(B) {
      for (let R of this.freeTensors) R.sessionId === B && R.destroy();
      this.freeTensors = this.freeTensors.filter((R) => R.sessionId !== B);
    }
    registerTensor(B, R, F, i) {
      let s = this.getMLContext(B), N = iR(), j = new oR({ sessionId: B, context: s, tensor: R, dataType: F, shape: i });
      return this.tensorTrackersById.set(N, new NR(this, j)), this.externalTensors.add(j), N;
    }
    async getCachedTensor(B, R, F, i, s, N, j) {
      let h = this.getMLContext(B);
      for (let [k, q] of this.freeTensors.entries()) if (q.canReuseTensor(h, R, F)) {
        wI("verbose", () => `[WebNN] Reusing tensor {dataType: ${R}, ${j ? `fallbackDataType: ${j},` : ""} shape: ${F}`);
        let d = this.freeTensors.splice(k, 1)[0];
        return d.sessionId = B, d;
      }
      wI("verbose", () => `[WebNN] MLContext.createTensor {dataType: ${R}, ${j ? `fallbackDataType: ${j},` : ""} shape: ${F}}`);
      let l = await h.createTensor({ dataType: j ?? R, shape: F, dimensions: F, usage: i, writable: s, readable: N });
      return new oR({ sessionId: B, context: h, tensor: l, dataType: R, shape: F, fallbackDataType: j });
    }
    releaseTensor(B) {
      this.externalTensors.has(B) && this.externalTensors.delete(B), this.freeTensors.push(B);
    }
  }, bJ = (...B) => new pD(...B);
}), sE, tD, TJ, lN = sA(() => {
  zA(), pg(), VJ(), KN(), tQ(), sE = /* @__PURE__ */ new Map([[1, "float32"], [10, "float16"], [6, "int32"], [12, "uint32"], [7, "int64"], [13, "uint64"], [22, "int4"], [21, "uint4"], [3, "int8"], [2, "uint8"], [9, "uint8"]]), tD = (B, R) => {
    if (B === R) return !0;
    if (B === void 0 || R === void 0) return !1;
    let F = Object.keys(B).sort(), i = Object.keys(R).sort();
    return F.length === i.length && F.every((s, N) => s === i[N] && B[s] === R[s]);
  }, TJ = class {
    constructor(B) {
      this.tensorManager = bJ(this), this.mlContextBySessionId = /* @__PURE__ */ new Map(), this.sessionIdsByMLContext = /* @__PURE__ */ new Map(), this.mlContextCache = [], this.sessionGraphInputs = /* @__PURE__ */ new Map(), this.sessionGraphOutputs = /* @__PURE__ */ new Map(), this.temporaryGraphInputs = [], this.temporaryGraphOutputs = [], this.temporarySessionTensorIds = /* @__PURE__ */ new Map(), Zw(B.logLevel, !!B.debug);
    }
    get currentSessionId() {
      if (this.activeSessionId === void 0) throw new Error("No active session");
      return this.activeSessionId;
    }
    onRunStart(B) {
      wI("verbose", () => `[WebNN] onRunStart {sessionId: ${B}}`), this.activeSessionId = B;
    }
    onRunEnd(B) {
      wI("verbose", () => `[WebNN] onRunEnd {sessionId: ${B}}`);
      let R = this.temporarySessionTensorIds.get(B);
      if (R) {
        for (let F of R) wI("verbose", () => `[WebNN] releasing temporary tensor {tensorId: ${F}}`), this.tensorManager.releaseTensorId(F);
        this.temporarySessionTensorIds.delete(B), this.activeSessionId = void 0;
      }
    }
    async createMLContext(B) {
      if (B instanceof GPUDevice) {
        let F = this.mlContextCache.findIndex((i) => i.gpuDevice === B);
        if (F !== -1) return this.mlContextCache[F].mlContext;
        {
          let i = await navigator.ml.createContext(B);
          return this.mlContextCache.push({ gpuDevice: B, mlContext: i }), i;
        }
      } else if (B === void 0) {
        let F = this.mlContextCache.findIndex((i) => i.options === void 0 && i.gpuDevice === void 0);
        if (F !== -1) return this.mlContextCache[F].mlContext;
        {
          let i = await navigator.ml.createContext();
          return this.mlContextCache.push({ mlContext: i }), i;
        }
      }
      let R = this.mlContextCache.findIndex((F) => tD(F.options, B));
      if (R !== -1) return this.mlContextCache[R].mlContext;
      {
        let F = await navigator.ml.createContext(B);
        return this.mlContextCache.push({ options: B, mlContext: F }), F;
      }
    }
    registerMLContext(B, R) {
      this.mlContextBySessionId.set(B, R);
      let F = this.sessionIdsByMLContext.get(R);
      F || (F = /* @__PURE__ */ new Set(), this.sessionIdsByMLContext.set(R, F)), F.add(B), this.temporaryGraphInputs.length > 0 && (this.sessionGraphInputs.set(B, this.temporaryGraphInputs), this.temporaryGraphInputs = []), this.temporaryGraphOutputs.length > 0 && (this.sessionGraphOutputs.set(B, this.temporaryGraphOutputs), this.temporaryGraphOutputs = []);
    }
    onReleaseSession(B) {
      this.sessionGraphInputs.delete(B), this.sessionGraphOutputs.delete(B);
      let R = this.mlContextBySessionId.get(B);
      if (!R) return;
      this.tensorManager.releaseTensorsForSession(B), this.mlContextBySessionId.delete(B);
      let F = this.sessionIdsByMLContext.get(R);
      if (F.delete(B), F.size === 0) {
        this.sessionIdsByMLContext.delete(R);
        let i = this.mlContextCache.findIndex((s) => s.mlContext === R);
        i !== -1 && this.mlContextCache.splice(i, 1);
      }
    }
    getMLContext(B) {
      return this.mlContextBySessionId.get(B);
    }
    reserveTensorId() {
      return this.tensorManager.reserveTensorId();
    }
    releaseTensorId(B) {
      wI("verbose", () => `[WebNN] releaseTensorId {tensorId: ${B}}`), this.tensorManager.releaseTensorId(B);
    }
    async ensureTensor(B, R, F, i, s) {
      let N = sE.get(F);
      if (!N) throw new Error(`Unsupported ONNX data type: ${F}`);
      return this.tensorManager.ensureTensor(B ?? this.currentSessionId, R, N, i, s);
    }
    async createTemporaryTensor(B, R, F) {
      wI("verbose", () => `[WebNN] createTemporaryTensor {onnxDataType: ${R}, shape: ${F}}`);
      let i = sE.get(R);
      if (!i) throw new Error(`Unsupported ONNX data type: ${R}`);
      let s = this.tensorManager.reserveTensorId();
      await this.tensorManager.ensureTensor(B, s, i, F, !1);
      let N = this.temporarySessionTensorIds.get(B);
      return N ? N.push(s) : this.temporarySessionTensorIds.set(B, [s]), s;
    }
    uploadTensor(B, R) {
      if (!cI().shouldTransferToMLTensor) throw new Error("Trying to upload to a MLTensor while shouldTransferToMLTensor is false");
      wI("verbose", () => `[WebNN] uploadTensor {tensorId: ${B}, data: ${R.byteLength}}`), this.tensorManager.upload(B, R);
    }
    async downloadTensor(B, R) {
      return this.tensorManager.download(B, R);
    }
    createMLTensorDownloader(B, R) {
      return async () => {
        let F = await this.tensorManager.download(B);
        return nw(F, R);
      };
    }
    registerMLTensor(B, R, F, i) {
      let s = sE.get(F);
      if (!s) throw new Error(`Unsupported ONNX data type: ${F}`);
      let N = this.tensorManager.registerTensor(B, R, s, i);
      return wI("verbose", () => `[WebNN] registerMLTensor {tensor: ${R}, dataType: ${s}, dimensions: ${i}} -> {tensorId: ${N}}`), N;
    }
    registerMLConstant(B, R, F, i, s, N, j = !1) {
      if (!N) throw new Error("External mounted files are not available.");
      let h = B;
      B.startsWith("./") && (h = B.substring(2));
      let l = N.get(h);
      if (!l) throw new Error(`File with name ${h} not found in preloaded files.`);
      if (R + F > l.byteLength) throw new Error("Out of bounds: data offset and length exceed the external file data size.");
      let k = l.slice(R, R + F).buffer, q;
      switch (s.dataType) {
        case "float32":
          q = new Float32Array(k);
          break;
        case "float16":
          q = typeof Float16Array < "u" && Float16Array.from ? new Float16Array(k) : new Uint16Array(k);
          break;
        case "int32":
          q = new Int32Array(k);
          break;
        case "uint32":
          q = new Uint32Array(k);
          break;
        case "int64":
          if (j) {
            let d = Uw(new Uint8Array(k), "int64");
            q = new Int32Array(d.buffer), s.dataType = "int32";
          } else q = new BigInt64Array(k);
          break;
        case "uint64":
          q = new BigUint64Array(k);
          break;
        case "int8":
          q = new Int8Array(k);
          break;
        case "int4":
        case "uint4":
        case "uint8":
          q = new Uint8Array(k);
          break;
        default:
          throw new Error(`Unsupported data type: ${s.dataType} in creating WebNN Constant from external data.`);
      }
      return wI("verbose", () => `[WebNN] registerMLConstant {dataType: ${s.dataType}, shape: ${s.shape}}} ${j ? "(Note: it was int64 data type and registered to int32 as workaround)" : ""}`), i.constant(s, q);
    }
    registerGraphInput(B) {
      this.temporaryGraphInputs.push(B);
    }
    registerGraphOutput(B) {
      this.temporaryGraphOutputs.push(B);
    }
    isGraphInput(B, R) {
      let F = this.sessionGraphInputs.get(B);
      return F ? F.includes(R) : !1;
    }
    isGraphOutput(B, R) {
      let F = this.sessionGraphOutputs.get(B);
      return F ? F.includes(R) : !1;
    }
    isGraphInputOutputTypeSupported(B, R, F = !0) {
      let i = this.mlContextBySessionId.get(B), s = sE.get(qg(R));
      return typeof s > "u" ? !1 : F ? !!(i != null && i.opSupportLimits().input.dataTypes.includes(s)) : !!(i != null && i.opSupportLimits().output.dataTypes.includes(s));
    }
    flush() {
    }
  };
}), dw = sA(() => {
}), sR, NU, sU, WD, OD, jR, Rw, zD, xJ, kN = sA(() => {
  tQ(), dw(), sR = /* @__PURE__ */ new Map([[64, 250], [128, 200], [256, 200], [512, 200], [2048, 230], [4096, 200], [8192, 50], [16384, 50], [32768, 50], [65536, 50], [131072, 50], [262144, 50], [524288, 50], [1048576, 50], [2097152, 30], [4194304, 20], [8388608, 10], [12582912, 10], [16777216, 10], [26214400, 15], [33554432, 22], [44236800, 2], [58982400, 6], [67108864, 6], [134217728, 6], [167772160, 6]]), NU = [], sU = (B) => Math.ceil(Number(B) / 16) * 16, WD = (B) => {
    for (let R = 0; R < NU.length; R++) {
      let F = NU[R];
      if (B <= F) return F;
    }
    return Math.ceil(B / 16) * 16;
  }, OD = 1, jR = () => OD++, Rw = async (B, R, F, i) => {
    let s = sU(F), N = B.device.createBuffer({ size: s, usage: GPUBufferUsage.COPY_DST | GPUBufferUsage.MAP_READ });
    try {
      let j = B.getCommandEncoder();
      B.endComputePass(), j.copyBufferToBuffer(R, 0, N, 0, s), B.flush(), await N.mapAsync(GPUMapMode.READ);
      let h = N.getMappedRange();
      if (i) {
        let l = i();
        return l.set(new Uint8Array(h, 0, F)), l;
      } else return new Uint8Array(h.slice(0, F));
    } finally {
      N.destroy();
    }
  }, zD = class {
    constructor(B) {
      this.backend = B, this.storageCache = /* @__PURE__ */ new Map(), this.freeBuffers = /* @__PURE__ */ new Map(), this.freeUniformBuffers = /* @__PURE__ */ new Map(), this.buffersPending = [], this.capturedPendingBuffers = /* @__PURE__ */ new Map();
      for (let [R] of sR) NU.push(R), this.freeBuffers.set(R, []), this.freeUniformBuffers.set(R, []);
      this.sessionCount = 0;
    }
    upload(B, R) {
      let F = R.buffer, i = R.byteOffset, s = R.byteLength, N = sU(s), j = this.storageCache.get(B);
      if (!j) throw new Error("gpu data for uploading does not exist");
      if (Number(j.originalSize) !== s) throw new Error(`inconsistent data size. gpu data size=${j.originalSize}, data size=${s}`);
      let h = this.backend.device.createBuffer({ mappedAtCreation: !0, size: N, usage: GPUBufferUsage.MAP_WRITE | GPUBufferUsage.COPY_SRC }), l = h.getMappedRange();
      new Uint8Array(l).set(new Uint8Array(F, i, s)), h.unmap();
      let k = this.backend.device.createCommandEncoder();
      k.copyBufferToBuffer(h, 0, j.gpuData.buffer, 0, N), this.backend.device.queue.submit([k.finish()]), h.destroy(), wI("verbose", () => `[WebGPU] GpuDataManager.upload(id=${B})`);
    }
    memcpy(B, R) {
      let F = this.storageCache.get(B);
      if (!F) throw new Error("source gpu data for memcpy does not exist");
      let i = this.storageCache.get(R);
      if (!i) throw new Error("destination gpu data for memcpy does not exist");
      if (F.originalSize !== i.originalSize) throw new Error("inconsistent source and destination gpu data size");
      let s = sU(F.originalSize), N = this.backend.getCommandEncoder();
      this.backend.endComputePass(), N.copyBufferToBuffer(F.gpuData.buffer, 0, i.gpuData.buffer, 0, s);
    }
    registerExternalBuffer(B, R, F) {
      let i;
      if (F) {
        if (i = F[0], B === F[1]) return wI("verbose", () => `[WebGPU] GpuDataManager.registerExternalBuffer(size=${R}) => id=${i}, buffer is the same, skip.`), i;
        if (this.backend.capturedCommandList.has(this.backend.currentSessionId)) throw new Error(`Registering a different external buffer under graph capture mode is not supported yet.
             Please use the previous external buffer!`);
      } else i = jR();
      return this.storageCache.set(i, { gpuData: { id: i, type: 0, buffer: B }, originalSize: R }), wI("verbose", () => `[WebGPU] GpuDataManager.registerExternalBuffer(size=${R}) => id=${i}, registered.`), i;
    }
    unregisterExternalBuffer(B) {
      B !== void 0 && (this.storageCache.delete(B), wI("verbose", () => `[WebGPU] GpuDataManager.unregisterExternalBuffer() => id=${B}`));
    }
    create(B, R = GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_SRC | GPUBufferUsage.COPY_DST) {
      let F = WD(B), i, s = (R & GPUBufferUsage.STORAGE) === GPUBufferUsage.STORAGE, N = (R & GPUBufferUsage.UNIFORM) === GPUBufferUsage.UNIFORM;
      if (s || N) {
        let h = (s ? this.freeBuffers : this.freeUniformBuffers).get(F);
        h ? h.length > 0 ? i = h.pop() : i = this.backend.device.createBuffer({ size: F, usage: R }) : i = this.backend.device.createBuffer({ size: F, usage: R });
      } else i = this.backend.device.createBuffer({ size: F, usage: R });
      let j = { id: jR(), type: 0, buffer: i };
      return this.storageCache.set(j.id, { gpuData: j, originalSize: Number(B) }), wI("verbose", () => `[WebGPU] GpuDataManager.create(size=${B}) => id=${j.id}`), j;
    }
    get(B) {
      var R;
      return (R = this.storageCache.get(B)) == null ? void 0 : R.gpuData;
    }
    release(B) {
      let R = typeof B == "bigint" ? Number(B) : B, F = this.storageCache.get(R);
      if (!F) {
        if (this.storageCache.size === 0) return 0;
        throw new Error("releasing data does not exist");
      }
      return wI("verbose", () => `[WebGPU] GpuDataManager.release(id=${R}), gpuDataId=${F.gpuData.id}`), this.storageCache.delete(R), this.buffersPending.push(F.gpuData.buffer), F.originalSize;
    }
    async download(B, R) {
      let F = this.storageCache.get(Number(B));
      if (!F) throw new Error("data does not exist");
      await Rw(this.backend, F.gpuData.buffer, F.originalSize, R);
    }
    refreshPendingBuffers() {
      if (this.buffersPending.length !== 0) if (this.backend.sessionStatus === "default") {
        for (let B of this.buffersPending) {
          let R = sR.get(B.size);
          if ((B.usage & GPUBufferUsage.STORAGE) === GPUBufferUsage.STORAGE) {
            let F = this.freeBuffers.get(B.size) || [];
            R === void 0 || F.length >= R ? B.destroy() : F.push(B);
          } else if ((B.usage & GPUBufferUsage.UNIFORM) === GPUBufferUsage.UNIFORM) {
            let F = this.freeUniformBuffers.get(B.size) || [];
            R === void 0 || F.length >= R ? B.destroy() : F.push(B);
          } else B.destroy();
        }
        this.buffersPending = [];
      } else {
        let B = this.capturedPendingBuffers.get(this.backend.currentSessionId);
        B || (B = [], this.capturedPendingBuffers.set(this.backend.currentSessionId, B));
        for (let R of this.buffersPending) B.push(R);
        this.buffersPending = [];
      }
    }
    dispose() {
      this.freeBuffers.forEach((B) => {
        B.forEach((R) => {
          R.destroy();
        });
      }), this.freeUniformBuffers.forEach((B) => {
        B.forEach((R) => {
          R.destroy();
        });
      }), this.storageCache.forEach((B) => {
        B.gpuData.buffer.destroy();
      }), this.capturedPendingBuffers.forEach((B) => {
        B.forEach((R) => {
          R.destroy();
        });
      }), this.storageCache = /* @__PURE__ */ new Map(), this.freeBuffers = /* @__PURE__ */ new Map(), this.freeUniformBuffers = /* @__PURE__ */ new Map(), this.capturedPendingBuffers = /* @__PURE__ */ new Map();
    }
    onCreateSession() {
      this.sessionCount += 1;
    }
    onReleaseSession(B) {
      let R = this.capturedPendingBuffers.get(B);
      R && (R.forEach((F) => {
        F.destroy();
      }), this.capturedPendingBuffers.delete(B)), this.sessionCount -= 1, this.sessionCount === 0 && (wI("warning", () => "[WebGPU] Clearing webgpu buffer cache"), this.storageCache.forEach((F) => {
        F.gpuData.buffer.destroy();
      }), this.storageCache = /* @__PURE__ */ new Map());
    }
  }, xJ = (...B) => new zD(...B);
}), XD, NI, tI = sA(() => {
  XD = class {
    constructor(B) {
      Object.assign(this, B);
    }
    get cacheKey() {
      return this.key || (this.key = Object.getOwnPropertyNames(this).sort().map((B) => `${this[B]}`).join(";")), this.key;
    }
  }, NI = (B) => new XD(B);
}), HB, jU, QC, jC, TA, xI, ww, LB, Rg, VA, jE, FA, qA, PJ, qw, rD, fJ, II = sA(() => {
  zA(), $A(), HB = 64, jU = (B, R) => {
    if (R === 3) throw new Error("vec3 has same alignment as vec4, use vec4 instead");
    switch (Number(B)) {
      case 10:
        return R > 1 ? `vec${R}<f16>` : "f16";
      case 1:
        return R > 1 ? `vec${R}<f32>` : "f32";
      case 6:
        return R > 1 ? `vec${R}<i32>` : "i32";
      case 12:
        return R > 1 ? `vec${R}<u32>` : "u32";
      case 7:
        if (R > 1) throw new Error("currently not supported vecX of uint64 yet");
        return ["vec2<u32>", "i32"];
      case 13:
        if (R > 1) throw new Error("currently not supported vecX of uint64 yet");
        return ["vec2<u32>", "u32"];
      case 9:
        if (R !== 4) throw new Error("bool must be vec4");
        return ["u32", "vec4<bool>"];
      case 22:
        return "i32";
      case 21:
        return "u32";
      default:
        throw new Error(`Unknown data type: ${B}`);
    }
  }, QC = (B, R = 1) => {
    let F = jU(B, R);
    return typeof F == "string" ? F : F[0];
  }, jC = (B, R = 1) => {
    let F = jU(B, R);
    return typeof F == "string" ? F : F[1];
  }, TA = (...B) => {
    let R = [];
    return B.forEach((F) => {
      F.length !== 0 && R.push({ type: 12, data: F }, { type: 12, data: RA.computeStrides(F) });
    }), R;
  }, xI = (B) => B % 4 === 0 ? 4 : B % 2 === 0 ? 2 : 1, ww = (B = "f32", R, F = "0") => !R || R === 1 ? `${B}(${F})` : `vec${R}<${B}>(${F})`, LB = (B, R, F) => B === "f32" ? F : R === 1 ? `f32(${F})` : `vec${R}<f32>(${F})`, Rg = (B, R) => R === 4 ? `(${B}.x + ${B}.y + ${B}.z + ${B}.w)` : R === 2 ? `(${B}.x + ${B}.y)` : R === 3 ? `(${B}.x + ${B}.y + ${B}.z)` : B, VA = (B, R, F, i) => B.startsWith("uniforms.") && F > 4 ? typeof R == "string" ? i === "f16" ? `${B}[(${R}) / 8][(${R}) % 8 / 4][(${R}) % 8 % 4]` : `${B}[(${R}) / 4][(${R}) % 4]` : i === "f16" ? `${B}[${Math.floor(R / 8)}][${Math.floor(R % 8 / 4)}][${R % 8 % 4}]` : `${B}[${Math.floor(R / 4)}][${R % 4}]` : F > 1 ? `${B}[${R}]` : B, jE = (B, R, F, i, s) => {
    let N = typeof F == "number", j = N ? F : F.length, h = [...new Array(j).keys()], l = j < 2 ? "u32" : j <= 4 ? `vec${j}<u32>` : `array<u32, ${j}>`, k = jU(R, s), q = typeof k == "string" ? k : k[1], d = typeof k == "string" ? k : k[0], b = { indices: l, value: q, storage: d, tensor: R }, P = (MA) => typeof MA == "string" ? MA : `${MA}u`, W = { offsetToIndices: !1, indicesToOffset: !1, broadcastedIndicesToOffset: !1, set: !1, setByIndices: !1, get: !1, getByIndices: !1 }, r = N ? "uniforms." : "", $ = `${r}${B}_shape`, m = `${r}${B}_strides`, z = "";
    for (let MA = 0; MA < j - 1; MA++) z += `
    let dim${MA} = current / ${VA(m, MA, j)};
    let rest${MA} = current % ${VA(m, MA, j)};
    indices[${MA}] = dim${MA};
    current = rest${MA};
    `;
    z += `indices[${j - 1}] = current;`;
    let IA = j < 2 ? "" : `
  fn o2i_${B}(offset: u32) -> ${b.indices} {
    var indices: ${b.indices};
    var current = offset;
    ${z}
    return indices;
  }`, M = (MA) => (W.offsetToIndices = !0, j < 2 ? MA : `o2i_${B}(${MA})`), L = [];
    if (j >= 2) for (let MA = j - 1; MA >= 0; MA--) L.push(`${VA(m, MA, j)} * (indices[${MA}])`);
    let A = j < 2 ? "" : `
  fn i2o_${B}(indices: ${b.indices}) -> u32 {
    return ${L.join("+")};
  }`, G = (MA) => (W.indicesToOffset = !0, j < 2 ? MA : `i2o_${B}(${MA})`), a = (...MA) => j === 0 ? "0u" : `${b.indices}(${MA.map(P).join(",")})`, UA = (MA, jA) => j < 2 ? `${MA}` : `${VA(MA, jA, j)}`, H = (MA, jA, LA) => j < 2 ? `${MA}=${LA};` : `${VA(MA, jA, j)}=${LA};`, T = {}, cA = (MA, jA) => {
      W.broadcastedIndicesToOffset = !0;
      let LA = `${jA.name}broadcastedIndicesTo${B}Offset`;
      if (LA in T) return `${LA}(${MA})`;
      let XA = [];
      for (let $I = j - 1; $I >= 0; $I--) {
        let JA = jA.indicesGet("outputIndices", $I + jA.rank - j);
        XA.push(`${UA(m, $I)} * (${JA} % ${UA($, $I)})`);
      }
      return T[LA] = `fn ${LA}(outputIndices: ${jA.type.indices}) -> u32 {
             return ${XA.length > 0 ? XA.join("+") : "0u"};
           }`, `${LA}(${MA})`;
    }, GA = (MA, jA) => (() => {
      if (b.storage === b.value) return `${B}[${MA}]=${jA};`;
      if (b.storage === "vec2<u32>" && b.value === "i32") return `${B}[${MA}]=vec2<u32>(u32(${jA}), select(0u, 0xFFFFFFFFu, ${jA} < 0));`;
      if (b.storage === "vec2<u32>" && b.value === "u32") return `${B}[${MA}]=vec2<u32>(u32(${jA}), 0u);`;
      if (b.storage === "u32" && b.value === "vec4<bool>") return `${B}[${MA}]=dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(${jA}));`;
      throw new Error(`not supported combination of storage type ${b.storage} and value type ${b.value} yet`);
    })(), aA = (MA) => (() => {
      if (b.storage === b.value) return `${B}[${MA}]`;
      if (b.storage === "vec2<u32>" && b.value === "i32") return `i32(${B}[${MA}].x)`;
      if (b.storage === "vec2<u32>" && b.value === "u32") return `u32(${B}[${MA}].x)`;
      if (b.storage === "u32" && b.value === "vec4<bool>") return `vec4<bool>(bool(${B}[${MA}] & 0xFFu), bool(${B}[${MA}] & 0xFF00u), bool(${B}[${MA}] & 0xFF0000u), bool(${B}[${MA}] & 0xFF000000u))`;
      throw new Error(`not supported combination of storage type ${b.storage} and value type ${b.value} yet`);
    })(), rA = j < 2 ? "" : `
  fn get_${B}ByIndices(indices: ${b.indices}) -> ${q} {
    return ${aA(`i2o_${B}(indices)`)};
  }`, lA = j < 2 ? "" : (() => {
      let MA = h.map((LA) => `d${LA}: u32`).join(", "), jA = h.map((LA) => `d${LA}`).join(", ");
      return `
  fn get_${B}(${MA}) -> ${q} {
    return get_${B}ByIndices(${a(jA)});
  }`;
    })(), vA = (...MA) => {
      if (MA.length !== j) throw new Error(`indices length must be ${j}`);
      let jA = MA.map(P).join(",");
      return j === 0 ? aA("0u") : j === 1 ? aA(jA[0]) : (W.get = !0, W.getByIndices = !0, W.indicesToOffset = !0, `get_${B}(${jA})`);
    }, HA = (MA) => j < 2 ? aA(MA) : (W.getByIndices = !0, W.indicesToOffset = !0, `get_${B}ByIndices(${MA})`), PA = j < 2 ? "" : `
  fn set_${B}ByIndices(indices: ${b.indices}, value: ${q}) {
    ${GA(`i2o_${B}(indices)`, "value")}
  }`, YI = j < 2 ? "" : (() => {
      let MA = h.map((LA) => `d${LA}: u32`).join(", "), jA = h.map((LA) => `d${LA}`).join(", ");
      return `
  fn set_${B}(${MA}, value: ${q}) {
    set_${B}ByIndices(${a(jA)}, value);
  }`;
    })();
    return { impl: () => {
      let MA = [], jA = !1;
      return W.offsetToIndices && (MA.push(IA), jA = !0), W.indicesToOffset && (MA.push(A), jA = !0), W.broadcastedIndicesToOffset && (Object.values(T).forEach((LA) => MA.push(LA)), jA = !0), W.set && (MA.push(YI), jA = !0), W.setByIndices && (MA.push(PA), jA = !0), W.get && (MA.push(lA), jA = !0), W.getByIndices && (MA.push(rA), jA = !0), !N && jA && MA.unshift(`const ${$} = ${b.indices}(${F.join(",")});`, `const ${m} = ${b.indices}(${RA.computeStrides(F).join(",")});`), MA.join(`
`);
    }, type: b, offsetToIndices: M, indicesToOffset: G, broadcastedIndicesToOffset: cA, indices: a, indicesGet: UA, indicesSet: H, set: (...MA) => {
      if (MA.length !== j + 1) throw new Error(`indices length must be ${j}`);
      let jA = MA[j];
      if (typeof jA != "string") throw new Error("value must be string");
      let LA = MA.slice(0, j).map(P).join(",");
      return j === 0 ? GA("0u", jA) : j === 1 ? GA(LA[0], jA) : (W.set = !0, W.setByIndices = !0, W.indicesToOffset = !0, `set_${B}(${LA}, ${jA})`);
    }, setByOffset: GA, setByIndices: (MA, jA) => j < 2 ? GA(MA, jA) : (W.setByIndices = !0, W.indicesToOffset = !0, `set_${B}ByIndices(${MA}, ${jA});`), get: vA, getByOffset: aA, getByIndices: HA, usage: i, name: B, strides: m, shape: $, rank: j };
  }, FA = (B, R, F, i = 1) => jE(B, R, F, "input", i), qA = (B, R, F, i = 1) => jE(B, R, F, "output", i), PJ = (B, R, F) => jE(B, R, F, "atomicOutput", 1), qw = (B, R, F, i = 1) => jE(B, R, F, "internal", i), rD = class {
    constructor(B, R) {
      this.normalizedDispatchGroup = B, this.limits = R, this.internalVariables = [], this.variables = [], this.uniforms = [], this.variableIndex = 0;
    }
    guardAgainstOutOfBoundsWorkgroupSizes(B) {
      return `if (global_idx >= ${typeof B == "number" ? `${B}u` : B}) { return; }`;
    }
    mainStart(B = HB) {
      let R = typeof B == "number" ? B : B[0], F = typeof B == "number" ? 1 : B[1], i = typeof B == "number" ? 1 : B[2];
      if (R > this.limits.maxComputeWorkgroupSizeX || F > this.limits.maxComputeWorkgroupSizeY || i > this.limits.maxComputeWorkgroupSizeZ) throw new Error(`workgroup size [${R}, ${F}, ${i}] exceeds the maximum workgroup size [${this.limits.maxComputeWorkgroupSizeX}, ${this.limits.maxComputeWorkgroupSizeY}, ${this.limits.maxComputeWorkgroupSizeZ}].`);
      if (R * F * i > this.limits.maxComputeInvocationsPerWorkgroup) throw new Error(`workgroup size [${R}, ${F}, ${i}] exceeds the maximum workgroup invocations ${this.limits.maxComputeInvocationsPerWorkgroup}.`);
      let s = this.normalizedDispatchGroup[1] === 1 && this.normalizedDispatchGroup[2] === 1, N = s ? `@builtin(global_invocation_id) global_id : vec3<u32>,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(local_invocation_id) local_id : vec3<u32>` : `@builtin(global_invocation_id) global_id : vec3<u32>,
                                             @builtin(local_invocation_id) local_id : vec3<u32>,
    @builtin(local_invocation_index) local_idx : u32,
    @builtin(workgroup_id) workgroup_id : vec3<u32>,
    @builtin(num_workgroups) num_workgroups : vec3<u32>`, j = s ? `let global_idx = global_id.x;
         let workgroup_index = workgroup_id.x;` : `let workgroup_index = workgroup_id.z * num_workgroups[0] * num_workgroups[1] +
             workgroup_id.y * num_workgroups[0] + workgroup_id.x;
         let global_idx = workgroup_index * ${R * F * i}u + local_idx;`;
      return `@compute @workgroup_size(${R}, ${F}, ${i})
  fn main(${N}) {
    ${j}
  `;
    }
    appendVariableUniforms(B) {
      B.rank !== 0 && (B.shape.startsWith("uniforms.") && this.uniforms.push({ name: B.shape.replace("uniforms.", ""), type: "u32", length: B.rank }), B.strides.startsWith("uniforms.") && this.uniforms.push({ name: B.strides.replace("uniforms.", ""), type: "u32", length: B.rank }));
    }
    declareVariable(B, R) {
      if (B.usage === "internal") throw new Error("cannot use internal variable with declareVariable(). use registerInternalVariables() instead.");
      this.variables.push(B), this.appendVariableUniforms(B);
      let F = B.usage === "input" ? "read" : "read_write", i = B.usage === "atomicOutput" ? "atomic<i32>" : B.type.storage;
      return `@group(0) @binding(${R}) var<storage, ${F}> ${B.name}: array<${i}>;`;
    }
    declareVariables(...B) {
      return B.map((R) => this.declareVariable(R, this.variableIndex++)).join(`
`);
    }
    registerInternalVariable(B) {
      if (B.usage !== "internal") throw new Error("cannot use input or output variable with registerInternalVariable(). use declareVariables() instead.");
      this.internalVariables.push(B), this.appendVariableUniforms(B);
    }
    registerInternalVariables(...B) {
      return B.forEach((R) => this.registerInternalVariable(R)), this;
    }
    registerUniform(B, R, F = 1) {
      return this.uniforms.push({ name: B, type: R, length: F }), this;
    }
    registerUniforms(B) {
      return this.uniforms = this.uniforms.concat(B), this;
    }
    uniformDeclaration() {
      if (this.uniforms.length === 0) return "";
      let B = [];
      for (let { name: R, type: F, length: i } of this.uniforms) if (i && i > 4) F === "f16" ? B.push(`@align(16) ${R}:array<mat2x4<${F}>, ${Math.ceil(i / 8)}>`) : B.push(`${R}:array<vec4<${F}>, ${Math.ceil(i / 4)}>`);
      else {
        let s = i == null || i === 1 ? F : `vec${i}<${F}>`;
        B.push(`${R}:${s}`);
      }
      return `
      struct Uniforms { ${B.join(", ")} };
      @group(0) @binding(${this.variableIndex}) var<uniform> uniforms: Uniforms;`;
    }
    get additionalImplementations() {
      return this.uniformDeclaration() + this.variables.map((B) => B.impl()).join(`
`) + this.internalVariables.map((B) => B.impl()).join(`
`);
    }
    get variablesInfo() {
      if (this.uniforms.length === 0) return;
      let B = (R) => [12, 10, 1, 6][["u32", "f16", "f32", "i32"].indexOf(R)];
      return this.uniforms.map((R) => [B(R.type), R.length ?? 1]);
    }
  }, fJ = (B, R) => new rD(B, R);
}), mD, SR, eD, vD, uD, _D, tC, pJ, tJ, wg = sA(() => {
  zA(), $A(), tI(), II(), mD = (B, R) => {
    if (!B || B.length !== 1) throw new Error("Transpose requires 1 input.");
    if (R.length !== 0 && R.length !== B[0].dims.length) throw new Error(`perm size ${R.length} does not match input rank ${B[0].dims.length}`);
  }, SR = (B, R) => R.length !== 0 ? R : [...new Array(B).keys()].reverse(), eD = (B, R) => RA.sortBasedOnPerm(B, SR(B.length, R)), vD = (B, R, F, i) => {
    let s = `fn perm(i: ${i.type.indices}) -> ${F.type.indices} {
    var a: ${F.type.indices};`;
    for (let N = 0; N < R; ++N) s += `a[${B[N]}]=i[${N}];`;
    return s += "return a;}";
  }, uD = (B, R) => {
    let F = [], i = [];
    for (let s = 0; s < B.length; ++s) B[s] !== 1 && F.push(B[s]), B[R[s]] !== 1 && i.push(R[s]);
    return { newShape: F, newPerm: i };
  }, _D = (B, R) => {
    let F = 0;
    for (let i = 0; i < B.length; ++i) if (R[B[i]] !== 1) {
      if (B[i] < F) return !1;
      F = B[i];
    }
    return !0;
  }, tC = (B, R) => {
    let F = B.dataType, i = B.dims.length, s = SR(i, R), N = eD(B.dims, s), j = B.dims, h = N, l = i < 2 || _D(s, B.dims), k;
    if (l) return k = (W) => {
      let r = FA("input", F, j, 4), $ = qA("output", F, h, 4);
      return `
  ${W.registerUniform("output_size", "u32").declareVariables(r, $)}
  ${W.mainStart()}
    ${W.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    output[global_idx] = input[global_idx];
  }`;
    }, { name: "TransposeCopy", shaderCache: { inputDependencies: ["type"] }, getRunData: () => {
      let W = RA.size(N);
      return { outputs: [{ dims: N, dataType: B.dataType }], dispatchGroup: { x: Math.ceil(W / 64 / 4) }, programUniforms: [{ type: 12, data: Math.ceil(W / 4) }] };
    }, getShaderSource: k };
    let { newShape: q, newPerm: d } = uD(B.dims, s), b = RA.areEqual(d, [2, 3, 1]), P = RA.areEqual(d, [3, 1, 2]);
    if (q.length === 2 || b || P) {
      j = b ? [q[0], q[1] * q[2]] : P ? [q[0] * q[1], q[2]] : q, h = [j[1], j[0]];
      let W = 16;
      return k = (r) => {
        let $ = FA("a", F, j.length), m = qA("output", F, h.length);
        return `
  ${r.registerUniform("output_size", "u32").declareVariables($, m)}
  var<workgroup> tile : array<array<${m.type.value}, ${W + 1}>, ${W}>;
  ${r.mainStart([W, W, 1])}
    let stride = (uniforms.output_shape[1] - 1) / ${W} + 1;
    let workgroup_id_x = workgroup_index % stride;
    let workgroup_id_y = workgroup_index / stride;
    let input_col = workgroup_id_y * ${W}u + local_id.x;
    let input_row = workgroup_id_x * ${W}u + local_id.y;
    if (input_row < uniforms.a_shape[0] && input_col < uniforms.a_shape[1]) {
      tile[local_id.y][local_id.x] = ${$.getByIndices(`${$.type.indices}(input_row, input_col)`)};
    }
    workgroupBarrier();

    let output_col = workgroup_id_x * ${W}u + local_id.x;
    let output_row = workgroup_id_y * ${W}u + local_id.y;
    if (output_row < uniforms.output_shape[0] && output_col < uniforms.output_shape[1]) {
      ${m.setByIndices(`${m.type.indices}(output_row, output_col)`, "tile[local_id.x][local_id.y]")}
    }
  }`;
      }, { name: "TransposeShared", shaderCache: { inputDependencies: ["type"] }, getRunData: () => {
        let r = RA.size(N);
        return { outputs: [{ dims: N, dataType: B.dataType }], dispatchGroup: { x: Math.ceil(h[1] / W), y: Math.ceil(h[0] / W) }, programUniforms: [{ type: 12, data: r }, ...TA(j, h)] };
      }, getShaderSource: k };
    }
    return k = (W) => {
      let r = FA("a", F, j.length), $ = qA("output", F, h.length);
      return `
  ${W.registerUniform("output_size", "u32").declareVariables(r, $)}

  ${vD(s, i, r, $)}

  ${W.mainStart()}
    ${W.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${$.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${$.setByOffset("global_idx", r.getByIndices("aIndices"))}
  }`;
    }, { name: "Transpose", shaderCache: { hint: `${R}`, inputDependencies: ["rank"] }, getRunData: () => {
      let W = RA.size(N);
      return { outputs: [{ dims: N, dataType: B.dataType }], dispatchGroup: { x: Math.ceil(W / 64) }, programUniforms: [{ type: 12, data: W }, ...TA(j, h)] };
    }, getShaderSource: k };
  }, pJ = (B, R) => {
    mD(B.inputs, R.perm), B.compute(tC(B.inputs[0], R.perm));
  }, tJ = (B) => NI({ perm: B.perm });
}), $D, AF, IF, CF, QF, gF, BF, EF, UF, RF, gQ, WJ, OJ, zJ, XJ, rJ, mJ, eJ, vJ, uJ, _J, cN = sA(() => {
  zA(), $A(), II(), Vw(), wg(), $D = { max: "select(bestValue, candidate, candidate > bestValue)", min: "select(bestValue, candidate, candidate < bestValue)", mean: "bestValue + candidate", sum: "bestValue + candidate", prod: "bestValue * candidate", sumSquare: "bestValue + candidate * candidate", logSumExp: "bestValue + exp(candidate)", l1: "bestValue + abs(candidate)", l2: "bestValue + candidate * candidate", logSum: "bestValue + candidate" }, AF = { max: "select(bestValue, candidate, candidate > bestValue)", min: "select(bestValue, candidate, candidate < bestValue)", mean: "bestValue + candidate", sum: "bestValue + candidate", prod: "bestValue * candidate", sumSquare: "bestValue + candidate", logSumExp: "bestValue + candidate", l1: "bestValue + candidate", l2: "bestValue + candidate", logSum: "bestValue + candidate" }, IF = { max: "_A[offset]", min: "_A[offset]", mean: "0", sum: "0", prod: "1", sumSquare: "0", logSumExp: "0", l1: "0", l2: "0", logSum: "0" }, CF = { max: "bestValue", min: "bestValue", sum: "bestValue", prod: "bestValue", sumSquare: "bestValue", logSumExp: "log(bestValue)", l1: "bestValue", l2: "sqrt(bestValue)", logSum: "log(bestValue)" }, QF = (B, R) => {
    let F = [];
    for (let i = R - B; i < R; ++i) F.push(i);
    return F;
  }, gF = (B, R) => {
    let F = [], i = B.length;
    for (let N = 0; N < i; N++) R.indexOf(N) === -1 && F.push(B[N]);
    let s = R.map((N) => B[N]);
    return [F, s];
  }, BF = (B, R) => {
    let F = B.length + R.length, i = [], s = 0;
    for (let N = 0; N < F; N++) R.indexOf(N) === -1 ? i.push(B[s++]) : i.push(1);
    return i;
  }, EF = (B, R) => {
    for (let F = 0; F < B.length; ++F) if (B[B.length - F - 1] !== R - 1 - F) return !1;
    return !0;
  }, UF = (B, R) => {
    let F = [];
    if (!EF(B, R)) {
      for (let i = 0; i < R; ++i) B.indexOf(i) === -1 && F.push(i);
      B.forEach((i) => F.push(i));
    }
    return F;
  }, RF = (B, R, F, i, s, N, j) => {
    let h = F[0].dims, l = RA.size(N), k = RA.size(j), q = FA("_A", F[0].dataType, h), d = qA("output", s, N), b = 64;
    l === 1 && (b = 256);
    let P = `
          var<workgroup> aBestValues : array<f32, ${b}>;
       `, W = (r) => `
        ${r.registerUniform("reduceSize", "u32").declareVariables(q, d)}
        ${P}
        fn DIV_CEIL(a : u32, b : u32) -> u32 {
          return ((a - 1u) / b + 1u);
         }
         ${r.mainStart(b)}

          let outputIndex = global_idx / ${b};
          let offset = outputIndex * uniforms.reduceSize;

          var bestValue = f32(${IF[i]});
          let Length = uniforms.reduceSize;
          for (var k = local_idx; k < Length; k = k + ${b}) {
           let candidate = f32(${q.getByOffset("offset + k")});
           bestValue = ${$D[i]};
          }
          aBestValues[local_idx] = bestValue;
          workgroupBarrier();

         var reduceSize = min(Length, ${b}u);
         for (var currentSize = reduceSize / 2u; reduceSize > 1u;
             currentSize = reduceSize / 2u) {
           let interval = DIV_CEIL(reduceSize, 2u);
           if (local_idx < currentSize) {
            let candidate = aBestValues[local_idx + interval];
            bestValue = ${AF[i]};
            aBestValues[local_idx] = bestValue;
           }
           reduceSize = interval;
           workgroupBarrier();
         }

         if (local_idx == 0u) {
          ${d.setByOffset("outputIndex", `${i === "mean" ? `${d.type.storage}(bestValue / f32(uniforms.reduceSize))` : `${d.type.storage}(${CF[i]})`}`)};
         }
        }`;
    return { name: B, shaderCache: { hint: `${R};${b}`, inputDependencies: ["type"] }, getShaderSource: W, getRunData: () => ({ outputs: [{ dims: N, dataType: s }], dispatchGroup: { x: l }, programUniforms: [{ type: 12, data: k }] }) };
  }, gQ = (B, R, F, i) => {
    let s = B.inputs.length === 1 ? F : Dw(B.inputs, F), N = s.axes;
    N.length === 0 && !s.noopWithEmptyAxes && (N = B.inputs[0].dims.map((P, W) => W));
    let j = RA.normalizeAxes(N, B.inputs[0].dims.length), h = j, l = B.inputs[0], k = UF(h, B.inputs[0].dims.length);
    k.length > 0 && (l = B.compute(tC(B.inputs[0], k), { inputs: [0], outputs: [-1] })[0], h = QF(h.length, l.dims.length));
    let [q, d] = gF(l.dims, h), b = q;
    s.keepDims && (b = BF(q, j)), B.compute(RF(R, s.cacheKey, [l], i, B.inputs[0].dataType, b, d), { inputs: [l] });
  }, WJ = (B, R) => {
    gQ(B, "ReduceMeanShared", R, "mean");
  }, OJ = (B, R) => {
    gQ(B, "ReduceL1Shared", R, "l1");
  }, zJ = (B, R) => {
    gQ(B, "ReduceL2Shared", R, "l2");
  }, XJ = (B, R) => {
    gQ(B, "ReduceLogSumExpShared", R, "logSumExp");
  }, rJ = (B, R) => {
    gQ(B, "ReduceMaxShared", R, "max");
  }, mJ = (B, R) => {
    gQ(B, "ReduceMinShared", R, "min");
  }, eJ = (B, R) => {
    gQ(B, "ReduceProdShared", R, "prod");
  }, vJ = (B, R) => {
    gQ(B, "ReduceSumShared", R, "sum");
  }, uJ = (B, R) => {
    gQ(B, "ReduceSumSquareShared", R, "sumSquare");
  }, _J = (B, R) => {
    gQ(B, "ReduceLogSumShared", R, "logSum");
  };
}), BQ, wF, VU, Dw, EQ, DF, FF, MF, GF, JF, iF, yF, oF, NF, sF, UQ, $J, Ai, Ii, Ci, Qi, gi, Bi, Ei, Ui, Ri, Vw = sA(() => {
  zA(), $A(), tI(), II(), cN(), BQ = (B) => {
    if (!B || B.length === 0 || B.length > 2) throw new Error("Reduce op requires 1 or 2 inputs.");
    if (B.length === 2 && B[1].dims.length !== 1) throw new Error("Invalid axes input dims.");
  }, wF = (B) => ["", "", `var value = ${B.getByIndices("input_indices")};`, ""], VU = (B, R, F, i, s, N, j = !1, h = !1) => {
    let l = [], k = F[0].dims, q = k.length, d = RA.normalizeAxes(s, q), b = !h && d.length === 0;
    k.forEach((r, $) => {
      b || d.indexOf($) >= 0 ? j && l.push(1) : l.push(r);
    });
    let P = l.length, W = RA.size(l);
    return { name: B, shaderCache: R, getShaderSource: (r) => {
      let $ = [], m = FA("_A", F[0].dataType, q), z = qA("output", N, P), IA = i(m, z, d), M = IA[2];
      for (let L = 0, A = 0; L < q; L++) b || d.indexOf(L) >= 0 ? (j && A++, M = `for(var j${L}: u32 = 0; j${L} < ${k[L]}; j${L}++) {
                  ${IA[2].includes("last_index") ? `let last_index = j${L};` : ""}
                  ${m.indicesSet("input_indices", L, `j${L}`)}
                  ${M}
                }`) : ($.push(`${m.indicesSet("input_indices", L, z.indicesGet("output_indices", A))};`), A++);
      return `

        ${r.registerUniform("output_size", "u32").declareVariables(m, z)}

        ${r.mainStart()}
          ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          var input_indices: ${m.type.indices};
          let output_indices = ${z.offsetToIndices("global_idx")};

          ${$.join(`
`)}
          ${IA[0]}       // init ops for reduce max/min
          ${IA[1]}
          ${M}
          ${IA[3]}
          ${IA.length === 4 ? z.setByOffset("global_idx", "value") : IA.slice(4).join(`
`)}
        }`;
    }, getRunData: () => ({ outputs: [{ dims: l, dataType: N }], dispatchGroup: { x: Math.ceil(W / 64) }, programUniforms: [{ type: 12, data: W }, ...TA(k, l)] }) };
  }, Dw = (B, R) => {
    let F = [];
    return B[1].dims[0] > 0 && B[1].getBigInt64Array().forEach((i) => F.push(Number(i))), NI({ axes: F, keepDims: R.keepDims, noopWithEmptyAxes: R.noopWithEmptyAxes });
  }, EQ = (B, R, F, i) => {
    let s = B.inputs, N = s.length === 1 ? F : Dw(s, F);
    B.compute(VU(R, { hint: N.cacheKey, inputDependencies: ["rank"] }, [s[0]], N.noopWithEmptyAxes && N.axes.length === 0 ? wF : i, N.axes, s[0].dataType, N.keepDims, N.noopWithEmptyAxes), { inputs: [0] });
  }, DF = (B, R) => {
    BQ(B.inputs), EQ(B, "ReduceLogSum", R, (F, i) => [`var value = ${i.type.storage}(0);`, "", `value += ${F.getByIndices("input_indices")};`, "value = log(value);"]);
  }, FF = (B, R) => {
    BQ(B.inputs), EQ(B, "ReduceL1", R, (F, i) => [`var value = ${i.type.storage}(0);`, "", `value += abs(${F.getByIndices("input_indices")});`, ""]);
  }, MF = (B, R) => {
    BQ(B.inputs), EQ(B, "ReduceL2", R, (F, i) => [`var t = ${i.type.value}(0); var value = ${i.type.value}(0);`, "", `t = ${F.getByIndices("input_indices")}; value += (t * t);`, "value = sqrt(value);"]);
  }, GF = (B, R) => {
    BQ(B.inputs), EQ(B, "ReduceLogSumExp", R, (F, i) => [`var value = ${i.type.storage}(0);`, "", `value += exp(${F.getByIndices("input_indices")});`, "value = log(value);"]);
  }, JF = (B, R) => {
    BQ(B.inputs), EQ(B, "ReduceMax", R, (F, i, s) => {
      let N = [];
      for (let j = 0; j < F.rank; j++) (s.indexOf(j) >= 0 || s.length === 0) && N.push(F.indicesSet("input_indices", j, 0));
      return [`${N.join(`
`)}`, `var value = ${F.getByIndices("input_indices")};`, `value = max(value, ${F.getByIndices("input_indices")});`, ""];
    });
  }, iF = (B, R) => {
    BQ(B.inputs), EQ(B, "ReduceMean", R, (F, i, s) => {
      let N = 1;
      for (let j = 0; j < F.rank; j++) (s.indexOf(j) >= 0 || s.length === 0) && (N *= B.inputs[0].dims[j]);
      return ["var sum = f32(0);", "", `sum += f32(${F.getByIndices("input_indices")});`, `let value = ${i.type.value}(sum / ${N});`];
    });
  }, yF = (B, R) => {
    BQ(B.inputs), EQ(B, "ReduceMin", R, (F, i, s) => {
      let N = [];
      for (let j = 0; j < F.rank; j++) (s.indexOf(j) >= 0 || s.length === 0) && N.push(`input_indices[${j}] = 0;`);
      return [`${N.join(`
`)}`, `var value = ${F.getByIndices("input_indices")};`, `value = min(value, ${F.getByIndices("input_indices")});`, ""];
    });
  }, oF = (B, R) => {
    BQ(B.inputs), EQ(B, "ReduceProd", R, (F, i) => [`var value = ${i.type.storage}(1);`, "", `value *= ${F.getByIndices("input_indices")};`, ""]);
  }, NF = (B, R) => {
    BQ(B.inputs), EQ(B, "ReduceSum", R, (F, i) => [`var value = ${i.type.storage}(0);`, "", `value += ${F.getByIndices("input_indices")};`, ""]);
  }, sF = (B, R) => {
    BQ(B.inputs), EQ(B, "ReduceSumSquare", R, (F, i) => [`var t = ${i.type.value}(0); var value = ${i.type.value}(0);`, "", `t = ${F.getByIndices("input_indices")}; value += t * t;`, ""]);
  }, UQ = (B, R, F) => {
    if (R.length === 0) return F;
    let i = 1, s = 1;
    for (let N = 0; N < R.length; N++) R.indexOf(N) === -1 ? i *= B[N] : s *= B[N];
    return s < 32 && i > 1024;
  }, $J = (B, R) => {
    UQ(B.inputs[0].dims, R.axes, R.noopWithEmptyAxes) ? iF(B, R) : WJ(B, R);
  }, Ai = (B, R) => {
    UQ(B.inputs[0].dims, R.axes, R.noopWithEmptyAxes) ? FF(B, R) : OJ(B, R);
  }, Ii = (B, R) => {
    UQ(B.inputs[0].dims, R.axes, R.noopWithEmptyAxes) ? MF(B, R) : zJ(B, R);
  }, Ci = (B, R) => {
    UQ(B.inputs[0].dims, R.axes, R.noopWithEmptyAxes) ? GF(B, R) : XJ(B, R);
  }, Qi = (B, R) => {
    UQ(B.inputs[0].dims, R.axes, R.noopWithEmptyAxes) ? JF(B, R) : rJ(B, R);
  }, gi = (B, R) => {
    UQ(B.inputs[0].dims, R.axes, R.noopWithEmptyAxes) ? yF(B, R) : mJ(B, R);
  }, Bi = (B, R) => {
    UQ(B.inputs[0].dims, R.axes, R.noopWithEmptyAxes) ? oF(B, R) : eJ(B, R);
  }, Ei = (B, R) => {
    UQ(B.inputs[0].dims, R.axes, R.noopWithEmptyAxes) ? NF(B, R) : vJ(B, R);
  }, Ui = (B, R) => {
    UQ(B.inputs[0].dims, R.axes, R.noopWithEmptyAxes) ? sF(B, R) : uJ(B, R);
  }, Ri = (B, R) => {
    UQ(B.inputs[0].dims, R.axes, R.noopWithEmptyAxes) ? DF(B, R) : _J(B, R);
  };
}), hR, wi, Di, Fw, HN = sA(() => {
  zA(), tI(), Vw(), hR = (B) => {
    if (!B || B.length === 0 || B.length > 2) throw new Error("ArgMinMaxOp op requires 1 or 2 inputs.");
    if (B[0].dataType !== 1) throw new Error("Invalid input type.");
  }, wi = (B, R) => {
    hR(B.inputs);
    let F = (i, s, N) => {
      let j = [];
      for (let h = 0; h < i.rank; h++) (N.indexOf(h) >= 0 || N.length === 0) && j.push(`input_indices[${h}] = 0;`);
      return [`${j.join(`
`)}`, `var value = ${i.getByIndices("input_indices")};
var best_index : i32 = 0;`, `if (${i.getByIndices("input_indices")} ${R.selectLastIndex > 0 ? "<=" : "<"} value) {
         value = ${i.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`, "", s.setByOffset("global_idx", "best_index")];
    };
    B.compute(VU("ArgMin", { hint: R.cacheKey, inputDependencies: ["rank"] }, [B.inputs[0]], F, [R.axis], 7, R.keepDims), { inputs: [0] });
  }, Di = (B, R) => {
    hR(B.inputs);
    let F = (i, s, N) => {
      let j = [];
      for (let h = 0; h < i.rank; h++) (N.indexOf(h) >= 0 || N.length === 0) && j.push(`input_indices[${h}] = 0;`);
      return [`${j.join(`
`)}`, `var value = ${i.getByIndices("input_indices")};
var best_index : i32 = 0;`, `if (${i.getByIndices("input_indices")} ${R.selectLastIndex > 0 ? ">=" : ">"} value) {
         value = ${i.getByIndices("input_indices")};
         best_index = i32(last_index);
       }`, "", s.setByOffset("global_idx", "best_index")];
    };
    B.compute(VU("argMax", { hint: R.cacheKey, inputDependencies: ["rank"] }, [B.inputs[0]], F, [R.axis], 7, R.keepDims), { inputs: [0] });
  }, Fw = (B) => NI(B);
}), jF, SU, SF, hF, LF, VE, YF, Fi, bw = sA(() => {
  zA(), $A(), dw(), II(), jF = (B, R) => {
    let F = B[0], i = B[1], s = B[2], N = B[3], j = B[4], h = B[5];
    if (j && h) throw new Error("Attention cannot have both past and attention_bias");
    if (F.dims.length !== 3) throw new Error('Input "input" must have 3 dimensions');
    let l = F.dims[0], k = F.dims[1], q = F.dims[2];
    if (s.dims.length !== 1) throw new Error('Input "bias" is expected to have 1 dimensions');
    if (i.dims.length !== 2) throw new Error('Input "weights" is expected to have 2 dimensions');
    if (i.dims[0] !== q) throw new Error("Input 1 dimension 0 should have same length as dimension 2 of input 0");
    if (s.dims[0] !== i.dims[1]) throw new Error('Input "bias" dimension 0 should have same length as dimension 1 of input "weights"');
    let d = s.dims[0] / 3, b = d, P = b;
    if (R.qkvHiddenSizes.length > 0) {
      if (R.qkvHiddenSizes.length !== 3) throw new Error("qkv_hidden_sizes attribute should have 3 elements");
      for (let IA of R.qkvHiddenSizes) if (IA % R.numHeads !== 0) throw new Error("qkv_hidden_sizes should be divisible by num_heads");
      d = R.qkvHiddenSizes[0], b = R.qkvHiddenSizes[1], P = R.qkvHiddenSizes[2];
    }
    let W = k;
    if (d !== b) throw new Error("qkv_hidden_sizes first element should be same as the second");
    if (s.dims[0] !== d + b + P) throw new Error('Input "bias" dimension 0 should have same length as sum of Q/K/V hidden sizes');
    let r = 0;
    if (j) {
      if (b !== P) throw new Error('Input "past" expect k_hidden_size == v_hidden_size');
      if (j.dims.length !== 5) throw new Error('Input "past" must have 5 dimensions');
      if (j.dims[0] !== 2) throw new Error('Input "past" first dimension must be 2');
      if (j.dims[1] !== l) throw new Error('Input "past" second dimension must be batch_size');
      if (j.dims[2] !== R.numHeads) throw new Error('Input "past" third dimension must be num_heads');
      if (j.dims[4] !== b / R.numHeads) throw new Error('Input "past" fifth dimension must be k_hidden_size / num_heads');
      R.pastPresentShareBuffer || (r = j.dims[3]);
    }
    let $ = W + r, m = -1, z = 0;
    if (N) throw new Error("Mask not supported");
    if (j) throw new Error("past is not supported");
    if (h) {
      if (h.dims.length !== 4) throw new Error('Input "attention_bias" must have 4 dimensions');
      if (h.dims[0] !== l || h.dims[1] !== R.numHeads || h.dims[2] !== k || h.dims[3] !== $) throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)');
    }
    return { batchSize: l, sequenceLength: k, pastSequenceLength: r, kvSequenceLength: W, totalSequenceLength: $, maxSequenceLength: m, inputHiddenSize: q, hiddenSize: d, vHiddenSize: P, headSize: Math.floor(d / R.numHeads), vHeadSize: Math.floor(P / R.numHeads), numHeads: R.numHeads, isUnidirectional: !1, pastPresentShareBuffer: !1, maskFilterValue: R.maskFilterValue, maskType: z, scale: R.scale, broadcastResPosBias: !1, passPastInKv: !1, qkvFormat: 1 };
  }, SU = (B, R, F) => R && B ? `
      let total_sequence_length_input = u32(${R.getByOffset("0")});
      let present_sequence_length = max(total_sequence_length_input, uniforms.past_sequence_length);
      let is_subsequent_prompt: bool = sequence_length > 1 && sequence_length != total_sequence_length_input;
      let is_first_prompt: bool = is_subsequent_prompt == false && sequence_length == total_sequence_length_input;
      total_sequence_length = u32(${B == null ? void 0 : B.getByOffset("batchIdx")}) + 1;
      var past_sequence_length: u32 = 0;
      if (is_first_prompt == false) {
        past_sequence_length = total_sequence_length - sequence_length;
      }
       ` : `
    ${F ? "let past_sequence_length = uniforms.past_sequence_length" : ""};
    let present_sequence_length = total_sequence_length;
    `, SF = (B, R, F, i, s, N, j, h) => {
    let l = xI(j ? 1 : N), k = 64, q = N / l;
    q < k && (k = 32);
    let d = Math.ceil(N / l / k), b = [{ type: 12, data: R }, { type: 12, data: F }, { type: 12, data: i }, { type: 12, data: s }, { type: 12, data: q }, { type: 12, data: d }], P = QC(B.dataType, l), W = jC(1, l), r = ["type"];
    j && r.push("type"), h && r.push("type");
    let $ = (m) => {
      let z = qA("x", B.dataType, B.dims, l), IA = [z], M = j ? FA("seq_lens", j.dataType, j.dims) : void 0;
      M && IA.push(M);
      let L = h ? FA("total_sequence_length_input", h.dataType, h.dims) : void 0;
      L && IA.push(L);
      let A = jC(B.dataType), G = [{ name: "batch_size", type: "u32" }, { name: "num_heads", type: "u32" }, { name: "past_sequence_length", type: "u32" }, { name: "sequence_length", type: "u32" }, { name: "total_sequence_length", type: "u32" }, { name: "elements_per_thread", type: "u32" }];
      return `
  var<workgroup> thread_max: array<f32, ${k}>;
  var<workgroup> thread_sum: array<f32, ${k}>;
  ${m.registerUniforms(G).declareVariables(...IA)}
  ${m.mainStart([k, 1, 1])}
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let sequence_length = uniforms.sequence_length;
    var total_sequence_length = uniforms.total_sequence_length;
    ${SU(M, L, !1)}
    let local_offset = local_idx * uniforms.elements_per_thread;
    let offset = (global_idx / ${k}) * uniforms.total_sequence_length + local_offset;
    let seq_causal_length = ${j ? "u32(past_sequence_length + workgroup_id.y + 1)" : "total_sequence_length"};
    var thread_max_vector = ${W}(-3.402823e+38f);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      thread_max_vector = max(${W}(x[offset + i]), thread_max_vector);
    }
    thread_max[local_idx] = ${(() => {
        switch (l) {
          case 1:
            return "thread_max_vector";
          case 2:
            return "max(thread_max_vector.x, thread_max_vector.y)";
          case 4:
            return "max(max(thread_max_vector.x, thread_max_vector.y), max(thread_max_vector.z, thread_max_vector.w))";
          default:
            throw new Error(`Unsupported components: ${l}`);
        }
      })()};
    workgroupBarrier();

    var max_value =  f32(-3.402823e+38f);
    for (var i = 0u; i < ${k}; i++) {
      max_value = max(thread_max[i], max_value);
    }

    var sum_vector = ${W}(0);
    for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
      sum_vector += exp(${W}(x[offset + i]) - max_value);
    }
    thread_sum[local_idx] = ${(() => {
        switch (l) {
          case 1:
            return "sum_vector";
          case 2:
            return "sum_vector.x + sum_vector.y";
          case 4:
            return "sum_vector.x + sum_vector.y + sum_vector.z + sum_vector.w";
          default:
            throw new Error(`Unsupported components: ${l}`);
        }
      })()};
    workgroupBarrier();

    var sum: f32 = 0;
    for (var i = 0u; i < ${k}; i++) {
      sum += thread_sum[i];
    }

    if (sum == 0) {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        x[offset + i] = ${z.type.value}(${A}(1.0) / ${A}(seq_causal_length));
      }
    } else {
      for (var i: u32 = 0; i < uniforms.elements_per_thread && i + local_offset < seq_causal_length; i++) {
        var f32input = ${W}(x[offset + i]);
        x[offset + i] = ${z.type.value}(exp(f32input - max_value) / sum);
      }
    }
      ${j ? `
        for (var total_seq_id: u32 = seq_causal_length; total_seq_id + local_offset < uniforms.total_sequence_length; total_seq_id++) {
          x[offset + total_seq_id] = ${z.type.value}(${A}(0));
        }` : ""};
  }`;
    };
    return { name: "AttentionProbsSoftmax", shaderCache: { hint: `${k};${P};${l}`, inputDependencies: r }, getShaderSource: $, getRunData: () => ({ outputs: [], dispatchGroup: { x: 1, y: s, z: R * F }, programUniforms: b }) };
  }, hF = (B, R, F, i, s, N, j, h, l) => {
    let k = j + N.kvSequenceLength, q = [N.batchSize, N.numHeads, N.sequenceLength, k], d = B > 1 && i, b = N.kvNumHeads ? N.kvNumHeads : N.numHeads, P = d ? [N.batchSize, b, k, N.headSize] : void 0, W = N.nReps ? N.nReps : 1, r = N.scale === 0 ? 1 / Math.sqrt(N.headSize) : N.scale, $ = xI(N.headSize), m = N.headSize / $, z = 12, IA = { x: Math.ceil(k / z), y: Math.ceil(N.sequenceLength / z), z: N.batchSize * N.numHeads }, M = [{ type: 12, data: N.sequenceLength }, { type: 12, data: m }, { type: 12, data: k }, { type: 12, data: N.numHeads }, { type: 12, data: N.headSize }, { type: 1, data: r }, { type: 12, data: j }, { type: 12, data: N.kvSequenceLength }, { type: 12, data: W }], L = d && i && RA.size(i.dims) > 0, A = ["type", "type"];
    L && A.push("type"), s && A.push("type"), h && A.push("type"), l && A.push("type");
    let G = [{ dims: q, dataType: R.dataType, gpuDataType: 0 }];
    d && G.push({ dims: P, dataType: R.dataType, gpuDataType: 0 });
    let a = (UA) => {
      let H = FA("q", R.dataType, R.dims, $), T = FA("key", F.dataType, F.dims, $), cA = [H, T];
      if (L) {
        let PA = FA("past_key", i.dataType, i.dims, $);
        cA.push(PA);
      }
      s && cA.push(FA("attention_bias", s.dataType, s.dims));
      let GA = h ? FA("seq_lens", h.dataType, h.dims) : void 0;
      GA && cA.push(GA);
      let aA = l ? FA("total_sequence_length_input", l.dataType, l.dims) : void 0;
      aA && cA.push(aA);
      let rA = qA("output", R.dataType, q), lA = [rA];
      d && lA.push(qA("present_key", R.dataType, P, $));
      let vA = jC(1, $), HA = [{ name: "M", type: "u32" }, { name: "K", type: "u32" }, { name: "N", type: "u32" }, { name: "num_heads", type: "u32" }, { name: "head_size", type: "u32" }, { name: "alpha", type: "f32" }, { name: "past_sequence_length", type: "u32" }, { name: "kv_sequence_length", type: "u32" }, { name: "n_reps", type: "u32" }];
      return `
  const TILE_SIZE = ${z}u;

  var<workgroup> tileQ: array<${H.type.storage}, ${z * z}>;
  var<workgroup> tileK: array<${H.type.storage}, ${z * z}>;
  ${UA.registerUniforms(HA).declareVariables(...cA, ...lA)}
  ${UA.mainStart([z, z, 1])}
    // x holds the N and y holds the M
    let headIdx = workgroup_id.z % uniforms.num_heads;
    let kvHeadIdx = ${W === 1 ? "headIdx" : "headIdx / uniforms.n_reps"};
    let kv_num_heads = ${W === 1 ? "uniforms.num_heads" : "uniforms.num_heads / uniforms.n_reps"};
    let batchIdx = workgroup_id.z / uniforms.num_heads;
    let m = workgroup_id.y * TILE_SIZE;
    let n = workgroup_id.x * TILE_SIZE;
    let sequence_length = uniforms.M;
    var total_sequence_length = uniforms.N;
    ${SU(GA, aA, !0)}
    let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx;
    let qOffset = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
    ${L && d ? "let pastKeyOffset = absKvHeadIdx * uniforms.past_sequence_length * uniforms.K;" : ""};
    let kOffset = absKvHeadIdx * uniforms.kv_sequence_length * uniforms.K;
    ${d ? "let presentKeyOffset = absKvHeadIdx * uniforms.N * uniforms.K;" : ""}
    var value = ${vA}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (global_id.y < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = q[qOffset + local_id.y * uniforms.K + w + local_id.x];
      }
      if (n + local_id.y < uniforms.N && w + local_id.x < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
      ${L && d ? `
              if (n + local_id.y < past_sequence_length) {
                tileK[idx] = past_key[pastKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
              } else if (n + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
                tileK[idx] = key[kOffset + (n + local_id.y - past_sequence_length) * uniforms.K + w + local_id.x];
              }` : `
          if (n + local_id.y < uniforms.kv_sequence_length) {
            tileK[idx] = key[kOffset + (n + local_id.y) * uniforms.K + w + local_id.x];
          }`}
      ${d ? `if (n + local_id.y < present_sequence_length) {
        present_key[presentKeyOffset + (n + local_id.y) * uniforms.K + w + local_id.x] = tileK[idx];
      }` : ""}
      }
      workgroupBarrier();

      for (var k: u32 = 0u; k < TILE_SIZE && w+k < uniforms.K; k++) {
          value += ${vA}(tileQ[TILE_SIZE * local_id.y + k] * tileK[TILE_SIZE * local_id.x + k]);
      }

      workgroupBarrier();
    }

    if (global_id.y < uniforms.M && global_id.x < total_sequence_length) {
      let headOffset = workgroup_id.z * uniforms.M * uniforms.N;
      let outputIdx = headOffset + global_id.y * uniforms.N + global_id.x;
      var sum: f32 = ${(() => {
        switch ($) {
          case 1:
            return "value";
          case 2:
            return "value.x + value.y";
          case 4:
            return "value.x + value.y + value.z + value.w";
          default:
            throw new Error(`Unsupported components: ${$}`);
        }
      })()};
        output[outputIdx] = ${rA.type.value} (sum * uniforms.alpha) + ${s ? "attention_bias[outputIdx]" : "0.0"};
    }
  }`;
    };
    return { name: "AttentionProbs", shaderCache: { hint: `${$};${s !== void 0};${i !== void 0};${B}`, inputDependencies: A }, getRunData: () => ({ outputs: G, dispatchGroup: IA, programUniforms: M }), getShaderSource: a };
  }, LF = (B, R, F, i, s, N, j = void 0, h = void 0) => {
    let l = N + s.kvSequenceLength, k = s.nReps ? s.nReps : 1, q = s.vHiddenSize * k, d = B > 1 && i, b = s.kvNumHeads ? s.kvNumHeads : s.numHeads, P = d ? [s.batchSize, b, l, s.headSize] : void 0, W = [s.batchSize, s.sequenceLength, q], r = 12, $ = { x: Math.ceil(s.vHeadSize / r), y: Math.ceil(s.sequenceLength / r), z: s.batchSize * s.numHeads }, m = [{ type: 12, data: s.sequenceLength }, { type: 12, data: l }, { type: 12, data: s.vHeadSize }, { type: 12, data: s.numHeads }, { type: 12, data: s.headSize }, { type: 12, data: q }, { type: 12, data: N }, { type: 12, data: s.kvSequenceLength }, { type: 12, data: k }], z = d && i && RA.size(i.dims) > 0, IA = ["type", "type"];
    z && IA.push("type"), j && IA.push("type"), h && IA.push("type");
    let M = [{ dims: W, dataType: R.dataType, gpuDataType: 0 }];
    d && M.push({ dims: P, dataType: R.dataType, gpuDataType: 0 });
    let L = (A) => {
      let G = FA("probs", R.dataType, R.dims), a = FA("v", F.dataType, F.dims), UA = [G, a];
      z && UA.push(FA("past_value", i.dataType, i.dims));
      let H = j ? FA("seq_lens", j.dataType, j.dims) : void 0;
      j && UA.push(H);
      let T = h ? FA("total_sequence_length_input", h.dataType, h.dims) : void 0;
      h && UA.push(T);
      let cA = [qA("output", R.dataType, W)];
      d && cA.push(qA("present_value", R.dataType, P));
      let GA = [{ name: "M", type: "u32" }, { name: "K", type: "u32" }, { name: "N", type: "u32" }, { name: "num_heads", type: "u32" }, { name: "head_size", type: "u32" }, { name: "v_hidden_size", type: "u32" }, { name: "past_sequence_length", type: "u32" }, { name: "kv_sequence_length", type: "u32" }, { name: "n_reps", type: "u32" }];
      return `
  const TILE_SIZE = ${r}u;
  var<workgroup> tileQ: array<${G.type.value}, ${r * r}>;
  var<workgroup> tileV: array<${G.type.value}, ${r * r}>;
  ${A.registerUniforms(GA).declareVariables(...UA, ...cA)}
  ${A.mainStart([r, r, 1])}
   let headIdx = workgroup_id.z % uniforms.num_heads;
   let batchIdx = workgroup_id.z / uniforms.num_heads;
   let kvHeadIdx = ${k === 1 ? "headIdx" : "headIdx / uniforms.n_reps"};
   let kv_num_heads = ${k === 1 ? "uniforms.num_heads" : "uniforms.num_heads / uniforms.n_reps"};
   let m = global_id.y;
   let n = global_id.x;
   let sequence_length = uniforms.M;
   var total_sequence_length = uniforms.K;
   ${SU(H, T, !0)}
   let offsetA = workgroup_id.z * uniforms.M * uniforms.K + m * uniforms.K;
   let absKvHeadIdx = batchIdx * kv_num_heads + kvHeadIdx; // kvHeadIdx is relative to the batch
   ${z && d ? "let pastValueOffset = absKvHeadIdx * uniforms.N * uniforms.past_sequence_length + n;" : ""};
   let vOffset = absKvHeadIdx * uniforms.N * uniforms.kv_sequence_length + n;
   ${d ? "let presentValueOffset = absKvHeadIdx * uniforms.N * uniforms.K + n;" : ""}
   var value = ${G.type.storage}(0);
   for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileQ[TILE_SIZE * local_id.y + local_id.x] = probs[offsetA + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        var idx = TILE_SIZE * local_id.y + local_id.x;
        ${z && d ? `
        if (w + local_id.y < past_sequence_length) {
          tileV[idx] = past_value[pastValueOffset + (w + local_id.y) * uniforms.N];
        } else if (w + local_id.y - past_sequence_length < uniforms.kv_sequence_length) {
          tileV[idx] = v[vOffset + (w + local_id.y - past_sequence_length) * uniforms.N];
        }
      ` : `
            if (w + local_id.y < uniforms.kv_sequence_length) {
              tileV[idx] = v[vOffset + (w + local_id.y) * uniforms.N];
            }`}
        ${d ? `
            if (w + local_id.y < present_sequence_length) {
          present_value[presentValueOffset + (w + local_id.y) * uniforms.N] = tileV[idx];
        }` : ""}
      }
     workgroupBarrier();
     for (var k: u32 = 0u; k < TILE_SIZE && w+k < total_sequence_length; k++) {
       value += tileQ[TILE_SIZE * local_id.y + k] * tileV[TILE_SIZE * k + local_id.x];
     }
     workgroupBarrier();
   }

   // we need to transpose output from BNSH_v to BSND_v
   if (m < uniforms.M && n < uniforms.N) {
     let outputIdx = batchIdx * uniforms.M * uniforms.v_hidden_size + m * uniforms.v_hidden_size
       + headIdx * uniforms.N + n;
     output[outputIdx] = value;
   }
  }`;
    };
    return { name: "AttentionScore", shaderCache: { hint: `${i !== void 0};${B}`, inputDependencies: IA }, getRunData: () => ({ outputs: M, dispatchGroup: $, programUniforms: m }), getShaderSource: L };
  }, VE = (B, R, F, i, s, N, j, h, l, k, q = void 0, d = void 0) => {
    let b = Math.min(B.outputCount, 1 + (j ? 1 : 0) + (h ? 1 : 0)), P = b > 1 ? k.pastSequenceLength : 0, W = P + k.kvSequenceLength, r = l && RA.size(l.dims) > 0 ? l : void 0, $ = [R, F];
    b > 1 && j && RA.size(j.dims) > 0 && $.push(j), r && $.push(r), q && $.push(q), d && $.push(d);
    let m = B.compute(hF(b, R, F, j, r, k, P, q, d), { inputs: $, outputs: b > 1 ? [-1, 1] : [-1] })[0];
    B.compute(SF(m, k.batchSize, k.numHeads, P, k.sequenceLength, W, q, d), { inputs: q && d ? [m, q, d] : [m], outputs: [] });
    let z = [m, i];
    b > 1 && h && RA.size(h.dims) > 0 && z.push(h), q && z.push(q), d && z.push(d), B.compute(LF(b, m, i, h, k, P, q, d), { inputs: z, outputs: b > 1 ? [0, 2] : [0] });
  }, YF = (B, R) => {
    let F = [R.batchSize, R.numHeads, R.sequenceLength, R.headSize], i = R.sequenceLength, s = R.inputHiddenSize, N = R.headSize, j = 12, h = { x: Math.ceil(R.headSize / j), y: Math.ceil(R.sequenceLength / j), z: R.batchSize * R.numHeads }, l = [B.inputs[0], B.inputs[1], B.inputs[2]], k = [{ type: 12, data: i }, { type: 12, data: s }, { type: 12, data: N }, { type: 12, data: R.numHeads }, { type: 12, data: R.headSize }, { type: 12, data: R.hiddenSize }, { type: 12, data: R.hiddenSize + R.hiddenSize + R.vHiddenSize }], q = (d) => {
      let b = qA("output_q", l[0].dataType, F), P = qA("output_k", l[0].dataType, F), W = qA("output_v", l[0].dataType, F), r = FA("input", l[0].dataType, l[0].dims), $ = FA("weight", l[1].dataType, l[1].dims), m = FA("bias", l[2].dataType, l[2].dims), z = r.type.storage, IA = [{ name: "M", type: "u32" }, { name: "K", type: "u32" }, { name: "N", type: "u32" }, { name: "num_heads", type: "u32" }, { name: "head_size", type: "u32" }, { name: "hidden_size", type: "u32" }, { name: "ldb", type: "u32" }];
      return `
  const TILE_SIZE = ${j}u;
  var<workgroup> tileInput: array<${z}, ${j * j}>;
  var<workgroup> tileWeightQ: array<${z}, ${j * j}>;
  var<workgroup> tileWeightK: array<${z}, ${j * j}>;
  var<workgroup> tileWeightV: array<${z}, ${j * j}>;
  ${d.registerUniforms(IA).declareVariables(r, $, m, b, P, W)}
  ${d.mainStart([j, j, 1])}
    let batchIndex = workgroup_id.z / uniforms.num_heads;
    let headNumber = workgroup_id.z % uniforms.num_heads;
    let m = global_id.y;
    let n = global_id.x;

    let inputOffset = batchIndex * (uniforms.M * uniforms.K) + m * uniforms.K;
    let biasOffsetQ = headNumber * uniforms.head_size;
    let biasOffsetK = uniforms.hidden_size + biasOffsetQ;
    let biasOffsetV = uniforms.hidden_size + biasOffsetK;

    var valueQ = ${z}(0);
    var valueK = ${z}(0);
    var valueV = ${z}(0);
    for (var w: u32 = 0u; w < uniforms.K; w += TILE_SIZE) {
      if (m < uniforms.M && w + local_id.x < uniforms.K) {
        tileInput[TILE_SIZE * local_id.y + local_id.x] = input[inputOffset + w + local_id.x];
      }
      if (n < uniforms.N && w + local_id.y < uniforms.K) {
        let offset = n + (w + local_id.y) * uniforms.ldb;
        tileWeightQ[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetQ + offset];
        tileWeightK[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetK + offset];
        tileWeightV[TILE_SIZE * local_id.y + local_id.x] = weight[biasOffsetV + offset];
      }
      workgroupBarrier();
      for (var k: u32 = 0u; k<TILE_SIZE && w+k < uniforms.K; k++) {
        let inputTileOffset = TILE_SIZE * local_id.y + k;
        let weightTileOffset = TILE_SIZE * k + local_id.x;
        valueQ += tileInput[inputTileOffset] * tileWeightQ[weightTileOffset];
        valueK += tileInput[inputTileOffset] * tileWeightK[weightTileOffset];
        valueV += tileInput[inputTileOffset] * tileWeightV[weightTileOffset];
      }

      workgroupBarrier();
    }

    let headOffset = (m * uniforms.N + n) % uniforms.head_size;
    valueQ += bias[headOffset + biasOffsetQ];
    valueK += bias[headOffset + biasOffsetK];
    valueV += bias[headOffset + biasOffsetV];

    let offset = workgroup_id.z * uniforms.M * uniforms.N;
    if (m < uniforms.M && n < uniforms.N) {
      let outputIdx = offset + m * uniforms.N + n;
      output_q[outputIdx] = valueQ;
      output_k[outputIdx] = valueK;
      output_v[outputIdx] = valueV;
    }
  }`;
    };
    return B.compute({ name: "AttentionPrepare", shaderCache: { inputDependencies: ["type", "type", "type"] }, getRunData: () => ({ outputs: [{ dims: F, dataType: B.inputs[0].dataType, gpuDataType: 0 }, { dims: F, dataType: B.inputs[0].dataType, gpuDataType: 0 }, { dims: F, dataType: B.inputs[0].dataType, gpuDataType: 0 }], dispatchGroup: h, programUniforms: k }), getShaderSource: q }, { inputs: l, outputs: [-1, -1, -1] });
  }, Fi = (B, R) => {
    let F = jF(B.inputs, R), [i, s, N] = YF(B, F);
    return VE(B, i, s, N, B.inputs[4], void 0, void 0, void 0, B.inputs[5], F);
  };
}), KF, lF, kF, Mi, aN = sA(() => {
  FQ(), zA(), $A(), tI(), II(), KF = (B, R) => {
    if (!B || B.length !== 5) throw new Error("BatchNormalization requires 5 inputs");
    let F = (i, s, N) => {
      let j = s.length;
      if (j !== i.length) throw new Error(`${N}: num dimensions != ${j}`);
      s.forEach((h, l) => {
        if (h !== i[l]) throw new Error(`${N}: dim[${l}] do not match`);
      });
    };
    if (B[0].dims.length > 1) {
      let i = R.format === "NHWC" ? R.spatial ? B[0].dims.slice(-1) : B[0].dims.slice(-1).concat(B[0].dims.slice(1, B[0].dims.length - 1)) : B[0].dims.slice(1, R.spatial ? 2 : void 0);
      F(B[1].dims, i, "Invalid input scale"), F(B[2].dims, i, "Invalid input B"), F(B[3].dims, i, "Invalid input mean"), F(B[4].dims, i, "Invalid input var");
    } else F(B[1].dims, [1], "Invalid input scale"), F(B[2].dims, [1], "Invalid input B"), F(B[3].dims, [1], "Invalid input mean"), F(B[4].dims, [1], "Invalid input var");
  }, lF = (B, R) => {
    let { epsilon: F, spatial: i, format: s } = R, N = B[0].dims, j = i ? xI(N[N.length - 1]) : 1, h = s === "NHWC" && N.length > 1 ? j : 1, l = RA.size(N) / j, k = i, q = k ? N.length : N, d = FA("x", B[0].dataType, B[0].dims, j), b = FA("scale", B[1].dataType, B[1].dims, h), P = FA("bias", B[2].dataType, B[2].dims, h), W = FA("inputMean", B[3].dataType, B[3].dims, h), r = FA("inputVar", B[4].dataType, B[4].dims, h), $ = qA("y", B[0].dataType, q, j), m = () => {
      let IA = "";
      if (i) IA = `let cOffset = ${N.length === 1 ? "0u" : s === "NHWC" ? `outputIndices[${N.length - 1}] / ${j}` : "outputIndices[1]"};`;
      else if (s === "NCHW") IA = `
            ${$.indicesSet("outputIndices", "0", "0")}
            let cOffset = ${$.indicesToOffset("outputIndices")};`;
      else {
        IA = `var cIndices = ${b.type.indices}(0);
                       cIndices[0] = outputIndices[${N.length - 1}];`;
        for (let M = 1; M < b.rank; M++) IA += `cIndices[${M}] = outputIndices[${M}];`;
        IA += `let cOffset = ${b.indicesToOffset("cIndices")};`;
      }
      return IA;
    }, z = (IA) => `
  const epsilon = ${F};
  ${IA.registerUniform("outputSize", "u32").declareVariables(d, b, P, W, r, $)}
  ${IA.mainStart()}
  ${IA.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
    var outputIndices = ${$.offsetToIndices(`global_idx * ${j}`)};
    ${m()}
    let scale = ${b.getByOffset("cOffset")};
    let bias = ${P.getByOffset("cOffset")};
    let inputMean = ${W.getByOffset("cOffset")};
    let inputVar = ${r.getByOffset("cOffset")};
    let x = ${d.getByOffset("global_idx")};
    let value = (x - inputMean) * inverseSqrt(inputVar + epsilon) * scale + bias;
    ${$.setByOffset("global_idx", "value")}
  }`;
    return { name: "BatchNormalization", shaderCache: { hint: `${R.epsilon}_${R.format}_${i}_${j}`, inputDependencies: k ? ["rank", "type", "type", "type", "type"] : void 0 }, getShaderSource: z, getRunData: () => ({ outputs: [{ dims: B[0].dims, dataType: B[0].dataType }], dispatchGroup: { x: Math.ceil(l / 64) }, programUniforms: k ? [{ type: 12, data: l }, ...TA(N)] : [{ type: 12, data: l }] }) };
  }, kF = (B) => NI(B), Mi = (B, R) => {
    let { inputs: F, outputCount: i } = B, s = kF({ ...R, outputCount: i });
    if (LI.webgpu.validateInputContent && KF(F, s), R.trainingMode) throw new Error("BatchNormalization trainingMode is not supported yet.");
    B.compute(lF(F, s));
  };
}), cF, HF, Gi, ZN = sA(() => {
  $A(), II(), cF = (B) => {
    if (B[0].dims.length !== 3) throw new Error("input should have 3 dimensions");
    if (![320, 640, 1280].includes(B[0].dims[2])) throw new Error("number of channels should be 320, 640 or 1280");
    if (B[1].dims.length !== 1) throw new Error("bias is expected to have 1 dimensions");
    if (B[0].dims[2] !== B[1].dims[0]) throw new Error("last dimension of input and bias are not the same");
  }, HF = (B) => {
    let R = B[0].dims, F = B[0].dims[2], i = RA.size(R) / 4, s = B[0].dataType, N = FA("input", s, R, 4), j = FA("bias", s, [F], 4), h = FA("residual", s, R, 4), l = qA("output", s, R, 4);
    return { name: "BiasAdd", getRunData: () => ({ outputs: [{ dims: R, dataType: B[0].dataType }], dispatchGroup: { x: Math.ceil(i / 64) } }), getShaderSource: (k) => `
  const channels = ${F}u / 4;
  ${k.declareVariables(N, j, h, l)}

  ${k.mainStart()}
    ${k.guardAgainstOutOfBoundsWorkgroupSizes(i)}
    let value = ${N.getByOffset("global_idx")}
      + ${j.getByOffset("global_idx % channels")} + ${h.getByOffset("global_idx")};
    ${l.setByOffset("global_idx", "value")}
  }` };
  }, Gi = (B) => {
    cF(B.inputs), B.compute(HF(B.inputs));
  };
}), aF, GI, Ji, ii, yi, oi, Ni, si, ji, Si, hi, ZF, Li, Yi, Ki, li, HE, ki, HU, ci, Hi, ai, Zi, ni, di, qi, Vi, bi, Ti, xi, Pi, fi, pi, ti, Wi, LR, Oi, Mw, Gw, zi, Xi, ri, nF, dF, mi, Tw = sA(() => {
  zA(), $A(), tI(), II(), aF = (B, R, F, i, s, N, j) => {
    let h = Math.ceil(R / 4), l = "";
    typeof s == "string" ? l = `${s}(a)` : l = s("a");
    let k = FA("inputData", F, [h], 4), q = qA("outputData", i, [h], 4), d = [{ name: "vec_size", type: "u32" }];
    return j && d.push(...j), `
      ${B.registerUniforms(d).declareVariables(k, q)}

  ${N ?? ""}

  ${B.mainStart()}
    ${B.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}

    let a = ${k.getByOffset("global_idx")};
    ${q.setByOffset("global_idx", l)}
  }`;
  }, GI = (B, R, F, i, s, N = B.dataType, j, h) => {
    let l = [{ type: 12, data: Math.ceil(RA.size(B.dims) / 4) }];
    return j && l.push(...j), { name: R, shaderCache: { hint: s, inputDependencies: ["type"] }, getShaderSource: (k) => aF(k, RA.size(B.dims), B.dataType, N, F, i, h), getRunData: (k) => ({ outputs: [{ dims: B.dims, dataType: N }], dispatchGroup: { x: Math.ceil(RA.size(k[0].dims) / 64 / 4) }, programUniforms: l }) };
  }, Ji = (B) => {
    B.compute(GI(B.inputs[0], "Abs", "abs"));
  }, ii = (B) => {
    B.compute(GI(B.inputs[0], "Acos", "acos"));
  }, yi = (B) => {
    B.compute(GI(B.inputs[0], "Acosh", "acosh"));
  }, oi = (B) => {
    B.compute(GI(B.inputs[0], "Asin", "asin"));
  }, Ni = (B) => {
    B.compute(GI(B.inputs[0], "Asinh", "asinh"));
  }, si = (B) => {
    B.compute(GI(B.inputs[0], "Atan", "atan"));
  }, ji = (B) => {
    B.compute(GI(B.inputs[0], "Atanh", "atanh"));
  }, Si = (B) => NI(B), hi = (B, R) => {
    let F;
    switch (R.to) {
      case 10:
        F = "vec4<f16>";
        break;
      case 1:
        F = "vec4<f32>";
        break;
      case 12:
        F = "vec4<u32>";
        break;
      case 6:
        F = "vec4<i32>";
        break;
      case 9:
        F = "vec4<bool>";
        break;
      default:
        throw new RangeError(`not supported type (specified in attribute 'to' from 'Cast' operator): ${R.to}`);
    }
    B.compute(GI(B.inputs[0], "Cast", F, void 0, R.cacheKey, R.to));
  }, ZF = (B) => {
    let R, F, i = B.length >= 2 && B[1].data !== 0, s = B.length >= 3 && B[2].data !== 0;
    switch (B[0].dataType) {
      case 1:
        R = i ? B[1].getFloat32Array()[0] : -34028234663852886e22, F = s ? B[2].getFloat32Array()[0] : 34028234663852886e22;
        break;
      case 10:
        R = i ? B[1].getUint16Array()[0] : 64511, F = s ? B[2].getUint16Array()[0] : 31743;
        break;
      default:
        throw new Error("Unsupport data type");
    }
    return NI({ min: R, max: F });
  }, Li = (B, R) => {
    let F = R || ZF(B.inputs), i = jC(B.inputs[0].dataType);
    B.compute(GI(B.inputs[0], "Clip", (s) => `clamp(${s}, vec4<${i}>(uniforms.min), vec4<${i}>(uniforms.max))`, void 0, F.cacheKey, void 0, [{ type: B.inputs[0].dataType, data: F.min }, { type: B.inputs[0].dataType, data: F.max }], [{ name: "min", type: i }, { name: "max", type: i }]), { inputs: [0] });
  }, Yi = (B) => {
    B.compute(GI(B.inputs[0], "Ceil", "ceil"));
  }, Ki = (B) => {
    B.compute(GI(B.inputs[0], "Cos", "cos"));
  }, li = (B) => {
    B.compute(GI(B.inputs[0], "Cosh", "cosh"));
  }, HE = (B) => NI(B), ki = (B, R) => {
    let F = jC(B.inputs[0].dataType);
    B.compute(GI(B.inputs[0], "Elu", (i) => `elu_vf32(${i})`, `
  const elu_alpha_ = ${F}(${R.alpha});

  fn elu_f32(a: ${F}) -> ${F} {
  return select((exp(a) - 1.0) * elu_alpha_, a, a >= 0.0);
  }

  fn elu_vf32(v: vec4<${F}>) -> vec4<${F}> {
  return vec4(elu_f32(v.x), elu_f32(v.y), elu_f32(v.z), elu_f32(v.w));
  }`, R.cacheKey));
  }, HU = (B = "f32") => `
const r0: ${B} = 0.3275911;
const r1: ${B} = 0.254829592;
const r2: ${B} = -0.284496736;
const r3: ${B} = 1.421413741;
const r4: ${B} = -1.453152027;
const r5: ${B} = 1.061405429;

fn erf_vf32(v: vec4<${B}>) -> vec4<${B}> {
  let absv = abs(v);
  let x = 1.0 / (1.0 + r0 * absv);
  return sign(v) * (1.0 - ((((r5 * x + r4) * x + r3) * x + r2) * x + r1) * x * exp(-absv * absv));
}`, ci = (B) => {
    let R = jC(B.inputs[0].dataType);
    B.compute(GI(B.inputs[0], "Erf", (F) => `erf_vf32(${F})`, HU(R)));
  }, Hi = (B) => {
    B.compute(GI(B.inputs[0], "Exp", "exp"));
  }, ai = (B) => {
    B.compute(GI(B.inputs[0], "Floor", "floor"));
  }, Zi = (B) => {
    let R = jC(B.inputs[0].dataType);
    B.compute(GI(B.inputs[0], "Gelu", (F) => `0.5 * ${F} * (1.0 + erf_vf32(${F} * 0.7071067811865475))`, HU(R)));
  }, ni = (B, R) => {
    let F = jC(B.inputs[0].dataType);
    B.compute(GI(B.inputs[0], "LeakyRelu", (i) => `select(leaky_relu_alpha_ * ${i}, ${i}, ${i} >= vec4<${F}>(0.0))`, `const leaky_relu_alpha_ = ${F}(${R.alpha});`, R.cacheKey));
  }, di = (B) => {
    B.compute(GI(B.inputs[0], "Not", (R) => `!${R}`));
  }, qi = (B) => {
    B.compute(GI(B.inputs[0], "Neg", (R) => `-${R}`));
  }, Vi = (B) => {
    B.compute(GI(B.inputs[0], "Reciprocal", (R) => `1.0/${R}`));
  }, bi = (B) => {
    let R = jC(B.inputs[0].dataType);
    B.compute(GI(B.inputs[0], "Relu", (F) => `select(vec4<${R}>(0.0), ${F}, ${F} > vec4<${R}>(0.0))`));
  }, Ti = (B) => {
    B.compute(GI(B.inputs[0], "Sigmoid", (R) => `(1.0 / (1.0 + exp(-${R})))`));
  }, xi = (B) => NI(B), Pi = (B, R) => {
    let F = jC(B.inputs[0].dataType);
    B.compute(GI(B.inputs[0], "HardSigmoid", (i) => `max(vec4<${F}>(0.0), min(vec4<${F}>(1.0), ${R.alpha} * ${i} + vec4<${F}>(${R.beta})))`, void 0, R.cacheKey));
  }, fi = (B) => {
    B.compute(GI(B.inputs[0], "Sin", "sin"));
  }, pi = (B) => {
    B.compute(GI(B.inputs[0], "Sinh", "sinh"));
  }, ti = (B) => {
    B.compute(GI(B.inputs[0], "Sqrt", "sqrt"));
  }, Wi = (B) => {
    B.compute(GI(B.inputs[0], "Tan", "tan"));
  }, LR = (B) => `sign(${B}) * (1 - exp(-2 * abs(${B}))) / (1 + exp(-2 * abs(${B})))`, Oi = (B) => {
    B.compute(GI(B.inputs[0], "Tanh", LR));
  }, Mw = (B = "f32") => `
const fast_gelu_a: ${B} = 0.5;
const fast_gelu_b: ${B} = 0.7978845608028654;
const fast_gelu_c: ${B} = 0.035677408136300125;

fn tanh_v(v: vec4<${B}>) -> vec4<${B}> {
  return ${LR("v")};
}
`, Gw = (B) => `(fast_gelu_a + fast_gelu_a * tanh_v(${B} * (fast_gelu_c * ${B} * ${B} + fast_gelu_b))) * ${B}`, zi = (B) => {
    let R = jC(B.inputs[0].dataType);
    B.compute(GI(B.inputs[0], "FastGelu", Gw, Mw(R), void 0, B.inputs[0].dataType));
  }, Xi = (B, R) => {
    let F = jC(B.inputs[0].dataType);
    return B.compute(GI(B.inputs[0], "ThresholdedRelu", (i) => `select(vec4<${F}>(0.0), ${i}, ${i} > thresholded_relu_alpha_)`, `const thresholded_relu_alpha_ = vec4<${F}>(${R.alpha});`, R.cacheKey)), 0;
  }, ri = (B) => {
    B.compute(GI(B.inputs[0], "Log", "log"));
  }, nF = (B, R) => `
const alpha = vec4<${B}>(${R});
const one = ${B}(1.0);
const zero = ${B}(0.0);

fn quick_gelu_impl(x: vec4<${B}>) -> vec4<${B}> {
  let v = x *alpha;
  var x1 : vec4<${B}>;
  for (var i = 0; i < 4; i = i + 1) {
    if (v[i] >= zero) {
      x1[i] = one / (one + exp(-v[i]));
    } else {
      x1[i] = one - one / (one + exp(v[i]));
    }
  }
  return x * x1;
}
`, dF = (B) => `quick_gelu_impl(${B})`, mi = (B, R) => {
    let F = jC(B.inputs[0].dataType);
    B.compute(GI(B.inputs[0], "QuickGelu", dF, nF(F, R.alpha), R.cacheKey, B.inputs[0].dataType));
  };
}), qF, VF, ei, nN = sA(() => {
  $A(), II(), Tw(), qF = (B) => {
    if (B[0].dims.length !== 3) throw new Error("input should have 3 dimensions");
    if (![2560, 5120, 10240].includes(B[0].dims[2])) throw new Error("hidden state should be 2560, 5120 or 10240");
    if (B[1].dims.length !== 1) throw new Error("bias is expected to have 1 dimensions");
    if (B[0].dims[2] !== B[1].dims[0]) throw new Error("last dimension of input and bias are not the same");
  }, VF = (B) => {
    let R = B[0].dims.slice();
    R[2] = R[2] / 2;
    let F = FA("input", B[0].dataType, B[0].dims, 4), i = FA("bias", B[0].dataType, [B[0].dims[2]], 4), s = qA("output", B[0].dataType, R, 4), N = RA.size(R) / 4, j = QC(B[0].dataType);
    return { name: "BiasSplitGelu", getRunData: () => ({ outputs: [{ dims: R, dataType: B[0].dataType }], dispatchGroup: { x: Math.ceil(N / 64) } }), getShaderSource: (h) => `
  const M_SQRT2 = sqrt(2.0);
  const halfChannels = ${B[0].dims[2] / 4 / 2}u;

  ${h.declareVariables(F, i, s)}

  ${HU(j)}

  ${h.mainStart()}
    ${h.guardAgainstOutOfBoundsWorkgroupSizes(N)}
    let biasIdx = global_idx % halfChannels;
    let batchIndex = global_idx / halfChannels;
    let inputOffset = biasIdx + batchIndex * halfChannels * 2;
    let valueLeft = input[inputOffset] + bias[biasIdx];
    let valueRight = input[inputOffset + halfChannels] + bias[biasIdx + halfChannels];
    let geluRight = valueRight * 0.5 * (erf_vf32(valueRight / M_SQRT2) + 1);

    ${s.setByOffset("global_idx", "valueLeft * geluRight")}
  }` };
  }, ei = (B) => {
    qF(B.inputs), B.compute(VF(B.inputs));
  };
}), bF, TF, RQ, vi, ui, _i, $i, Ay, Iy, Cy, Qy, gy, By, dN = sA(() => {
  zA(), $A(), II(), bF = (B, R, F, i, s, N, j, h, l, k, q, d) => {
    let b, P;
    typeof h == "string" ? b = P = (z, IA) => `${h}((${z}),(${IA}))` : typeof h == "function" ? b = P = h : (b = h.scalar, P = h.vector);
    let W = qA("outputData", q, i.length, 4), r = FA("aData", l, R.length, 4), $ = FA("bData", k, F.length, 4), m;
    if (s) if (N) {
      let z = RA.size(R) === 1, IA = RA.size(F) === 1, M = R.length > 0 && R[R.length - 1] % 4 === 0, L = F.length > 0 && F[F.length - 1] % 4 === 0;
      z || IA ? m = W.setByOffset("global_idx", P(z ? `${r.type.value}(${r.getByOffset("0")}.x)` : r.getByOffset("global_idx"), IA ? `${$.type.value}(${$.getByOffset("0")}.x)` : $.getByOffset("global_idx"))) : m = `
            let outputIndices = ${W.offsetToIndices("global_idx * 4u")};
            let offsetA = ${r.broadcastedIndicesToOffset("outputIndices", W)};
            let offsetB = ${$.broadcastedIndicesToOffset("outputIndices", W)};
            ${W.setByOffset("global_idx", P(j || M ? r.getByOffset("offsetA / 4u") : `${r.type.value}(${r.getByOffset("offsetA / 4u")}[offsetA % 4u])`, j || L ? $.getByOffset("offsetB / 4u") : `${$.type.value}(${$.getByOffset("offsetB / 4u")}[offsetB % 4u])`))}
          `;
    } else m = W.setByOffset("global_idx", P(r.getByOffset("global_idx"), $.getByOffset("global_idx")));
    else {
      if (!N) throw new Error("no necessary to use scalar implementation for element-wise binary op implementation.");
      let z = (IA, M, L = "") => {
        let A = `aData[indexA${M}][componentA${M}]`, G = `bData[indexB${M}][componentB${M}]`;
        return `
            let outputIndices${M} = ${W.offsetToIndices(`global_idx * 4u + ${M}u`)};
            let offsetA${M} = ${r.broadcastedIndicesToOffset(`outputIndices${M}`, W)};
            let offsetB${M} = ${$.broadcastedIndicesToOffset(`outputIndices${M}`, W)};
            let indexA${M} = offsetA${M} / 4u;
            let indexB${M} = offsetB${M} / 4u;
            let componentA${M} = offsetA${M} % 4u;
            let componentB${M} = offsetB${M} % 4u;
            ${IA}[${M}] = ${L}(${b(A, G)});
          `;
      };
      q === 9 ? m = `
            var data = vec4<u32>(0);
            ${z("data", 0, "u32")}
            ${z("data", 1, "u32")}
            ${z("data", 2, "u32")}
            ${z("data", 3, "u32")}
            outputData[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));` : m = `
            ${z("outputData[global_idx]", 0)}
            ${z("outputData[global_idx]", 1)}
            ${z("outputData[global_idx]", 2)}
            ${z("outputData[global_idx]", 3)}
          `;
    }
    return `
        ${B.registerUniform("vec_size", "u32").declareVariables(r, $, W)}

        ${d ?? ""}

        ${B.mainStart()}
        ${B.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${m}
      }`;
  }, TF = (B, R, F, i, s, N, j = F.dataType) => {
    let h = F.dims.map((r) => Number(r) ?? 1), l = i.dims.map((r) => Number(r) ?? 1), k = !RA.areEqual(h, l), q = h, d = RA.size(h), b = !1, P = !1, W = [k];
    if (k) {
      let r = cB.calcShape(h, l, !1);
      if (!r) throw new Error("Can't perform binary op on the given tensors");
      q = r.slice(), d = RA.size(q);
      let $ = RA.size(h) === 1, m = RA.size(l) === 1, z = h.length > 0 && h[h.length - 1] % 4 === 0, IA = l.length > 0 && l[l.length - 1] % 4 === 0;
      W.push($), W.push(m), W.push(z), W.push(IA);
      let M = 1;
      for (let L = 1; L < q.length; L++) {
        let A = h[h.length - L], G = l[l.length - L];
        if (A === G) M *= A;
        else break;
      }
      M % 4 === 0 ? (P = !0, b = !0) : ($ || m || z || IA) && (b = !0);
    } else b = !0;
    return W.push(b), { name: B, shaderCache: { hint: R + W.map((r) => r.toString()).join("_"), inputDependencies: ["rank", "rank"] }, getShaderSource: (r) => bF(r, h, l, q, b, k, P, s, F.dataType, i.dataType, j, N), getRunData: () => ({ outputs: [{ dims: q, dataType: j }], dispatchGroup: { x: Math.ceil(d / 64 / 4) }, programUniforms: [{ type: 12, data: Math.ceil(RA.size(q) / 4) }, ...TA(h, l, q)] }) };
  }, RQ = (B, R, F, i, s, N) => {
    B.compute(TF(R, s ?? "", B.inputs[0], B.inputs[1], F, i, N));
  }, vi = (B) => {
    RQ(B, "Add", (R, F) => `${R}+${F}`);
  }, ui = (B) => {
    RQ(B, "Div", (R, F) => `${R}/${F}`);
  }, _i = (B) => {
    RQ(B, "Equal", { scalar: (R, F) => `u32(${R}==${F})`, vector: (R, F) => `vec4<u32>(${R}==${F})` }, void 0, void 0, 9);
  }, $i = (B) => {
    RQ(B, "Mul", (R, F) => `${R}*${F}`);
  }, Ay = (B) => {
    let R = FA("input", B.inputs[0].dataType, B.inputs[0].dims).type.value;
    RQ(B, "Pow", { scalar: (F, i) => `pow_custom(${F},${i})`, vector: (F, i) => `pow_vector_custom(${F},${i})` }, `
    fn pow_custom(a : ${R}, b : ${R}) -> ${R} {
      if (b == ${R}(0.0)) {
        return ${R}(1.0);
      } else if (a < ${R}(0.0) && f32(b) != floor(f32(b))) {
        return ${R}(pow(f32(a), f32(b))); // NaN
      }
      return select(sign(a), ${R}(1.0), round(f32(abs(b) % ${R}(2.0))) != 1.0) * ${R}(${R === "i32" ? "round" : ""}(pow(f32(abs(a)), f32(b))));
    }
    fn pow_vector_custom(a : vec4<${R}>, b : vec4<${R}>) -> vec4<${R}> {
      // TODO: implement vectorized pow
      return vec4<${R}>(pow_custom(a.x, b.x), pow_custom(a.y, b.y), pow_custom(a.z, b.z), pow_custom(a.w, b.w));
    }
      `);
  }, Iy = (B) => {
    RQ(B, "Sub", (R, F) => `${R}-${F}`);
  }, Cy = (B) => {
    RQ(B, "Greater", { scalar: (R, F) => `u32(${R}>${F})`, vector: (R, F) => `vec4<u32>(${R}>${F})` }, void 0, void 0, 9);
  }, Qy = (B) => {
    RQ(B, "Less", { scalar: (R, F) => `u32(${R}<${F})`, vector: (R, F) => `vec4<u32>(${R}<${F})` }, void 0, void 0, 9);
  }, gy = (B) => {
    RQ(B, "GreaterOrEqual", { scalar: (R, F) => `u32(${R}>=${F})`, vector: (R, F) => `vec4<u32>(${R}>=${F})` }, void 0, void 0, 9);
  }, By = (B) => {
    RQ(B, "LessOrEqual", { scalar: (R, F) => `u32(${R}<=${F})`, vector: (R, F) => `vec4<u32>(${R}<=${F})` }, void 0, void 0, 9);
  };
}), xF, PF, fF, pF, Ey, Uy, qN = sA(() => {
  zA(), $A(), tI(), II(), xF = (B, R) => {
    if (!B || B.length < 1) throw new Error("too few inputs");
    let F = 0, i = B[F], s = i.dataType, N = i.dims.length;
    B.forEach((j, h) => {
      if (h !== F) {
        if (j.dataType !== s) throw new Error("input tensors should be one type");
        if (j.dims.length !== N) throw new Error("input tensors should have the same shape");
        j.dims.forEach((l, k) => {
          if (k !== R && l !== i.dims[k]) throw new Error("non concat dimensions must match");
        });
      }
    });
  }, PF = (B, R) => `
  fn calculateInputIndex(index: u32) -> u32 {
    let sizeInConcatAxis = array<u32, ${B}u>(${R});
    for (var i: u32 = 0u; i < ${B}; i += 1u ) {
      if (index < sizeInConcatAxis[i]) {
        return i;
      }
    }
    return ${B}u;
  }`, fF = (B, R) => {
    let F = B.length, i = [];
    for (let s = 0; s < F; ++s) {
      let N = R.setByOffset("global_idx", B[s].getByIndices("indices"));
      F === 1 ? i.push(N) : s === 0 ? i.push(`if (inputIndex == ${s}u) { ${N} }`) : s === F - 1 ? i.push(`else { ${N} }`) : i.push(`else if (inputIndex == ${s}) { ${N} }`);
    }
    return i.join(`
`);
  }, pF = (B, R, F, i) => {
    let s = RA.size(F), N = new Array(B.length), j = new Array(B.length), h = 0, l = [], k = [], q = [{ type: 12, data: s }];
    for (let r = 0; r < B.length; ++r) h += B[r].dims[R], N[r] = h, k.push(B[r].dims.length), j[r] = FA(`input${r}`, i, k[r]), l.push("rank"), q.push({ type: 12, data: N[r] });
    for (let r = 0; r < B.length; ++r) q.push(...TA(B[r].dims));
    q.push(...TA(F));
    let d = qA("output", i, F.length), b = d.indicesGet("indices", R), P = Array.from(Array(N.length).keys()).map((r) => `uniforms.sizeInConcatAxis${r}`).join(","), W = (r) => `

  ${(() => {
      r.registerUniform("outputSize", "u32");
      for (let $ = 0; $ < B.length; $++) r.registerUniform(`sizeInConcatAxis${$}`, "u32");
      return r.declareVariables(...j, d);
    })()}

  ${PF(N.length, P)}

  ${r.mainStart()}
    ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

    var indices = ${d.offsetToIndices("global_idx")};

    let inputIndex = calculateInputIndex(${b});
    if (inputIndex != 0u) {
      let sizeInConcatAxis = array<u32, ${N.length}u>(${P});
      ${b} -= sizeInConcatAxis[inputIndex - 1u];
    }

    ${fF(j, d)}
  }`;
    return { name: "Concat", shaderCache: { hint: `${R}`, inputDependencies: l }, getRunData: () => ({ outputs: [{ dims: F, dataType: i }], dispatchGroup: { x: Math.ceil(s / 64) }, programUniforms: q }), getShaderSource: W };
  }, Ey = (B, R) => {
    let F = B.inputs, i = F[0].dims, s = RA.normalizeAxis(R.axis, i.length);
    xF(F, s);
    let N = i.slice();
    N[s] = F.reduce((h, l) => h + (l.dims.length > s ? l.dims[s] : 0), 0);
    let j = F.filter((h) => RA.size(h.dims) > 0);
    B.compute(pF(j, s, N, F[0].dataType), { inputs: j });
  }, Uy = (B) => NI({ axis: B.axis });
}), xg, Pg, fg, xw, tg = sA(() => {
  zA(), $A(), xg = (B, R, F = "f32") => {
    switch (B.activation) {
      case "Relu":
        return `value = max(value, ${R}(0.0));`;
      case "Sigmoid":
        return `value = (${R}(1.0) / (${R}(1.0) + exp(-value)));`;
      case "Clip":
        return `value = clamp(value, ${R}(${F}(uniforms.clip_min)), ${R}(${F}(uniforms.clip_max)));`;
      case "HardSigmoid":
        return `value = max(${R}(0.0), min(${R}(1.0), ${F}(uniforms.alpha) * value + ${F}(uniforms.beta)));`;
      case "LeakyRelu":
        return `value = select(${F}(uniforms.alpha) * value, value, value >= ${R}(0.0));`;
      case "Tanh":
        return `let e2x = exp(-2.0 * abs(value));
              value = sign(value) * (1.0 - e2x) / (1.0 + e2x);
        `;
      case "":
        return "";
      default:
        throw new Error(`Unsupported activation ${B.activation}`);
    }
  }, Pg = (B, R) => {
    B.activation === "Clip" ? R.push({ type: 1, data: B.clipMax }, { type: 1, data: B.clipMin }) : B.activation === "HardSigmoid" ? R.push({ type: 1, data: B.alpha }, { type: 1, data: B.beta }) : B.activation === "LeakyRelu" && R.push({ type: 1, data: B.alpha });
  }, fg = (B, R) => {
    B.activation === "Clip" ? R.push({ name: "clip_max", type: "f32" }, { name: "clip_min", type: "f32" }) : B.activation === "HardSigmoid" ? R.push({ name: "alpha", type: "f32" }, { name: "beta", type: "f32" }) : B.activation === "LeakyRelu" && R.push({ name: "alpha", type: "f32" });
  }, xw = (B) => {
    let R = (B == null ? void 0 : B.activation) || "";
    if (R === "HardSigmoid") {
      let [F, i] = (B == null ? void 0 : B.activation_params) || [0.2, 0.5];
      return { activation: R, alpha: F, beta: i };
    } else if (R === "Clip") {
      let [F, i] = (B == null ? void 0 : B.activation_params) || [dJ, qJ];
      return { activation: R, clipMax: i, clipMin: F };
    } else if (R === "LeakyRelu") {
      let [F] = (B == null ? void 0 : B.activation_params) || [0.01];
      return { activation: R, alpha: F };
    }
    return { activation: R };
  };
}), wC, Ry, Pw = sA(() => {
  wC = (B, R) => {
    switch (B) {
      case 1:
        return R;
      case 2:
        return `vec2<${R}>`;
      case 3:
        return `vec3<${R}>`;
      case 4:
        return `vec4<${R}>`;
      default:
        throw new Error(`${B}-component is not supported.`);
    }
  }, Ry = (B) => `
      ${B ? "value = value + getBiasByOutputCoords(coords);" : ""}
      `;
}), wy, VN = sA(() => {
  wy = (B) => `
fn getIndexFromCoords4D(coords : vec4<i32>, shape : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
      shape.y * shape.z * shape.w, shape.z * shape.w, shape.w, 1));
}
fn getOutputIndexFromCoords(coords : vec4<i32>) -> i32 {
  return dot(coords, vec4<i32>(
    i32(${B}.x), i32(${B}.y), i32(${B}.z), 1));
}
`;
}), ZE, fw, pw = sA(() => {
  zA(), $A(), II(), tg(), ZE = (B, R, F, i, s) => {
    let N = i - F;
    return `
      ${Array.from({ length: F }).map((j, h) => `
      if (${VA(R.shape, h, R.rank)} != 1) {
        ${R.indicesSet(B, h, VA(s, h + N, i))}
      } else {
        ${R.indicesSet(B, h, 0)}
      }`).join("")}
`;
  }, fw = (B, R, F, i, s = !1, N) => {
    let j = B[0].dims, h = B[1].dims, l = j[j.length - 2], k = h[h.length - 1], q = j[j.length - 1], d = xI(k), b = xI(q), P = xI(l), W = RA.size(F) / d / P, r = B.length > 2, $ = i ? i.slice(0, -2) : F.slice(0, -2), m = [RA.size($), l, k], z = [{ type: 12, data: W }, { type: 12, data: l }, { type: 12, data: k }, { type: 12, data: q }];
    Pg(R, z), z.push(...TA($, j, h)), r && z.push(...TA(B[2].dims)), z.push(...TA(m));
    let IA = (M) => {
      let L = qw("batch_dims", B[0].dataType, $.length), A = FA("a", B[0].dataType, j.length, b), G = FA("b", B[1].dataType, h.length, d), a = qA("output", B[0].dataType, m.length, d), UA = QC(a.type.tensor), H = xg(R, a.type.value, UA), T = [A, G], cA = "";
      if (r) {
        let rA = s ? d : 1;
        T.push(FA("bias", B[2].dataType, B[2].dims.length, rA)), cA = `${s ? `value += bias[col / ${rA}];` : `value += ${a.type.value}(bias[row + i]);`}`;
      }
      let GA = [{ name: "output_size", type: "u32" }, { name: "M", type: "u32" }, { name: "N", type: "u32" }, { name: "K", type: "u32" }];
      fg(R, GA);
      let aA = () => {
        let rA = `var a_data: ${A.type.value};`;
        for (let lA = 0; lA < b; lA++) rA += `
              let b_data${lA} = b[(b_offset + (k + ${lA}) * uniforms.N + col) / ${d}];`;
        for (let lA = 0; lA < P; lA++) {
          rA += `a_data = a[(a_offset + (row + ${lA}) * uniforms.K + k) / ${b}];`;
          for (let vA = 0; vA < b; vA++) rA += `
            values[${lA}] = fma(${G.type.value}(a_data${b === 1 ? "" : `[${vA}]`}), b_data${vA}, values[${lA}]);
`;
        }
        return rA;
      };
      return `
  ${M.registerUniforms(GA).registerInternalVariables(L).declareVariables(...T, a)}
  ${M.mainStart()}
    ${M.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let col = (global_idx % (uniforms.N / ${d})) * ${d};
    var index1 = global_idx / (uniforms.N / ${d});
    let stride1 = uniforms.M / ${P};
    let row = (index1 % stride1) * ${P};
    let batch = index1 / stride1;

    ${F.length === 2 ? "" : `let batch_indices = ${L.offsetToIndices("batch")};`}

    var a_indices: ${A.type.indices};
    ${ZE("a_indices", A, A.rank - 2, L.rank, "batch_indices")}
    ${A.indicesSet("a_indices", A.rank - 2, 0)}
    ${A.indicesSet("a_indices", A.rank - 1, 0)}
    let a_offset = ${A.indicesToOffset("a_indices")};

    var b_indices: ${G.type.indices};
    ${ZE("b_indices", G, G.rank - 2, L.rank, "batch_indices")}
    ${G.indicesSet("b_indices", G.rank - 2, 0)}
    ${G.indicesSet("b_indices", G.rank - 1, 0)}
    let b_offset = ${G.indicesToOffset("b_indices")};
    var values: array<${a.type.value}, ${P}>;
    for (var k: u32 = 0u; k < uniforms.K; k = k + ${b}) {
      ${aA()}
    }
    for (var i = 0u; i < ${P}u; i++) {
      var value = values[i];
      ${cA}
      ${H}
      let cur_indices = ${a.type.indices}(batch, row + i, col);
      let offset = ${a.indicesToOffset("cur_indices")};
      ${a.setByOffset(`offset / ${d}`, "value")};
    }
  }
  `;
    };
    return { name: "MatMulNaive", shaderCache: { hint: `${R.activation};${d};${b};${P};${s}`, inputDependencies: r ? ["rank", "rank", "rank"] : ["rank", "rank"] }, getRunData: () => ({ outputs: [{ dims: N ? N(F) : F, dataType: B[0].dataType }], dispatchGroup: { x: Math.ceil(W / 64) }, programUniforms: z }), getShaderSource: IA };
  };
}), tF, WF, Jw, YR, OF, iw, zF, bU, tw = sA(() => {
  zA(), $A(), II(), tg(), pw(), Pw(), tF = (B, R) => B ? `
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          kStart + inputRow,
          globalRowStart / innerElementSize + inputCol${R ? ", batchIndices" : ""});
        ` : `
        mm_Asub[inputRow][inputCol] = mm_readA(batch,
          globalRow + innerRow,
          kStart / innerElementSize + inputCol${R ? ", batchIndices" : ""});
        `, WF = (B, R) => B ? `
        let ACached0 = mm_Asub[k * innerElementSize][localRow];
        let ACached1 = mm_Asub[k * innerElementSize + 1][localRow];
        let ACached2 = mm_Asub[k * innerElementSize + 2][localRow];
        ${R === 3 ? "" : "let ACached3 = mm_Asub[k * innerElementSize + 3][localRow];"}
        for (var i = 0; i < rowPerThread; i = i + 1) {
          acc[i] = BCached0 * ACached0[i] + acc[i];
          acc[i] = BCached1 * ACached1[i] + acc[i];
          acc[i] = BCached2 * ACached2[i] + acc[i];
          ${R === 3 ? "" : "acc[i] = BCached3 * ACached3[i] + acc[i];"}
        }` : `
        for (var i = 0; i < rowPerThread; i = i + 1) {
          let ACached = mm_Asub[tileRow + i][k];
          acc[i] = BCached0 * ACached.x + acc[i];
          acc[i] = BCached1 * ACached.y + acc[i];
          acc[i] = BCached2 * ACached.z + acc[i];
          ${R === 3 ? "" : "acc[i] = BCached3 * ACached.w + acc[i];"}
        }`, Jw = (B, R, F = "f32", i, s = !1, N = 32, j = !1, h = 32) => {
    let l = R[1] * B[1], k = R[0] * B[0], q = s ? l : N, d = s ? N : l, b = q / R[0], P = N / R[1];
    if (!((s && b === 4 && B[1] === 4 || !s && (b === 3 || b === 4)) && q % R[0] === 0 && N % R[1] === 0 && B[0] === 4)) throw new Error(`If transposeA ${s} is true, innerElementSize ${b} and workPerThread[1] ${B[1]} must be 4.
      Otherwise, innerElementSize ${b} must be 3 or 4.
  tileAWidth ${q} must be divisible by workgroupSize[0]${R[0]}. tileInner ${N} must be divisible by workgroupSize[1] ${R[1]}. colPerThread ${B[0]} must be 4.`);
    return `
var<workgroup> mm_Asub: array<array<vec${b}<${F}>, ${q / b}>, ${d}>;
var<workgroup> mm_Bsub: array<array<vec4<${F}>, ${k / B[0]}>, ${N}>;

const rowPerThread = ${B[1]};
const colPerThread = ${B[0]};
const innerElementSize = ${b};
const tileInner = ${N};

@compute @workgroup_size(${R[0]}, ${R[1]}, ${R[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
  let localRow = i32(localId.y);
  let tileRow = localRow * rowPerThread;
  let tileCol = i32(localId.x);

  let globalRow =i32(globalId.y) * rowPerThread;
  let globalCol = i32(globalId.x);
  let batch = ${j ? "0" : "i32(globalId.z)"};
  ${i ? `let batchIndices = ${i.offsetToIndices("u32(batch)")};` : ""}
  let globalRowStart = i32(workgroupId.y) * ${l};

  let num_tiles = ${j ? `${Math.ceil(h / N)}` : "(uniforms.dim_inner - 1) / tileInner + 1"};
  var kStart = ${j ? `i32(globalId.z) * ${h}` : "0"};

  var acc: array<vec4<${F}>, rowPerThread>;

  // Loop over shared dimension.
  let tileRowB = localRow * ${P};
  for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let inputRow = tileRow + innerRow;
          let inputCol = tileCol;
          ${tF(s, i)}
      }

      // Load one tile of B into local memory.
      for (var innerRow = 0; innerRow < ${P}; innerRow = innerRow + 1) {
          let inputRow = tileRowB + innerRow;
          let inputCol = tileCol;
          mm_Bsub[inputRow][inputCol] = mm_readB(batch, kStart + inputRow, globalCol${i ? ", batchIndices" : ""});
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      for (var k = 0; k < tileInner / innerElementSize; k = k + 1) {
          let BCached0 = mm_Bsub[k * innerElementSize][tileCol];
          let BCached1 = mm_Bsub[k * innerElementSize + 1][tileCol];
          let BCached2 = mm_Bsub[k * innerElementSize + 2][tileCol];
          ${b === 3 ? "" : "let BCached3 = mm_Bsub[k * innerElementSize + 3][tileCol];"}

          ${WF(s, b)}
      }

      workgroupBarrier();
  }

  for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      mm_write(batch, globalRow + innerRow, globalCol, acc[innerRow]);
  }
}`;
  }, YR = (B, R) => B ? `
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              kStart + inputRow,
              globalRowStart + inputCol${R ? ", batchIndices" : ""});
            ` : `
            mm_Asub[inputRow][inputCol] = mm_readA(batch,
              globalRowStart + inputRow,
              kStart + inputCol${R ? ", batchIndices" : ""});
            `, OF = (B) => B ? "let ACached = mm_Asub[k][tileRow + innerRow];" : "let ACached = mm_Asub[tileRow + innerRow][k];", iw = (B, R, F = "f32", i, s = !1, N = 32, j = !1, h = 32, l = !1) => {
    let k = B[1] * R[1], q = B[0] * R[0], d = s ? k : N, b = s ? N : k;
    if (!(b % R[1] === 0 && d % R[0] === 0 && N % R[1] === 0)) throw new Error(`tileAHight ${b} must be divisible by workgroupSize[1]${R[1]}, tileAWidth ${d} must be divisible by workgroupSize[0]${R[0]}, tileInner ${N} must be divisible by workgroupSize[1]${R[1]}`);
    let P = b / R[1], W = d / R[0], r = N / R[1], $ = l ? `
    let localRow = i32(localId.y);
    let localCol = i32(localId.x);
    let globalRowStart = i32(workgroupId.y) * ${k};
    let globalColStart = i32(workgroupId.x) * ${q};

    // Loop over shared dimension.
    for (var t = 0; t < num_tiles; t = t + 1) {
      // Load one tile of A into local memory.
      for (var inputRow = localRow; inputRow < ${b}; inputRow = inputRow + ${R[1]}) {
        for (var inputCol = localCol; inputCol < ${d}; inputCol = inputCol + ${R[0]}) {
          ${YR(s, i)}
        }
      }
      // Load one tile of B into local memory.
      for (var inputRow = localRow; inputRow < ${N}; inputRow = inputRow + ${R[1]}) {
            for (var inputCol = localCol; inputCol < ${q}; inputCol = inputCol + ${R[0]}) {
          mm_Bsub[inputRow][inputCol] = mm_readB(batch,
            kStart + inputRow,
            globalColStart + inputCol${i ? ", batchIndices" : ""});
        }
      }
      kStart = kStart + tileInner;
      workgroupBarrier();

      // Compute acc values for a single thread.
      var BCached : array<${F}, colPerThread>;
      for (var k = 0; k < tileInner; k = k + 1) {
        for (var inner = 0; inner < colPerThread; inner = inner + 1) {
          BCached[inner] = mm_Bsub[k][localCol + inner * ${R[0]}];
        }
        for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
          let ACached = ${s ? `mm_Asub[k][localRow + innerRow * ${R[1]}];` : `mm_Asub[localRow + innerRow * ${R[1]}][k];`}
          for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
            acc[innerRow][innerCol] = acc[innerRow][innerCol] +
                ACached * BCached[innerCol];
          }
        }
      }
      workgroupBarrier();
    }
    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      let gRow = globalRowStart + localRow + innerRow * ${R[1]};
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        let gCol = globalColStart + localCol + innerCol * ${R[0]};
        mm_write(batch, gRow, gCol, acc[innerRow][innerCol]);
      }
    }
    ` : `
let tileRow = i32(localId.y) * rowPerThread;
let tileCol = i32(localId.x) * colPerThread;

let globalRow = i32(globalId.y) * rowPerThread;
let globalCol = i32(globalId.x) * colPerThread;
let globalRowStart = i32(workgroupId.y) * ${k};

let tileRowA = i32(localId.y) * ${P};
let tileColA = i32(localId.x) * ${W};
let tileRowB = i32(localId.y) * ${r};
// Loop over shared dimension.
for (var t = 0; t < num_tiles; t = t + 1) {
  // Load one tile of A into local memory.
  for (var innerRow = 0; innerRow < ${P}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < ${W}; innerCol = innerCol + 1) {
      let inputRow = tileRowA + innerRow;
      let inputCol = tileColA + innerCol;
      ${YR(s, i)}
    }
  }

  // Load one tile of B into local memory.
  for (var innerRow = 0; innerRow < ${r}; innerRow = innerRow + 1) {
    for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
      let inputRow = tileRowB + innerRow;
      let inputCol = tileCol + innerCol;
      mm_Bsub[inputRow][inputCol] = mm_readB(batch,
        kStart + inputRow,
        globalCol + innerCol${i ? ", batchIndices" : ""});
    }
  }
  kStart = kStart + tileInner;
  workgroupBarrier();

  // Compute acc values for a single thread.
  var BCached : array<${F}, colPerThread>;
  for (var k = 0; k < tileInner; k = k + 1) {
    for (var inner = 0; inner < colPerThread; inner = inner + 1) {
      BCached[inner] = mm_Bsub[k][tileCol + inner];
    }

    for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
      ${OF(s)}
      for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
        acc[innerRow][innerCol] = acc[innerRow][innerCol] + ACached * BCached[innerCol];
      }
    }
  }

  workgroupBarrier();
}

for (var innerRow = 0; innerRow < rowPerThread; innerRow = innerRow + 1) {
  for (var innerCol = 0; innerCol < colPerThread; innerCol = innerCol + 1) {
    mm_write(batch, globalRow + innerRow, globalCol + innerCol,
        acc[innerRow][innerCol]);
  }
}
`;
    return `
  var<workgroup> mm_Asub : array<array<${F}, ${d}>, ${b}>;
  var<workgroup> mm_Bsub : array<array<${F}, ${q}>, ${N}>;
  const rowPerThread = ${B[1]};
  const colPerThread = ${B[0]};
  const tileInner = ${N};

@compute @workgroup_size(${R[0]}, ${R[1]}, ${R[2]})
fn main(@builtin(local_invocation_id) localId : vec3<u32>,
        @builtin(global_invocation_id) globalId : vec3<u32>,
        @builtin(workgroup_id) workgroupId : vec3<u32>) {
    let batch = ${j ? "0" : "i32(globalId.z)"};
    ${i ? `let batchIndices = ${i.offsetToIndices("u32(batch)")};` : ""}
    let num_tiles = ${j ? `${Math.ceil(h / N)}` : "(uniforms.dim_inner - 1) / tileInner + 1"};
    var kStart = ${j ? `i32(globalId.z) * ${h}` : "0"};

    var acc : array<array<${F}, colPerThread>, rowPerThread>;
    ${$}
  }
`;
  }, zF = (B, R, F, i, s = !1) => {
    let [N, j, h, l] = i, k = QC(i[0].type.tensor);
    return `
    fn mm_readA(batch: i32, row: i32, colIn: i32, batchIndices: ${N.type.indices}) -> ${wC(B, k)} {
      var value = ${wC(B, k)}(0.0);
      let col = colIn * ${B};
      if(row < uniforms.dim_a_outer && col < uniforms.dim_inner)
      {
        var aIndices: ${j.type.indices};
        ${ZE("aIndices", j, j.rank - 2, N.rank, "batchIndices")}
        ${j.indicesSet("aIndices", j.rank - 2, "u32(row)")}
        ${j.indicesSet("aIndices", j.rank - 1, "u32(colIn)")}
        value = ${j.getByIndices("aIndices")};
      }
      return value;
    }

    fn mm_readB(batch: i32, row: i32, colIn: i32, batchIndices: ${N.type.indices}) -> ${wC(B, k)} {
      var value = ${wC(B, k)}(0.0);
      let col = colIn * ${B};
      if(row < uniforms.dim_inner && col < uniforms.dim_b_outer)
      {
        var bIndices: ${h.type.indices};
        ${ZE("bIndices", h, h.rank - 2, N.rank, "batchIndices")}
        ${h.indicesSet("bIndices", h.rank - 2, "u32(row)")}
        ${h.indicesSet("bIndices", h.rank - 1, "u32(colIn)")}
        value = ${h.getByIndices("bIndices")};
      }
      return value;
    }

    fn mm_write(batch: i32, row: i32, colIn: i32, valueIn: ${wC(B, k)}) {
      let col = colIn * ${B};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer) {
        var value = valueIn;
        let coords = vec3<i32>(batch, row, colIn);
        ${R ? `value = value + ${s ? "bias[colIn]" : `${wC(B, k)}(bias[row])`};` : ""}
        ${F}
        ${l.setByIndices("vec3<u32>(coords)", "value")}
      }
    }
    `;
  }, bU = (B, R, F, i, s = !1, N) => {
    let j = B[0].dims, h = B[1].dims, l = j.slice(0, -2), k = h.slice(0, -2), q = i ? i.slice(0, -2) : F.slice(0, -2), d = RA.size(q), b = j[j.length - 2], P = j[j.length - 1], W = h[h.length - 1], r = P % 4 === 0 && W % 4 === 0, $ = b <= 8 ? [4, 1, 1] : [4, 4, 1], m = [8, 8, 1], z = [Math.ceil(W / m[0] / $[0]), Math.ceil(b / m[1] / $[1]), Math.ceil(d / m[2] / $[2])], IA = r ? 4 : 1, M = [...l, b, P / IA], L = M.length, A = [...k, P, W / IA], G = A.length, a = [d, b, W / IA], UA = [{ type: 6, data: b }, { type: 6, data: W }, { type: 6, data: P }];
    Pg(R, UA), UA.push(...TA(q, M, A));
    let H = ["rank", "rank"], T = B.length > 2;
    T && (UA.push(...TA(B[2].dims)), H.push("rank")), UA.push(...TA(a));
    let cA = (GA) => {
      let aA = q.length, rA = qw("batchDims", B[0].dataType, aA, 1), lA = QC(B[0].dataType), vA = FA("a", B[0].dataType, L, IA), HA = FA("b", B[1].dataType, G, IA), PA = qA("result", B[0].dataType, a.length, IA), YI = [vA, HA];
      if (T) {
        let $I = s ? IA : 1;
        YI.push(FA("bias", B[2].dataType, B[2].dims.length, $I));
      }
      let MA = [{ name: "dim_a_outer", type: "i32" }, { name: "dim_b_outer", type: "i32" }, { name: "dim_inner", type: "i32" }];
      fg(R, MA);
      let jA = QC(PA.type.tensor), LA = xg(R, PA.type.value, jA), XA = zF(IA, T, LA, [rA, vA, HA, PA], s);
      return `
  ${GA.registerUniforms(MA).registerInternalVariables(rA).declareVariables(...YI, PA)}
  ${XA}
  ${r ? Jw($, m, lA, rA) : iw($, m, lA, rA)}
                   `;
    };
    return { name: "MatMul", shaderCache: { hint: `${$};${R.activation};${r};${s}`, inputDependencies: H }, getRunData: () => ({ outputs: [{ dims: N ? N(F) : F, dataType: B[0].dataType }], dispatchGroup: { x: z[0], y: z[1], z: z[2] }, programUniforms: UA }), getShaderSource: cA };
  };
}), XF, Dy, bN = sA(() => {
  zA(), tQ(), II(), tg(), Pw(), VN(), tw(), XF = (B, R, F, i, s = !1, N, j = 4, h = 4, l = 4, k = "f32") => {
    let q = (UA) => {
      switch (UA) {
        case 1:
          return "resData = x[xIndex];";
        case 3:
          return `resData = vec3<${k}>(x[xIndex], x[xIndex + 1], x[xIndex + 2]);`;
        case 4:
          return "resData = x[xIndex / 4];";
        default:
          throw new Error(`innerElementSize ${UA} is not supported.`);
      }
    }, d = (UA) => {
      switch (UA) {
        case 1:
          return "return w[row * i32(uniforms.w_shape[3]) + colIn];";
        case 4:
          return "return w[row * i32(uniforms.w_shape[3]) / 4 + colIn];";
        default:
          throw new Error(`innerElementSize ${UA} is not supported.`);
      }
    }, b = B ? `
    let coord = vec4<i32>(batch, xRow, xCol, xCh);
    ` : `
    let coord = vec4<i32>(batch, xCh, xRow, xCol);
    `, P = B ? `
    let coords = vec4<i32>(
      batch,
      row / outWidth,
      row % outWidth,
      col);
    ` : `
    let coords = vec4<i32>(
      batch,
      row,
      col / outWidth,
      col % outWidth);
    `, W = B ? "i32(uniforms.x_shape[1])" : "i32(uniforms.x_shape[2])", r = B ? "i32(uniforms.x_shape[2])" : "i32(uniforms.x_shape[3])", $ = B ? "row" : "col", m = B ? "col" : "row", z = `
    let inChannels = i32(uniforms.w_shape[2]);
    let outWidth = ${B ? "i32(uniforms.result_shape[2])" : "i32(uniforms.result_shape[3])"};
    let outRow = ${$} / outWidth;
    let outCol = ${$} % outWidth;

    let WRow = ${m} / (i32(uniforms.w_shape[1]) * inChannels);
    let WCol = ${m} / inChannels % i32(uniforms.w_shape[1]);
    let xRow = outRow * uniforms.stride[0] + uniforms.dilation[0] * WRow - uniforms.pad[0];
    let xCol = outCol * uniforms.stride[1] + uniforms.dilation[1] * WCol - uniforms.pad[1];
    let xCh = ${m} % inChannels;
    var resData = ${wC(j, k)}(0.0);
    // The bounds checking is always needed since we use it to pad zero for
    // the 'same' padding type.
    if (xRow >= 0 && xRow < ${W} && xCol >= 0 && xCol < ${r}) {
      ${b}
      let xIndex = getIndexFromCoords4D(coord, vec4<i32>(uniforms.x_shape));
      ${q(j)}
    }
    return resData;`, IA = B ? R && i ? `
    let col = colIn * ${j};
    ${z}` : `
    let col = colIn * ${j};
    if (row < uniforms.dim_a_outer && col < uniforms.dim_inner) {
      ${z}
    }
    return ${wC(j, k)}(0.0);` : i && F ? `
    let col = colIn * ${j};
    ${z}` : `
    let col = colIn * ${j};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${z}
    }
    return ${wC(j, k)}(0.0);`, M = B ? i && F ? d(h) : `
    let col = colIn * ${h};
    if (row < uniforms.dim_inner && col < uniforms.dim_b_outer) {
      ${d(h)}
    }
    return ${wC(h, k)}(0.0);` : `
    let col = colIn * ${h};
    if (row < uniforms.dim_inner && col < uniforms.dim_a_outer) {
      ${d(h)}
    }
    return ${wC(h, k)}(0.0);`, L = wC(l, k), A = wC(B ? j : h, k), G = wC(B ? h : j, k), a = xg(N, L, k);
    return `
    fn mm_readA(batch: i32, row : i32, colIn : i32) -> ${A} {
      ${B ? IA : M}
    }

    fn mm_readB(batch: i32, row : i32, colIn : i32) -> ${G} {
      ${B ? M : IA}
    }

    fn mm_write(batch: i32, row : i32, colIn : i32, valueIn : ${L}) {
      let col = colIn * ${l};
      if (row < uniforms.dim_a_outer && col < uniforms.dim_b_outer)
      {
      var value = valueIn;
      let outWidth = ${B ? "i32(uniforms.result_shape[2])" : "i32(uniforms.result_shape[3])"};
      ${P}
      ${Ry(s)}
      ${a}
      setOutputAtCoords(coords[0], coords[1], coords[2], coords[3], value);
      }
    }`;
  }, Dy = (B, R, F, i, s, N, j, h, l) => {
    let k = R.format === "NHWC", q = k ? B[0].dims[3] : B[0].dims[1], d = F[0], b = k ? F[2] : F[3], P = k ? F[1] : F[2], W = k ? F[3] : F[1], r = k && (q % 4 === 0 || q % 3 === 0) && W % 4 === 0, $ = k ? W : b * P, m = k ? b * P : W, z = [8, 8, 1], IA = i <= 8 ? [4, 1, 1] : [4, 4, 1], M = [Math.ceil($ / z[0] / IA[0]), Math.ceil(m / z[1] / IA[1]), Math.ceil(d / z[2] / IA[2])];
    wI("verbose", () => `[conv2d_mm_webgpu] dispatch = ${M}`);
    let L = r ? k && q % 4 !== 0 ? 3 : 4 : 1, A = z[1] * IA[1], G = z[0] * IA[0], a = Math.max(z[0] * L, z[1]), UA = i % A === 0, H = s % G === 0, T = N % a === 0, cA = r ? [L, 4, 4] : [1, 1, 1], GA = [{ type: 6, data: i }, { type: 6, data: s }, { type: 6, data: N }, { type: 6, data: [R.pads[0], R.pads[1]] }, { type: 6, data: R.strides }, { type: 6, data: R.dilations }];
    Pg(R, GA), GA.push(...TA(B[0].dims, B[1].dims));
    let aA = ["rank", "rank"];
    j && (GA.push(...TA(B[2].dims)), aA.push("rank")), GA.push(...TA(F));
    let rA = (lA) => {
      let vA = [{ name: "dim_a_outer", type: "i32" }, { name: "dim_b_outer", type: "i32" }, { name: "dim_inner", type: "i32" }, { name: "pad", type: "i32", length: 2 }, { name: "stride", type: "i32", length: 2 }, { name: "dilation", type: "i32", length: 2 }];
      fg(R, vA);
      let HA = r ? 4 : 1, PA = QC(B[0].dataType), YI = `
      fn setOutputAtIndex(flatIndex : i32, value : ${r ? `vec4<${PA}>` : PA}) {
        result[flatIndex] = ${r ? `vec4<${PA}>` : PA}(value);
      }
      fn setOutputAtCoords(d0 : i32, d1 : i32, d2 : i32, d3 : i32, value : ${r ? `vec4<${PA}>` : PA}) {
        let flatIndex = getOutputIndexFromCoords(vec4<i32>(d0, d1, d2, d3));
        setOutputAtIndex(flatIndex ${r ? "/ 4" : ""}, value);
      }`, MA = FA("x", B[0].dataType, B[0].dims.length, L === 3 ? 1 : L), jA = FA("w", B[1].dataType, B[1].dims.length, HA), LA = [MA, jA], XA = qA("result", B[0].dataType, F.length, HA);
      if (j) {
        let $I = FA("bias", B[2].dataType, B[2].dims.length, HA);
        LA.push($I), YI += `
        fn getBiasByOutputCoords(coords : vec4<i32>) -> ${r ? `vec4<${PA}>` : PA} {
          return bias[coords.${k ? "w" : "y"}${r ? "/ 4" : ""}];
        }`;
      }
      return `
        ${wy("uniforms.result_strides")}
        //struct Uniforms { xShape : vec4<i32>, wShape : vec4<i32>, outShape : vec4<i32>,
        //  outShapeStrides: vec3<i32>, filterDims : vec2<i32>, pad : vec2<i32>, stride : vec2<i32>,
        //  dilation : vec2<i32>, dimAOuter : i32, dimBOuter : i32, dimInner : i32 };
        ${lA.registerUniforms(vA).declareVariables(...LA, XA)}
        ${YI}
        ${XF(k, UA, H, T, j, R, cA[0], cA[1], cA[2], PA)}
        ${r ? Jw(IA, z, PA, void 0, !k, a) : iw(IA, z, PA, void 0, !k, a, !1, void 0, h)}`;
    };
    return { name: "Conv2DMatMul", shaderCache: { hint: `${R.cacheKey};${L};${r};${UA};${H};${T};${A};${G};${a}`, inputDependencies: aA }, getRunData: () => ({ outputs: [{ dims: l ? l(F) : F, dataType: B[0].dataType }], dispatchGroup: { x: M[0], y: M[1], z: M[2] }, programUniforms: GA }), getShaderSource: rA };
  };
}), rF, KR, SE, mF, lR, eF, Fy, My, TN = sA(() => {
  zA(), tQ(), $A(), II(), tg(), Pw(), rF = (B) => {
    let R = 1;
    for (let F = 0; F < B.length; F++) R *= B[F];
    return R;
  }, KR = (B) => typeof B == "number" ? [B, B, B] : B, SE = (B, R) => R <= 1 ? B : B + (B - 1) * (R - 1), mF = (B, R, F, i = 1) => {
    let s = SE(R, i);
    return Math.floor((B[0] * (F - 1) - F + s) / 2);
  }, lR = (B, R, F, i, s) => {
    s == null && (s = mF(B, R[0], i[0]));
    let N = [0, 0, 0, F];
    for (let j = 0; j < 3; j++) B[j] + 2 * s >= R[j] && (N[j] = Math.trunc((B[j] - R[j] + 2 * s) / i[j] + 1));
    return N;
  }, eF = (B, R, F, i, s, N, j, h, l, k) => {
    let q, d, b, P;
    if (B === "VALID" && (B = 0), typeof B == "number") {
      q = { top: B, bottom: B, left: B, right: B, front: B, back: B };
      let W = lR([R, F, i, 1], [h, l, k], 1, [s, N, j], B);
      d = W[0], b = W[1], P = W[2];
    } else if (Array.isArray(B)) {
      if (!B.every((r, $, m) => r === m[0])) throw Error(`Unsupported padding parameter: ${B}`);
      q = { top: B[0], bottom: B[1], left: B[2], right: B[3], front: B[4], back: B[5] };
      let W = lR([R, F, i, 1], [h, l, k], 1, [s, N, j], B[0]);
      d = W[0], b = W[1], P = W[2];
    } else if (B === "SAME_UPPER") {
      d = Math.ceil(R / s), b = Math.ceil(F / N), P = Math.ceil(i / j);
      let W = (d - 1) * s + h - R, r = (b - 1) * N + l - F, $ = (P - 1) * j + k - i, m = Math.floor(W / 2), z = W - m, IA = Math.floor(r / 2), M = r - IA, L = Math.floor($ / 2), A = $ - L;
      q = { top: IA, bottom: M, left: L, right: A, front: m, back: z };
    } else throw Error(`Unknown padding parameter: ${B}`);
    return { padInfo: q, outDepth: d, outHeight: b, outWidth: P };
  }, Fy = (B, R, F, i, s, N = !1, j = "channelsLast") => {
    let h, l, k, q, d;
    if (j === "channelsLast") [h, l, k, q, d] = B;
    else if (j === "channelsFirst") [h, d, l, k, q] = B;
    else throw new Error(`Unknown dataFormat ${j}`);
    let [b, , P, W, r] = R, [$, m, z] = KR(F), [IA, M, L] = KR(i), A = SE(P, IA), G = SE(W, M), a = SE(r, L), { padInfo: UA, outDepth: H, outHeight: T, outWidth: cA } = eF(s, l, k, q, $, m, z, A, G, a), GA = N ? b * d : b, aA = [0, 0, 0, 0, 0];
    return j === "channelsFirst" ? aA = [h, GA, H, T, cA] : j === "channelsLast" && (aA = [h, H, T, cA, GA]), { batchSize: h, dataFormat: j, inDepth: l, inHeight: k, inWidth: q, inChannels: d, outDepth: H, outHeight: T, outWidth: cA, outChannels: GA, padInfo: UA, strideDepth: $, strideHeight: m, strideWidth: z, filterDepth: P, filterHeight: W, filterWidth: r, effectiveFilterDepth: A, effectiveFilterHeight: G, effectiveFilterWidth: a, dilationDepth: IA, dilationHeight: M, dilationWidth: L, inShape: B, outShape: aA, filterShape: R };
  }, My = (B, R, F, i, s, N) => {
    let j = N === "channelsLast";
    j ? B[0].dims[3] : B[0].dims[1];
    let h = [64, 1, 1], l = { x: F.map(($, m) => m) }, k = [Math.ceil(rF(l.x.map(($) => F[$])) / h[0]), 1, 1];
    wI("verbose", () => `[conv3d_naive_webgpu] dispatch = ${k}`);
    let q = 1, d = RA.size(F), b = [{ type: 12, data: d }, { type: 12, data: i }, { type: 12, data: s }, { type: 12, data: R.strides }, { type: 12, data: R.dilations }];
    Pg(R, b), b.push(...TA(B[0].dims, B[1].dims));
    let P = ["rank", "rank"], W = B.length === 3;
    W && (b.push(...TA(B[2].dims)), P.push("rank")), b.push(...TA(F));
    let r = ($) => {
      let m = [{ name: "output_size", type: "u32" }, { name: "filter_dims", type: "u32", length: i.length }, { name: "pads", type: "u32", length: s.length }, { name: "strides", type: "u32", length: R.strides.length }, { name: "dilations", type: "u32", length: R.dilations.length }];
      fg(R, m);
      let z = 1, IA = QC(B[0].dataType), M = FA("x", B[0].dataType, B[0].dims.length, q), L = FA("W", B[1].dataType, B[1].dims.length, z), A = [M, L], G = qA("result", B[0].dataType, F.length, z), a = "";
      if (W) {
        let T = FA("bias", B[2].dataType, B[2].dims.length, z);
        A.push(T), a += `
        fn getBiasByOutputCoords(coords : array<u32, 5>) -> ${IA} {
          return bias[${j ? VA("coords", 4, 5) : VA("coords", 1, 5)}];
        }`;
      }
      let UA = wC(q, IA), H = xg(R, UA, IA);
      return `
            ${a}
            fn getX(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${M.getByIndices("aIndices")};
            }
            fn getW(d0 : u32, d1 : u32, d2 : u32, d3 : u32, d4 : u32) -> f32 {
              let aIndices = array<u32, 5>(d0, d1, d2, d3, d4);
              return ${L.getByIndices("aIndices")};
            }
          ${$.registerUniforms(m).declareVariables(...A, G)}
          ${$.mainStart()}
          ${$.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
              let coords = ${G.offsetToIndices("global_idx")};
              let batch = ${VA("coords", 0, M.rank)};
              let d2 = ${j ? VA("coords", M.rank - 1, M.rank) : VA("coords", 1, M.rank)};
              let xFRCCorner = vec3<u32>(${j ? VA("coords", 1, M.rank) : VA("coords", 2, M.rank)},
              ${j ? VA("coords", 2, M.rank) : VA("coords", 3, M.rank)},
              ${j ? VA("coords", 3, M.rank) : VA("coords", 4, M.rank)}) * uniforms.strides - uniforms.pads;
              let xFCorner = xFRCCorner.x;
              let xRCorner = xFRCCorner.y;
              let xCCorner = xFRCCorner.z;
              let xShapeY = ${j ? VA("uniforms.x_shape", 1, M.rank) : VA("uniforms.x_shape", 2, M.rank)};
              let xShapeZ = ${j ? VA("uniforms.x_shape", 2, M.rank) : VA("uniforms.x_shape", 3, M.rank)};
              let xShapeW = ${j ? VA("uniforms.x_shape", 3, M.rank) : VA("uniforms.x_shape", 4, M.rank)};
              let xShapeU = ${j ? VA("uniforms.x_shape", 4, M.rank) : VA("uniforms.x_shape", 1, M.rank)};
              let inputDepthNearestVec4 = (xShapeU / 4) * 4;
              let inputDepthVec4Remainder = xShapeU % 4;

              var value = 0.0;
              for (var wF = 0u; wF < uniforms.filter_dims[0]; wF++) {
                let xF = xFCorner + wF * uniforms.dilations[0];
                if (xF < 0 || xF >= xShapeY) {
                  continue;
                }

                for (var wR = 0u; wR < uniforms.filter_dims[1]; wR++) {
                  let xR = xRCorner + wR * uniforms.dilations[1];
                  if (xR < 0 || xR >= xShapeZ) {
                    continue;
                  }

                  for (var wC = 0u; wC < uniforms.filter_dims[2]; wC++) {
                    let xC = xCCorner + wC * uniforms.dilations[2];
                    if (xC < 0 || xC >= xShapeW) {
                      continue;
                    }

                    for (var d1 = 0u; d1 < inputDepthNearestVec4; d1 += 4) {
                      ${j ? `let xValues = vec4<f32>(
                               getX(batch, xF, xR, xC, d1),
                               getX(batch, xF, xR, xC, d1 + 1),
                               getX(batch, xF, xR, xC, d1 + 2),
                               getX(batch, xF, xR, xC, d1 + 3));
                            ` : `let xValues = vec4<f32>(
                               getX(batch, d1, xF, xR, xC),
                               getX(batch, d1 + 1, xF, xR, xC),
                               getX(batch, d1 + 2, xF, xR, xC),
                               getX(batch, d1 + 3, xF, xR, xC));
                            `}
                            let wValues = vec4<f32>(
                              getW(d2, d1, wF, wR, wC),
                              getW(d2, d1 + 1, wF, wR, wC),
                              getW(d2, d1 + 2, wF, wR, wC),
                              getW(d2, d1 + 3, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                    if (inputDepthVec4Remainder == 1) {
                        ${j ? `value += getX(batch, xF, xR, xC, inputDepthNearestVec4)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);` : `value += getX(batch, inputDepthNearestVec4, xF, xR, xC)
                          * getW(d2, inputDepthNearestVec4, wF, wR, wC);`}
                    } else if (inputDepthVec4Remainder == 2) {
                      ${j ? `let xValues = vec2<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1));
                      ` : `let xValues = vec2<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC));
                    `}
                    let wValues = vec2<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC));
                      value += dot(xValues, wValues);
                    } else if (inputDepthVec4Remainder == 3) {
                      ${j ? `let xValues = vec3<f32>(
                        getX(batch, xF, xR, xC, inputDepthNearestVec4),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 1),
                        getX(batch, xF, xR, xC, inputDepthNearestVec4 + 2));
                      ` : `let xValues = vec3<f32>(
                        getX(batch, inputDepthNearestVec4, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 1, xF, xR, xC),
                        getX(batch, inputDepthNearestVec4 + 2, xF, xR, xC));
                    `}
                    let wValues = vec3<f32>(
                      getW(d2, inputDepthNearestVec4, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 1, wF, wR, wC),
                      getW(d2, inputDepthNearestVec4 + 2, wF, wR, wC));
                      value += dot(xValues, wValues);
                    }
                  }
                }
              }
              ${W ? "value = value + getBiasByOutputCoords(coords)" : ""};
              ${H}
              result[global_idx] = f32(value);
          }`;
    };
    return { name: "Conv3DNaive", shaderCache: { hint: `${R.cacheKey};${j};${q};${W}`, inputDependencies: P }, getRunData: () => ({ outputs: [{ dims: F, dataType: B[0].dataType }], dispatchGroup: { x: k[0], y: k[1], z: k[2] }, programUniforms: b }), getShaderSource: r };
  };
}), Gy, Jy, xN = sA(() => {
  zA(), $A(), II(), tg(), Gy = (B, R, F, i) => {
    let s = B.length > 2, N = s ? "value += b[output_channel];" : "", j = B[0].dims, h = B[1].dims, l = R.format === "NHWC", k = l ? F[3] : F[1], q = k / R.group, d = l && q >= 4 ? xI(k) : 1, b = RA.size(F) / d, P = [{ type: 12, data: b }, { type: 12, data: R.dilations }, { type: 12, data: [R.strides[0], R.strides[1]] }, { type: 12, data: [R.pads[0], R.pads[1]] }, { type: 12, data: q }];
    Pg(R, P), P.push(...TA(j, [h[0], h[1], h[2], h[3] / d]));
    let W = s ? ["rank", "rank", "rank"] : ["rank", "rank"];
    P.push(...TA([F[0], F[1], F[2], F[3] / d]));
    let r = ($) => {
      let m = qA("output", B[0].dataType, F.length, d), z = QC(m.type.tensor), IA = xg(R, m.type.value, z), M = FA("x", B[0].dataType, j.length), L = FA("w", B[1].dataType, h.length, d), A = [M, L];
      s && A.push(FA("b", B[2].dataType, B[2].dims, d));
      let G = [{ name: "output_size", type: "u32" }, { name: "dilations", type: "u32", length: R.dilations.length }, { name: "strides", type: "u32", length: 2 }, { name: "pads", type: "u32", length: 2 }, { name: "output_channels_per_group", type: "u32" }];
      fg(R, G);
      let a = l ? `
      for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[0]; wHeight++) {
        let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

        if (xHeight < 0u || xHeight >= uniforms.x_shape[1]) {
          continue;
        }

        for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[1]; wWidth++) {
          let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
          if (xWidth < 0u || xWidth >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[2]; wInChannel++) {
            let input_channel = in_channel_offset + wInChannel;
            let xVal = ${M.get("batch", "xHeight", "xWidth", "input_channel")};
            let wVal = ${L.get("wHeight", "wWidth", "wInChannel", "output_channel")};
            value += xVal * wVal;
          }
        }
      }
      ` : `
      for (var wInChannel: u32 = 0u; wInChannel < uniforms.w_shape[1]; wInChannel++) {
        let input_channel = in_channel_offset + wInChannel;
        for (var wHeight: u32 = 0u; wHeight < uniforms.w_shape[2]; wHeight++) {
          let xHeight = xRCCorner.x + wHeight * uniforms.dilations[0];

          if (xHeight < 0u || xHeight >= uniforms.x_shape[2]) {
            continue;
          }

          for (var wWidth: u32 = 0u; wWidth < uniforms.w_shape[3]; wWidth++) {
            let xWidth = xRCCorner.y + wWidth * uniforms.dilations[1];
            if (xWidth < 0u || xWidth >= uniforms.x_shape[3]) {
              continue;
            }

            let xVal = ${M.get("batch", "input_channel", "xHeight", "xWidth")};
            let wVal = ${L.get("output_channel", "wInChannel", "wHeight", "wWidth")};
            value += xVal * wVal;
          }
        }
      }
      `;
      return `
  ${$.registerUniforms(G).declareVariables(...A, m)}

  ${$.mainStart()}
    ${$.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let outputIndices = ${m.offsetToIndices("global_idx")};
    let batch: u32 = outputIndices[0];
    let output_channel: u32 = outputIndices[${l ? 3 : 1}];
    let xRCCorner: vec2<u32> = vec2<u32>(outputIndices[${l ? 1 : 2}], outputIndices[${l ? 2 : 3}]) * uniforms.strides - uniforms.pads;
    let group_id: u32 = output_channel * ${d} / uniforms.output_channels_per_group;
    var in_channel_offset = group_id * uniforms.w_shape[${l ? 2 : 1}];

    var value: ${m.type.value} = ${m.type.value}(0);
    ${a}
    ${N}
    ${IA}
    ${m.setByOffset("global_idx", "value")}
  }`;
    };
    return { name: "GroupedConv", shaderCache: { hint: `${R.cacheKey}_${d}`, inputDependencies: W }, getRunData: () => ({ outputs: [{ dims: i ? i(F) : F, dataType: B[0].dataType }], dispatchGroup: { x: Math.ceil(b / 64) }, programUniforms: P }), getShaderSource: r };
  }, Jy = (B, R, F, i) => {
    let s = B.length > 2, N = xI(F[3]), j = xI(F[2]), h = RA.size(F) / N / j, l = [B[0].dims[0], B[0].dims[1], B[0].dims[2], B[0].dims[3] / N], k = [B[1].dims[0], B[1].dims[1], B[1].dims[2], B[1].dims[3] / N], q = [F[0], F[1], F[2], F[3] / N], d = [{ type: 12, data: h }, { type: 6, data: [R.strides[0], R.strides[1]] }, { type: 6, data: [R.pads[0], R.pads[1]] }];
    Pg(R, d), d.push(...TA(l, k, q));
    let b = (j - 1) * R.strides[1] + k[1], P = (W) => {
      let r = qA("output", B[0].dataType, q.length, N), $ = QC(r.type.tensor), m = xg(R, r.type.value, $), z = FA("x", B[0].dataType, l.length, N), IA = FA("w", B[1].dataType, k.length, N), M = [z, IA];
      s && M.push(FA("b", B[2].dataType, B[2].dims, N));
      let L = s ? "value += b[output_channel];" : "", A = [{ name: "output_size", type: "u32" }, { name: "strides", type: "i32", length: 2 }, { name: "pads", type: "i32", length: 2 }];
      return fg(R, A), `
  ${W.registerUniforms(A).declareVariables(...M, r)}
  ${W.mainStart()}
    ${W.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let width0 = uniforms.output_shape[3];
    let output_channel = global_idx % width0;
    var index1 = global_idx / width0;
    let width1 = uniforms.output_shape[2] / ${j}u;
    let col = (index1 % width1) * ${j}u;
    index1 = index1 / width1;
    let row = index1 % uniforms.output_shape[1];
    let batch = index1 / uniforms.output_shape[1];

    let x_corner = vec2<i32>(i32(row), i32(col)) * uniforms.strides - uniforms.pads;

    var x_vals: array<${z.type.value}, ${b}>;
    var values: array<${r.type.value}, ${j}>;
    let input_channel = output_channel;
    // Use constant instead of uniform can give better performance for w's height/width.
    for (var w_height: u32 = 0u; w_height < ${k[0]}; w_height++) {
      let x_height = x_corner.x + i32(w_height);
      if (x_height >= 0 && u32(x_height) < uniforms.x_shape[1]) {
        for (var i = 0; i < ${b}; i++) {
          let x_width = x_corner.y + i;
          if (x_width >= 0 && u32(x_width) < uniforms.x_shape[2]) {
            x_vals[i] = ${z.get("batch", "u32(x_height)", "u32(x_width)", "input_channel")};
          } else {
            x_vals[i] = ${z.type.value}(0);
          }
        }
        for (var w_width: u32 = 0u; w_width < ${k[1]}; w_width++) {
          let w_val = ${IA.get("w_height", "w_width", "0", "output_channel")};
          for (var i = 0u; i < ${j}u; i++) {
            values[i] = fma(x_vals[i * u32(uniforms.strides[1]) + w_width], w_val, values[i]);
          }
        }
      }
    }

    for (var i = 0u; i < ${j}u; i++) {
      var value = values[i];
      ${L}
      ${m}
      ${r.set("batch", "row", "col + i", "output_channel", "value")};
    }
  }`;
    };
    return { name: "GroupedConv-Vectorize", shaderCache: { hint: `${R.cacheKey};${N};${j};${b};${k[0]};${k[1]}`, inputDependencies: s ? ["rank", "rank", "type"] : ["rank", "rank"] }, getRunData: () => ({ outputs: [{ dims: i ? i(F) : F, dataType: B[0].dataType }], dispatchGroup: { x: Math.ceil(h / 64) }, programUniforms: d }), getShaderSource: P };
  };
}), vF, hU, uF, LU, yw, kR, _F, $F, ow, PN = sA(() => {
  $A(), bN(), TN(), tw(), xN(), tg(), pw(), wg(), vF = (B, R, F, i, s, N) => {
    let j = B[0], h = B.slice(N ? 1 : 2, N ? 3 : 4), l = h.length, k = R[0], q = R.slice(2).map((b, P) => b + (b - 1) * (F[P] - 1)), d = h.map((b, P) => b + i[P] + i[P + l]).map((b, P) => Math.floor((b - q[P] + s[P]) / s[P]));
    return d.splice(0, 0, j), d.splice(N ? 3 : 1, 0, k), d;
  }, hU = [2, 3, 1, 0], uF = (B, R) => {
    if (!B || B.length !== 2 && B.length !== 3) throw new Error("Conv requires 2 or 3 inputs");
    if (B[0].dims.length > 5) throw new Error("greater than 5D is not supported");
    if (B[0].dims.length !== B[1].dims.length) throw new Error("filter does not have same dimension as input");
    let F = B[0].dims[R.format === "NHWC" ? B[0].dims.length - 1 : 1], i = B[1].dims[1] * R.group;
    if (F !== i) throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");
    if (B.length === 3 && (B[2].dims.length !== 1 || B[1].dims[0] !== B[2].dims[0])) throw new Error("invalid bias");
    let s = B[0].dims.length - 2;
    if (R.dilations.length !== s) throw new Error(`dilations should be ${s}D`);
    if (R.strides.length !== s) throw new Error(`strides should be ${s}D`);
    if (R.pads.length !== s * 2) throw new Error(`pads should be ${s * 2}D`);
    if (R.kernelShape.length !== 0 && R.kernelShape.length !== B[1].dims.length - 2) throw new Error("invalid kernel shape");
  }, LU = (B, R) => {
    let F = B.kernelShape.slice();
    F.length < R[1].dims.length - 2 && F.push(...Array(R[1].dims.length - 2 - F.length).fill(0));
    for (let N = 2; N < R[1].dims.length; ++N) F[N - 2] === 0 && (F[N - 2] = R[1].dims[N]);
    let i = B.pads.slice();
    qU.adjustPadsBasedOnAutoPad(R[0].dims, B.strides, B.dilations, F, i, B.format === "NHWC", B.autoPad);
    let s = Object.assign({}, B);
    return Object.assign(s, { kernelShape: F, pads: i }), s;
  }, yw = (B) => {
    let R = xw(B), F = B.format, i = ["NOTSET", "VALID", "SAME_UPPER", "SAME_LOWER"][B.auto_pad], s = B.dilations, N = B.group, j = B.kernel_shape, h = B.pads, l = B.strides, k = B.w_is_const();
    return { autoPad: i, format: F, dilations: s, group: N, kernelShape: j, pads: h, strides: l, wIsConst: k, ...R, cacheKey: `${B.format};${R.activation};` };
  }, kR = (B, R, F, i) => {
    let s = F.format === "NHWC", N = vF(R[0].dims, R[1].dims, F.dilations, F.pads, F.strides, s);
    if (F.group !== 1) {
      let A = [R[0]];
      if (s) {
        let G = B.kernelCustomData.wT ?? B.compute(tC(R[1], hU), { inputs: [1], outputs: [F.wIsConst ? -2 : -1] })[0];
        F.wIsConst && !B.kernelCustomData.wT && (B.kernelCustomData.wT = G), A.push(G);
      } else A.push(R[1]);
      R.length === 3 && A.push(R[2]), !B.adapterInfo.isArchitecture("ampere") && s && R[1].dims[0] === F.group && R[1].dims[1] === 1 && F.dilations[0] === 1 && F.dilations[1] === 1 ? B.compute(Jy(A, F, N, i), { inputs: A }) : B.compute(Gy(A, F, N, i), { inputs: A });
      return;
    }
    let j = R.length === 3, h = R[0].dims[s ? 1 : 2], l = R[0].dims[s ? 2 : 3], k = R[0].dims[s ? 3 : 1], q = R[1].dims[2], d = R[1].dims[3], b = N[s ? 1 : 2], P = N[s ? 2 : 3], W = N[s ? 3 : 1], r = s && q === h && d === l && F.pads[0] === 0 && F.pads[1] === 0;
    if (r || q === 1 && d === 1 && F.dilations[0] === 1 && F.dilations[1] === 1 && F.strides[0] === 1 && F.strides[1] === 1 && F.pads[0] === 0 && F.pads[1] === 0) {
      let A = N[0], G, a, UA, H = [];
      if (s) {
        let GA = B.kernelCustomData.wT ?? B.compute(tC(R[1], hU), { inputs: [1], outputs: [F.wIsConst ? -2 : -1] })[0];
        if (F.wIsConst && !B.kernelCustomData.wT && (B.kernelCustomData.wT = GA), r) {
          let aA = h * l * k;
          G = R[0].reshape([1, A, aA]), a = GA.reshape([1, aA, W]), UA = [1, A, W];
        } else G = R[0].reshape([A, h * l, k]), a = GA.reshape([1, k, W]), UA = [A, b * P, W];
        H.push(G), H.push(a);
      } else G = R[0].reshape([A, k, h * l]), a = R[1].reshape([1, W, k]), UA = [A, W, b * P], H.push(a), H.push(G);
      j && H.push(R[2]);
      let T = UA[2], cA = H[0].dims[H[0].dims.length - 1];
      T < 8 && cA < 8 ? B.compute(fw(H, F, N, UA, s, i), { inputs: H }) : B.compute(bU(H, F, N, UA, s, i), { inputs: H });
      return;
    }
    let $ = !0, m = B.kernelCustomData.wT ?? B.compute(tC(R[1], hU), { inputs: [1], outputs: [F.wIsConst ? -2 : -1] })[0];
    F.wIsConst && !B.kernelCustomData.wT && (B.kernelCustomData.wT = m);
    let z = [R[0], m];
    j && z.push(R[2]);
    let IA = s ? b * P : W, M = s ? W : b * P, L = q * d * k;
    B.compute(Dy(z, F, N, IA, M, L, j, $, i), { inputs: z });
  }, _F = (B, R) => {
    let F = R.format === "NHWC", i = [B.inputs[0].reshape(F ? [B.inputs[0].dims[0], 1, B.inputs[0].dims[1], B.inputs[0].dims[2]] : [B.inputs[0].dims[0], B.inputs[0].dims[1], 1, B.inputs[0].dims[2]]), B.inputs[1].reshape([B.inputs[1].dims[0], B.inputs[1].dims[1], 1, B.inputs[1].dims[2]])];
    B.inputs.length === 3 && i.push(B.inputs[2]);
    let s = [0, R.pads[0], 0, R.pads[1]], N = [1].concat(R.strides), j = [1].concat(R.dilations), h = [1].concat(R.kernelShape), l = LU({ ...R, pads: s, strides: N, dilations: j, kernelShape: h }, i);
    kR(B, i, l, (k) => F ? [k[0], k[2], k[3]] : [k[0], k[1], k[3]]);
  }, $F = (B, R, F) => {
    let i = F.format === "NHWC" ? "channelsLast" : "channelsFirst", s = LU(F, R), N = F.autoPad === "NOTSET" ? F.pads : F.autoPad, j = Fy(R[0].dims, R[1].dims, F.strides, F.dilations, N, !1, i);
    B.compute(My(R, s, j.outShape, [j.filterDepth, j.filterHeight, j.filterWidth], [j.padInfo.front, j.padInfo.top, j.padInfo.left], i));
  }, ow = (B, R) => {
    if (uF(B.inputs, R), B.inputs[0].dims.length === 3) _F(B, R);
    else if (B.inputs[0].dims.length === 5) $F(B, B.inputs, R);
    else {
      let F = LU(R, B.inputs);
      kR(B, B.inputs, F);
    }
  };
}), iy, fN = sA(() => {
  zA(), tQ(), $A(), II(), iy = (B, R, F) => {
    let i = B.length > 2, s = R.outputShape, N = R.format === "NHWC", j = R.group, h = B[1].dims, l = h[2] / j, k = h[3], q = N ? xI(l) : 1, d = N && k === 1 && l >= 4, b = d ? Math.floor(l / 4) * 4 : Math.floor(l / q) * q, P = l - b, W = N ? xI(k) : 1, r = N ? k === 1 ? q : W : 1, $ = RA.size(s) / W, m = [Math.ceil($ / 64), 1, 1];
    wI("verbose", () => `[conv2d_backprop_webgpu] dispatch = ${m}`);
    let z = ["rank", "rank"], IA = [R.strides[0], R.strides[1]], M = [R.kernelShape[N ? 1 : 2], R.kernelShape[N ? 2 : 3]], L = [R.dilations[0], R.dilations[1]], A = [M[0] + (R.dilations[0] <= 1 ? 0 : (R.kernelShape[N ? 1 : 2] - 1) * (R.dilations[0] - 1)), M[1] + (R.dilations[1] <= 1 ? 0 : (R.kernelShape[N ? 2 : 3] - 1) * (R.dilations[1] - 1))], G = [A[0] - 1 - Math.floor((R.pads[0] + R.pads[2]) / 2), A[1] - 1 - Math.floor((R.pads[1] + R.pads[3]) / 2)], a = [{ type: 12, data: $ }, { type: 12, data: IA }, { type: 12, data: M }, { type: 12, data: L }, { type: 12, data: A }, { type: 6, data: G }, { type: 12, data: b }, { type: 12, data: l }, { type: 12, data: k }, ...TA(B[0].dims, B[1].dims)];
    i && (a.push(...TA(B[2].dims)), z.push("rank")), a.push(...TA(s));
    let UA = (H) => {
      let T = [{ name: "output_size", type: "u32" }, { name: "strides", type: "u32", length: IA.length }, { name: "filter_dims", type: "u32", length: M.length }, { name: "dilations", type: "u32", length: M.length }, { name: "effective_filter_dims", type: "u32", length: A.length }, { name: "pads", type: "i32", length: G.length }, { name: "input_channels_per_group_int", type: "u32" }, { name: "input_channels_per_group", type: "u32" }, { name: "output_channels_per_group", type: "u32" }], cA = QC(B[0].dataType), GA = N ? 1 : 2, aA = N ? 2 : 3, rA = N ? 3 : 1, lA = FA("W", B[1].dataType, B[1].dims.length, r), vA = FA("Dy", B[0].dataType, B[0].dims.length, q), HA = [vA, lA];
      i && HA.push(FA("bias", B[2].dataType, [s[rA]].length, W));
      let PA = qA("result", B[0].dataType, s.length, W), YI = () => {
        let LA = "";
        if (d) q === 4 ? LA += `
        let xValue = ${vA.getByOffset("x_offset")};
        let wValue = ${lA.getByOffset("w_offset")};
        dotProd = dotProd + dot(xValue, wValue);
        x_offset += 1u;
        w_offset += 1u;` : q === 2 ? LA += `
          dotProd = dotProd + dot(vec4<${cA}>(${vA.getByOffset("x_offset")}, ${vA.getByOffset("x_offset + 1u")}), vec4<${cA}>(${lA.getByOffset("w_offset")}, ${lA.getByOffset("w_offset + 1u")}));
          x_offset += 2u;
          w_offset += 2u;` : q === 1 && (LA += `
          dotProd = dotProd + dot(vec4<${cA}>(${vA.getByOffset("x_offset")}, ${vA.getByOffset("x_offset + 1u")}, ${vA.getByOffset("x_offset + 2u")}, ${vA.getByOffset("x_offset + 3u")}), vec4<${cA}>(${lA.getByOffset("w_offset")}, ${lA.getByOffset("w_offset + 1u")}, ${lA.getByOffset("w_offset + 2u")}, ${lA.getByOffset("w_offset + 3u")}));
          x_offset += 4u;
          w_offset += 4u;`);
        else if (LA += `
                  let xValue = ${N ? vA.getByOffset(`${vA.indicesToOffset(`${vA.type.indices}(batch, idyR, idyC, inputChannel)`)} / ${q}`) : vA.get("batch", "inputChannel", "idyR", "idyC")};
        `, q === 1) LA += `
          let w_offset = ${lA.indicesToOffset(`${lA.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel, wOutChannel)`)};
          let wValue = ${lA.getByOffset(`w_offset / ${r}`)};
          dotProd = dotProd + xValue * wValue;`;
        else for (let XA = 0; XA < q; XA++) LA += `
            let wValue${XA} = ${lA.getByOffset(`${lA.indicesToOffset(`${lA.type.indices}(u32(wRPerm), u32(wCPerm), inputChannel + ${XA}, wOutChannel)`)} / ${r}`)};
            dotProd = dotProd + xValue[${XA}] * wValue${XA};`;
        return LA;
      }, MA = () => {
        if (P === 0) return "";
        if (!d) throw new Error(`packInputAs4 ${d} is not true.`);
        let LA = "";
        if (q === 1) {
          LA += "dotProd = dotProd";
          for (let XA = 0; XA < P; XA++) LA += `
            + ${vA.getByOffset(`x_offset + ${XA}`)} * ${lA.getByOffset(`w_offset + ${XA}`)}`;
          LA += ";";
        } else if (q === 2) {
          if (P !== 2) throw new Error(`Invalid inputChannelsRemainder ${P}.`);
          LA += `
          let xValue = ${vA.getByOffset("x_offset")};
          let wValue = ${lA.getByOffset("w_offset")};
          dotProd = dotProd + dot(xValue, wValue);`;
        }
        return LA;
      }, jA = `
            let outputIndices = ${PA.offsetToIndices(`global_idx * ${W}`)};
            let batch = ${PA.indicesGet("outputIndices", 0)};
            let d1 = ${PA.indicesGet("outputIndices", rA)};
            let r = ${PA.indicesGet("outputIndices", GA)};
            let c = ${PA.indicesGet("outputIndices", aA)};
            let dyCorner = vec2<i32>(i32(r), i32(c)) - uniforms.pads;
            let dyRCorner = dyCorner.x;
            let dyCCorner = dyCorner.y;
            let groupId = d1 / uniforms.output_channels_per_group;
            let wOutChannel = d1 - groupId * uniforms.output_channels_per_group;
            // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
            // ? = to be determined. : = across all values in that axis.
            var dotProd = ${PA.type.value}(0.0);
            var wR: u32 = 0;
            if (uniforms.dilations.x == 1) {
              // Minimum wR >= 0 that satisfies (dyRCorner + wR) % (uniforms.strides.x) == 0
              wR = u32(((dyRCorner + i32(uniforms.strides.x) - 1) / i32(uniforms.strides.x)) * i32(uniforms.strides.x) - dyRCorner);
            }
            for (; wR < uniforms.effective_filter_dims.x; wR = wR + 1) {
              if (wR % uniforms.dilations.x != 0) {
                continue;
              }
              let dyR = (${cA}(dyRCorner) + ${cA}(wR)) / ${cA}(uniforms.strides[0]);
              let wRPerm = uniforms.filter_dims.x - 1 - wR / uniforms.dilations.x;
              if (dyR < 0.0 || dyR >= ${cA}(uniforms.Dy_shape[${GA}]) || fract(dyR) > 0.0 ||
                  wRPerm < 0) {
                continue;
              }
              let idyR: u32 = u32(dyR);
              var wC: u32 = 0;
              if (uniforms.dilations.y == 1) {
                // Minimum wC >= 0 that satisfies (dyCCorner + wC) % (uniforms.strides.y) == 0
                wC = u32(((dyCCorner + i32(uniforms.strides.y) - 1) / i32(uniforms.strides.y)) * i32(uniforms.strides.y) - dyCCorner);
              }
              for (; wC < uniforms.effective_filter_dims.y; wC = wC + 1) {
                if (wC % uniforms.dilations.y != 0) {
                  continue;
                }
                let dyC = (${cA}(dyCCorner) + ${cA}(wC)) / ${cA}(uniforms.strides.y);
                let wCPerm = uniforms.filter_dims.y - 1 - wC / uniforms.dilations.y;
                if (dyC < 0.0 || dyC >= ${cA}(uniforms.Dy_shape[${aA}]) ||
                    fract(dyC) > 0.0 || wCPerm < 0) {
                  continue;
                }
                let idyC: u32 = u32(dyC);
                var inputChannel = groupId * uniforms.input_channels_per_group;
                ${d ? `
                var x_offset = ${vA.indicesToOffset(`${vA.type.indices}(batch, idyR, idyC, inputChannel)`)} / ${q};
                var w_offset = ${lA.indicesToOffset(`${lA.type.indices}(wRPerm, wCPerm, inputChannel, wOutChannel)`)} / ${r};
                  ` : ""}
                for (var d2: u32 = 0; d2 < uniforms.input_channels_per_group_int; d2 = d2 + ${d ? 4 : q}) {
                  ${YI()}
                  inputChannel = inputChannel + ${d ? 4 : q};
                }
                ${MA()}
                wC = wC + uniforms.strides.y - 1;
              }
              wR = wR + uniforms.strides[0] - 1;
            }
            let value = dotProd${i ? ` + bias[d1 / ${W}]` : ""};
            ${PA.setByOffset("global_idx", "value")};
          `;
      return `
    ${H.registerUniforms(T).declareVariables(...HA, PA)}
      ${H.mainStart()}
      ${H.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")};
    ${jA}}`;
    };
    return { name: "ConvTranspose2D", shaderCache: { hint: `${R.cacheKey};${q}${r}${W}${d}${P}`, inputDependencies: z }, getRunData: () => ({ dispatchGroup: { x: m[0], y: m[1], z: m[2] }, outputs: [{ dims: F ? F(s) : s, dataType: B[0].dataType }], programUniforms: a }), getShaderSource: UA };
  };
}), AM, IM, CM, cR, yy, QM, HR, gM, oy, pN = sA(() => {
  fN(), tg(), wg(), AM = (B, R, F, i, s, N) => (B - 1) * R + F + (i - 1) * s + 1 - N, IM = (B, R, F, i, s) => {
    let N = Math.floor(B / 2);
    R === "SAME_UPPER" ? (F[i] = N, F[s] = B - N) : R === "SAME_LOWER" && (F[i] = B - N, F[s] = N);
  }, CM = (B, R, F, i, s, N, j, h, l, k) => {
    let q = B.length - 2, d = k.length === 0;
    l.length < q && l.push(...Array(q - l.length).fill(0));
    let b = B[0], P = R[h ? 3 : 1] * s;
    for (let W = 0, r = B.length - q - (h ? 1 : 0); W < q; ++W, ++r) {
      let $ = B[r], m = d ? $ * j[W] : k[W], z = AM($, j[W], N[W], R[r], F[W], m);
      IM(z, i, N, W, W + q), d && k.push(j[W] * ($ - 1) + l[W] + (R[r] - 1) * F[W] + 1 - N[W] - N[W + q]);
    }
    k.splice(0, 0, b), k.splice(h ? 3 : 1, 0, P);
  }, cR = (B, R) => {
    let F = B.kernelShape.slice();
    if (B.kernelShape.length === 0 || B.kernelShape.reduce((d, b) => d * b, 1) === 0) {
      F.length = 0;
      for (let d = 2; d < R[1].dims.length; ++d) F.push(R[1].dims[d]);
    }
    let i = B.format === "NHWC";
    F.splice(0, 0, R[1].dims[0]), F.splice(i ? 3 : 1, 0, R[1].dims[1]);
    let s = B.pads.slice(), N = B.outputShape.slice(), j = B.outputPadding.slice(), h = R[0].dims, l = B.dilations.slice();
    if (l.reduce((d, b) => d + b, 0) === 0) {
      let d = R[0].dims.length - 2;
      l = new Array(d).fill(1);
    }
    let k = B.strides.slice();
    if (k.reduce((d, b) => d + b, 0) === 0) {
      let d = R[0].dims.length - 2;
      k = new Array(d).fill(1);
    }
    CM(h, F, l, B.autoPad, B.group, s, k, i, j, N);
    let q = Object.assign({}, B);
    return Object.assign(q, { kernelShape: F, pads: s, outputPadding: j, outputShape: N, dilations: l, strides: k }), q;
  }, yy = (B) => {
    let R = xw(B), F = B.format, i = ["NOTSET", "VALID", "SAME_UPPER", "SAME_LOWER"][typeof B.autoPad > "u" ? 0 : B.autoPad], s = B.dilations, N = B.group, j = B.kernelShape, h = B.pads, l = B.strides, k = B.wIsConst(), q = B.outputPadding, d = B.outputShape;
    return { autoPad: i, format: F, dilations: s, group: N, kernelShape: j, outputPadding: q, outputShape: d, pads: h, strides: l, wIsConst: k, ...R, cacheKey: `${B.format};${R.activation};` };
  }, QM = (B, R) => {
    if (!B || B.length !== 2 && B.length !== 3) throw new Error("Conv requires 2 or 3 inputs");
    if (B[0].dims.length !== 4 && B[0].dims.length !== 3) throw new Error("currently only support 2-dimensional conv");
    if (B[0].dims.length !== B[1].dims.length) throw new Error("filter does not have same dimension as input");
    let F = B[0].dims[R.format === "NHWC" ? B[0].dims.length - 1 : 1], i = B[1].dims[0];
    if (F !== i) throw new Error("FILTER_IN_CHANNEL should be equal to DATA_CHANNEL");
    let s = B[1].dims[1] * R.group;
    if (B.length === 3 && (B[2].dims.length !== 1 || B[2].dims[0] !== s)) throw new Error("invalid bias");
    let N = B[0].dims.length - 2;
    if (R.dilations.reduce((j, h) => j + h, 0) > 0 && R.dilations.length !== N) throw new Error(`dilations should be ${N}D`);
    if (R.strides.reduce((j, h) => j + h, 0) > 0 && R.strides.length !== N) throw new Error(`strides should be ${N}D`);
    if (R.pads.reduce((j, h) => j + h, 0) > 0 && R.pads.length !== N * 2) throw new Error(`pads should be ${N * 2}D`);
    if (R.outputPadding.length !== N && R.outputPadding.length !== 0) throw new Error(`output_padding should be ${N}D`);
    if (R.kernelShape.reduce((j, h) => j + h, 0) > 0 && R.kernelShape.length !== 0 && R.kernelShape.length !== B[1].dims.length - 2) throw new Error("invalid kernel shape");
    if (R.outputShape.length !== 0 && R.outputShape.length !== B[0].dims.length - 2) throw new Error("invalid output shape");
  }, HR = (B, R, F, i) => {
    let s = B.kernelCustomData.wT ?? B.compute(tC(R[1], [2, 3, 0, 1]), { inputs: [1], outputs: [F.wIsConst ? -2 : -1] })[0];
    F.wIsConst && !B.kernelCustomData.wT && (B.kernelCustomData.wT = s);
    let N = [R[0], s];
    R.length === 3 && N.push(R[2]), B.compute(iy(N, F, i), { inputs: N });
  }, gM = (B, R) => {
    let F = R.format === "NHWC", i = [B.inputs[0].reshape(F ? [B.inputs[0].dims[0], 1, B.inputs[0].dims[1], B.inputs[0].dims[2]] : [B.inputs[0].dims[0], B.inputs[0].dims[1], 1, B.inputs[0].dims[2]]), B.inputs[1].reshape([B.inputs[1].dims[0], B.inputs[1].dims[1], 1, B.inputs[1].dims[2]])];
    B.inputs.length === 3 && i.push(B.inputs[2]);
    let s = R.kernelShape;
    (s.length === 0 || s[0] === 0) && (s = [B.inputs[1].dims[2]]);
    let N = R.dilations;
    (N.length === 0 || N[0] === 0) && (N = [1]);
    let j = R.strides;
    (j.length === 0 || j[0] === 0) && (j = [1]);
    let h = R.pads;
    h.length === 0 && (h = [0, 0]), h = [0, h[0], 0, h[1]], j = [1].concat(j), N = [1].concat(N), s = [1].concat(s);
    let l = R.outputPadding;
    l = [0].concat(l);
    let k = cR({ ...R, pads: h, strides: j, dilations: N, kernelShape: s, outputPadding: l }, i);
    HR(B, i, k, (q) => F ? [q[0], q[2], q[3]] : [q[0], q[1], q[3]]);
  }, oy = (B, R) => {
    if (QM(B.inputs, R), B.inputs[0].dims.length === 3) gM(B, R);
    else {
      let F = cR(R, B.inputs);
      HR(B, B.inputs, F);
    }
  };
}), BM, Ny, sy, tN = sA(() => {
  zA(), $A(), tI(), II(), BM = (B, R, F, i) => {
    let s = RA.size(R), N = R.length, j = FA("input", B, N), h = qA("output", B, N), l = F.dataType === 6 ? F.getInt32Array()[0] : Number(F.getBigInt64Array()[0]), k = RA.normalizeAxis(l, N), q = (d) => {
      let b = ` i32(${j.indicesGet("inputIndices", "uniforms.axis")}) `, P = VA("uniforms.input_shape", "uniforms.axis", N), W = i.reverse ? b + (i.exclusive ? " + 1" : "") : "0", r = i.reverse ? P : b + (i.exclusive ? "" : " + 1");
      return `
                ${d.registerUniform("outputSize", "u32").registerUniform("axis", "u32").declareVariables(j, h)}
                ${d.mainStart()}
                  ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
                  var inputIndices = ${h.offsetToIndices("global_idx")};
                  var sum = ${h.type.value}(0);
                  let first : i32 = ${W};
                  let last : i32 = ${r};
                  for (var i : i32 = first; i < last; i++) {
                    ${j.indicesSet("inputIndices", "uniforms.axis", "u32(i)")};
                    sum = sum + ${j.getByIndices("inputIndices")};
                  }
                  ${h.setByOffset("global_idx", "sum")};
                }`;
    };
    return { name: "CumSum", shaderCache: { hint: i.cacheKey, inputDependencies: ["rank"] }, getRunData: () => ({ outputs: [{ dims: R, dataType: B }], dispatchGroup: { x: Math.ceil(s / 64) }, programUniforms: [{ type: 12, data: s }, { type: 12, data: k }, ...TA(R, R)] }), getShaderSource: q };
  }, Ny = (B, R) => {
    let F = B.inputs[0].dims, i = B.inputs[0].dataType, s = B.inputs[1];
    B.compute(BM(i, F, s, R), { inputs: [0] });
  }, sy = (B) => {
    let R = B.exclusive === 1, F = B.reverse === 1;
    return NI({ exclusive: R, reverse: F });
  };
}), EM, UM, RM, jy, Sy, WN = sA(() => {
  zA(), $A(), tI(), II(), EM = (B) => {
    if (!B || B.length !== 1) throw new Error("DepthToSpace requires 1 input.");
    if (B[0].dims.length !== 4) throw new Error("DepthToSpace requires 4D input.");
  }, UM = (B, R, F, i) => {
    let s = [];
    s.push(`fn perm(i: ${i.type.indices}) -> ${F.type.indices} {
    var a: ${F.type.indices};`);
    for (let N = 0; N < R; ++N) s.push(F.indicesSet("a", B[N], `i[${N}]`));
    return s.push("return a;}"), s.join(`
`);
  }, RM = (B, R) => {
    let F, i, s, N, j, h, l = R.format === "NHWC", k = R.blocksize, q = R.mode === "DCR";
    l ? ([F, i, s, N] = B.dims, j = q ? [F, i, s, k, k, N / k ** 2] : [F, i, s, N / k ** 2, k, k], h = q ? [0, 1, 3, 2, 4, 5] : [0, 1, 4, 2, 5, 3]) : ([F, i, s, N] = [B.dims[0], B.dims[2], B.dims[3], B.dims[1]], j = q ? [F, k, k, N / k ** 2, i, s] : [F, N / k ** 2, k, k, i, s], h = q ? [0, 3, 4, 1, 5, 2] : [0, 1, 4, 2, 5, 3]);
    let d = B.reshape(j), b = d.dims.length, P = B.dataType, W = FA("a", P, b), r = qA("output", P, b), $ = (m) => `
  ${m.registerUniform("output_size", "u32").declareVariables(W, r)}

  ${UM(h, b, W, r)}

  ${m.mainStart()}
    ${m.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let indices = ${r.offsetToIndices("global_idx")};
    let aIndices = perm(indices);

    ${r.setByOffset("global_idx", W.getByIndices("aIndices"))}
  }`;
    return { name: "DepthToSpace", shaderCache: { hint: `${B.dims};${R.blocksize};${R.mode}`, inputDependencies: ["rank"] }, getRunData: (m) => {
      let z = l ? [F, i * k, s * k, N / k ** 2] : [F, N / k ** 2, i * k, s * k], IA = RA.size(z), M = d.dims, L = RA.sortBasedOnPerm(M, h);
      return { outputs: [{ dims: z, dataType: m[0].dataType }], dispatchGroup: { x: Math.ceil(IA / 64) }, programUniforms: [{ type: 12, data: IA }, ...TA(M, L)] };
    }, getShaderSource: $ };
  }, jy = (B, R) => {
    EM(B.inputs), B.compute(RM(B.inputs[0], R));
  }, Sy = (B) => NI({ blocksize: B.blocksize, mode: B.mode, format: B.format });
}), YU, hE, aR, wM, DM, FM, MM, ZR, GM, hy, Ly, ON = sA(() => {
  zA(), $A(), tI(), II(), YU = "[a-zA-Z]|\\.\\.\\.", hE = "(" + YU + ")+", aR = "^" + hE + "$", wM = "(" + hE + ",)*" + hE, DM = "^" + wM + "$", FM = class {
    constructor(B = -1) {
      this.symbolToIndices = /* @__PURE__ */ new Map(), this.inputIndex = B;
    }
    addSymbol(B, R) {
      let F = this.symbolToIndices.get(B);
      F === void 0 ? F = [R] : F.push(R), this.symbolToIndices.set(B, F);
    }
  }, MM = class {
    constructor(B, R) {
      var s;
      this.equation = R, this.hasEllipsis = !1, this.symbolToInfo = /* @__PURE__ */ new Map(), this.lhs = new Array(), this.outputDims = [];
      let [F, i] = R.includes("->") ? R.split("->", 2) : [R, ""];
      if (!F.match(RegExp(DM))) throw new Error("Invalid LHS term");
      if (F.split(",").forEach((N, j) => {
        let h = B[j].dims.slice();
        if (!N.match(RegExp(aR))) throw new Error("Invalid LHS term");
        let l = this.processTerm(N, !0, h, j);
        this.lhs.push(l);
      }), i === "") i += [...this.symbolToInfo.entries()].filter(([N, j]) => j.count === 1 || N === "...").map(([N]) => N).join("");
      else if (!i.match(RegExp(hE))) throw new Error("Invalid RHS");
      (s = i.match(RegExp(YU, "g"))) == null || s.forEach((N) => {
        if (N === "...") this.outputDims = this.outputDims.concat(this.ellipsisDims);
        else {
          let j = this.symbolToInfo.get(N);
          if (j === void 0) throw new Error("Invalid RHS symbol");
          this.outputDims.push(j.dimValue);
        }
      }), this.rhs = this.processTerm(i, !1, this.outputDims);
    }
    addSymbol(B, R, F) {
      let i = this.symbolToInfo.get(B);
      if (i !== void 0) {
        if (i.dimValue !== R && i.count !== 1) throw new Error("Dimension mismatch");
        i.count++, i.inputIndices.push(F);
      } else i = { count: 1, dimValue: R, inputIndices: [F] };
      this.symbolToInfo.set(B, i);
    }
    processTerm(B, R, F, i = -1) {
      let s = F.length, N = !1, j = [], h = 0;
      if (!B.match(RegExp(aR)) && !R && B !== "") throw new Error("Invalid LHS term");
      let l = B.match(RegExp(YU, "g")), k = new FM(i);
      return l == null || l.forEach((q, d) => {
        if (q === "...") {
          if (N) throw new Error("Only one ellipsis is allowed per input term");
          N = !0;
          let b = s - l.length + 1;
          if (b < 0) throw new Error("Ellipsis out of bounds");
          if (j = F.slice(h, h + b), this.hasEllipsis) {
            if (this.ellipsisDims.length !== j.length || this.ellipsisDims.toString() !== j.toString()) throw new Error("Ellipsis dimensions mismatch");
          } else if (R) this.hasEllipsis = !0, this.ellipsisDims = j;
          else throw new Error("Ellipsis must be specified in the LHS");
          for (let P = 0; P < j.length; P++) {
            let W = String.fromCharCode(48 + P);
            k.addSymbol(W, d + P), this.addSymbol(W, F[h++], i);
          }
        } else k.addSymbol(q, d + (this.hasEllipsis ? this.ellipsisDims.length - 1 : 0)), this.addSymbol(q, F[h++], i);
      }), k;
    }
  }, ZR = (B) => B + "_max", GM = (B, R, F, i) => {
    let s = B.map((k) => k.length).map((k, q) => FA(`input${q}`, R, k)), N = RA.size(i), j = qA("output", R, i.length), h = [...F.symbolToInfo.keys()].filter((k) => !F.rhs.symbolToIndices.has(k)), l = (k) => {
      let q = [], d = "var prod = 1.0;", b = "var sum = 0.0;", P = "sum += prod;", W = [], r = [], $ = [], m = [], z = F.symbolToInfo.size === F.rhs.symbolToIndices.size;
      F.symbolToInfo.forEach((M, L) => {
        var A;
        if (F.rhs.symbolToIndices.has(L)) {
          let G = (A = F.rhs.symbolToIndices.get(L)) == null ? void 0 : A[0];
          G !== void 0 && F.lhs.forEach((a, UA) => {
            if (M.inputIndices.includes(UA)) {
              let H = a.symbolToIndices.get(L);
              if (H === void 0) throw new Error("Invalid symbol error");
              H.forEach((T) => {
                q.push(`${s[UA].indicesSet(`input${UA}Indices`, T, j.indicesGet("outputIndices", G))}`);
              });
            }
          });
        } else F.lhs.forEach((G, a) => {
          if (M.inputIndices.includes(a)) {
            let UA = G.symbolToIndices.get(L);
            if (UA === void 0) throw new Error("Invalid symbol error");
            UA.forEach((H) => {
              W.push(`${s[a].indicesSet(`input${a}Indices`, H, `${L}`)}`);
            }), m.push(`prod *= ${s[a].getByIndices(`input${a}Indices`)};`);
          }
        }), r.push(`for(var ${L}: u32 = 0; ${L} < uniforms.${ZR(L)}; ${L}++) {`), $.push("}");
      });
      let IA = z ? [...q, `let sum = ${s.map((M, L) => M.getByIndices(`input${L}Indices`)).join(" * ")};`] : [...q, b, ...r, ...W, d, ...m, P, ...$];
      return `
            ${k.registerUniforms(h.map((M) => ({ name: `${ZR(M)}`, type: "u32" }))).registerUniform("outputSize", "u32").declareVariables(...s, j)}

            ${k.mainStart()}
            ${k.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
            var outputIndices = ${j.offsetToIndices("global_idx")};
            ${s.map((M, L) => `var input${L}Indices: ${s[L].type.indices};`).join(`
`)}
            ${IA.join(`
`)};
            ${j.setByOffset("global_idx", "sum")};
          }`;
    };
    return { name: "Einsum", shaderCache: { hint: F.equation, inputDependencies: B.map(() => "rank") }, getRunData: () => {
      let k = h.filter((d) => F.symbolToInfo.has(d)).map((d) => {
        var b;
        return { type: 12, data: ((b = F.symbolToInfo.get(d)) == null ? void 0 : b.dimValue) || 0 };
      });
      k.push({ type: 12, data: N });
      let q = B.map((d, b) => [...TA(d)]).reduce((d, b) => d.concat(b), k);
      return q.push(...TA(i)), { outputs: [{ dims: i, dataType: R }], dispatchGroup: { x: Math.ceil(N / 64) }, programUniforms: q };
    }, getShaderSource: l };
  }, hy = (B, R) => {
    let F = new MM(B.inputs, R.equation), i = F.outputDims, s = B.inputs.map((N, j) => N.dims);
    B.compute(GM(s, B.inputs[0].dataType, F, i));
  }, Ly = (B) => {
    let R = B.equation.replace(/\s+/g, "");
    return NI({ equation: R });
  };
}), JM, nR, iM, yM, Yy, zN = sA(() => {
  zA(), $A(), II(), JM = (B) => {
    if (!B || B.length !== 2) throw new Error("Expand requires 2 input.");
    let R = B[0].dims, F = Array.from(B[1].getBigInt64Array(), Number), i = F.length < R.length ? 0 : F.length - R.length, s = R.length < F.length ? 0 : R.length - F.length;
    for (; i < F.length && s < R.length; ++i, ++s) if (F[i] !== R[s] && F[i] !== 1 && R[s] !== 1) throw new Error("Expand requires shape to be broadcastable to input");
  }, nR = (B, R) => {
    let F = B.length - R.length, i = [];
    for (let s = 0; s < F; ++s) i.push(B[s]);
    for (let s = 0; s < R.length; ++s) i.push(R[s] === 1 ? B[s + F] : R[s]);
    return i;
  }, iM = (B, R) => B.length > R.length ? nR(B, R) : nR(R, B), yM = (B) => {
    let R = B[0].dims, F = Array.from(B[1].getBigInt64Array(), Number), i = iM(R, F), s = B[0].dataType, N = s === 9 || RA.size(R) === 1, j = s === 9 || R.length > 0 && R[R.length - 1] % 4 === 0 ? 4 : 1, h = N || i.length > 0 && i[i.length - 1] % 4 === 0 ? 4 : 1, l = Math.ceil(RA.size(i) / h), k = (d) => {
      let b = FA("input", s, R.length, j), P = qA("output", s, i.length, h), W;
      if (s === 9) {
        let r = ($, m, z = "") => `
          let outputIndices${m} = ${P.offsetToIndices(`outputOffset + ${m}u`)};
          let offset${m} = ${b.broadcastedIndicesToOffset(`outputIndices${m}`, P)};
          let index${m} = offset${m} / 4u;
          let component${m} = offset${m} % 4u;
          ${$}[${m}] = ${z}(${b.getByOffset(`index${m}`)}[component${m}]);
        `;
        W = `
        let outputOffset = global_idx * ${h};
        var data = vec4<u32>(0);
        ${r("data", 0, "u32")}
        ${r("data", 1, "u32")}
        ${r("data", 2, "u32")}
        ${r("data", 3, "u32")}
        ${P.setByOffset("global_idx", "data")}
      }`;
      } else W = `
        let outputIndices = ${P.offsetToIndices(`global_idx * ${h}`)};
        let inputOffset = ${b.broadcastedIndicesToOffset("outputIndices", P)};
        let data = ${P.type.value}(${b.getByOffset(`inputOffset / ${j}`)});
        ${P.setByOffset("global_idx", "data")}
      }`;
      return `
    ${d.registerUniform("vec_size", "u32").declareVariables(b, P)}
    ${d.mainStart()}
    ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
    ${W}`;
    }, q = [{ type: 12, data: l }, ...TA(R, i)];
    return { name: "Expand", shaderCache: { hint: `${i.length};${j}${h}`, inputDependencies: ["rank"] }, getShaderSource: k, getRunData: () => ({ outputs: [{ dims: i, dataType: B[0].dataType }], dispatchGroup: { x: Math.ceil(l / 64) }, programUniforms: q }) };
  }, Yy = (B) => {
    JM(B.inputs), B.compute(yM(B.inputs), { inputs: [0] });
  };
}), oM, Ky, XN = sA(() => {
  zA(), $A(), II(), Tw(), oM = (B) => {
    let R = B[0].dataType, F = RA.size(B[0].dims), i = RA.size(B[1].dims), s = i % 4 === 0, N = (j) => {
      let h = FA("x", R, [1], 4), l = FA("bias", R, [1], 4), k = qA("y", R, [1], 4), q = [{ name: "output_vec_size", type: "u32" }, { name: "bias_size", type: "u32" }], d = (P) => `
      let bias${P}_offset: u32 = (global_idx * 4 + ${P}) % uniforms.bias_size;
      let bias${P} = ${l.getByOffset(`bias${P}_offset / 4`)}[bias${P}_offset % 4];`, b = s ? `
      let bias = ${l.getByOffset("global_idx % (uniforms.bias_size / 4)")};` : `${d(0)}${d(1)}${d(2)}${d(3)}
      let bias = ${h.type.value}(bias0, bias1, bias2, bias3);`;
      return `${j.registerUniforms(q).declareVariables(h, l, k)}

    ${Mw(jC(R))}

    ${j.mainStart(HB)}
      ${j.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_vec_size")}

      let x = ${h.getByOffset("global_idx")};
      ${b}
      let x_in = x + bias;
      ${k.setByOffset("global_idx", Gw("x_in"))}
    }`;
    };
    return { name: "FastGeluWithBias", shaderCache: { hint: `${s}`, inputDependencies: ["type", "type"] }, getShaderSource: N, getRunData: (j) => ({ outputs: [{ dims: j[0].dims, dataType: j[0].dataType }], programUniforms: [{ type: 12, data: Math.ceil(F / 4) }, { type: 12, data: i }], dispatchGroup: { x: Math.ceil(F / HB / 4) } }) };
  }, Ky = (B) => {
    B.inputs.length < 2 || RA.size(B.inputs[1].dims) === 0 ? zi(B) : B.compute(oM(B.inputs));
  };
}), NM, sM, ly, ky, rN = sA(() => {
  zA(), $A(), tI(), II(), NM = (B) => {
    if (!B || B.length !== 2) throw new Error("Gather requires 2 inputs.");
  }, sM = (B, R) => {
    let F = B[0].dims, i = B[1].dims, s = F.length, N = RA.normalizeAxis(R.axis, s), j = F.slice(0);
    j.splice(N, 1, ...i);
    let h = F[N], l = B[0].dataType === 9 ? 4 : 1, k = Math.ceil(RA.size(j) / l), q = [{ type: 12, data: k }, { type: 6, data: h }, { type: 12, data: N }, ...TA(B[0].dims, B[1].dims, j)], d = (b) => {
      let P = FA("data", B[0].dataType, B[0].dims.length, l), W = FA("inputIndices", B[1].dataType, B[1].dims.length), r = qA("output", B[0].dataType, j.length, l), $ = (z) => {
        let IA = i.length, M = `var indicesIndices${z}  = ${W.type.indices}(0);`;
        for (let L = 0; L < IA; L++) M += `${IA > 1 ? `indicesIndices${z}[${L}]` : `indicesIndices${z}`} = ${j.length > 1 ? `outputIndices${z}[uniforms.axis + ${L}]` : `outputIndices${z}`};`;
        M += `
          var idx${z} = ${W.getByIndices(`indicesIndices${z}`)};
          if (idx${z} < 0) {
            idx${z} = idx${z} + uniforms.axisDimLimit;
          }
          var dataIndices${z} : ${P.type.indices};
        `;
        for (let L = 0, A = 0; L < s; L++) L === N ? (M += `${s > 1 ? `dataIndices${z}[${L}]` : `dataIndices${z}`} = u32(idx${z});`, A += IA) : (M += `${s > 1 ? `dataIndices${z}[${L}]` : `dataIndices${z}`} = ${j.length > 1 ? `outputIndices${z}[${A}]` : `outputIndices${z}`};`, A++);
        return M;
      }, m;
      if (B[0].dataType === 9) {
        let z = (IA, M, L = "") => `
          let outputIndices${M} = ${r.offsetToIndices(`outputOffset + ${M}u`)};
          ${$(M)};
          let offset${M} = ${P.indicesToOffset(`dataIndices${M}`)};
          let index${M} = offset${M} / 4u;
          let component${M} = offset${M} % 4u;
          ${IA}[${M}] = ${L}(${P.getByOffset(`index${M}`)}[component${M}]);
        `;
        m = `
        let outputOffset = global_idx * ${l};
        var value = vec4<u32>(0);
        ${z("value", 0, "u32")}
        ${z("value", 1, "u32")}
        ${z("value", 2, "u32")}
        ${z("value", 3, "u32")}
        ${r.setByOffset("global_idx", "value")}
      `;
      } else m = `
      let outputIndices = ${r.offsetToIndices("global_idx")};
      ${$("")};
      let value = ${P.getByIndices("dataIndices")};
      ${r.setByOffset("global_idx", "value")};
      `;
      return `
      ${b.registerUniform("outputSize", "u32").registerUniform("axisDimLimit", "i32").registerUniform("axis", "u32").declareVariables(P, W, r)}
      ${b.mainStart()}
        ${b.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        ${m}
      }`;
    };
    return { name: "Gather", shaderCache: { hint: R.cacheKey, inputDependencies: ["rank", "rank"] }, getRunData: () => ({ outputs: [{ dims: j, dataType: B[0].dataType }], dispatchGroup: { x: Math.ceil(k / 64) }, programUniforms: q }), getShaderSource: d };
  }, ly = (B) => NI({ axis: B.axis }), ky = (B, R) => {
    let F = B.inputs;
    NM(F), B.compute(sM(B.inputs, R));
  };
}), jM, cy, Hy, mN = sA(() => {
  zA(), $A(), II(), jM = (B, R, F, i, s, N, j, h, l) => {
    let k = [{ type: 12, data: N }, { type: 12, data: i }, { type: 12, data: s }, { type: 12, data: F }, { type: 12, data: j }, { type: 12, data: h }, { type: 12, data: l }], q = [N];
    k.push(...TA(R.dims, q));
    let d = (b) => {
      let P = FA("indices_data", R.dataType, R.dims.length), W = qA("input_slice_offsets_data", 12, 1, 1), r = [P, W], $ = [{ name: "output_size", type: "u32" }, { name: "batch_dims", type: "u32" }, { name: "input_dims", type: "u32", length: s.length }, { name: "sizes_from_slice_dims_data", type: "u32", length: F.length }, { name: "num_slices_per_batch", type: "u32" }, { name: "input_batch_stride", type: "u32" }, { name: "num_slice_dims", type: "u32" }];
      return `
  ${b.registerUniforms($).declareVariables(...r)}
  ${b.mainStart()}
    ${b.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let batch_idx = global_idx / uniforms.num_slices_per_batch;
    let base_offset = batch_idx * uniforms.input_batch_stride;

    let slice_indices_base_offset = global_idx * uniforms.num_slice_dims;
    var relative_slice_offset = 0;
    for (var dim_idx = 0u; dim_idx < uniforms.num_slice_dims; dim_idx ++) {
      var index = i32(indices_data[dim_idx + slice_indices_base_offset].x);
      let input_dim_idx = uniforms.batch_dims + dim_idx;
      if (index < 0) {
        ${s.length === 1 ? "index += i32(uniforms.input_dims);" : "index += i32(uniforms.input_dims[input_dim_idx]);"}
      }
      ${F.length === 1 ? "relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data);" : "relative_slice_offset += index * i32(uniforms.sizes_from_slice_dims_data[dim_idx]);"}
    }

    input_slice_offsets_data[global_idx] =  base_offset + u32(relative_slice_offset);
  }`;
    };
    return B.compute({ name: "computeSliceOffsets", shaderCache: { hint: `${s.length}_${F.length}`, inputDependencies: ["rank"] }, getRunData: () => ({ outputs: [{ dims: q, dataType: B.inputs[1].dataType }], dispatchGroup: { x: Math.ceil(N / 64) }, programUniforms: k }), getShaderSource: d }, { inputs: [R], outputs: [-1] })[0];
  }, cy = (B, R) => {
    let F = B.inputs, i = F[0].dims, s = F[0].dataType, N = F[1].dims, j = N[N.length - 1], h = RA.sizeToDimension(N, N.length - 1), l = RA.sizeFromDimension(i, R.batchDims + j), k = RA.sizeToDimension(i, R.batchDims), q = RA.sizeFromDimension(i, R.batchDims), d = h / k, b = new Array(j), P = l;
    for (let M = 0; M < j; ++M) b[j - 1 - M] = P, P *= i[R.batchDims + j - 1 - M];
    let W = jM(B, F[1], b, R.batchDims, i, h, d, q, j), r = R.batchDims + j;
    if (r > i.length) throw new Error("last dimension of indices must not be larger than rank of input tensor");
    let $ = N.slice(0, -1).concat(i.slice(r)), m = RA.size($), z = [{ type: 12, data: m }, { type: 12, data: l }, ...TA(F[0].dims, W.dims, $)], IA = (M) => {
      let L = FA("data", F[0].dataType, F[0].dims.length), A = FA("slice_offsets", 12, W.dims.length), G = qA("output", F[0].dataType, $.length);
      return `
          ${M.registerUniform("output_size", "u32").registerUniform("slice_size", "u32").declareVariables(L, A, G)}
            ${M.mainStart()}
            ${M.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let slice_offset = slice_offsets[global_idx / uniforms.slice_size];
          output[global_idx] = data[u32(slice_offset) + global_idx % uniforms.slice_size];
        }`;
    };
    B.compute({ name: "GatherND", shaderCache: { hint: R.cacheKey, inputDependencies: ["rank", "rank"] }, getRunData: () => ({ outputs: [{ dims: $, dataType: s }], dispatchGroup: { x: Math.ceil(m / 64) }, programUniforms: z }), getShaderSource: IA }, { inputs: [F[0], W] });
  }, Hy = (B) => ({ batchDims: B.batch_dims, cacheKey: "" });
}), SM, hM, ay, Zy, eN = sA(() => {
  zA(), $A(), tI(), II(), SM = (B, R) => {
    if (B.length < 3 || B.length > 4) throw new Error("GatherBlockQuantized requires 3 or 4 inputs.");
    let F = RA.normalizeAxis(R.quantizeAxis, B[0].dims.length), i = R.blockSize, s = B[0], N = B[2], j = B.length === 4 ? B[3] : void 0;
    if (N.dims.length !== s.dims.length || !s.dims.map((h, l) => l === F ? Math.ceil(h / i) === N.dims[l] : h === N.dims[l]).reduce((h, l) => h && l, !0)) throw new Error("Scales must have the same rank as the input tensor and the dims should match except on gatherAxis.");
    if (j) {
      if (j.dataType !== s.dataType) throw new Error("Zero point must have the same data type as the input tensor.");
      if (j.dims.length !== N.dims.length || !j.dims.map((h, l) => h === N.dims[l]).reduce((h, l) => h && l, !0)) throw new Error("Zero point must have the same rank as the input tensor and the dims should match except on quantizeAxis.");
    }
  }, hM = (B, R) => {
    let F = B[0].dims, i = B[1].dims, s = F.length, N = RA.normalizeAxis(R.gatherAxis, s), j = RA.normalizeAxis(R.quantizeAxis, s), h = F.slice(0);
    h.splice(N, 1, ...i);
    let l = RA.size(h), k = B[2].dataType, q = B[0].dataType === 22, d = [{ type: 12, data: l }, { type: 12, data: j }, { type: 12, data: N }, { type: 12, data: R.blockSize }, ...TA(...B.map((P, W) => P.dims), h)], b = (P) => {
      let W = FA("data", B[0].dataType, B[0].dims.length), r = FA("inputIndices", B[1].dataType, B[1].dims.length), $ = FA("scales", B[2].dataType, B[2].dims.length), m = B.length > 3 ? FA("zeroPoint", B[3].dataType, B[3].dims.length) : void 0, z = qA("output", k, h.length), IA = [W, r, $];
      m && IA.push(m);
      let M = [{ name: "output_size", type: "u32" }, { name: "quantize_axis", type: "u32" }, { name: "gather_axis", type: "u32" }, { name: "block_size", type: "u32" }];
      return `
        ${P.registerUniforms(M).declareVariables(...IA, z)}
        ${P.mainStart()}
        let output_indices = ${z.offsetToIndices("global_idx")};
        var indices_indices = ${r.type.indices}(0);
        ${i.length > 1 ? `
          for (var i: u32 = 0; i < ${i.length}; i++) {
            let index = ${z.indicesGet("output_indices", "uniforms.gather_axis + i")};
            ${r.indicesSet("indices_indices", "i", "index")};
          }` : `indices_indices = ${z.indicesGet("output_indices", "uniforms.gather_axis")};`};
        var data_indices = ${W.type.indices}(0);
        for (var i: u32 = 0; i < uniforms.gather_axis; i++) {
          let index = ${z.indicesGet("output_indices", "i")};
          ${W.indicesSet("data_indices", "i", "index")};
        }
        var index_from_indices = ${r.getByIndices("indices_indices")};
        if (index_from_indices < 0) {
          index_from_indices += ${F[N]};
        }
        ${W.indicesSet("data_indices", "uniforms.gather_axis", "u32(index_from_indices)")};
        for (var i = uniforms.gather_axis + 1; i < ${h.length}; i++) {
          let index = ${z.indicesGet("output_indices", `i + ${i.length} - 1`)};
          ${W.indicesSet("data_indices", "i", "index")};
        }
        let data_offset = ${W.indicesToOffset("data_indices")};
        let data_index = data_offset % 8;
        // Convert 4-bit packed data to 8-bit packed data.
        let packed_4bit_quantized_data = ${W.getByOffset("data_offset / 8")};
        let packed_8bit_quantized_data = (packed_4bit_quantized_data >> (4 * (data_index % 2))) & 0x0f0f0f0f;
        let quantized_data_vec = ${q ? "unpack4xI8" : "unpack4xU8"}(u32(packed_8bit_quantized_data));
        let quantized_data = quantized_data_vec[data_index / 2];
        var scale_indices = data_indices;
        let quantize_axis_index = ${$.indicesGet("data_indices", "uniforms.quantize_axis")} / uniforms.block_size;
        ${$.indicesSet("scale_indices", "uniforms.quantize_axis", "quantize_axis_index")};
        var scale = ${$.getByIndices("scale_indices")};
        ${m ? `
              let zero_point_indices = scale_indices;
              let zero_point_offset = ${m.indicesToOffset("zero_point_indices")};
              let zero_point_index = zero_point_offset % 8;
              let packed_4bit_zero_points = ${m.getByOffset("zero_point_offset / 8")};
              let packed_8bit_zero_points = (packed_4bit_zero_points >> (4 * (zero_point_index % 2))) & 0x0f0f0f0f;
              let zero_point_vec = ${q ? "unpack4xI8" : "unpack4xU8"}(u32(packed_8bit_zero_points));
              let zero_point = zero_point_vec[zero_point_index / 2];` : "var zero_point = 0"};
        let dequantized_data = ${jC(k)}(quantized_data - zero_point) * scale;
        ${z.setByOffset("global_idx", "dequantized_data")};
    }`;
    };
    return { name: "GatherBlockQuantized", shaderCache: { hint: `${R.cacheKey};${B.filter((P, W) => W !== 1).map((P) => P.dims.join("_")).join(";")}`, inputDependencies: Array.from({ length: B.length }, (P, W) => "rank") }, getRunData: () => ({ outputs: [{ dims: h, dataType: k }], dispatchGroup: { x: Math.ceil(l / 64) }, programUniforms: d }), getShaderSource: b };
  }, ay = (B, R) => {
    let F = B.inputs;
    SM(F, R), B.compute(hM(B.inputs, R));
  }, Zy = (B) => NI({ blockSize: B.blockSize, gatherAxis: B.gatherAxis, quantizeAxis: B.quantizeAxis });
}), LM, YM, ny, dy, vN = sA(() => {
  zA(), $A(), tI(), II(), LM = (B) => {
    if (!B || B.length !== 2) throw new Error("GatherElements requires 2 inputs.");
    if (B[0].dims.length < 1) throw new Error("GatherElements requires that the data input be rank >= 1.");
    if (B[0].dims.length !== B[1].dims.length) throw new Error(`GatherElements requires that the data input and
                     indices input tensors be of same rank.`);
  }, YM = (B, R) => {
    let F = B[0].dims, i = B[0].dataType, s = F.length, N = B[1].dims, j = B[1].dataType, h = RA.normalizeAxis(R.axis, s), l = F[h], k = N.slice(0), q = RA.size(k), d = FA("input", i, s), b = FA("indicesInput", j, N.length), P = qA("output", i, k.length), W = [{ type: 12, data: q }, { type: 6, data: l }, { type: 12, data: h }];
    return W.push(...TA(F, N, k)), { name: "GatherElements", shaderCache: { inputDependencies: ["rank", "rank"] }, getRunData: () => ({ outputs: [{ dims: k, dataType: B[0].dataType }], dispatchGroup: { x: Math.ceil(q / 64) }, programUniforms: W }), getShaderSource: (r) => `
      ${r.registerUniform("outputSize", "u32").registerUniform("axisDimLimit", "i32").registerUniform("axis", "u32").declareVariables(d, b, P)}
      ${r.mainStart()}
      ${r.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

      let outputIndices = ${P.offsetToIndices("global_idx")};

      var idx = ${b.getByOffset("global_idx")};
      if (idx < 0) {
        idx = idx + uniforms.axisDimLimit;
      }
      var inputIndices = ${d.type.indices}(outputIndices);
      ${d.indicesSet("inputIndices", "uniforms.axis", "u32(idx)")};
      let value = ${d.getByIndices("inputIndices")};

      ${P.setByOffset("global_idx", "value")};
  }` };
  }, ny = (B) => NI({ axis: B.axis }), dy = (B, R) => {
    let F = B.inputs;
    LM(F), B.compute(YM(B.inputs, R));
  };
}), KM, lM, qy, Vy, uN = sA(() => {
  zA(), $A(), II(), KM = (B) => {
    if (!B) throw new Error("Input is missing");
    if (B.length < 2 || B.length > 3) throw new Error("Invaid input number.");
    if (B.length === 3 && B[2].dims.length > 2) throw new Error("Invalid input shape of C");
    if (B[0].dataType !== B[1].dataType || B.length === 3 && B[0].dataType !== B[2].dataType) throw new Error("Input types are mismatched");
  }, lM = (B, R) => {
    let F = B[0].dims.slice(), i = B[1].dims.slice(), [s, N, j] = nJ.getShapeOfGemmResult(F, R.transA, i, R.transB, B.length === 3 ? B[2].dims : void 0), h = [s, N];
    if (!h) throw new Error("Can't use gemm on the given tensors");
    let l = 16, k = Math.ceil(N / l), q = Math.ceil(s / l), d = !0, b = RA.size(h), P = [{ type: 12, data: d ? k : b }, { type: 12, data: s }, { type: 12, data: N }, { type: 12, data: j }, { type: 1, data: R.alpha }, { type: 1, data: R.beta }], W = ["type", "type"];
    B.length === 3 && (P.push(...TA(B[2].dims)), W.push("rank")), P.push(...TA(h));
    let r = (m) => {
      let z = "";
      R.transA && R.transB ? z = "value += a[k * uniforms.M + m] * b[n * uniforms.K + k];" : R.transA && !R.transB ? z = "value += a[k * uniforms.M + m] * b[k * uniforms.N + n];" : !R.transA && R.transB ? z = "value += a[m * uniforms.K + k] * b[n * uniforms.K + k];" : !R.transA && !R.transB && (z = "value += a[m * uniforms.K + k] * b[k * uniforms.N + n];");
      let IA = R.alpha === 1 ? "" : "value *= uniforms.alpha;", M = FA("a", B[0].dataType, B[0].dims), L = FA("b", B[1].dataType, B[1].dims), A = M.type.value, G = null, a = [M, L];
      B.length === 3 && (G = FA("c", B[2].dataType, B[2].dims.length), a.push(G));
      let UA = qA("output", B[0].dataType, h.length);
      a.push(UA);
      let H = [{ name: "output_size", type: "u32" }, { name: "M", type: "u32" }, { name: "N", type: "u32" }, { name: "K", type: "u32" }, { name: "alpha", type: "f32" }, { name: "beta", type: "f32" }];
      return `
  ${m.registerUniforms(H).declareVariables(...a)}

  ${m.mainStart()}
    ${m.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

    let m = global_idx / uniforms.N;
    let n = global_idx % uniforms.N;

    var value = ${A}(0);
    for (var k: u32 = 0u; k < uniforms.K; k++) {
      ${z}
    }

    ${IA}
    ${G != null ? `let cOffset = ${G.broadcastedIndicesToOffset("vec2(m, n)", UA)}; value += ${A}(uniforms.beta) * ${G.getByOffset("cOffset")};` : ""}
    output[global_idx] = value;
  }`;
    }, $ = (m) => {
      let z = FA("a", B[0].dataType, B[0].dims), IA = FA("b", B[1].dataType, B[1].dims), M = null, L = [z, IA];
      B.length === 3 && (M = FA("c", B[2].dataType, B[2].dims.length), L.push(M));
      let A = qA("output", B[0].dataType, h.length);
      L.push(A);
      let G = [{ name: "num_tile_n", type: "u32" }, { name: "M", type: "u32" }, { name: "N", type: "u32" }, { name: "K", type: "u32" }, { name: "alpha", type: "f32" }, { name: "beta", type: "f32" }], a = "", UA = "";
      R.transA && R.transB ? (UA = `
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${z.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${IA.type.value}(0);
      }
      `, a = "value += tile_a[k][local_id.y] * tile_b[local_id.x][k];") : R.transA && !R.transB ? (UA = `
      var col = tile_row_start + local_id.x;
      var row = k_start + local_id.y;
      if (col < uniforms.M && row < uniforms.K) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.M + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${z.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${IA.type.value}(0);
      }
      `, a = "value += tile_a[k][local_id.y] * tile_b[k][local_id.x];") : !R.transA && R.transB ? (UA = `
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${z.type.value}(0);
      }

      col = k_start + local_id.x;
      row = tile_col_start + local_id.y;
      if (col < uniforms.K && row < uniforms.N) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.K + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${IA.type.value}(0);
      }
      `, a = "value += tile_a[local_id.y][k] * tile_b[local_id.x][k];") : !R.transA && !R.transB && (UA = `
      var col = k_start + local_id.x;
      var row = tile_row_start + local_id.y;
      if (col < uniforms.K && row < uniforms.M) {
        tile_a[local_id.y][local_id.x] = a[row * uniforms.K + col];
      } else {
        tile_a[local_id.y][local_id.x] = ${z.type.value}(0);
      }

      col = tile_col_start + local_id.x;
      row = k_start + local_id.y;
      if (col < uniforms.N && row < uniforms.K) {
        tile_b[local_id.y][local_id.x] = b[row * uniforms.N + col];
      } else {
        tile_b[local_id.y][local_id.x] = ${IA.type.value}(0);
      }
      `, a = "value += tile_a[local_id.y][k] * tile_b[k][local_id.x];");
      let H = R.alpha === 1 ? "" : "value *= uniforms.alpha;";
      return `
  ${m.registerUniforms(G).declareVariables(...L)}
  var<workgroup> tile_a: array<array<${z.type.storage}, ${l}>, ${l}>;
  var<workgroup> tile_b: array<array<${IA.type.storage}, ${l}>, ${l}>;
  ${m.mainStart([l, l, 1])}
    let tile_col_start = (workgroup_index % uniforms.num_tile_n) * ${l};
    let tile_row_start = (workgroup_index / uniforms.num_tile_n) * ${l};
    let num_tiles = (uniforms.K - 1) / ${l} + 1;
    var k_start = 0u;
    var value = ${A.type.value}(0);
    for (var t: u32 = 0u; t < num_tiles; t++) {
      ${UA}
      k_start = k_start + ${l};
      workgroupBarrier();

      for (var k: u32 = 0u; k < ${l}; k++) {
        ${a}
      }
      workgroupBarrier();
    }

    ${H}
    let m = tile_row_start + local_id.y;
    let n = tile_col_start + local_id.x;
    ${M != null ? `let cOffset = ${M.broadcastedIndicesToOffset("vec2(m, n)", A)}; value += ${A.type.value}(uniforms.beta) * ${M.getByOffset("cOffset")};` : ""}
    if (m < uniforms.M && n < uniforms.N) {
      output[m * uniforms.N + n] = value;
    }
  }`;
    };
    return d ? { name: "GemmShared", shaderCache: { hint: `${R.cacheKey}`, inputDependencies: W }, getRunData: () => ({ outputs: [{ dims: h, dataType: B[0].dataType }], dispatchGroup: { x: k * q }, programUniforms: P }), getShaderSource: $ } : { name: "Gemm", shaderCache: { hint: `${R.cacheKey}`, inputDependencies: W }, getRunData: () => ({ outputs: [{ dims: h, dataType: B[0].dataType }], dispatchGroup: { x: Math.ceil(b / 64) }, programUniforms: P }), getShaderSource: r };
  }, qy = (B) => {
    let R = B.transA, F = B.transB, i = B.alpha, s = B.beta;
    return { transA: R, transB: F, alpha: i, beta: s, cacheKey: `${B.transA};${B.transB};${B.alpha === 1}` };
  }, Vy = (B, R) => {
    KM(B.inputs), B.compute(lM(B.inputs, R));
  };
}), KQ, TQ, cg, Hg, kM, cM, HM, aM, ZM, nM, dM, qM, by, Ty, _N = sA(() => {
  zA(), $A(), tI(), II(), [KQ, TQ, cg, Hg] = [0, 1, 2, 3], kM = (B) => {
    if (B[0].dims.length !== 4) throw new Error("only 4-D tensor is supported.");
    if (B[0].dims.length !== B[1].dims.length) throw new Error("input dimensions must be equal to grid dimensions");
    if (B[0].dims.length - 2 !== B[1].dims[B[1].dims.length - 1]) throw new Error(`last dimension of grid must be equal to ${B[0].dims.length - 2}`);
    if (B[0].dims[0] !== B[1].dims[0]) throw new Error("grid batch size must match input batch size");
  }, cM = `
  fn gs_get_cubic_coeffs(x: f32) -> vec4<f32> {
    let cubic_alpha = -0.75f;
    let x_abs = abs(x);
    var coeffs: vec4<f32>;
    coeffs[0] = (((cubic_alpha * (x_abs + 1) - 5 * cubic_alpha) * (x_abs + 1) + 8 * cubic_alpha) * (x_abs + 1) - 4 * cubic_alpha);
    coeffs[1] = (((cubic_alpha + 2) * x_abs - (cubic_alpha + 3)) * x_abs * x_abs + 1);
    coeffs[2] = (((cubic_alpha + 2) * (1 - x_abs) - (cubic_alpha + 3)) * (1 - x_abs) * (1 - x_abs) + 1);
    coeffs[3] = (((cubic_alpha * (2 - x_abs) - 5 * cubic_alpha) * (2 - x_abs) + 8 * cubic_alpha) * (2 - x_abs) - 4 * cubic_alpha);
    return coeffs;
  }
`, HM = (B) => `
  fn gs_bicubic_interpolate(p: mat4x4<${B}>, x: f32, y: f32) -> ${B} {
    var v: vec4<f32>;
    var coeffs = gs_get_cubic_coeffs(x);
    for (var i = 0; i < 4; i++) {
      v[i] = coeffs[0] * p[i][0] + coeffs[1] * p[i][1] + coeffs[2] * p[i][2] + coeffs[3] * p[i][3];
    }
    coeffs = gs_get_cubic_coeffs(y);
    let pixel = ${B}(coeffs[0] * v[0] + coeffs[1] * v[1] + coeffs[2] * v[2] + coeffs[3] * v[3]);
    return pixel;
  }
`, aM = (B) => `
  fn gs_denormalize(n: f32, length: i32) -> f32 {
    ${B.alignCorners === 0 ? `
    // alignCorners: false => [-1, 1] to [-0.5, length - 0.5]
    return ((n + 1.0) * f32(length) - 1.0) / 2.0;
    ` : `
    // alignCorners: true => [-1, 1] to [0, length - 1]
    return (n + 1.0) / 2.0 * (f32(length - 1));
    `}
  }
`, ZM = (B) => `
  ${B.paddingMode === "reflection" ? `
      fn gs_reflect(x: i32, x_min: f32, x_max: f32) -> u32 {
        var dx = 0.0;
        var fx = f32(x);
        let range = x_max - x_min;
        if (fx < x_min) {
          dx = x_min - fx;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_min + r;
          } else {
            fx = x_max - r;
          }
        } else if (fx > x_max) {
          dx = fx - x_max;
          let n = u32(dx / range);
          let r = dx - f32(n) * range;
          if (n % 2 == 0) {
            fx = x_max - r;
          } else {
            fx = x_min + r;
          }
        }
        return u32(fx);
      }` : ""}
`, nM = (B, R, F) => `
  fn pixel_at_grid(r: i32, c: i32, H: i32, W: i32, batch: u32, channel: u32, border: vec4<f32>) -> ${R} {
     var pixel = ${R}(0);
     var indices = vec4<u32>(0);
     indices[${KQ}] = batch;
     indices[${TQ}] = channel;` + (() => {
    switch (F.paddingMode) {
      case "zeros":
        return `
          if (r >= 0 && r < H && c >=0 && c < W) {
            indices[${cg}] = u32(r);
            indices[${Hg}] = u32(c);
          } else {
            return ${R}(0);
          }
        `;
      case "border":
        return `
          indices[${cg}] = u32(clamp(r, 0, H - 1));
          indices[${Hg}] = u32(clamp(c, 0, W - 1));
        `;
      case "reflection":
        return `
          indices[${cg}] = gs_reflect(r, border[1], border[3]);
          indices[${Hg}] = gs_reflect(c, border[0], border[2]);
        `;
      default:
        throw new Error(`padding mode ${F.paddingMode} is not supported`);
    }
  })() + `
    return ${B.getByIndices("indices")};
  }
`, dM = (B, R, F) => (() => {
    switch (F.mode) {
      case "nearest":
        return `
          let result = pixel_at_grid(i32(round(y)), i32(round(x)), H_in, W_in, indices[${KQ}], indices[${TQ}], border);
        `;
      case "bilinear":
        return `
          let x1 = i32(floor(x));
          let y1 = i32(floor(y));
          let x2 = x1 + 1;
          let y2 = y1 + 1;

          let p11 = pixel_at_grid(y1, x1, H_in, W_in, indices[${KQ}], indices[${TQ}], border);
          let p12 = pixel_at_grid(y1, x2, H_in, W_in, indices[${KQ}], indices[${TQ}], border);
          let p21 = pixel_at_grid(y2, x1, H_in, W_in, indices[${KQ}], indices[${TQ}], border);
          let p22 = pixel_at_grid(y2, x2, H_in, W_in, indices[${KQ}], indices[${TQ}], border);

          let dx2 = ${R}(f32(x2) - x);
          let dx1 = ${R}(x - f32(x1));
          let dy2 = ${R}(f32(y2) - y);
          let dy1 = ${R}(y - f32(y1));
          let result = dy2 * (dx2 * p11 + dx1 * p12) + dy1 * (dx2 * p21 + dx1 * p22);
        `;
      case "bicubic":
        return `
          let x0 = i32(floor(x)) - 1;
          let y0 = i32(floor(y)) - 1;
          var p: mat4x4<${R}>;
          for (var h = 0; h < 4; h++) {
            for (var w = 0; w < 4; w++) {
              p[h][w] = pixel_at_grid(h + y0, w + x0, H_in, W_in, indices[${KQ}], indices[${TQ}], border);
            }
          }

          let dx = x - f32(x0 + 1);
          let dy = y - f32(y0 + 1);
          let result = gs_bicubic_interpolate(p, dx, dy);
        `;
      default:
        throw new Error(`mode ${F.mode} is not supported`);
    }
  })() + `${B.setByOffset("global_idx", "result")}`, qM = (B, R) => {
    let F = FA("x", B[0].dataType, B[0].dims.length), i = [B[1].dims[0], B[1].dims[1], B[1].dims[2]], s = FA("grid", B[1].dataType, i.length, 2), N = [B[0].dims[0], B[0].dims[1], B[1].dims[1], B[1].dims[2]];
    R.format === "NHWC" && (N = [B[0].dims[0], B[1].dims[1], B[1].dims[2], B[0].dims[3]], [KQ, TQ, cg, Hg] = [0, 3, 1, 2]);
    let j = qA("output", B[0].dataType, N.length), h = F.type.value, l = RA.size(N), k = [{ type: 12, data: l }, ...TA(B[0].dims, i, N)], q = (d) => `
  ${d.registerUniform("output_size", "u32").declareVariables(F, s, j)}
  ${cM}
  ${HM(h)}
  ${aM(R)}
  ${ZM(R)}
  ${nM(F, h, R)}

  ${d.mainStart()}
    ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let H_in = i32(uniforms.x_shape[${cg}]);
      let W_in = i32(uniforms.x_shape[${Hg}]);

      ${R.alignCorners === 0 ? `
      let x_min = -0.5;
      let x_max = f32(W_in) - 0.5;
      let y_min = -0.5;
      let y_max = f32(H_in) - 0.5;
      ` : `
      let x_min = 0.0;
      let x_max = f32(W_in) - 1.0;
      let y_min = 0.0;
      let y_max = f32(H_in) - 1.0;
      `};
      let border = vec4<f32>(x_min, y_min, x_max, y_max);

      let indices = ${j.offsetToIndices("global_idx")};
      var grid_indices = vec3<u32>(indices[${KQ}], indices[${cg}], indices[${Hg}]);
      let nxy = ${s.getByIndices("grid_indices")};
      var x = gs_denormalize(f32(nxy[0]), W_in);
      var y = gs_denormalize(f32(nxy[1]), H_in);

      ${dM(j, h, R)}
  }`;
    return { name: "GridSample", shaderCache: { hint: `${R.cacheKey}`, inputDependencies: ["type", "type"] }, getRunData: (d) => {
      let b = RA.size(N);
      return { outputs: [{ dims: N, dataType: d[0].dataType }], dispatchGroup: { x: Math.ceil(b / 64) }, programUniforms: k };
    }, getShaderSource: q };
  }, by = (B, R) => {
    kM(B.inputs), B.compute(qM(B.inputs, R));
  }, Ty = (B) => NI({ alignCorners: B.align_corners, mode: B.mode, paddingMode: B.padding_mode, format: B.format });
}), lC, VM, xy, dR, bM, aE, Py, fy = sA(() => {
  zA(), $A(), tI(), dw(), bw(), II(), wg(), lC = (B, R) => B.length > R && B[R].dims.length > 0 ? B[R] : void 0, VM = (B, R) => {
    let F = B[0], i = lC(B, 1), s = lC(B, 2), N = lC(B, 3), j = lC(B, 4), h = lC(B, 5), l = lC(B, 6), k = lC(B, 7);
    if (F.dims.length !== 3 && F.dims.length !== 5) throw new Error("Input query is expected to have 3 or 5 dimensions");
    let q = F.dims[0], d = F.dims[1], b = F.dims.length === 3 ? F.dims[2] : R.numHeads * F.dims[4], P = d, W = 0, r = 0, $ = Math.floor(b / R.numHeads);
    if (l && k && RA.size(l.dims) && RA.size(k.dims)) {
      if (l.dims.length !== 4) throw new Error('Input "past_key" is expected to have 4 dimensions');
      if (l.dims[0] !== q || l.dims[1] !== R.numHeads || l.dims[3] !== $) throw new Error('Input "past_key" shape (batch_size, num_heads, past_sequence_length, head_size)');
      if (k.dims[0] !== q || k.dims[1] !== R.numHeads || k.dims[3] !== $) throw new Error('Input "past_value" shape (batch_size, num_heads, past_sequence_length, head_size)');
      if (l.dims[2] !== k.dims[2]) throw new Error('Input "past_key" and "past_value" shall have same dim 2 (past_sequence_length)');
      if (k.dims.length !== 4) throw new Error('Input "past_value" is expected to have 4 dimensions');
      W = l.dims[2], r = l.dims[2];
    } else if (l && RA.size(l.dims) || k && RA.size(k.dims)) throw new Error('Input "past_key" and "past_value" shall be both present or both absent');
    let m;
    if (i && RA.size(i.dims) > 0) {
      if (F.dims.length !== 3) throw new Error('Input "query" is expected to have 3 dimensions when key is given');
      if (i.dims.length < 3 || i.dims.length > 5) throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');
      if (F.dims[0] !== i.dims[0]) throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');
      if (i.dims.length === 3) {
        if (i.dims[2] !== F.dims[2]) throw new Error('Input "query" and "key" shall have same dim 2 (hidden_size)');
        m = 2, P = i.dims[1];
      } else if (i.dims.length === 5) {
        if (i.dims[2] !== R.numHeads || i.dims[3] !== 2 || i.dims[4] !== $) throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');
        if (s) throw new Error('Expect "value" be none when "key" has packed kv format.');
        m = 5, P = i.dims[1];
      } else {
        if (i.dims[1] !== R.numHeads || i.dims[3] !== $) throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');
        m = 0, P = i.dims[2];
      }
    } else {
      if (F.dims.length !== 5) throw new Error('Input "query" is expected to have 5 dimensions when key is empty');
      if (F.dims[2] !== R.numHeads || F.dims[3] !== 3) throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');
      m = 3;
    }
    if (N && RA.size(N.dims) > 0) {
      if (N.dims.length !== 1) throw new Error('Input "bias" is expected to have 1 dimension');
      if (i && i.dims.length === 5 && i.dims[3] === 2) throw new Error("bias is not allowed for packed kv.");
    }
    let z = W + P, IA = 0;
    if (j && RA.size(j.dims) > 0) {
      IA = 8;
      let G = j.dims;
      throw G.length === 1 ? G[0] === q ? IA = 1 : G[0] === 3 * q + 2 && (IA = 3) : G.length === 2 && G[0] === q && G[1] === z && (IA = 5), IA === 8 ? new Error('Input "key_padding_mask" shape shall be (batch_size) or (batch_size, total_sequence_length)') : new Error("Mask not supported");
    }
    let M = !1, L = b;
    if (s && RA.size(s.dims) > 0) {
      if (s.dims.length !== 3 && s.dims.length !== 4) throw new Error('Input "value" is expected to have 3 or 4 dimensions');
      if (F.dims[0] !== s.dims[0]) throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');
      if (s.dims.length === 3) {
        if (P !== s.dims[1]) throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');
        L = s.dims[2];
      } else {
        if (P !== s.dims[2]) throw new Error('Input "key" and "value" shall have the same dim 2 (kv_sequence_length)');
        L = s.dims[1] * s.dims[3], M = !0;
      }
    }
    let A = !1;
    if (j && RA.size(j.dims) > 0) throw new Error("Key padding mask is not supported");
    if (h && RA.size(h.dims) > 0) {
      if (h.dims.length !== 4) throw new Error('Input "attention_bias" is expected to have 4 dimensions');
      if (h.dims[0] !== q || h.dims[1] !== R.numHeads || h.dims[2] !== d || h.dims[3] !== z) throw new Error('Expect "attention_bias" shape (batch_size, num_heads, sequence_length, total_sequence_length)');
    }
    return { batchSize: q, sequenceLength: d, pastSequenceLength: W, kvSequenceLength: P, totalSequenceLength: z, maxSequenceLength: r, inputHiddenSize: 0, hiddenSize: b, vHiddenSize: L, headSize: $, vHeadSize: Math.floor(L / R.numHeads), numHeads: R.numHeads, isUnidirectional: !1, pastPresentShareBuffer: !1, maskFilterValue: R.maskFilterValue, maskType: IA, scale: R.scale, broadcastResPosBias: A, passPastInKv: M, qkvFormat: m };
  }, xy = (B) => NI({ ...B }), dR = NI({ perm: [0, 2, 1, 3] }), bM = (B, R, F, i, s, N, j) => {
    let h = [i, s, N], l = RA.size(h), k = [{ type: 12, data: l }, { type: 12, data: j }, { type: 12, data: N }], q = (d) => {
      let b = qA("qkv_with_bias", R.dataType, h), P = FA("qkv", R.dataType, h), W = FA("bias", F.dataType, h), r = [{ name: "output_size", type: "u32" }, { name: "bias_offset", type: "u32" }, { name: "hidden_size", type: "u32" }];
      return `
  ${d.registerUniforms(r).declareVariables(P, W, b)}
  ${d.mainStart()}
    ${d.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let bias_offset_idx = (global_idx % uniforms.hidden_size) + uniforms.bias_offset;

    qkv_with_bias[global_idx] = qkv[global_idx] + bias[bias_offset_idx];
  }`;
    };
    return B.compute({ name: "MultiHeadAttentionAddBias", shaderCache: { inputDependencies: ["type", "type"] }, getRunData: () => ({ outputs: [{ dims: h, dataType: R.dataType, gpuDataType: 0 }], dispatchGroup: { x: Math.ceil(l / 64) }, programUniforms: k }), getShaderSource: q }, { inputs: [R, F], outputs: [-1] })[0];
  }, aE = (B, R, F, i, s, N, j, h) => {
    let l = N;
    if (j && RA.size(j.dims) > 0) {
      if (i === 1) throw new Error("AddBiasReshape is not implemented. Please export your model with packed QKV or KV");
      return l = bM(B, N, j, R, i, F * s, h), l = l.reshape([R, i, F, s]), F === 1 || i === 1 ? l : B.compute(tC(l, dR.perm), { inputs: [l], outputs: [-1] })[0];
    } else return N.dims.length === 3 && (l = N.reshape([R, i, F, s])), F === 1 || i === 1 ? l : B.compute(tC(l, dR.perm), { inputs: [l], outputs: [-1] })[0];
  }, Py = (B, R) => {
    let F = VM(B.inputs, R), i = B.inputs[0], s = lC(B.inputs, 1), N = lC(B.inputs, 2), j = lC(B.inputs, 3), h = lC(B.inputs, 4), l = lC(B.inputs, 5), k = lC(B.inputs, 6), q = lC(B.inputs, 7);
    if (i.dims.length === 5) throw new Error("Packed QKV is not implemented");
    if ((s == null ? void 0 : s.dims.length) === 5) throw new Error("Packed KV is not implemented");
    let d = s && N && s.dims.length === 4 && N.dims.length === 4, b = aE(B, F.batchSize, F.numHeads, F.sequenceLength, F.headSize, i, j, 0);
    if (d) return VE(B, b, s, N, h, void 0, k, q, l, F);
    if (!s || !N) throw new Error("key and value must be provided");
    let P = aE(B, F.batchSize, F.numHeads, F.kvSequenceLength, F.headSize, s, j, F.hiddenSize), W = aE(B, F.batchSize, F.numHeads, F.kvSequenceLength, F.vHeadSize, N, j, 2 * F.hiddenSize);
    VE(B, b, P, W, h, void 0, k, q, l, F);
  };
}), TM, xM, PM, fM, Nw, py, ty, Wy = sA(() => {
  zA(), $A(), tI(), II(), TM = (B) => {
    if (!B || B.length < 1) throw new Error("too few inputs");
  }, xM = (B, R) => {
    let F = [], i = R.numOutputs;
    return B[1].dims[0] > 0 && (B[1].getBigInt64Array().forEach((s) => F.push(Number(s))), i = F.length), NI({ numOutputs: i, axis: R.axis, splitSizes: F });
  }, PM = (B) => `
fn calculateOutputIndex(index: u32) -> u32 {
    for (var i: u32 = 0u; i < ${B}u; i += 1u ) {
    if (index < ${VA("uniforms.size_in_split_axis", "i", B)}) {
        return i;
    }
    }
    return ${B}u;
}`, fM = (B) => {
    let R = B.length, F = [];
    for (let i = 0; i < R; ++i) {
      let s = B[i].setByIndices("indices", "input[global_idx]");
      R === 1 ? F.push(s) : i === 0 ? F.push(`if (output_number == ${i}u) { ${s} }`) : i === R - 1 ? F.push(`else { ${s} }`) : F.push(`else if (output_number == ${i}) { ${s} }`);
    }
    return `
      fn writeBufferData(output_number: u32, indices: ${B[0].type.indices}, global_idx: u32) {
        ${F.join(`
`)}
      }`;
  }, Nw = (B, R) => {
    let F = B[0].dims, i = RA.size(F), s = B[0].dataType, N = RA.normalizeAxis(R.axis, F.length), j = new Array(R.numOutputs), h = FA("input", s, F.length), l = new Array(R.numOutputs), k = [], q = [], d = 0, b = [{ type: 12, data: i }];
    for (let W = 0; W < R.numOutputs; W++) {
      d += R.splitSizes[W], l[W] = d;
      let r = F.slice();
      r[N] = R.splitSizes[W], q.push(r), j[W] = qA(`output${W}`, s, r.length), k.push({ dims: q[W], dataType: B[0].dataType });
    }
    b.push({ type: 12, data: l }, ...TA(F, ...q));
    let P = (W) => `
  ${W.registerUniform("input_size", "u32").registerUniform("size_in_split_axis", "u32", l.length).declareVariables(h, ...j)}
  ${PM(l.length)}
  ${fM(j)}

  ${W.mainStart()}
    ${W.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.input_size")}

    var indices = ${h.offsetToIndices("global_idx")};
    var index = ${h.indicesGet("indices", N)};
    let output_number = calculateOutputIndex(index);
    if (output_number != 0) {
      index -= ${VA("uniforms.size_in_split_axis", "output_number - 1u", l.length)};
      ${h.indicesSet("indices", N, "index")};
    }
    writeBufferData(output_number, indices, global_idx);
  }`;
    return { name: "Split", shaderCache: { hint: R.cacheKey, inputDependencies: ["rank"] }, getShaderSource: P, getRunData: () => ({ outputs: k, dispatchGroup: { x: Math.ceil(i / 64) }, programUniforms: b }) };
  }, py = (B, R) => {
    TM(B.inputs);
    let F = B.inputs.length === 1 ? R : xM(B.inputs, R);
    B.compute(Nw(B.inputs, F), { inputs: [0] });
  }, ty = (B) => {
    let R = B.axis, F = B.splitSizes, i = B.numOutputs < 0 ? F.length : B.numOutputs;
    if (i !== F.length) throw new Error("numOutputs and splitSizes lengh must be equal");
    return NI({ axis: R, numOutputs: i, splitSizes: F });
  };
}), pM, TU, Oy, zy = sA(() => {
  zA(), $A(), tI(), II(), pM = (B, R) => {
    let [F, i, s, N] = B, { numHeads: j, rotaryEmbeddingDim: h } = R;
    if (F.dims.length !== 3 && F.dims.length !== 4) throw new Error(`Input 'x' is expected to have 3 or 4 dimensions, got ${F.dims.length}`);
    if (!RA.areEqual(i.dims, []) && !RA.areEqual(i.dims, [1]) && i.dims.length !== 2) throw new Error(`Input 'position_ids' is expected to have 0, 1, or 2 dimensions, got ${i.dims.length}`);
    if (s.dims.length !== 2) throw new Error(`Input 'cos_cache' is expected to have 2 dimensions, got ${s.dims.length}`);
    if (N.dims.length !== 2) throw new Error(`Input 'sin_cache' is expected to have 2 dimensions, got ${N.dims.length}`);
    if (!RA.areEqual(s.dims, N.dims)) throw new Error("Inputs 'cos_cache' and 'sin_cache' are expected to have the same shape");
    if (h > 0 && j === 0) throw new Error("num_heads must be provided if rotary_embedding_dim is specified");
    let l = F.dims[0], k = F.dims[F.dims.length - 2], q = s.dims[0], d = RA.sizeFromDimension(F.dims, 1) / k, b = h === 0 ? s.dims[1] * 2 : d / j;
    if (h > b) throw new Error("rotary_embedding_dim must be less than or equal to head_size");
    if (i.dims.length === 2) {
      if (l !== i.dims[0]) throw new Error(`Input 'position_ids' dimension 0 should be of size batch_size, got ${i.dims[0]}`);
      if (k !== i.dims[1]) throw new Error(`Input 'position_ids' dimension 1 should be of size sequence_length, got ${i.dims[1]}`);
    }
    if (b / 2 !== s.dims[1] && h / 2 !== s.dims[1]) throw new Error(`Input 'cos_cache' dimension 1 should be same as head_size / 2 or rotary_embedding_dim / 2, got ${s.dims[1]}`);
    if (k > q) throw new Error("Updating cos_cache and sin_cache in RotaryEmbedding is not currently supported");
  }, TU = (B, R) => {
    let { interleaved: F, numHeads: i, rotaryEmbeddingDim: s, scale: N } = R, j = B[0].dims[0], h = RA.sizeFromDimension(B[0].dims, 1), l = B[0].dims[B[0].dims.length - 2], k = h / l, q = B[2].dims[1], d = s === 0 ? q * 2 : k / i, b = new Array(j, l, k / d, d - q), P = RA.computeStrides(b), W = [{ type: 1, data: N }, { type: 12, data: b }, { type: 12, data: P }, ...B[0].dims.length === 3 ? new Array({ type: 12, data: [h, k, d, 1] }) : [], ...B[0].dims.length === 4 ? new Array({ type: 12, data: [h, d, l * d, 1] }) : [], ...TA(B[0].dims, B[1].dims, B[2].dims, B[3].dims, B[0].dims)], r = ($) => {
      let m = FA("input", B[0].dataType, B[0].dims.length), z = FA("position_ids", B[1].dataType, B[1].dims.length), IA = FA("cos_cache", B[2].dataType, B[2].dims.length), M = FA("sin_cache", B[3].dataType, B[3].dims.length), L = qA("output", B[0].dataType, B[0].dims.length);
      return $.registerUniforms([{ name: "scale", type: "f32" }, { name: "global_shape", type: "u32", length: b.length }, { name: "global_strides", type: "u32", length: P.length }, { name: "input_output_strides", type: "u32", length: P.length }]), `
        ${$.declareVariables(m, z, IA, M, L)}

        ${$.mainStart(HB)}
          let half_rotary_emb_dim = uniforms.${IA.name}_shape[1];
          let bsnh = global_idx / uniforms.global_strides % uniforms.global_shape;
          let size = uniforms.global_shape[0] * uniforms.global_strides[0];
          ${$.guardAgainstOutOfBoundsWorkgroupSizes("size")}

          if (bsnh[3] < half_rotary_emb_dim) {
            let position_ids_idx =
                ${z.broadcastedIndicesToOffset("bsnh.xy", qA("", z.type.tensor, 2))};
            let position_id =
                u32(${z.getByOffset("position_ids_idx")}) + select(0, bsnh[1], position_ids_idx == 0);
            let i = dot(bsnh, uniforms.input_output_strides) + select(0, bsnh[3], ${F});
            let j = i + select(half_rotary_emb_dim, 1, ${F});
            let re = ${m.getByOffset("i")} * ${IA.get("position_id", "bsnh[3]")} -
                ${m.getByOffset("j")} * ${M.get("position_id", "bsnh[3]")};
            ${L.setByOffset("i", "re")}
            let im = ${m.getByOffset("i")} * ${M.get("position_id", "bsnh[3]")} +
                ${m.getByOffset("j")} * ${IA.get("position_id", "bsnh[3]")};
            ${L.setByOffset("j", "im")}
          } else {
            let k = dot(bsnh, uniforms.input_output_strides) + half_rotary_emb_dim;
            ${L.setByOffset("k", m.getByOffset("k"))}
          }
        }`;
    };
    return { name: "RotaryEmbedding", shaderCache: { hint: NI({ interleaved: F }).cacheKey, inputDependencies: ["rank", "rank", "rank", "rank"] }, getShaderSource: r, getRunData: () => ({ outputs: [{ dims: B[0].dims, dataType: B[0].dataType }], dispatchGroup: { x: Math.ceil(RA.size(b) / HB) }, programUniforms: W }) };
  }, Oy = (B, R) => {
    pM(B.inputs, R), B.compute(TU(B.inputs, R));
  };
}), tM, WM, qR, OM, Xy, $N = sA(() => {
  tI(), zA(), bw(), fy(), Wy(), wg(), zy(), II(), tM = (B, R) => {
    if (R.doRotary && B.length <= 7) throw new Error("cos_cache and sin_cache inputs are required if do_rotary is specified");
    let F = B[0], i = B[1], s = B[2], N = B[3], j = B[4];
    if (R.doRotary !== 0 && B.length <= 7) throw new Error("cos_cast and sin_cache are expected if do_rotary attribute is non-zero");
    if (R.localWindowSize !== -1) throw new Error("Local attention is not supported");
    if (R.softcap !== 0) throw new Error("Softcap is not supported");
    if (R.rotaryInterleaved !== 0) throw new Error("Rotary interleaved is not supported");
    if (R.smoothSoftmax) throw new Error("Smooth softmax is not supported");
    if (F.dims.length !== 3 && F.dims.length !== 5) throw new Error("Input query is expected to have 3 or 5 dimensions");
    let h = !1, l = F.dims[0], k = F.dims[1], q = F.dims.length === 3 ? h ? F.dims[2] / 3 : F.dims[2] : R.numHeads * F.dims[4], d = k, b = 0, P = !i || i.dims.length === 0, W = Math.floor(P ? q / (R.numHeads + 2 * R.kvNumHeads) : q / R.numHeads);
    P && (q = W * R.numHeads);
    let r = N && N.dims.length !== 0, $ = j && j.dims.length !== 0;
    if (r && N.dims.length === 4 && N.dims[0] === l && N.dims[1] !== R.kvNumHeads && N.dims[2] === R.kvNumHeads && N.dims[3] === W) throw new Error("BSNH pastKey/pastValue is not supported");
    if (r && $) {
      if (N.dims.length !== 4) throw new Error('Input "past_key" is expected to have 4 dimensions');
      if (j.dims.length !== 4) throw new Error('Input "past_value" is expected to have 4 dimensions');
      b = N.dims[2];
    } else if (r || $) throw new Error('Input "past_key" and "past_value" shall be both present or both absent');
    let m = 1;
    if (i && i.dims.length > 0) {
      if (F.dims.length !== 3) throw new Error('Input "query" is expected to have 3 dimensions when key is given');
      if (i.dims.length < 3 || i.dims.length > 5) throw new Error('Input "key" is expected to have 3, 4, or 5 dimensions');
      if (F.dims[0] !== i.dims[0]) throw new Error('Input "query" and "key" shall have same dim 0 (batch size)');
      if (i.dims.length === 3) {
        if (F.dims[2] % i.dims[2] !== 0) throw new Error('Dimension 2 of "query" should be a multiple of "key"');
        d = i.dims[1];
      } else if (i.dims.length === 5) {
        if (i.dims[2] !== R.numHeads || i.dims[3] !== 2 || i.dims[4] !== W) throw new Error('Expect "key" shape (batch_size, kv_sequence_length, num_heads, 2, head_size) for packed kv');
        if (s) throw new Error('Expect "value" be none when "key" has packed kv format.');
        d = i.dims[1];
      } else {
        if (i.dims[1] !== R.numHeads || i.dims[3] !== W) throw new Error('Expect "key" shape (batch_size, num_heads, kv_sequence_length, head_size) for past_key');
        d = i.dims[2];
      }
    } else {
      if (F.dims.length !== 3 && F.dims.length !== 5) throw new Error('Input "query" is expected to have 3 or 5 dimensions when key is empty');
      if (F.dims.length === 5 && (F.dims[2] !== R.numHeads || F.dims[3] !== 3)) throw new Error('Expect "query" shape (batch_size, kv_sequence_length, num_heads, 3, head_size) for packed kv');
      m = 3;
    }
    let z = 0, IA = !1, M = R.kvNumHeads ? W * R.kvNumHeads : q;
    if (s && s.dims.length > 0) {
      if (s.dims.length !== 3 && s.dims.length !== 4) throw new Error('Input "value" is expected to have 3 or 4 dimensions');
      if (F.dims[0] !== s.dims[0]) throw new Error('Input "query" and "value" shall have same dim 0 (batch_size)');
      if (s.dims.length === 3) {
        if (d !== s.dims[1]) throw new Error('Input "key" and "value" shall have the same dim 1 (kv_sequence_length)');
        M = s.dims[2];
      } else {
        if (d !== s.dims[2]) throw new Error('Input "past_key" and "past_value" shall have the same dim 2 (kv_sequence_length)');
        M = s.dims[1] * s.dims[3], IA = !0;
      }
    }
    let L = B.length > 4 ? B[5] : void 0;
    if (L && L.dims.length !== 1 && L.dims[0] !== l) throw new Error('Input "seqlens" is expected to have 1 dimension and the same dim 0 as batch_size');
    return { batchSize: l, sequenceLength: k, pastSequenceLength: b, kvSequenceLength: d, totalSequenceLength: -1, maxSequenceLength: -1, inputHiddenSize: 0, hiddenSize: q, vHiddenSize: M, headSize: W, vHeadSize: Math.floor(M / R.kvNumHeads), numHeads: R.numHeads, kvNumHeads: R.kvNumHeads, nReps: R.numHeads / R.kvNumHeads, pastPresentShareBuffer: !1, maskType: z, scale: R.scale, broadcastResPosBias: !1, passPastInKv: IA, qkvFormat: m };
  }, WM = NI({ perm: [0, 2, 1, 3] }), qR = (B, R, F) => {
    let i = R, s = F.kvNumHeads;
    return R.dims.length === 3 && F.kvSequenceLength !== 0 && (i = R.reshape([F.batchSize, F.kvSequenceLength, s, F.headSize]), i = B.compute(tC(i, WM.perm), { inputs: [i], outputs: [-1] })[0]), i;
  }, OM = (B, R, F, i) => {
    let s = 7, N = ["type", "type"], j = [B * R], h = B * R, l = [{ type: 12, data: h }, { type: 12, data: R }, { type: 12, data: B }], k = (q) => {
      let d = FA("seq_lens", F.dataType, F.dims), b = FA("total_seq_lens", i.dataType, i.dims), P = qA("pos_ids", s, j), W = [{ name: "output_size", type: "u32" }, { name: "sequence_length", type: "u32" }, { name: "batch_size", type: "u32" }];
      return `
  ${q.registerUniforms(W).declareVariables(d, b, P)}
  ${q.mainStart()}
    ${q.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
    let total_sequence_length = u32(${b.getByOffset("0")});
    let is_subsequent_prompt = uniforms.sequence_length > 1 && uniforms.sequence_length != total_sequence_length;
    let is_first_prompt = !is_subsequent_prompt && uniforms.sequence_length == total_sequence_length;
    let batch_idx = global_idx / uniforms.sequence_length;
    let sequence_idx = i32(global_idx % uniforms.sequence_length);
    var pos_id: i32 = 0;
    let seqlen = ${d.getByOffset("batch_idx")};
    let total_seqlen = seqlen + 1;
    if (is_first_prompt) {
      if (sequence_idx < total_seqlen) {
        pos_id = sequence_idx;
      } else {
        pos_id = 1;
      }
      ${P.setByOffset("global_idx", "pos_id")}
    } else if (is_subsequent_prompt) {
      let past_seqlen = total_seqlen - i32(uniforms.sequence_length);
      if (past_seqlen + sequence_idx < total_seqlen) {
        pos_id = past_seqlen + sequence_idx;
      } else {
        pos_id = 1;
      }
      ${P.setByOffset("global_idx", "pos_id")}
    } else if (global_idx < uniforms.batch_size) {
      ${P.setByOffset("global_idx", "seqlen")}
    };
  }
  `;
    };
    return { name: "GeneratePositionIds", shaderCache: { hint: `${B};${R}`, inputDependencies: N }, getRunData: () => ({ outputs: [{ dims: j, dataType: s }], dispatchGroup: { x: Math.ceil(h / 64) }, programUniforms: l }), getShaderSource: k };
  }, Xy = (B, R) => {
    var M;
    let F = tM(B.inputs, R);
    if (B.inputs[0].dims.length === 5) throw new Error("Packed QKV is not implemented");
    if (((M = B.inputs[1]) == null ? void 0 : M.dims.length) === 5) throw new Error("Packed KV is not implemented");
    let i = B.inputs[0], s = B.inputs[1] && B.inputs[1].dims.length > 0 ? B.inputs[1] : void 0, N = B.inputs[2] && B.inputs[2].dims.length > 0 ? B.inputs[2] : void 0, j = B.inputs[3] && B.inputs[3].dims.length !== 0 ? B.inputs[3] : void 0, h = B.inputs[4] && B.inputs[4].dims.length !== 0 ? B.inputs[4] : void 0, l = B.inputs.length > 4 ? B.inputs[5] : void 0, k = B.inputs.length > 5 ? B.inputs[6] : void 0, q = F.kvNumHeads ? F.kvNumHeads : F.numHeads, d = NI({ axis: 2, numOutputs: 3, splitSizes: [F.numHeads * F.headSize, q * F.headSize, q * F.headSize] }), [b, P, W] = !s && !N ? B.compute(Nw([i], d), { inputs: [i], outputs: [-1, -1, -1] }) : [i, s, N], r, $;
    if (R.doRotary) {
      let L = B.compute(OM(F.batchSize, F.sequenceLength, l, k), { inputs: [l, k], outputs: [-1] })[0], A = B.inputs[7], G = B.inputs[8], a = NI({ interleaved: R.rotaryInterleaved !== 0, numHeads: F.numHeads, rotaryEmbeddingDim: 0, scale: R.scale }), UA = [b, L, A, G], H = [-1];
      r = B.compute(TU(UA, a), { inputs: UA, outputs: H })[0], UA.splice(0, 1, P);
      let T = NI({ interleaved: R.rotaryInterleaved !== 0, numHeads: F.kvNumHeads, rotaryEmbeddingDim: 0, scale: R.scale });
      $ = B.compute(TU(UA, T), { inputs: UA, outputs: H })[0];
    }
    let m = aE(B, F.batchSize, F.numHeads, F.sequenceLength, F.headSize, R.doRotary ? r : b, void 0, 0), z = qR(B, R.doRotary ? $ : P, F), IA = qR(B, W, F);
    VE(B, m, z, IA, void 0, void 0, j, h, void 0, F, l, k);
  };
}), VR, zM, XM, ry, As = sA(() => {
  zA(), $A(), wg(), II(), VR = (B, R, F, i, s, N, j, h) => {
    let l = xI(N), k = l === 1 ? "f32" : `vec${l}f`, q = l === 1 ? "vec2f" : `mat2x${l}f`, d = s * j, b = 64;
    d === 1 && (b = 256);
    let P = [s, j, N / l], W = [s, j, 2], r = ["rank", "type", "type"], $ = [];
    $.push(...TA(P, W));
    let m = (z) => {
      let IA = FA("x", R.dataType, 3, l), M = FA("scale", F.dataType, F.dims), L = FA("bias", i.dataType, i.dims), A = qA("output", 1, 3, 2), G = [IA, M, L, A];
      return `
  var<workgroup> workgroup_shared : array<${q}, ${b}>;
  const workgroup_size = ${b}u;
  ${z.declareVariables(...G)}
  ${z.mainStart(b)}
    let batch = workgroup_index / uniforms.x_shape[1];
    let channel = workgroup_index % uniforms.x_shape[1];
    let hight = uniforms.x_shape[2];
    // initialize workgroup memory
    var sum = ${k}(0);
    var squared_sum = ${k}(0);
    for (var h = local_idx; h < hight; h += workgroup_size) {
      let value = ${k}(${IA.get("batch", "channel", "h")});
      sum += value;
      squared_sum += value * value;
    }
    workgroup_shared[local_idx] = ${q}(sum, squared_sum);
    workgroupBarrier();

    for (var currSize = workgroup_size >> 1;  currSize > 0; currSize = currSize >> 1) {
      if (local_idx < currSize) {
        workgroup_shared[local_idx] = workgroup_shared[local_idx] + workgroup_shared[local_idx + currSize];
      }
      workgroupBarrier();
    }
    if (local_idx == 0) {
      let sum_final = ${Rg("workgroup_shared[0][0]", l)} / f32(hight * ${l});
      let squared_sum_final = ${Rg("workgroup_shared[0][1]", l)} / f32(hight * ${l});

      let inv_std_dev = inverseSqrt(squared_sum_final - sum_final * sum_final + f32(${h}));
      let channel_scale = inv_std_dev * f32(scale[channel]);
      let channel_shift = f32(bias[channel]) - sum_final * channel_scale;
      output[workgroup_index] = vec2f(channel_scale, channel_shift);
    }
  }`;
    };
    return B.compute({ name: "InstanceNormComputeChannelScaleShift", shaderCache: { hint: `${l};${h};${b}`, inputDependencies: r }, getRunData: () => ({ outputs: [{ dims: W, dataType: 1 }], dispatchGroup: { x: d }, programUniforms: $ }), getShaderSource: m }, { inputs: [R, F, i], outputs: [-1] })[0];
  }, zM = (B, R, F) => {
    let i = R[0].dims, s = i, N = 2, j = i[0], h = i[1], l = RA.sizeFromDimension(i, N), k = xI(l), q = RA.size(s) / k, d = VR(B, R[0], R[1], R[2], j, l, h, F.epsilon), b = [j, h, l / k], P = [j, h], W = ["type", "none"], r = ($) => {
      let m = FA("x", R[0].dataType, b.length, k), z = FA("scale_shift", 1, P.length, 2), IA = qA("output", R[0].dataType, b.length, k), M = [m, z, IA];
      return `
  ${$.registerUniform("output_size", "u32").declareVariables(...M)}
  ${$.mainStart()}
  ${$.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let outputIndices = ${IA.offsetToIndices("global_idx")};
      let batch = outputIndices[0];
      let channel = outputIndices[1];
      let scale_shift = ${z.getByIndices("vec2<u32>(batch, channel)")};
      let value = ${m.getByOffset("global_idx")} * ${IA.type.value}(scale_shift.x) + ${IA.type.value}(scale_shift.y);
      ${IA.setByOffset("global_idx", "value")};
  }`;
    };
    B.compute({ name: "InstanceNormalization", shaderCache: { hint: `${k}`, inputDependencies: W }, getRunData: () => ({ outputs: [{ dims: s, dataType: R[0].dataType }], dispatchGroup: { x: Math.ceil(q / 64) }, programUniforms: [{ type: 12, data: q }, ...TA(b, P, b)] }), getShaderSource: r }, { inputs: [R[0], d] });
  }, XM = (B, R, F) => {
    let i = R[0].dims, s = i, N = i[0], j = i[i.length - 1], h = RA.sizeFromDimension(i, 1) / j, l = xI(j), k = RA.size(s) / l, q = [{ type: 12, data: h }, { type: 12, data: Math.floor(j / l) }], d = ["type", "type"], b = !1, P = [0, i.length - 1];
    for (let m = 0; m < i.length - 2; m++) b = b || i[m + 1] !== 1, P.push(m + 1);
    b = b && i[i.length - 1] !== 1;
    let W = b ? B.compute(tC(B.inputs[0], P), { inputs: [B.inputs[0]], outputs: [-1] })[0] : B.inputs[0].reshape(Array.from({ length: i.length }, (m, z) => i[P[z]])), r = VR(B, W, R[1], R[2], N, h, j, F.epsilon), $ = (m) => {
      let z = QC(R[0].dataType), IA = l === 1 ? "vec2f" : `mat${l}x2f`, M = (G) => {
        let a = G === 0 ? "x" : "y", UA = l === 1 ? "f32" : `vec${l}f`;
        switch (l) {
          case 1:
            return `${z}(${UA}(scale.${a}))`;
          case 2:
            return `vec2<${z}>(${UA}(scale[0].${a}, scale[1].${a}))`;
          case 4:
            return `vec4<${z}>(${UA}(scale[0].${a}, scale[1].${a}, scale[2].${a}, scale[3].${a}))`;
          default:
            throw new Error(`Not supported compoents ${l}`);
        }
      }, L = FA("input", R[0].dataType, R[0].dims, l), A = qA("output", R[0].dataType, s, l);
      return `
  @group(0) @binding(0) var<storage, read> input : array<${L.type.storage}>;
  @group(0) @binding(1) var<storage, read> scale_input : array<${IA}>;
  @group(0) @binding(2) var<storage, read_write> output : array<${A.type.storage}>;
  struct Uniforms {H: u32, C : u32};
  @group(0) @binding(3) var<uniform> uniforms: Uniforms;

  ${m.mainStart()}
    let current_image_number = global_idx / (uniforms.C * uniforms.H);
    let current_channel_number = global_idx % uniforms.C;

    let scale_offset = current_image_number * uniforms.C + current_channel_number;
    let scale = scale_input[scale_offset];
    output[global_idx] = fma(input[global_idx], ${M(0)}, ${M(1)});
  }`;
    };
    B.compute({ name: "InstanceNormalizationNHWC", shaderCache: { hint: `${l}`, inputDependencies: d }, getRunData: () => ({ outputs: [{ dims: s, dataType: R[0].dataType }], dispatchGroup: { x: Math.ceil(k / 64) }, programUniforms: q }), getShaderSource: $ }, { inputs: [R[0], r] });
  }, ry = (B, R) => {
    R.format === "NHWC" ? XM(B, B.inputs, R) : zM(B, B.inputs, R);
  };
}), rM, mM, my, Is = sA(() => {
  zA(), $A(), II(), rM = (B) => {
    if (!B || B.length < 2) throw new Error("layerNorm requires at least 2 inputs.");
  }, mM = (B, R, F) => {
    let i = R.simplified, s = B[0].dims, N = B[1], j = !i && B[2], h = s, l = RA.normalizeAxis(R.axis, s.length), k = RA.sizeToDimension(s, l), q = RA.sizeFromDimension(s, l), d = RA.size(N.dims), b = j ? RA.size(j.dims) : 0;
    if (d !== q || j && b !== q) throw new Error(`Size of X.shape()[axis:] == ${q}.
       Size of scale and bias (if provided) must match this.
       Got scale size of ${d} and bias size of ${b}`);
    let P = [];
    for (let L = 0; L < s.length; ++L) L < l ? P.push(s[L]) : P.push(1);
    let W = xI(q), r = ["type", "type"], $ = [{ type: 12, data: k }, { type: 1, data: q }, { type: 12, data: Math.floor(q / W) }, { type: 1, data: R.epsilon }];
    j && r.push("type");
    let m = F > 1, z = F > 2, IA = (L) => {
      let A = QC(B[0].dataType), G = [FA("x", B[0].dataType, B[0].dims, W), FA("scale", N.dataType, N.dims, W)];
      j && G.push(FA("bias", j.dataType, j.dims, W)), G.push(qA("output", B[0].dataType, h, W)), m && G.push(qA("mean_data_output", 1, P)), z && G.push(qA("inv_std_output", 1, P));
      let a = [{ name: "norm_count", type: "u32" }, { name: "norm_size", type: "f32" }, { name: "norm_size_vectorized", type: "u32" }, { name: "epsilon", type: "f32" }];
      return `
  ${L.registerUniforms(a).declareVariables(...G)}
  ${L.mainStart()}
    ${L.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.norm_count")}
    let offset = global_idx * uniforms.norm_size_vectorized;
    var mean_vector = ${ww("f32", W)};
    var mean_square_vector = ${ww("f32", W)};

    for (var h: u32 = 0u; h < uniforms.norm_size_vectorized; h++) {
      let value = ${LB(A, W, "x[h + offset]")};
      mean_vector += value;
      mean_square_vector += value * value;
    }
    let mean = ${Rg("mean_vector", W)} / uniforms.norm_size;
    let inv_std_dev = inverseSqrt(${Rg("mean_square_vector", W)} / uniforms.norm_size ${i ? "" : "- mean * mean"} + uniforms.epsilon);

    for (var j: u32 = 0; j < uniforms.norm_size_vectorized; j++) {
      let f32input = ${LB(A, W, "x[j + offset]")};
      let f32scale = ${LB(A, W, "scale[j]")};
      output[j + offset] = ${G[0].type.value}((f32input ${i ? "" : "- mean"}) * inv_std_dev * f32scale
        ${j ? `+ ${LB(A, W, "bias[j]")}` : ""}
      );
    }

    ${m ? "mean_data_output[global_idx] = mean" : ""};
    ${z ? "inv_std_output[global_idx] = inv_std_dev" : ""};
  }`;
    }, M = [{ dims: h, dataType: B[0].dataType }];
    return m && M.push({ dims: P, dataType: 1 }), z && M.push({ dims: P, dataType: 1 }), { name: "LayerNormalization", shaderCache: { hint: `${W};${F};${i}`, inputDependencies: r }, getRunData: () => ({ outputs: M, dispatchGroup: { x: Math.ceil(k / 64) }, programUniforms: $ }), getShaderSource: IA };
  }, my = (B, R) => {
    rM(B.inputs), B.compute(mM(B.inputs, R, B.outputCount));
  };
}), eM, ey, Cs = sA(() => {
  $A(), pw(), tw(), eM = (B) => {
    if (!B || B.length !== 2) throw new Error("MatMul requires 2 inputs.");
    if (B[0].dims[B[0].dims.length - 1] !== B[1].dims[B[1].dims.length - 2]) throw new Error("shared dimension does not match.");
  }, ey = (B) => {
    eM(B.inputs);
    let R = cB.calcShape(B.inputs[0].dims, B.inputs[1].dims, !0);
    if (!R) throw new Error("Can't use matmul on the given tensors");
    let F = R[R.length - 1], i = B.inputs[0].dims[B.inputs[0].dims.length - 1];
    if (F < 8 && i < 8) B.compute(fw(B.inputs, { activation: "" }, R));
    else {
      let s = R[R.length - 2], N = RA.size(B.inputs[0].dims.slice(0, -2)), j = RA.size(B.inputs[1].dims.slice(0, -2));
      if (N !== 1 && s === 1 && j === 1) {
        let h = B.inputs[0].reshape([1, N, i]), l = B.inputs[1].reshape([1, i, F]), k = [1, N, F], q = [h, l];
        B.compute(bU(q, { activation: "" }, R, k), { inputs: q });
      } else B.compute(bU(B.inputs, { activation: "" }, R));
    }
  };
}), vM, uM, _M, vy, uy, Qs = sA(() => {
  zA(), $A(), tI(), II(), vM = (B, R) => {
    if (B.length < 3 || B.length > 4) throw new Error("MatMulNBits requires 3 or 4 inputs");
    let F = B[0], i = F.dims.length;
    if (F.dims[i - 1] !== R.k) throw new Error("The last dim of input shape does not match the k value");
    let s = Math.floor((R.k + R.blockSize - 1) / R.blockSize), N = R.blockSize / 8 * R.bits, j = B[1];
    if (!RA.areEqual(j.dims, [R.n, s, N])) throw new Error("The second inputs must be 3D tensor with shape N X nBlocksPerCol X blobSize");
    let h = B[2].dims;
    if (RA.size(h) !== R.n * s) throw new Error("scales input size error.");
    if (B.length === 4) {
      let l = B[3].dims, k = R.bits > 4 ? R.n * s : R.n * Math.floor((s + 1) / 2);
      if (RA.size(l) !== k) throw new Error("zeroPoints input size error.");
    }
  }, uM = (B, R) => {
    let F = B[0].dims, i = F.length, s = F[i - 2], N = R.k, j = R.n, h = F.slice(0, i - 2), l = RA.size(h), k = B[1].dims[2] / 4, q = B[0].dataType, d = xI(R.k), b = xI(k), P = xI(j), W = h.concat([s, j]), r = s > 1 && j / P % 2 === 0 ? 2 : 1, $ = RA.size(W) / P / r, m = 64, z = [], IA = [l, s, N / d], M = RA.convertShape(B[1].dims).slice();
    M.splice(-1, 1, k / b), z.push(...TA(IA)), z.push(...TA(M)), z.push(...TA(B[2].dims)), B.length === 4 && z.push(...TA(RA.convertShape(B[3].dims)));
    let L = [l, s, j / P];
    z.push(...TA(L));
    let A = (G) => {
      let a = IA.length, UA = FA("a", B[0].dataType, a, d), H = FA("b", 12, M.length, b), T = FA("scales", B[2].dataType, B[2].dims.length), cA = [UA, H, T], GA = B.length === 4 ? FA("zero_points", 12, B[3].dims.length) : void 0;
      GA && cA.push(GA);
      let aA = L.length, rA = qA("output", B[0].dataType, aA, P), lA = QC(B[0].dataType), vA = (() => {
        switch (d) {
          case 1:
            return `array<${lA}, 8>`;
          case 2:
            return `mat4x2<${lA}>`;
          case 4:
            return `mat2x4<${lA}>`;
          default:
            throw new Error(`${d}-component is not supported.`);
        }
      })(), HA = () => {
        let MA = `
          // reuse a data
            var input_offset = ${UA.indicesToOffset(`${UA.type.indices}(batch, row, word_offset)`)};
            var a_data: ${vA};
            for (var j: u32 = 0; j < ${8 / d}; j++) {
              a_data[j] = ${UA.getByOffset("input_offset")};
              input_offset++;
            }
          `;
        for (let jA = 0; jA < P * r; jA++) MA += `
            b_value = ${b === 1 ? `b${jA}_data` : `b${jA}_data[i]`};
            b_value_lower = unpack4xU8(b_value & b_mask);
            b_value_upper = unpack4xU8((b_value >> 4) & b_mask);
            b_quantized_values = ${vA}(${Array.from({ length: 4 }, (LA, XA) => `${lA}(b_value_lower[${XA}]), ${lA}(b_value_upper[${XA}])`).join(", ")});
            b_dequantized_values = ${d === 1 ? `${vA}(${Array.from({ length: 8 }, (LA, XA) => `(b_quantized_values[${XA}] - ${GA ? `zero_point${jA}` : "zero_point"}) * scale${jA}`).join(", ")});` : `(b_quantized_values - ${vA}(${Array(8).fill(`${GA ? `zero_point${jA}` : "zero_point"}`).join(",")})) * scale${jA};`};
            workgroup_shared[local_id.x * ${r} + ${Math.floor(jA / P)}]${P > 1 ? `[${jA % P}]` : ""} += ${Array.from({ length: 8 / d }, (LA, XA) => `${d === 1 ? `a_data[${XA}] * b_dequantized_values[${XA}]` : `dot(a_data[${XA}], b_dequantized_values[${XA}])`}`).join(" + ")};
          `;
        return MA;
      }, PA = () => {
        let MA = `
            var col_index = col * ${P};
            ${GA ? `
            let zero_point_bytes_per_col = (nBlocksPerCol + 1) / 2;
            var zero_point_byte_count: u32;
            var zero_point_word_index: u32;
            var zero_point_byte_offset: u32;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            var zero_point_bits_offset: u32;
            var zero_point_word: u32;` : `
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${lA}(8);`}
            `;
        for (let jA = 0; jA < P * r; jA++) MA += `
            let scale${jA} = ${T.getByOffset("col_index * nBlocksPerCol + block")};
            ${GA ? `
            zero_point_byte_count = col_index * zero_point_bytes_per_col + (block >> 0x1u);
            zero_point_word_index = zero_point_byte_count >> 0x2u;
            zero_point_byte_offset = zero_point_byte_count & 0x3u;
            zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            zero_point_word = ${GA.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point${jA} = ${lA}((zero_point_word) & 0xFu);` : ""}
            col_index += 1;`;
        return MA;
      }, YI = () => {
        let MA = `col_index = col * ${P};`;
        for (let jA = 0; jA < P * r; jA++) MA += `
            let b${jA}_data = ${H.getByIndices(`${H.type.indices}(col_index, block, word)`)};
            col_index += 1;`;
        return MA += `
            var b_value: u32;
            let b_mask: u32 = 0x0F0F0F0Fu;
            var b_value_lower: vec4<u32>;
            var b_value_upper: vec4<u32>;
            var b_quantized_values: ${vA};
            var b_dequantized_values: ${vA};`, MA;
      };
      return `
        var<workgroup> workgroup_shared: array<${rA.type.value}, ${r * m}>;
        ${G.declareVariables(...cA, rA)}
        ${G.mainStart([m, 1, 1])}
          let output_indices = ${rA.offsetToIndices(`(global_idx / ${m}) * ${r}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let nBlocksPerCol = uniforms.b_shape[1];

          for (var block = local_id.x; block < nBlocksPerCol; block += ${m}) {
            //process one block
            var word_offset: u32 = block * ${R.blockSize / d};
            ${PA()}
            for (var word: u32 = 0; word < ${k}; word += ${b}) {
              ${YI()}
              for (var i: u32 = 0; i < ${b}; i++) {
                ${HA()}
                word_offset += ${8 / d};
              }
            }
          }
          workgroupBarrier();

          if (local_id.x < ${r}) {
            var output_value: ${rA.type.value} = ${rA.type.value}(0);
            var workgroup_shared_offset: u32 = local_id.x;
            for (var b: u32 = 0u; b < ${m}u; b++) {
              output_value += workgroup_shared[workgroup_shared_offset];
              workgroup_shared_offset += ${r};
            }
            ${rA.setByIndices(`${rA.type.indices}(batch, row, col + local_id.x)`, "output_value")};
          }
        }`;
    };
    return { name: "MatMulNBits", shaderCache: { hint: `${R.blockSize};${R.bits};${d};${b};${P};${r};${m}`, inputDependencies: Array(B.length).fill("rank") }, getRunData: () => ({ outputs: [{ dims: W, dataType: q }], dispatchGroup: { x: $ }, programUniforms: z }), getShaderSource: A };
  }, _M = (B, R) => {
    let F = B[0].dims, i = F.length, s = F[i - 2], N = R.k, j = R.n, h = F.slice(0, i - 2), l = RA.size(h), k = B[1].dims[2] / 4, q = B[0].dataType, d = xI(R.k), b = xI(k), P = h.concat([s, j]), W = 128, r = j % 8 === 0 ? 8 : j % 4 === 0 ? 4 : 1, $ = W / r, m = $ * b * 8, z = m / d, IA = m / R.blockSize, M = RA.size(P) / r, L = [], A = [l, s, N / d], G = RA.convertShape(B[1].dims).slice();
    G.splice(-1, 1, k / b), L.push(...TA(A)), L.push(...TA(G)), L.push(...TA(B[2].dims)), B.length === 4 && L.push(...TA(RA.convertShape(B[3].dims)));
    let a = [l, s, j];
    L.push(...TA(a));
    let UA = (H) => {
      let T = A.length, cA = FA("a", B[0].dataType, T, d), GA = FA("b", 12, G.length, b), aA = FA("scales", B[2].dataType, B[2].dims.length), rA = [cA, GA, aA], lA = B.length === 4 ? FA("zero_points", 12, B[3].dims.length) : void 0;
      lA && rA.push(lA);
      let vA = a.length, HA = qA("output", B[0].dataType, vA), PA = QC(B[0].dataType), YI = () => {
        switch (d) {
          case 1:
            return `
          let a_data0 = vec4<${PA}>(sub_a[word_offset], sub_a[word_offset + 1], sub_a[word_offset + 2], sub_a[word_offset + 3]);
          let a_data1 = vec4<${PA}>(sub_a[word_offset + 4], sub_a[word_offset + 5], sub_a[word_offset + 6], sub_a[word_offset + 7]);`;
          case 2:
            return `
          let a_data0 = vec4<${PA}>(sub_a[word_offset], sub_a[word_offset + 1]);
          let a_data1 = vec4<${PA}>(sub_a[word_offset + 2], sub_a[word_offset + 3]);`;
          case 4:
            return `
          let a_data0 = sub_a[word_offset];
          let a_data1 = sub_a[word_offset + 1];`;
          default:
            throw new Error(`${d}-component is not supported.`);
        }
      };
      return `
        var<workgroup> sub_a: array<${cA.type.value}, ${z}>;
        var<workgroup> inter_results: array<array<${HA.type.value}, ${$}>, ${r}>;
        ${H.declareVariables(...rA, HA)}
        ${H.mainStart([$, r, 1])}
          let output_indices = ${HA.offsetToIndices(`workgroup_index * ${r}`)};
          let col = output_indices[2];
          let row = output_indices[1];
          let batch = output_indices[0];
          let n_blocks_per_col = uniforms.b_shape[1];
          let num_tiles =  (n_blocks_per_col - 1) / ${IA} + 1;

          // Loop over shared dimension.
          for (var tile: u32 = 0; tile < num_tiles; tile += 1) {
            let a_col_start = tile * ${z};
            // load one tile A data into shared memory.
            for (var a_offset = local_idx; a_offset < ${z}; a_offset += ${W})
            {
              let a_col = a_col_start + a_offset;
              if (a_col < uniforms.a_shape[2])
              {
                sub_a[a_offset] = ${cA.getByIndices(`${cA.type.indices}(batch, row, a_col)`)};
              } else {
                sub_a[a_offset] = ${cA.type.value}(0);
              }
            }
            workgroupBarrier();

            // each thread process one block
            let b_row = col + local_id.y;
            let block = tile * ${IA} + local_id.x;
            ${lA ? `
            let zero_point_bytes_per_col = (n_blocks_per_col + 1) / 2;
            let zero_point_byte_count = b_row * zero_point_bytes_per_col + (block >> 0x1u);
            let zero_point_word_index = zero_point_byte_count >> 0x2u;
            let zero_point_byte_offset = zero_point_byte_count & 0x3u;
            let zero_point_nibble_offset: u32 = block & 0x1u;
            let zero_point_bits_offset = (zero_point_byte_offset << 3) + (zero_point_nibble_offset << 2);
            let zero_point_word = ${lA.getByOffset("zero_point_word_index")} >> zero_point_bits_offset;
            let zero_point = ${PA}((zero_point_word) & 0xFu);` : `
            // The default zero point is 8 for unsigned 4-bit quantization.
            let zero_point = ${PA}(8);`}
            let scale = ${aA.getByOffset("b_row * n_blocks_per_col + block")};
            let b_data = ${GA.getByIndices(`${GA.type.indices}(b_row, block, 0)`)};
            var word_offset = local_id.x * ${R.blockSize / d};
            for (var i: u32 = 0; i < ${b}; i++) {
              ${YI()}
              let b_value = ${b === 1 ? "b_data" : "b_data[i]"};
              let b_value_lower = unpack4xU8(b_value & 0x0F0F0F0Fu);
              let b_value_upper = unpack4xU8((b_value >> 4) & 0x0F0F0F0Fu);
              let b_quantized_values = mat2x4<${PA}>(${Array.from({ length: 4 }, (MA, jA) => `${PA}(b_value_lower[${jA}]), ${PA}(b_value_upper[${jA}])`).join(", ")});
              let b_dequantized_values = (b_quantized_values - mat2x4<${PA}>(${Array(8).fill("zero_point").join(",")})) * scale;
              inter_results[local_id.y][local_id.x] += ${Array.from({ length: 2 }, (MA, jA) => `${`dot(a_data${jA}, b_dequantized_values[${jA}])`}`).join(" + ")};
              word_offset += ${8 / d};
            }
            workgroupBarrier();
          }

          if (local_idx < ${r}) {
            var output_value: ${HA.type.value} = ${HA.type.value}(0);
            for (var b = 0u; b < ${$}; b++) {
              output_value += inter_results[local_idx][b];
            }
            if (col + local_idx < uniforms.output_shape[2])
            {
              ${HA.setByIndices(`${HA.type.indices}(batch, row, col + local_idx)`, "output_value")}
            }
          }
        }`;
    };
    return { name: "BlockwiseMatMulNBits32", shaderCache: { hint: `${R.blockSize};${d};${b};${$};${r}`, inputDependencies: Array(B.length).fill("rank") }, getRunData: () => ({ outputs: [{ dims: P, dataType: q }], dispatchGroup: { x: M }, programUniforms: L }), getShaderSource: UA };
  }, vy = (B, R) => {
    vM(B.inputs, R), R.blockSize === 32 && B.adapterInfo.isVendor("intel") && B.adapterInfo.isArchitecture("gen-12lp") ? B.compute(_M(B.inputs, R)) : B.compute(uM(B.inputs, R));
  }, uy = (B) => NI(B);
}), $M, AG, IG, CG, QG, gG, BG, EG, _y, gs = sA(() => {
  zA(), $A(), II(), $M = (B) => {
    if (!B || B.length < 1) throw new Error("Too few inputs");
    if (B[0].dataType !== 1 && B[0].dataType !== 10) throw new Error("Input type must be float or float16.");
    if (B.length >= 2) {
      let R = B[0].dims.length * 2 === B[1].dims[0];
      if (B.length === 4 && (R = B[3].dims[0] * 2 === B[1].dims[0]), !R) throw new Error("The pads should be a 1D tensor of shape [2 * input_rank] or [2 * num_axes].");
    }
  }, AG = (B, R, F) => {
    let i = "";
    for (let s = R - 1; s >= 0; --s) i += `
            k = i32(${B.indicesGet("indices", s)}) - ${VA("uniforms.pads", s, F)};
            if (k < 0) {
              break;
            }
            if (k >= i32(${VA("uniforms.x_shape", s, R)})) {
              break;
            }
            offset += k * i32(${VA("uniforms.x_strides", s, R)});
        `;
    return `
          value = ${B.type.value}(uniforms.constant_value);
          for (var i = 0; i < 1; i++) {
            var offset = 0;
            var k = 0;
            ${i}
            value = x[offset];
          }
      `;
  }, IG = (B, R, F) => {
    let i = "";
    for (let s = R - 1; s >= 0; --s) i += `
                k = i32(${B.indicesGet("indices", s)}) - ${VA("uniforms.pads", s, F)};
                if (k < 0) {
                  k = -k;
                }
                {
                  let _2n_1 = 2 * (i32(${VA("uniforms.x_shape", s, R)}) - 1);
                  k = k % _2n_1;
                  if(k >= i32(${VA("uniforms.x_shape", s, R)})) {
                    k = _2n_1 - k;
                  }
                }
                offset += k * i32(${VA("uniforms.x_strides", s, R)});
            `;
    return `
              var offset = 0;
              var k = 0;
              ${i}
              value = x[offset];
          `;
  }, CG = (B, R, F) => {
    let i = "";
    for (let s = R - 1; s >= 0; --s) i += `
                k = i32(${B.indicesGet("indices", s)}) - ${VA("uniforms.pads", s, F)};
                if (k < 0) {
                  k = 0;
                }
                if (k >= i32(${VA("uniforms.x_shape", s, R)})) {
                  k = i32(${VA("uniforms.x_shape", s, R)}) - 1;
                }
                offset += k * i32(${VA("uniforms.x_strides", s, R)});
            `;
    return `
              var offset = 0;
              var k = 0;
              ${i}
              value = x[offset];
          `;
  }, QG = (B, R, F) => {
    let i = "";
    for (let s = R - 1; s >= 0; --s) i += `
                k = i32(${B.indicesGet("indices", s)}) - ${VA("uniforms.pads", s, F)};
                if (k < 0)  {
                  k += i32(${VA("uniforms.x_shape", s, R)}]);
                }
                if (k >= i32(${VA("uniforms.x_shape", s, R)})) {
                  k -= i32(${VA("uniforms.x_shape", s, R)});
                }
                offset += k * i32(${VA("uniforms.x_strides", s, R)});
            `;
    return `
              var offset = 0;
              var k = 0;
              ${i}
              value = x[offset];
          `;
  }, gG = (B, R, F) => {
    switch (F.mode) {
      case 0:
        return AG(B, R, F.pads.length);
      case 1:
        return IG(B, R, F.pads.length);
      case 2:
        return CG(B, R, F.pads.length);
      case 3:
        return QG(B, R, F.pads.length);
      default:
        throw new Error("Invalid mode");
    }
  }, BG = (B, R) => {
    let F = RA.padShape(B[0].dims.slice(), R.pads), i = B[0].dims, s = RA.size(F), N = [{ type: 12, data: s }, { type: 6, data: R.pads }], j = B.length >= 3 && B[2].data;
    R.mode === 0 && N.push({ type: j ? B[2].dataType : 1, data: R.value }), N.push(...TA(B[0].dims, F));
    let h = ["rank"], l = (k) => {
      let q = qA("output", B[0].dataType, F.length), d = FA("x", B[0].dataType, i.length), b = d.type.value, P = gG(q, i.length, R), W = [{ name: "output_size", type: "u32" }, { name: "pads", type: "i32", length: R.pads.length }];
      return R.mode === 0 && W.push({ name: "constant_value", type: j ? b : "f32" }), `
            ${k.registerUniforms(W).declareVariables(d, q)}
            ${k.mainStart()}
            ${k.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}

            let indices = ${q.offsetToIndices("global_idx")};

            var value = ${b}(0);
            ${P}
            output[global_idx] = value;
        }`;
    };
    return { name: "Pad", shaderCache: { hint: `${R.mode}${j}`, inputDependencies: h }, getRunData: () => ({ outputs: [{ dims: F, dataType: B[0].dataType }], dispatchGroup: { x: Math.ceil(RA.size(F) / 64) }, programUniforms: N }), getShaderSource: l };
  }, EG = (B, R) => {
    if (B.length > 1) {
      let F = B[1].getBigInt64Array(), i = B.length >= 3 && B[2].data ? B[2].dataType === 10 ? B[2].getUint16Array()[0] : B[2].getFloat32Array()[0] : 0, s = B[0].dims.length, N = new Int32Array(2 * s).fill(0);
      if (B.length >= 4) {
        let h = B[3].getBigInt64Array();
        for (let l = 0; l < h.length; l++) N[Number(h[l])] = Number(F[l]), N[Number(h[l]) + s] = Number(F[l + h.length]);
      } else F.forEach((h, l) => N[Number(l)] = Number(h));
      let j = [];
      return N.forEach((h) => j.push(h)), { mode: R.mode, value: i, pads: j };
    } else return R;
  }, _y = (B, R) => {
    $M(B.inputs);
    let F = EG(B.inputs, R);
    B.compute(BG(B.inputs, F), { inputs: [0] });
  };
}), LE, bR, TR, xR, PR, UG, RG, fR, pR, $y, Ao, tR, Io, Co, WR, Qo, go, Bo, Eo, Bs = sA(() => {
  FQ(), zA(), $A(), II(), LE = (B) => {
    if (LI.webgpu.validateInputContent && (!B || B.length !== 1)) throw new Error("Pool ops requires 1 input.");
  }, bR = (B, R, F) => {
    let i = R.format === "NHWC", s = B.dims.slice();
    i && s.splice(1, 0, s.pop());
    let N = Object.hasOwnProperty.call(R, "dilations"), j = R.kernelShape.slice(), h = R.strides.slice(), l = N ? R.dilations.slice() : [], k = R.pads.slice();
    qU.adjustPoolAttributes(F, s, j, h, l, k);
    let q = qU.computePoolOutputShape(F, s, h, l, j, k, R.autoPad), d = Object.assign({}, R);
    N ? Object.assign(d, { kernelShape: j, strides: h, pads: k, dilations: l, cacheKey: R.cacheKey }) : Object.assign(d, { kernelShape: j, strides: h, pads: k, cacheKey: R.cacheKey });
    let b = q.slice();
    return b.push(b.splice(1, 1)[0]), [d, i ? b : q];
  }, TR = (B, R) => {
    let F = R.format === "NHWC", i = RA.size(B), s = RA.size(R.kernelShape), N = [{ type: 12, data: i }, { type: 12, data: s }], j = [{ name: "outputSize", type: "u32" }, { name: "kernelSize", type: "u32" }];
    if (R.kernelShape.length <= 2) {
      let h = R.kernelShape[R.kernelShape.length - 1], l = R.strides[R.strides.length - 1], k = R.pads[R.pads.length / 2 - 1], q = R.pads[R.pads.length - 1], d = !!(k + q);
      N.push({ type: 12, data: h }, { type: 12, data: l }, { type: 12, data: k }, { type: 12, data: q }), j.push({ name: "kw", type: "u32" }, { name: "sw", type: "u32" }, { name: "pwStart", type: "u32" }, { name: "pwEnd", type: "u32" });
      let b = !1;
      if (R.kernelShape.length === 2) {
        let P = R.kernelShape[R.kernelShape.length - 2], W = R.strides[R.strides.length - 2], r = R.pads[R.pads.length / 2 - 2], $ = R.pads[R.pads.length - 2];
        b = !!(r + $), N.push({ type: 12, data: P }, { type: 12, data: W }, { type: 12, data: r }, { type: 12, data: $ }), j.push({ name: "kh", type: "u32" }, { name: "sh", type: "u32" }, { name: "phStart", type: "u32" }, { name: "phEnd", type: "u32" });
      }
      return [N, j, !0, d, b];
    } else {
      if (F) throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");
      let h = RA.computeStrides(R.kernelShape);
      N.push({ type: 12, data: h }, { type: 12, data: R.pads }, { type: 12, data: R.strides }), j.push({ name: "kernelStrides", type: "u32", length: h.length }, { name: "pads", type: "u32", length: R.pads.length }, { name: "strides", type: "u32", length: R.strides.length });
      let l = R.pads.reduce((k, q) => k + q);
      return [N, j, !!l, !1, !1];
    }
  }, xR = (B, R, F, i, s, N, j, h, l, k, q, d) => {
    let b = s.format === "NHWC", P = R.type.value, W = qA("output", R.type.tensor, i);
    if (s.kernelShape.length <= 2) {
      let r = "", $ = "", m = "", z = F - (b ? 2 : 1);
      if (q ? r = `
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${z}] = indices[${z}] * uniforms.sw - uniforms.pwStart + i;
                  if (xIndices[${z}] < 0 || xIndices[${z}]
                      >= uniforms.x_shape[${z}]) {
                    pad++;
                    continue;
                  }
                  let x_val = x[${R.indicesToOffset("xIndices")}];
                  ${N}
                }` : r = `
                for (var i: u32 = 0u; i < uniforms.kw; i++) {
                  xIndices[${z}] = indices[${z}] * uniforms.sw - uniforms.pwStart + i;
                  let x_val = x[${R.indicesToOffset("xIndices")}];
                  ${N}
                }`, s.kernelShape.length === 2) {
        let IA = F - (b ? 3 : 2);
        d ? $ = `
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${IA}] = indices[${IA}] * uniforms.sh - uniforms.phStart + j;
                  if (xIndices[${IA}] < 0 || xIndices[${IA}] >= uniforms.x_shape[${IA}]) {
                    pad += i32(uniforms.kw);
                    continue;
                  }
              ` : $ = `
                for (var j: u32 = 0u; j < uniforms.kh; j++) {
                  xIndices[${IA}] = indices[${IA}] * uniforms.sh - uniforms.phStart + j;
                `, m = `
              }
            `;
      }
      return `
            ${B.registerUniforms(l).declareVariables(R, W)}

            ${B.mainStart()}
              ${B.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}

              let indices = ${W.offsetToIndices("global_idx")};
              var xIndices = ${W.offsetToIndices("global_idx")};

              var value = ${P}(${h});
              var pad = 0;
              ${$}
              ${r}
              ${m}
              ${j}

              output[global_idx] = value;
            }`;
    } else {
      if (b) throw new Error("Pooling with kernelShape.length > 2 is not supported for NHWC format.");
      let r = s.kernelShape.length, $ = s.pads.length, m = "";
      return k ? m = `
                if (xIndices[j] >= uniforms.x_shape[j]) {
                  pad++;
                  isPad = true;
                  break;
                }
              }
              if (!isPad) {
                let x_val = x[${R.indicesToOffset("xIndices")}];
                ${N}
              }` : m = `
              }
              let x_val = x[${R.indicesToOffset("xIndices")}];
              ${N}
            `, `
            ${B.registerUniforms(l).declareVariables(R, W)}

            ${B.mainStart()}
              ${B.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
              let indices = ${W.offsetToIndices("global_idx")};
              var xIndices = ${W.offsetToIndices("global_idx")};

              var offsets: array<u32, ${r}>;

              var value = ${P}(${h});
              var pad = 0;
              var isPad = false;

              for (var i: u32 = 0u; i < uniforms.kernelSize; i++) {
                var offset = i;
                for (var j = 0u; j < ${r - 1}u; j++) {
                  offsets[j] = offset / ${VA("uniforms.kernelStrides", "j", r)};
                  offset -= offsets[j] * ${VA("uniforms.kernelStrides", "j", r)};
                }
                offsets[${r - 1}] = offset;

                isPad = false;
                for (var j = ${F - r}u; j < ${F}u; j++) {
                  xIndices[j] = indices[j] * ${VA("uniforms.strides", `j - ${F - r}u`, r)}
                    + offsets[j - ${F - r}u] - ${VA("uniforms.pads", "j - 2u", $)};
                  ${m}
              }
              ${j}

              output[global_idx] = value;
            }`;
    }
  }, PR = (B) => `${B.format};${B.ceilMode};${B.autoPad};${B.kernelShape.length}`, UG = (B) => `${PR(B)};${B.countIncludePad}`, RG = (B) => `${PR(B)};${B.storageOrder};${B.dilations}`, fR = (B) => ({ format: B.format, autoPad: ["NOTSET", "VALID", "SAME_UPPER", "SAME_LOWER"][B.auto_pad], ceilMode: B.ceil_mode, kernelShape: B.kernel_shape, strides: B.strides, pads: B.pads }), pR = (B, R, F, i) => {
    let [s, N] = bR(R, i, F), j = FA("x", R.dataType, R.dims.length), h = j.type.value, l = "value += x_val;", k = "";
    s.countIncludePad ? k += `value /= ${h}(uniforms.kernelSize);` : k += `value /= ${h}(i32(uniforms.kernelSize) - pad);`;
    let [q, d, b, P, W] = TR(N, s);
    q.push(...TA(R.dims, N));
    let r = ["rank"];
    return { name: B, shaderCache: { hint: `${i.cacheKey};${b};${P};${W}`, inputDependencies: r }, getRunData: () => ({ outputs: [{ dims: N, dataType: R.dataType }], dispatchGroup: { x: Math.ceil(RA.size(N) / 64) }, programUniforms: q }), getShaderSource: ($) => xR($, j, R.dims.length, N.length, s, l, k, 0, d, b, P, W) };
  }, $y = (B) => {
    let R = B.count_include_pad !== 0, F = fR(B);
    if (F.ceilMode !== 0) throw new Error("using ceil() in shape computation is not yet supported for AveragePool");
    let i = { countIncludePad: R, ...F, cacheKey: "" };
    return { ...i, cacheKey: UG(i) };
  }, Ao = (B, R) => {
    LE(B.inputs), B.compute(pR("AveragePool", B.inputs[0], !1, R));
  }, tR = { autoPad: "", ceilMode: 0, countIncludePad: !1, kernelShape: [], strides: [], pads: [], storageOrder: 0, dilations: [] }, Io = (B) => {
    let R = B.format;
    return { format: R, ...tR, cacheKey: R };
  }, Co = (B, R) => {
    LE(B.inputs), B.compute(pR("GlobalAveragePool", B.inputs[0], !0, R));
  }, WR = (B, R, F, i) => {
    let [s, N] = bR(R, i, F), j = `
      value = max(x_val, value);
    `, h = "", l = FA("x", R.dataType, R.dims.length), k = ["rank"], [q, d, b, P, W] = TR(N, s);
    return q.push(...TA(R.dims, N)), { name: B, shaderCache: { hint: `${i.cacheKey};${b};${P};${W}`, inputDependencies: k }, getRunData: () => ({ outputs: [{ dims: N, dataType: R.dataType }], dispatchGroup: { x: Math.ceil(RA.size(N) / 64) }, programUniforms: q }), getShaderSource: (r) => xR(r, l, R.dims.length, N.length, s, j, h, R.dataType === 10 ? -65504 : -1e5, d, b, P, W) };
  }, Qo = (B, R) => {
    LE(B.inputs), B.compute(WR("MaxPool", B.inputs[0], !1, R));
  }, go = (B) => {
    let R = B.storage_order, F = B.dilations, i = fR(B);
    if (R !== 0) throw new Error("column major storage order is not yet supported for MaxPool");
    if (i.ceilMode !== 0) throw new Error("using ceil() in shape computation is not yet supported for MaxPool");
    let s = { storageOrder: R, dilations: F, ...i, cacheKey: "" };
    return { ...s, cacheKey: RG(s) };
  }, Bo = (B) => {
    let R = B.format;
    return { format: R, ...tR, cacheKey: R };
  }, Eo = (B, R) => {
    LE(B.inputs), B.compute(WR("GlobalMaxPool", B.inputs[0], !0, R));
  };
}), wG, DG, Uo, Ro, Es = sA(() => {
  zA(), $A(), tI(), II(), wG = (B, R) => {
    if (B.length < 2 || B.length > 3) throw new Error("DequantizeLinear requires 2 or 3 inputs.");
    if (B.length === 3 && B[1].dims === B[2].dims) throw new Error("x-scale and x-zero-point must have the same shape.");
    if (B.length === 3 && B[0].dataType !== B[2].dataType) throw new Error("x and x-zero-point must have the same data type.");
    if (B[0].dataType === 6 && B.length > 2) throw new Error("In the case of dequantizing int32 there is no zero point.");
    if (B[1].dims.length !== 0 && B[1].dims.length !== 1 && B[1].dims.length !== B[0].dims.length) throw new Error("scale input must be a scalar, a 1D tensor, or have the same rank as the input tensor.");
    if (B.length > 2) {
      if (B[0].dataType !== B[2].dataType) throw new Error("x and x-zero-point must have the same data type.");
      if (B[1].dims.length !== B[2].dims.length) throw new Error("scale and zero-point inputs must have the same rank.");
      if (!B[1].dims.map((F, i) => F === B[2].dims[i]).reduce((F, i) => F && i, !0)) throw new Error("scale and zero-point inputs must have the same shape.");
    }
    if (R.blockSize > 0) {
      if (B[1].dims.length === 0 || B[1].dims.length === 1 && B[1].dims[0] === 1) throw new Error("blockSize must be set only for block quantization.");
      if (!B[1].dims.map((s, N) => N === R.axis || s === B[0].dims[N]).reduce((s, N) => s && N, !0)) throw new Error("For block qunatization, scale input shape to match the input shape except for the axis");
      if (B[1].dims.length !== B[0].dims.length) throw new Error("For block qunatization the scale input rank must be the same as the x rank.");
      let F = B[0].dims[R.axis], i = B[1].dims[R.axis];
      if (R.blockSize < Math.ceil(F / i) || R.blockSize > Math.ceil(F / (i - 1) - 1)) throw new Error("blockSize must be with in the range [ceil(dI / Si), ceil(dI / (Si - 1) - 1)].");
    }
  }, DG = (B, R) => {
    let F = RA.normalizeAxis(R.axis, B[0].dims.length), i = B[0].dataType, s = i === 3, N = B[0].dims, j = B[1].dataType, h = RA.size(N), l = i === 3 || i === 2, k = l ? [Math.ceil(RA.size(B[0].dims) / 4)] : B[0].dims, q = B[1].dims, d = B.length > 2 ? B[2] : void 0, b = d ? l ? [Math.ceil(RA.size(d.dims) / 4)] : d.dims : void 0, P = q.length === 0 || q.length === 1 && q[0] === 1, W = P === !1 && q.length === 1, r = xI(h), $ = P && (!l || r === 4), m = $ ? r : 1, z = $ && !l ? r : 1, IA = FA("input", l ? 12 : i, k.length, z), M = FA("scale", j, q.length), L = d ? FA("zero_point", l ? 12 : i, b.length) : void 0, A = qA("output", j, N.length, m), G = [IA, M];
    L && G.push(L);
    let a = [k, q];
    d && a.push(b);
    let UA = [{ type: 12, data: h / m }, { type: 12, data: F }, { type: 12, data: R.blockSize }, ...TA(...a, N)], H = (T) => {
      let cA = [{ name: "output_size", type: "u32" }, { name: "axis", type: "u32" }, { name: "block_size", type: "u32" }];
      return `
      ${T.registerUniforms(cA).declareVariables(...G, A)}
      ${T.mainStart()}
          ${T.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
          let output_indices = ${A.offsetToIndices("global_idx")};

          // Set input x
          ${l ? `
            let input = ${IA.getByOffset("global_idx / 4")};
            let x_vec = ${s ? "unpack4xI8(input)" : "unpack4xU8(input)"};
            let x_value = ${m === 1 ? "x_vec[global_idx % 4]" : "x_vec"};` : `let x_value = ${IA.getByOffset("global_idx")};`};

          // Set scale input
          ${P ? `let scale_value= ${M.getByOffset("0")}` : W ? `
            let scale_index = ${A.indicesGet("output_indices", "uniforms.axis")};
            let scale_value= ${M.getByOffset("scale_index")};` : `
            var scale_indices: ${M.type.indices} = output_indices;
            let index = ${M.indicesGet("scale_indices", "uniforms.axis")} / uniforms.block_size;
            ${M.indicesSet("scale_indices", "uniforms.axis", "index")};
            let scale_value= ${M.getByIndices("scale_indices")};`};

          // Set zero-point input
          ${L ? P ? l ? `
                let zero_point_input = ${L.getByOffset("0")};
                let zero_point_vec =  ${s ? "unpack4xI8(zero_point_input)" : "unpack4xU8(zero_point_input)"};
                let zero_point_value= zero_point_vec[0]` : `let zero_point_value = ${L.getByOffset("0")}` : W ? l ? `
                let zero_point_index = ${A.indicesGet("output_indices", "uniforms.axis")};
                let zero_point_input = ${L.getByOffset("zero_point_index / 4")};
                let zero_point_vec =  ${s ? "unpack4xI8(zero_point_input)" : "unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_index % 4]` : `
                let zero_point_index = ${A.indicesGet("output_indices", "uniforms.axis")};
                let zero_point_value = ${L.getByOffset("zero_point_index")};` : l ? `
                let zero_point_offset = ${M.indicesToOffset("scale_indices")};
                let zero_point_input = ${L.getByOffset("zero_point_offset / 4")};
                let zero_point_vec = ${s ? "unpack4xI8(zero_point_input)" : "unpack4xU8(zero_point_input)"};
                let zero_point_value = zero_point_vec[zero_point_offset % 4];` : `let zero_point_value = ${L.getByIndices("scale_indices")};` : `let zero_point_value = ${l ? s ? "i32" : "u32" : IA.type.value}(0);`};
      // Compute and write output
      ${A.setByOffset("global_idx", `${A.type.value}(x_value - zero_point_value) * scale_value`)};
      }`;
    };
    return { name: "DequantizeLinear", shaderCache: { hint: R.cacheKey, inputDependencies: L ? ["rank", "rank", "rank"] : ["rank", "rank"] }, getShaderSource: H, getRunData: () => ({ outputs: [{ dims: N, dataType: j }], dispatchGroup: { x: Math.ceil(h / m / 64), y: 1, z: 1 }, programUniforms: UA }) };
  }, Uo = (B, R) => {
    wG(B.inputs, R), B.compute(DG(B.inputs, R));
  }, Ro = (B) => NI({ axis: B.axis, blockSize: B.blockSize });
}), FG, MG, wo, Us = sA(() => {
  FQ(), zA(), II(), FG = (B, R, F) => {
    let i = B === R, s = B < R && F < 0, N = B > R && F > 0;
    if (i || s || N) throw new Error("Range these inputs' contents are invalid.");
  }, MG = (B, R, F, i) => {
    let s = Math.abs(Math.ceil((R - B) / F)), N = [s], j = s, h = [{ type: 12, data: j }, { type: i, data: B }, { type: i, data: F }, ...TA(N)], l = (k) => {
      let q = qA("output", i, N.length), d = q.type.value, b = [{ name: "outputSize", type: "u32" }, { name: "start", type: d }, { name: "delta", type: d }];
      return `
        ${k.registerUniforms(b).declareVariables(q)}
        ${k.mainStart()}
        ${k.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
        output[global_idx] = uniforms.start + ${d}(global_idx) * uniforms.delta;
      }`;
    };
    return { name: "Range", shaderCache: { hint: `${i}` }, getShaderSource: l, getRunData: () => ({ outputs: [{ dims: N, dataType: i }], dispatchGroup: { x: Math.ceil(j / 64) }, programUniforms: h }) };
  }, wo = (B) => {
    let R = 0, F = 0, i = 0;
    B.inputs[0].dataType === 6 ? (R = B.inputs[0].getInt32Array()[0], F = B.inputs[1].getInt32Array()[0], i = B.inputs[2].getInt32Array()[0]) : B.inputs[0].dataType === 1 && (R = B.inputs[0].getFloat32Array()[0], F = B.inputs[1].getFloat32Array()[0], i = B.inputs[2].getFloat32Array()[0]), LI.webgpu.validateInputContent && FG(R, F, i), B.compute(MG(R, F, i, B.inputs[0].dataType), { inputs: [] });
  };
}), GG, OR, zR, JG, Do, Fo, Rs = sA(() => {
  zA(), $A(), tI(), II(), GG = (B, R, F, i) => {
    if (B !== "none" && i !== "i32" && i !== "u32" && i !== "f32") throw new Error(`Input ${i} is not supported with reduction ${B}.`);
    let s = `{
                var oldValue = 0;
                loop {
                  let newValueF32 =`, N = `;
                  let newValue = bitcast<i32>(newValueF32);
                  let res = atomicCompareExchangeWeak(&${R}, oldValue, newValue);
                  if res.exchanged {
                    break;
                  }
                  oldValue = res.old_value;
                }
              }`;
    switch (B) {
      case "none":
        return `${R}=${F};`;
      case "add":
        return i === "i32" || i === "u32" ? `atomicAdd(&${R}, bitcast<${i}>(${F}));` : `
              ${s}bitcast<${i}>(oldValue) + (${F})${N}`;
      case "max":
        return i === "i32" || i === "u32" ? `atomicMax(&${R}, bitcast<${i}>(${F}));` : `
                ${s}max(bitcast<f32>(oldValue), (${F}))${N}`;
      case "min":
        return i === "i32" || i === "u32" ? `atomicMin(&${R}, bitcast<${i}>(${F}));` : `${s}min(bitcast<${i}>(oldValue), (${F}))${N}`;
      case "mul":
        return `${s}(bitcast<${i}>(oldValue) * (${F}))${N}`;
      default:
        throw new Error(`Reduction ${B} is not supported.`);
    }
  }, OR = (B, R) => `${B === 1 ? `
    let element_count_dim = uniforms.output_strides;
    let dim_value = uniforms.output_shape;` : `
    let element_count_dim = uniforms.output_strides[${R ? "i - indices_start" : "i"}];
    let dim_value = uniforms.output_shape[${R ? "i - indices_start" : "i"} + uniforms.last_index_dimension];`}
    
    if (index >= 0) {
      if (index >= i32(dim_value)) {
        index = i32(dim_value - 1);
      }
    } else {
      if (index < -i32(dim_value)) {
        index = 0;
      } else {
        index += i32(dim_value);
      }
    }
    data_offset += u32((u32(index) * element_count_dim));`, zR = (B, R, F) => `for (var i = 0u; i < uniforms.num_updates_elements; i++) {
        let value = updates[uniforms.num_updates_elements * ${F ? "global_idx" : "idx"} + i];
        ${GG(B.reduction, "output[data_offset + i]", "value", R)}
      }`, JG = (B, R) => {
    let F = B[0].dims, i = B[1].dims, s = F, N = 1, j = Math.ceil(RA.size(i) / N), h = i[i.length - 1], l = RA.sizeFromDimension(F, h), k = RA.sizeFromDimension(i, 0) / h, q = [{ type: 12, data: j }, { type: 12, data: h }, { type: 12, data: l }, ...TA(B[1].dims, B[2].dims, s)], d = (b) => {
      let P = FA("indices", B[1].dataType, B[1].dims.length), W = FA("updates", B[2].dataType, B[2].dims.length, N), r = R.reduction !== "none" && R.reduction !== "" ? PJ("output", B[0].dataType, s.length) : qA("output", B[0].dataType, s.length, N);
      return `
      ${b.registerUniform("output_size", "u32").registerUniform("last_index_dimension", "u32").registerUniform("num_updates_elements", "u32").declareVariables(P, W, r)}
      ${b.mainStart()}
        ${b.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
  var hasDuplicates = false;
  if (${R.reduction === "none"}) {
    for (var i = 0; i < ${k}; i = i + 1) {
      for (var j = i + 1; j < ${k}; j = j + 1) {
        var index_i = i32(indices[i].x);
        var index_j = i32(indices[j].x);
        if (index_i == index_j) {
          hasDuplicates = true;
          break;
        }
      }
      if (hasDuplicates) {
        break;
      }
    }
  }

  if (${R.reduction === "none"} && hasDuplicates) {
    if (global_idx != 0u) {
      return;
    }
    // Process each index-update pair individually when duplicates exist
    for (var idx = 0u; idx < ${k}u; idx++) {
      var data_offset = 0u;
      for (var i = 0u; i < uniforms.last_index_dimension; i++) {
        var index = i32(indices[idx * uniforms.last_index_dimension + i].x);
        ${OR(F.length, !1)}
      }
      ${zR(R, r.type.value, !1)}
    }
    return;
  }

  var data_offset = 0u;
  var indices_start = uniforms.last_index_dimension * global_idx;
  var indices_end = indices_start + uniforms.last_index_dimension;
  for (var i = indices_start; i < indices_end; i++) {
    var index = i32(indices[i].x);
    ${OR(F.length, !0)}
  }
  ${zR(R, r.type.value, !0)}
  }`;
    };
    return { name: "ScatterND", shaderCache: { hint: `${R.cacheKey}_${R.reduction}`, inputDependencies: ["rank", "rank"] }, getRunData: () => ({ outputs: [{ dims: s, dataType: B[0].dataType }], dispatchGroup: { x: Math.ceil(j / 64) }, programUniforms: q }), getShaderSource: d };
  }, Do = (B) => NI({ reduction: B.reduction }), Fo = (B, R) => {
    B.compute(JG(B.inputs, R), { inputs: [B.inputs[1], B.inputs[2]], outputs: [] });
  };
}), iG, yG, oG, XR, NG, sG, jG, SG, hG, LG, YG, KG, rR, lG, kG, cG, HG, aG, Mo, Go, ws = sA(() => {
  zA(), $A(), tI(), II(), iG = (B, R) => {
    if (B.every((F) => F > 0 || (() => {
      throw new Error("Resize requires scales input values to be positive");
    })), B.length > 0) {
      if (R.mode === "linear") {
        if (!(B.length === 2 || B.length === 3 || B.length === 4 && B[0] === 1 && B[1] === 1 || B.length === 4 && B[0] === 1 && B[3] === 1 || B.length === 5 && B[0] === 1 && B[1] === 1)) throw new Error(`For linear mode, Resize requires scales to be 2D, 3D, 4D with either two outermost or one innermost and
            one outermost scale values equal to 1, or 5D with two outermost scale values equal to 1`);
      } else if (R.mode === "cubic" && !(B.length === 2 || B.length === 4 && B[0] === 1 && B[1] === 1 || B.length === 4 && B[0] === 1 && B[3] === 1)) throw new Error("Resize requires scales input size to be 2 or 4 for cubic mode");
    }
  }, yG = (B, R, F) => {
    R.every((s) => s >= 0 && s < F || (() => {
      throw new Error("Resize requires axes input values to be positive and less than rank");
    }));
    let i = new Array(F).fill(1);
    return R.forEach((s, N) => i[s] = B[N]), i;
  }, oG = (B, R, F, i, s, N) => {
    let [j, h, l] = F > 10 ? [1, 2, 3] : [-1, B.length > 1 ? 1 : -1, -1], k = B[0].dims.length;
    if (j > 0 && B.length > j && B[j].dims.length > 0) B[j].getFloat32Array().forEach((q) => N.push(q));
    else if (R.coordinateTransformMode === "tf_crop_and_resize") throw new Error("Resize requires RoI input to be specified when coordinateTransformMode is tfCropAndResize");
    if (h > 0 && B.length > h && B[h].dims.length === 1 && B[h].dims[0] > 0) {
      if (B[h].getFloat32Array().forEach((q) => i.push(q)), i.length !== 0 && i.length !== k && F >= 18 && i.length !== R.axes.length) throw new Error("Resize requires scales input size to be same as input rank or axes size for opset 18 and up");
      iG(i, R), R.axes.length > 0 && yG(i, R.axes, k).forEach((q, d) => i[d] = q);
    }
    if (l > 0 && B.length > l && B[l].dims.length === 1 && B[l].dims[0] > 0 && (B[l].getBigInt64Array().forEach((q) => s.push(Number(q))), s.length !== 0 && s.length !== k && F >= 18 && s.length !== R.axes.length)) throw new Error("Resize requires sizes input size to be same as input rank or axes size for opset 18 and up");
    if (R.axes.length > 0) {
      if (i.length !== 0 && i.length !== R.axes.length) throw new Error('Resize requires "scales" input size to be of axes rank when axes attributes is specified');
      if (s.length !== 0 && s.length !== R.axes.length) throw new Error('Resize requires "sizes" input size to be of rank axes rank when axes attributes is specified');
    }
    if (typeof i < "u" && typeof s < "u" && i.length > 0 && s.length > k) throw new Error("Resize requires only of scales or sizes to be specified");
  }, XR = (B, R, F, i) => `
  // The whole part and the fractional part are calculated separately due to inaccuracy of floating
  // point division. As an example, f32(21) / f32(7) may evaluate to 2.99... instead of 3, causing an
  // offset-by-one error later in floor().
  let big = (${B}) * (${R});
  let whole = ${i}(big / (${F}));
  let fract = ${i}(big % (${F})) / ${i}(${F});
  return whole + fract;
`, NG = (B, R) => `fn getOriginalCoordinateFromResizedCoordinate(xResized: u32, xScale: f32, lengthResized: u32,
     lengthOriginal: u32, roiStart: f32, roiEnd: f32) -> ${R} { ` + (() => {
    switch (B) {
      case "asymmetric":
        return `
          if (xScale < 1.0 || floor(xScale) != xScale) {
            return ${R}(xResized) / ${R}(xScale);
          } else {
            ${XR("xResized", "lengthOriginal", "lengthResized", R)}
          }
        `;
      case "pytorch_half_pixel":
        return `if (lengthResized > 1) {
                    return (${R}(xResized) + 0.5) / ${R}(xScale) - 0.5;
                  } else {
                    return 0.0;
                  }`;
      case "tf_half_pixel_for_nn":
        return `return (${R}(xResized) + 0.5) / ${R}(xScale);`;
      case "align_corners":
        return `if (lengthResized == 1) {
                    return 0.0;
                  } else {
                    ${XR("xResized", "lengthOriginal - 1", "lengthResized - 1", R)}
                  }`;
      case "tf_crop_and_resize":
        return `if (lengthResized > 1) {
                    return ${R}(roiStart) * ${R}(lengthOriginal - 1) +
                        (${R}(xResized) * ${R}(roiEnd - roiStart) * ${R}(lengthOriginal - 1)) /
                        ${R}(lengthResized - 1);
                  } else {
                    return 0.5 * ${R}(roiStart + roiEnd) * ${R}(lengthOriginal - 1);
                  }`;
      case "half_pixel_symmetric":
        return `const outputWidth = ${R}xScale * ${R}(lengthResized);
                  const adjustment = ${R}(lengthResized) / outputWidth;
                  const center = ${R}(lengthOriginal) / 2;
                  const offset = center * (1 - adjustment);
                  return offset + ((${R}(xResized) + 0.5) / ${R}(xScale)) - 0.5;`;
      case "half_pixel":
        return `return ((${R}(xResized) + 0.5) / ${R}(xScale)) - 0.5;`;
      default:
        throw new Error(`Coordinate transform mode ${B} is not supported`);
    }
  })() + "}", sG = (B, R, F) => `fn getNearestPixelFromOriginal(xOriginal: ${F}, isDownSample: bool) -> ${F} {` + (() => {
    switch (B) {
      case "round_prefer_ceil":
        return "if (fract(xOriginal) == 0.5) {             return ceil(xOriginal);           } else {             return round(xOriginal);           }";
      case "floor":
        return "return floor(xOriginal);";
      case "ceil":
        return "return ceil(xOriginal);";
      case "round_prefer_floor":
        return "if (fract(xOriginal) == 0.5) {                     return floor(xOriginal);                   } else {                     return round(xOriginal);                   }";
      case "simple":
      default:
        if (R < 11) return "if (isDownSample)                     {                       return ceil(xOriginal);                     } else {                       return xOriginal;                     }";
        throw new Error(`Nearest mode ${B} is not supported`);
    }
  })() + "}", jG = (B, R, F) => {
    let i = new Array(F).fill(0).concat(new Array(F).fill(1)), s = B.length === 0 ? i : B.slice();
    return R.length > 0 ? (R.forEach((N, j) => {
      i[N] = s[j], i[j + F] = s[R.length + j];
    }), i) : s;
  }, SG = (B, R, F, i) => {
    let s = [];
    if (F.length > 0) if (i.length > 0) {
      if (B.forEach((N) => s.push(N)), Math.max(...i) > B.length) throw new Error("axes is out of bound");
      i.forEach((N, j) => s[N] = F[j]);
    } else F.forEach((N) => s.push(N));
    else {
      if (R.length === 0) throw new Error("Resize requires either scales or sizes.");
      s = B.map((N, j) => Math.round(N * R[j]));
    }
    return s;
  }, hG = (B, R, F) => {
    let i = (() => {
      switch (F.keepAspectRatioPolicy) {
        case "not_larger":
          return F.axes.length > 0 ? Math.min(...F.axes.map((N) => R[N]), Number.MAX_VALUE) : Math.min(...R, Number.MAX_VALUE);
        case "not_smaller":
          return F.axes.length > 0 ? Math.max(...F.axes.map((N) => R[N]), Number.MIN_VALUE) : Math.max(...R, Number.MIN_VALUE);
        default:
          throw new Error(`Keep aspect ratio policy ${F.keepAspectRatioPolicy} is not supported`);
      }
    })();
    R.fill(1, 0, R.length);
    let s = B.slice();
    return F.axes.length > 0 ? (F.axes.forEach((N) => R[N] = i), F.axes.forEach((N) => s[N] = Math.round(B[N] * R[N]))) : (R.fill(i, 0, R.length), s.forEach((N, j) => s[j] = Math.round(N * R[j]))), s;
  }, LG = (B, R, F, i, s) => `
    fn calculateOriginalIndicesFromOutputIndices(output_indices: ${B.type.indices}) -> array<${B.type.value}, ${F.length}> {
      var original_indices: array<${B.type.value}, ${F.length}>;
      for (var i:u32 = 0; i < ${F.length}; i++) {
        var output_index = ${B.indicesGet("output_indices", "i")};
        var scale = ${VA("uniforms.scales", "i", i)};
        var roi_low = ${VA("uniforms.roi", "i", s)};
        var roi_hi = ${VA("uniforms.roi", `i + ${R.length}`, s)};
        if (scale == 1.0) {
          original_indices[i] = ${B.type.value}(output_index);
        } else {
          var input_shape_i = ${VA("uniforms.input_shape", "i", R.length)};
          var output_shape_i = ${VA("uniforms.output_shape", "i", F.length)};
          original_indices[i] = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                           input_shape_i, roi_low, roi_hi);
        }
      }
      return original_indices;
    }`, YG = (B, R, F, i, s, N, j) => `
    fn calculateInputIndicesFromOutputIndices(output_indices: ${R.type.indices}) -> ${B.type.indices} {
      var input_indices: ${B.type.indices};
      for (var i:u32 = 0; i < ${i.length}; i++) {
        var output_index = ${R.indicesGet("output_indices", "i")};
        var input_index: u32;
        var scale = ${VA("uniforms.scales", "i", s)};
        if (scale == 1.0) {
          input_index = output_index;
        } else {
          var roi_low = ${VA("uniforms.roi", "i", N)};
          var roi_hi = ${VA("uniforms.roi", `i + ${F.length}`, N)};
          var input_shape_i = ${VA("uniforms.input_shape", "i", F.length)};
          var output_shape_i = ${VA("uniforms.output_shape", "i", i.length)};
          var original_idx = getOriginalCoordinateFromResizedCoordinate(output_index, scale, output_shape_i,
                                                                        input_shape_i, roi_low, roi_hi);
          if (!${j} || (original_idx >= 0 && original_idx < ${R.type.value}(input_shape_i))) {
            if (original_idx < 0) {
              input_index = 0;
            } else if (original_idx > ${R.type.value}(input_shape_i - 1)) {
              input_index = input_shape_i - 1;
            } else {
              input_index = u32(getNearestPixelFromOriginal(original_idx, scale < 1));
            }
          } else {
            input_index = u32(original_idx);
          }
        }
        ${B.indicesSet("input_indices", "i", "input_index")}
      }
      return input_indices;
    }`, KG = (B, R) => `
    fn checkInputIndices(input_indices: ${B.type.indices}) -> bool {
      for (var i:u32 = 0; i < ${R.length}; i++) {
        var input_index = ${B.indicesGet("input_indices", "i")};
        if (input_index < 0 || input_index >= ${VA("uniforms.input_shape", "i", R.length)}) {
          return false;
        }
      }
      return true;
    }`, rR = (B, R, F, i) => B.rank > i ? `
    ${B.indicesSet("input_indices", R, "channel")};
    ${B.indicesSet("input_indices", F, "batch")};
` : "", lG = (B, R, F, i, s) => {
    let [N, j, h, l] = F.length === 2 ? [-1, 0, 1, -1] : [0, 2, 3, 1], k = B.type.value;
    return `
    fn getInputValue(batch: u32, channel: u32, row: u32, col: u32) -> ${k} {
      var input_indices: ${B.type.indices};
      ${B.indicesSet("input_indices", j, `max(0, min(row, ${F[j]} - 1))`)};
      ${B.indicesSet("input_indices", h, `max(0, min(col, ${F[h]} - 1))`)};
      ${rR(B, l, N, 2)}
      return ${B.getByIndices("input_indices")};
    }

    fn bilinearInterpolation(output_indices: ${R.type.indices}) -> ${k} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var row:${k} = originalIndices[${j}];
      var col:${k} = originalIndices[${h}];
      ${i ? `if (row < 0 || row > (${F[j]} - 1) || col < 0 || col > (${F[h]} - 1)) {
        return ${s};
      }` : ""};
      row = max(0, min(row, ${F[j]} - 1));
      col = max(0, min(col, ${F[h]} - 1));
      var row1: u32 = u32(row);
      var col1: u32 = u32(col);
      var row2: u32 = u32(row + 1);
      var col2: u32 = u32(col + 1);
      var channel: u32 = ${F.length > 2 ? `u32(originalIndices[${l}])` : "0"};
      var batch: u32 =  ${F.length > 2 ? `u32(originalIndices[${N}])` : "0"};
      var x11: ${k} = getInputValue(batch, channel, row1, col1);
      var x12: ${k} = getInputValue(batch, channel, row1, col2);
      var x21: ${k} = getInputValue(batch, channel, row2, col1);
      var x22: ${k} = getInputValue(batch, channel, row2, col2);
      var dx1: ${k} = abs(row - ${k}(row1));
      var dx2: ${k} = abs(${k}(row2) - row);
      var dy1: ${k} = abs(col - ${k}(col1));
      var dy2: ${k} = abs(${k}(col2) - col);
      if (row1 == row2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (col1 == col2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      return (x11 * dx2 * dy2 + x12 * dx2 * dy1 + x21 * dx1 * dy2 + x22 * dx1 * dy1);
    }`;
  }, kG = (B, R, F, i, s, N, j, h, l, k) => {
    let q = F.length === 2, [d, b] = q ? [0, 1] : [2, 3], P = B.type.value, W = (r) => {
      let $ = r === d ? "row" : "col";
      return `
      fn ${$}CubicInterpolation(input_indices: ${B.type.indices}, output_indices: ${R.type.indices}) -> ${P} {
        var output_index = ${R.indicesGet("output_indices", r)};
        var originalIdx: ${P} = getOriginalCoordinateFromResizedCoordinate(output_index, ${s[r]},
        ${i[r]}, ${F[r]}, ${N[r]}, ${N[r]} + ${F.length});
        var fractOriginalIdx: ${P} = originalIdx - floor(originalIdx);
        var coefs = getCubicInterpolationCoefs(fractOriginalIdx);

        if (${h} && (originalIdx < 0 || originalIdx > (${F[r]} - 1))) {
          return ${l};
        }
        var data: array<${P}, 4> = array<${P}, 4>(0.0, 0.0, 0.0, 0.0);
        for (var i: i32 = -1; i < 3; i++) {
          var ${$}: ${P} = originalIdx + ${P}(i);
          if (${$} < 0 || ${$} >= ${F[r]}) {
            ${k ? `coefs[i + 1] = 0.0;
                        continue;` : h ? `return ${l};` : `${$} = max(0, min(${$}, ${F[r]} - 1));`};
          }
        var input_indices_copy: ${B.type.indices} = input_indices;
          ${B.indicesSet("input_indices_copy", r, `u32(${$})`)};
          data[i + 1] = ${r === d ? B.getByIndices("input_indices_copy") : "rowCubicInterpolation(input_indices_copy, output_indices)"};
        }
        return cubicInterpolation1D(data, coefs);
      }`;
    };
    return `
    ${W(d)};
    ${W(b)};
  fn getCubicInterpolationCoefs(s: ${P}) -> array<${P}, 4> {
    var absS = abs(s);
    var coeffs: array<${P}, 4> = array<${P}, 4>(0.0, 0.0, 0.0, 0.0);
    var oneMinusAbsS: ${P} = 1.0 - absS;
    var twoMinusAbsS: ${P} = 2.0 - absS;
    var onePlusAbsS: ${P} = 1.0 + absS;
    coeffs[0] = ((${j} * onePlusAbsS - 5 * ${j}) * onePlusAbsS + 8 * ${j}) * onePlusAbsS - 4 * ${j};
    coeffs[1] = ((${j} + 2) * absS - (${j} + 3)) * absS * absS + 1;
    coeffs[2] = ((${j} + 2) * oneMinusAbsS - (${j} + 3)) * oneMinusAbsS * oneMinusAbsS + 1;
    coeffs[3] = ((${j} * twoMinusAbsS - 5 * ${j}) * twoMinusAbsS + 8 * ${j}) * twoMinusAbsS - 4 * ${j};
    return coeffs;
  }

  fn cubicInterpolation1D(x: array<${P}, 4>, coefs: array<${P}, 4>) -> ${P} {
    var coefsSum: ${P} = coefs[0] + coefs[1] + coefs[2] + coefs[3];
    return (x[0] * coefs[0] + x[1] * coefs[1]+ x[2] * coefs[2]+ x[3] * coefs[3]) / coefsSum;
  }

  fn bicubicInterpolation(output_indices: ${R.type.indices}) -> ${P} {
    var input_indices: ${B.type.indices} = output_indices;
    return colCubicInterpolation(input_indices, output_indices);
  }
    `;
  }, cG = (B, R, F, i, s) => {
    let [N, j, h, l, k] = F.length === 3 ? [-1, 0, 1, 2, -1] : [0, 2, 3, 4, 1], q = B.type.value;
    return `
    fn getInputValue(batch: u32, channel: u32, depth:u32, height: u32, width: u32) -> ${q} {
      var input_indices: ${B.type.indices};
      ${B.indicesSet("input_indices", j, `max(0, min(depth, ${F[j]} - 1))`)};
      ${B.indicesSet("input_indices", h, `max(0, min(height, ${F[h]} - 1))`)};
      ${B.indicesSet("input_indices", l, `max(0, min(width, ${F[l]} - 1))`)};
      ${rR(B, k, N, 3)}
      return ${B.getByIndices("input_indices")};
    }

    fn trilinearInterpolation(output_indices: ${R.type.indices}) -> ${q} {
      var originalIndices = calculateOriginalIndicesFromOutputIndices(output_indices);
      var depth:${q} = originalIndices[${j}];
      var height:${q} = originalIndices[${h}];
      var width:${q} = originalIndices[${l}];
      ${i ? `if (depth < 0 || depth > (${F[j]} - 1) || height < 0 || height > (${F[h]} - 1) || width < 0 || (width > ${F[l]} - 1)) {
      return ${s};
        }` : ""};

    depth = max(0, min(depth, ${F[j]} - 1));
      height = max(0, min(height, ${F[h]} - 1));
      width = max(0, min(width, ${F[l]} - 1));
      var depth1: u32 = u32(depth);
      var height1: u32 = u32(height);
      var width1: u32 = u32(width);
      var depth2: u32 = u32(depth + 1);
      var height2: u32 = u32(height + 1);
      var width2: u32 = u32(width + 1);
      var channel: u32 = ${F.length > 3 ? `u32(originalIndices[${k}])` : "0"};
      var batch: u32 =  ${F.length > 3 ? `u32(originalIndices[${N}])` : "0"};

      var x111: ${q} = getInputValue(batch, channel, depth1, height1, width1);
      var x112: ${q} = getInputValue(batch, channel, depth1, height1, width2);
      var x121: ${q} = getInputValue(batch, channel, depth1, height2, width1);
      var x122: ${q} = getInputValue(batch, channel, depth1, height2, width2);
      var x211: ${q} = getInputValue(batch, channel, depth2, height1, width1);
      var x212: ${q} = getInputValue(batch, channel, depth2, height1, width2);
      var x221: ${q} = getInputValue(batch, channel, depth2, height2, width1);
      var x222: ${q} = getInputValue(batch, channel, depth2, height2, width2);
      var dx1: ${q} = abs(depth - ${q}(depth1));
      var dx2: ${q} = abs(${q}(depth2) - depth);
      var dy1: ${q} = abs(height - ${q}(height1));
      var dy2: ${q} = abs(${q}(height2) - height);
      var dz1: ${q} = abs(width - ${q}(width1));
      var dz2: ${q} = abs(${q}(width2) - width);
      if (depth1 == depth2) {
        dx1 = 0.5;
        dx2 = 0.5;
      }
      if (height1 == height2) {
        dy1 = 0.5;
        dy2 = 0.5;
      }
      if (width1 == width2) {
        dz1 = 0.5;
        dz2 = 0.5;
      }
      return (x111 * dx2 * dy2 * dz2 + x112 * dx2 * dy2 * dz1 + x121 * dx2 * dy1 *dz2 + x122 * dx2 * dy1 * dz1 +
              x211 * dx1 * dy2 * dz2 + x212 * dx1 * dy2 * dz1 + x221 * dx1 * dy1 *dz2 + x222 * dx1 * dy1 * dz1);
    }`;
  }, HG = (B, R, F, i, s, N) => {
    let j = B.dims, h = jG(N, R.axes, j.length), l = SG(j, i, s, R.axes), k = i.slice();
    i.length === 0 && (k = j.map((z, IA) => z === 0 ? 1 : l[IA] / z), R.keepAspectRatioPolicy !== "stretch" && (l = hG(j, k, R)));
    let q = qA("output", B.dataType, l.length), d = FA("input", B.dataType, j.length), b = RA.size(l), P = j.length === l.length && j.every((z, IA) => z === l[IA]), W = R.coordinateTransformMode === "tf_crop_and_resize", r = R.extrapolationValue, $ = d.type.value, m = (z) => `
      ${P ? "" : `
      ${NG(R.coordinateTransformMode, $)};
      ${(() => {
      switch (R.mode) {
        case "nearest":
          return `
              ${KG(d, j)};
              ${sG(R.nearestMode, F, $)};
              ${YG(d, q, j, l, k.length, h.length, W)};
              `;
        case "linear":
          return `
              ${LG(q, j, l, k.length, h.length)};
              ${(() => {
            if (j.length === 2 || j.length === 4) return `${lG(d, q, j, W, r)}`;
            if (j.length === 3 || j.length === 5) return `${cG(d, q, j, W, r)}`;
            throw Error("Linear mode only supports input dims 2, 3, 4 and 5 are supported in linear mode.");
          })()};
            `;
        case "cubic":
          return `
            ${(() => {
            if (j.length === 2 || j.length === 4) return `${kG(d, q, j, l, k, h, R.cubicCoeffA, W, R.extrapolationValue, R.excludeOutside)}`;
            throw Error("Cubic mode only supports input dims 2 and 4 are supported in linear mode.");
          })()};
            `;
        default:
          throw Error("Invalid resize mode");
      }
    })()};
      `}
      ${z.registerUniform("output_size", "u32").registerUniform("scales", "f32", k.length).registerUniform("roi", "f32", h.length).declareVariables(d, q)}
      ${z.mainStart()}
        ${z.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
        ${P ? "output[global_idx] = input[global_idx];" : `
        let output_indices = ${q.offsetToIndices("global_idx")};
        var input_indices: ${d.type.indices};
        ${(() => {
      switch (R.mode) {
        case "nearest":
          return `input_indices = calculateInputIndicesFromOutputIndices(output_indices);
                if (checkInputIndices(input_indices)) {
                  output[global_idx] = ${d.getByIndices("input_indices")};
                } else {
                  output[global_idx] = ${R.extrapolationValue};
                }`;
        case "linear":
          return `output[global_idx] = ${j.length === 2 || j.length === 4 ? "bilinearInterpolation" : "trilinearInterpolation"}(output_indices);`;
        case "cubic":
          return "output[global_idx] = bicubicInterpolation(output_indices);";
        default:
          throw Error(`Unsupported resize mode: ${R.mode}`);
      }
    })()};
`}
      }`;
    return { name: "Resize", shaderCache: { hint: `${R.cacheKey}|${F}|${k.length > 0 ? R.mode === "cubic" ? k : k.length : ""}|${s.length > 0 ? s : ""}|${h.length > 0 ? h : ""}|${P}|${R.mode === "nearest" ? j.length : j}`, inputDependencies: ["rank"] }, getShaderSource: m, getRunData: () => ({ outputs: [{ dims: l, dataType: B.dataType }], dispatchGroup: { x: Math.ceil(b / 64) }, programUniforms: [{ type: 12, data: b }, { type: 1, data: k }, { type: 1, data: h }, ...TA(j, l)] }) };
  }, aG = (B) => {
    let R = B.customDataBuffer;
    return new Uint32Array(R, R.byteOffset, 1)[0];
  }, Mo = (B, R) => {
    let F = [], i = [], s = [], N = aG(B);
    if (R.antialias !== 0) throw Error("Only default value (0) for Antialias attribute is supported");
    oG(B.inputs, R, N, F, i, s), B.compute(HG(B.inputs[0], R, N, F, i, s), { inputs: [0] });
  }, Go = (B) => {
    let R = B.antialias, F = B.axes, i = B.coordinateTransformMode, s = B.cubicCoeffA, N = B.excludeOutside !== 0, j = B.extrapolationValue, h = B.keepAspectRatioPolicy, l = B.mode, k = B.nearestMode === "" ? "simple" : B.nearestMode;
    return NI({ antialias: R, axes: F, coordinateTransformMode: i, cubicCoeffA: s, excludeOutside: N, extrapolationValue: j, keepAspectRatioPolicy: h, mode: l, nearestMode: k });
  };
}), ZG, nG, Jo, Ds = sA(() => {
  zA(), $A(), II(), ZG = (B) => {
    if (!B || B.length < 3) throw new Error("layerNorm requires at least 3 inputs.");
    let R = B[0], F = B[1], i = B[2];
    if (R.dataType !== F.dataType || R.dataType !== i.dataType) throw new Error("All inputs must have the same data type");
    if (R.dims.length !== 3 && R.dims.length !== 2) throw new Error("Input must be 2D or 3D");
    if (F.dims.length !== 3 && F.dims.length !== 2) throw new Error("Skip must be 2D or 3D");
    let s = R.dims[R.dims.length - 1], N = R.dims[R.dims.length - 2];
    if (F.dims[F.dims.length - 1] !== s) throw new Error("Skip must have the same hidden size as input");
    if (F.dims[F.dims.length - 2] !== N) throw new Error("Skip must have the same sequence length as input");
    if (i.dims.length !== 1) throw new Error("Gamma must be 1D");
    if (i.dims[i.dims.length - 1] !== s) throw new Error("Gamma must have the same hidden size as input");
    if (B.length > 3) {
      let j = B[3];
      if (j.dims.length !== 1) throw new Error("Beta must be 1D");
      if (j.dims[j.dims.length - 1] !== s) throw new Error("Beta must have the same hidden size as input");
    }
    if (B.length > 4) {
      let j = B[4];
      if (j.dims.length !== 1) throw new Error("Bias must be 1D");
      if (j.dims[j.dims.length - 1] !== s) throw new Error("Bias must have the same hidden size as input");
    }
  }, nG = (B, R, F, i) => {
    let s = R.simplified, N = B[0].dims, j = RA.size(N), h = N, l = j, k = N.slice(-1)[0], q = i ? N.slice(0, -1).concat(1) : [], d = !s && B.length > 3, b = B.length > 4, P = i && F > 1, W = i && F > 2, r = F > 3, $ = 64, m = xI(k), z = [{ type: 12, data: l }, { type: 12, data: m }, { type: 12, data: k }, { type: 1, data: R.epsilon }], IA = (L) => {
      let A = [{ name: "output_size", type: "u32" }, { name: "components", type: "u32" }, { name: "hidden_size", type: "u32" }, { name: "epsilon", type: "f32" }], G = [FA("x", B[0].dataType, B[0].dims, m), FA("skip", B[1].dataType, B[1].dims, m), FA("gamma", B[2].dataType, B[2].dims, m)];
      d && G.push(FA("beta", B[3].dataType, B[3].dims, m)), b && G.push(FA("bias", B[4].dataType, B[4].dims, m)), G.push(qA("output", B[0].dataType, h, m)), P && G.push(qA("mean_output", 1, q)), W && G.push(qA("inv_std_output", 1, q)), r && G.push(qA("input_skip_bias_sum", B[0].dataType, h, m));
      let a = QC(B[0].dataType), UA = QC(1, m);
      return `

      ${L.registerUniforms(A).declareVariables(...G)}
      var<workgroup> sum_shared : array<${UA}, ${$}>;
      var<workgroup> sum_squared_shared : array<${UA}, ${$}>;

      ${L.mainStart([$, 1, 1])}
        let ix = local_id.x;
        let iy = global_id.x / ${$};

        let hidden_size_vectorized: u32 = uniforms.hidden_size / uniforms.components;
        var stride = hidden_size_vectorized / ${$};
        let offset = ix * stride + iy * hidden_size_vectorized;
        let offset1d = stride * ix;
        if (ix == ${$ - 1}) {
          stride = hidden_size_vectorized - stride * ix;
        }
        for (var i: u32 = 0; i < stride; i++) {
          let skip_value = skip[offset + i];
          let bias_value = ${b ? "bias[offset1d + i]" : a + "(0.0)"};
          let input_value = x[offset + i];
          let value = input_value + skip_value + bias_value;
          ${r ? "input_skip_bias_sum[offset + i] = value;" : ""}
          output[offset + i] = value;
          let f32_value = ${LB(a, m, "value")};
          sum_shared[ix] += f32_value;
          sum_squared_shared[ix] += f32_value * f32_value;
        }
        workgroupBarrier();

        var reduce_size : u32 = ${$};
        for (var curr_size = reduce_size >> 1;  curr_size > 0; curr_size = reduce_size >> 1) {
          reduce_size = curr_size + (reduce_size & 1);
          if (ix < curr_size) {
            sum_shared[ix] += sum_shared[ix + reduce_size];
            sum_squared_shared[ix] += sum_squared_shared[ix + reduce_size];
          }
          workgroupBarrier();
        }

        let sum = sum_shared[0];
        let square_sum = sum_squared_shared[0];
        let mean = ${Rg("sum", m)} / f32(uniforms.hidden_size);
        let inv_std_dev = inverseSqrt(${Rg("square_sum", m)} / f32(uniforms.hidden_size) ${s ? "" : "- mean * mean"} + uniforms.epsilon);
        ${P ? "mean_output[global_idx] = mean;" : ""}
        ${W ? "inv_std_output[global_idx] = inv_std_dev;" : ""}

        for (var i: u32 = 0; i < stride; i++) {
          output[offset + i] = (output[offset + i] ${s ? "" : `- ${a}(mean)`}) *
            ${a}(inv_std_dev) * gamma[offset1d + i]
            ${d ? "+ beta[offset1d + i]" : ""};
        }
      }`;
    }, M = [{ dims: h, dataType: B[0].dataType }];
    return F > 1 && M.push({ dims: q, dataType: 1 }), F > 2 && M.push({ dims: q, dataType: 1 }), F > 3 && M.push({ dims: N, dataType: B[0].dataType }), { name: "SkipLayerNormalization", shaderCache: { hint: `${m};${P};${W};${r}`, inputDependencies: B.map((L, A) => "type") }, getShaderSource: IA, getRunData: () => ({ outputs: M, dispatchGroup: { x: Math.ceil(l / k) }, programUniforms: z }) };
  }, Jo = (B, R) => {
    ZG(B.inputs);
    let F = [0];
    B.outputCount > 1 && F.push(-3), B.outputCount > 2 && F.push(-3), B.outputCount > 3 && F.push(3), B.compute(nG(B.inputs, R, B.outputCount, !1), { outputs: F });
  };
}), dG, YE, qG, mR, VG, bG, io, yo, Fs = sA(() => {
  zA(), $A(), tI(), II(), dG = (B, R) => {
    if (!B || B.length < 1) throw new Error("too few inputs");
    if (R.axes.length !== 0) {
      if (R.axes.length !== R.starts.length || R.axes.length !== R.ends.length) throw new Error("axes, starts and ends must have the same length");
    } else if (R.starts.length !== R.ends.length) throw new Error("starts and ends must have the same length");
    B.slice(1).forEach((F, i) => {
      if (B[i + 1].dataType !== 6 && B[i + 1].dataType !== 7) throw new Error(`Input ${i} must be an array of int32 or int64`);
    });
  }, YE = (B, R) => {
    let F = [];
    if (B.length > R) if (B[R].dataType === 7) B[R].getBigInt64Array().forEach((i) => F.push(Number(i)));
    else if (B[R].dataType === 6) B[R].getInt32Array().forEach((i) => F.push(Number(i)));
    else throw new Error(`Input ${R} must be an array of int32 or int64`);
    return F;
  }, qG = (B, R) => {
    if (B.length > 1) {
      let F = YE(B, 1), i = YE(B, 2), s = YE(B, 3);
      return s.length === 0 && (s = [...Array(B[0].dims.length).keys()]), NI({ starts: F, ends: i, axes: s });
    } else return R;
  }, mR = (B, R, F, i, s) => {
    let N = B;
    return B < 0 && (N += F[i[R]]), s[R] < 0 ? Math.max(0, Math.min(N, F[i[R]] - 1)) : Math.max(0, Math.min(N, F[i[R]]));
  }, VG = (B, R, F) => `fn calculateInputIndices(output_indices: ${R.type.indices}) -> ${B.type.indices} {
          var input_indices: ${B.type.indices};
          var carry = 0u;
          for (var i = ${F.length}; i >= 0; i--) {
            let input_shape_i = ${VA("uniforms.input_shape", "i", F.length)};
            let steps_i = ${VA("uniforms.steps", "i", F.length)};
            let signs_i = ${VA("uniforms.signs", "i", F.length)};
            let starts_i = ${VA("uniforms.starts", "i", F.length)};
            var output_index = ${R.indicesGet("output_indices", "i")};
            var input_index = output_index * steps_i + starts_i + carry;
            carry = input_index / input_shape_i;
            input_index = input_index % input_shape_i;
            if (signs_i < 0) {
              input_index = input_shape_i - input_index - 1u + starts_i;
            }
            ${B.indicesSet("input_indices", "i", "input_index")};
          }
          return input_indices;
      }`, bG = (B, R) => {
    let F = B[0].dims, i = RA.size(F), s = R.axes.length > 0 ? RA.normalizeAxes(R.axes, F.length) : [...Array(F.length).keys()], N = YE(B, 4);
    N.forEach((m) => m !== 0 || (() => {
      throw new Error("step cannot be 0");
    })), N.length === 0 && (N = Array(s.length).fill(1));
    let j = R.starts.map((m, z) => mR(m, z, F, s, N)), h = R.ends.map((m, z) => mR(m, z, F, s, N));
    if (s.length !== j.length || s.length !== h.length) throw new Error("start, ends and axes should have the same number of elements");
    if (s.length !== F.length) for (let m = 0; m < F.length; ++m) s.includes(m) || (j.splice(m, 0, 0), h.splice(m, 0, F[m]), N.splice(m, 0, 1));
    let l = N.map((m) => Math.sign(m));
    N.forEach((m, z, IA) => {
      if (m < 0) {
        let M = (h[z] - j[z]) / m, L = j[z], A = L + M * N[z];
        j[z] = A, h[z] = L, IA[z] = -m;
      }
    });
    let k = F.slice(0);
    s.forEach((m, z) => {
      k[m] = Math.ceil((h[m] - j[m]) / N[m]);
    });
    let q = { dims: k, dataType: B[0].dataType }, d = qA("output", B[0].dataType, k.length), b = FA("input", B[0].dataType, B[0].dims.length), P = RA.size(k), W = [{ name: "outputSize", type: "u32" }, { name: "starts", type: "u32", length: j.length }, { name: "signs", type: "i32", length: l.length }, { name: "steps", type: "u32", length: N.length }], r = [{ type: 12, data: P }, { type: 12, data: j }, { type: 6, data: l }, { type: 12, data: N }, ...TA(B[0].dims, k)], $ = (m) => `
      ${m.registerUniforms(W).declareVariables(b, d)}
        ${VG(b, d, F)}
        ${m.mainStart()}
          ${m.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.outputSize")}
          let output_indices = ${d.offsetToIndices("global_idx")};
          let input_indices = calculateInputIndices(output_indices);
          ${d.setByOffset("global_idx", b.getByIndices("input_indices"))}
      }`;
    return { name: "Slice", shaderCache: { hint: `${l.length}_${j.length}_${N.length}`, inputDependencies: ["rank"] }, getShaderSource: $, getRunData: () => ({ outputs: [q], dispatchGroup: { x: Math.ceil(i / 64) }, programUniforms: r }) };
  }, io = (B, R) => {
    dG(B.inputs, R);
    let F = qG(B.inputs, R);
    B.compute(bG(B.inputs, F), { inputs: [0] });
  }, yo = (B) => {
    let R = B.starts, F = B.ends, i = B.axes;
    return NI({ starts: R, ends: F, axes: i });
  };
}), TG, xG, oo, No, Ms = sA(() => {
  zA(), $A(), tI(), wg(), II(), TG = (B) => {
    if (!B || B.length !== 1) throw new Error("Softmax op requires 1 input.");
  }, xG = (B, R) => {
    let F = B.inputs[0], i = F.dims, s = RA.size(i), N = i.length, j = RA.normalizeAxis(R.axis, N), h = j < i.length - 1, l, k = [];
    h ? (k = Array.from({ length: N }, (G, a) => a), k[j] = N - 1, k[N - 1] = j, l = B.compute(tC(F, k), { inputs: [F], outputs: [-1] })[0]) : l = F;
    let q = l.dims, d = q[N - 1], b = s / d, P = xI(d), W = d / P, r = 64;
    b === 1 && (r = 256);
    let $ = (G, a) => a === 4 ? `max(max(${G}.x, ${G}.y), max(${G}.z, ${G}.w))` : a === 2 ? `max(${G}.x, ${G}.y)` : a === 3 ? `max(max(${G}.x, ${G}.y), ${G}.z)` : G, m = FA("x", l.dataType, l.dims, P), z = qA("result", l.dataType, l.dims, P), IA = m.type.value, M = QC(l.dataType) === "f32" ? `var threadMax = ${IA}(-3.402823e+38f);` : `var threadMax = ${IA}(-65504.0h);`, L = (G) => `
      var<workgroup> rowMaxShared : ${IA};
      var<workgroup> rowSumShared : ${IA};
      var<workgroup> threadShared : array<${IA}, ${r}>;

      fn getValue(row: i32, col: i32, row_stride: i32) -> ${IA} {
        let index = row * row_stride + col;
        return x[index];
      }

      fn setValue(row: i32, col: i32, row_stride: i32, value: ${IA}) {
        let index = row * row_stride + col;
        result[index] = value;
      }
      ${G.registerUniform("packedCols", "i32").declareVariables(m, z)}
      ${G.mainStart(r)}
        let gindex = i32(global_idx);
        let lindex = i32(local_idx);
        const wg = ${r};
        let row = gindex / wg;
        let cols = uniforms.packedCols;
        let row_stride : i32 = uniforms.packedCols;

        // find the rows max
        ${M}
        for (var col = lindex; col < cols; col += wg) {
          let value = getValue(row, col, row_stride);
          threadMax = max(threadMax, value);
        }
        if (lindex < cols) {
          threadShared[lindex] = threadMax;
        }
        workgroupBarrier();

        var reduceSize = min(cols, wg);
        for (var currSize = reduceSize >> 1;  currSize > 0; currSize = reduceSize >> 1) {
          reduceSize = currSize + (reduceSize & 1);
          if (lindex < currSize) {
            threadShared[lindex] = max(threadShared[lindex], threadShared[lindex + reduceSize]);
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowMaxShared = ${IA}(${$("threadShared[0]", P)});
        }
        workgroupBarrier();

        // find the rows sum
        var threadSum = ${IA}(0.0);
        for (var col = lindex; col < cols; col += wg) {
          let subExp = exp(getValue(row, col, row_stride) - rowMaxShared);
          threadSum += subExp;
        }
        threadShared[lindex] = threadSum;
        workgroupBarrier();

        for (var currSize = wg >> 1;  currSize > 0; currSize = currSize >> 1) {
          if (lindex < currSize) {
            threadShared[lindex] = threadShared[lindex] + threadShared[lindex + currSize];
          }
          workgroupBarrier();
        }
        if (lindex == 0) {
          rowSumShared = ${IA}(${Rg("threadShared[0]", P)});
        }
        workgroupBarrier();

        // calculate final value for each element in the row
        for (var col = lindex; col < cols; col += wg) {
          let value = exp(getValue(row, col, row_stride) - rowMaxShared) / rowSumShared;
          setValue(row, col, row_stride, value);
        }
      }`, A = B.compute({ name: "Softmax", shaderCache: { hint: `${P};${r}`, inputDependencies: ["type"] }, getRunData: () => ({ outputs: [{ dims: q, dataType: l.dataType }], dispatchGroup: { x: b }, programUniforms: [{ type: 6, data: W }] }), getShaderSource: L }, { inputs: [l], outputs: [h ? -1 : 0] })[0];
    h && B.compute(tC(A, k), { inputs: [A] });
  }, oo = (B, R) => {
    TG(B.inputs), xG(B, R);
  }, No = (B) => NI({ axis: B.axis });
}), eR, PG, fG, pG, so, Gs = sA(() => {
  zA(), $A(), II(), eR = (B) => Array.from(B.getBigInt64Array(), Number), PG = (B) => {
    if (!B || B.length !== 2) throw new Error("Tile requires 2 inputs.");
    if (B[0].dataType !== 1 && B[0].dataType !== 10 && B[0].dataType !== 6 && B[0].dataType !== 12) throw new Error("Tile only support float, float16, int32, and uint32 data types");
    if (B[1].dataType !== 7) throw new Error("Tile `repeats` input should be of int64 data type");
    if (B[1].dims.length !== 1) throw new Error("Tile `repeats` input should be 1-D");
    if (eR(B[1]).length !== B[0].dims.length) throw new Error("Tile `repeats` input should have same number of elements as rank of input data tensor");
  }, fG = (B, R) => {
    let F = [];
    for (let i = 0; i < B.length; ++i) F.push(B[i] * R[i]);
    return F;
  }, pG = (B, R) => {
    let F = B[0].dims, i = R ?? eR(B[1]), s = fG(F, i), N = RA.size(s), j = B[0].dataType, h = FA("input", j, F.length), l = qA("output", j, s.length), k = (q) => `
      const inputShape = ${h.indices(...F)};
      ${q.registerUniform("output_size", "u32").declareVariables(h, l)}
      ${q.mainStart()}
      ${q.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.output_size")}
      let output_indices = ${l.offsetToIndices("global_idx")};
      var input_indices: ${h.type.indices};
      for (var i = 0; i < ${F.length}; i++) {
        let input_dim_i = ${h.indicesGet("uniforms.input_shape", "i")};
        let input_dim_value = ${l.indicesGet("output_indices", "i")}  % input_dim_i;

        ${h.indicesSet("input_indices", "i", "input_dim_value")}
      }
      ${l.setByOffset("global_idx", h.getByIndices("input_indices"))}
    }`;
    return { name: "Tile", shaderCache: { hint: `${i}`, inputDependencies: ["rank"] }, getRunData: () => ({ outputs: [{ dims: s, dataType: B[0].dataType }], dispatchGroup: { x: Math.ceil(N / 64) }, programUniforms: [{ type: 12, data: N }, ...TA(B[0].dims, s)] }), getShaderSource: k };
  }, so = (B) => {
    PG(B.inputs), B.compute(pG(B.inputs), { inputs: [0] });
  };
}), tG, WG, jo, Js = sA(() => {
  zA(), $A(), II(), tG = (B, R, F, i, s) => {
    let N = qA("output_data", s, F.length, 4), j = FA("a_data", R[1].dataType, R[1].dims.length, 4), h = FA("b_data", R[2].dataType, R[2].dims.length, 4), l = FA("c_data", R[0].dataType, R[0].dims.length, 4), k, q = (d, b, P) => `select(${b}, ${d}, ${P})`;
    if (!i) k = N.setByOffset("global_idx", q(j.getByOffset("global_idx"), h.getByOffset("global_idx"), l.getByOffset("global_idx")));
    else {
      let d = (b, P, W = "") => {
        let r = `a_data[index_a${P}][component_a${P}]`, $ = `b_data[index_b${P}][component_b${P}]`, m = `bool(c_data[index_c${P}] & (0xffu << (component_c${P} * 8)))`;
        return `
            let output_indices${P} = ${N.offsetToIndices(`global_idx * 4u + ${P}u`)};
            let offset_a${P} = ${j.broadcastedIndicesToOffset(`output_indices${P}`, N)};
            let offset_b${P} = ${h.broadcastedIndicesToOffset(`output_indices${P}`, N)};
            let offset_c${P} = ${l.broadcastedIndicesToOffset(`output_indices${P}`, N)};
            let index_a${P} = offset_a${P} / 4u;
            let index_b${P} = offset_b${P} / 4u;
            let index_c${P} = offset_c${P} / 4u;
            let component_a${P} = offset_a${P} % 4u;
            let component_b${P} = offset_b${P} % 4u;
            let component_c${P} = offset_c${P} % 4u;
            ${b}[${P}] = ${W}(${q(r, $, m)});
          `;
      };
      s === 9 ? k = `
            var data = vec4<u32>(0);
            ${d("data", 0, "u32")}
            ${d("data", 1, "u32")}
            ${d("data", 2, "u32")}
            ${d("data", 3, "u32")}
            output_data[global_idx] = dot(vec4<u32>(0x1, 0x100, 0x10000, 0x1000000), vec4<u32>(data));` : k = `
            ${d("output_data[global_idx]", 0)}
            ${d("output_data[global_idx]", 1)}
            ${d("output_data[global_idx]", 2)}
            ${d("output_data[global_idx]", 3)}
          `;
    }
    return `
        ${B.registerUniform("vec_size", "u32").declareVariables(l, j, h, N)}
        ${B.mainStart()}
        ${B.guardAgainstOutOfBoundsWorkgroupSizes("uniforms.vec_size")}
        ${k}
      }`;
  }, WG = (B) => {
    let R = B[1].dims, F = B[2].dims, i = B[0].dims, s = B[1].dataType, N = !(RA.areEqual(R, F) && RA.areEqual(F, i)), j = R, h = RA.size(R);
    if (N) {
      let k = cB.calcShape(cB.calcShape(R, F, !1), i, !1);
      if (!k) throw new Error("Can't perform where op on the given tensors");
      j = k, h = RA.size(j);
    }
    let l = Math.ceil(h / 4);
    return { name: "Where", shaderCache: { inputDependencies: ["rank", "rank", "rank"] }, getShaderSource: (k) => tG(k, B, j, N, s), getRunData: () => ({ outputs: [{ dims: j, dataType: s }], dispatchGroup: { x: Math.ceil(h / 64 / 4) }, programUniforms: [{ type: 12, data: l }, ...TA(i, R, F, j)] }) };
  }, jo = (B) => {
    B.compute(WG(B.inputs));
  };
}), So, is = sA(() => {
  HN(), bw(), aN(), ZN(), nN(), dN(), qN(), PN(), pN(), tN(), WN(), ON(), zN(), XN(), rN(), mN(), eN(), vN(), uN(), _N(), $N(), As(), Is(), Cs(), Qs(), fy(), gs(), Bs(), Es(), Us(), Rs(), Vw(), ws(), zy(), Ds(), Fs(), Ms(), Wy(), Gs(), wg(), Tw(), Js(), So = /* @__PURE__ */ new Map([["Abs", [Ji]], ["Acos", [ii]], ["Acosh", [yi]], ["Add", [vi]], ["ArgMax", [Di, Fw]], ["ArgMin", [wi, Fw]], ["Asin", [oi]], ["Asinh", [Ni]], ["Atan", [si]], ["Atanh", [ji]], ["Attention", [Fi]], ["AveragePool", [Ao, $y]], ["BatchNormalization", [Mi]], ["BiasAdd", [Gi]], ["BiasSplitGelu", [ei]], ["Cast", [hi, Si]], ["Ceil", [Yi]], ["Clip", [Li]], ["Concat", [Ey, Uy]], ["Conv", [ow, yw]], ["ConvTranspose", [oy, yy]], ["Cos", [Ki]], ["Cosh", [li]], ["CumSum", [Ny, sy]], ["DepthToSpace", [jy, Sy]], ["DequantizeLinear", [Uo, Ro]], ["Div", [ui]], ["Einsum", [hy, Ly]], ["Elu", [ki, HE]], ["Equal", [_i]], ["Erf", [ci]], ["Exp", [Hi]], ["Expand", [Yy]], ["FastGelu", [Ky]], ["Floor", [ai]], ["FusedConv", [ow, yw]], ["Gather", [ky, ly]], ["GatherElements", [dy, ny]], ["GatherBlockQuantized", [ay, Zy]], ["GatherND", [cy, Hy]], ["Gelu", [Zi]], ["Gemm", [Vy, qy]], ["GlobalAveragePool", [Co, Io]], ["GlobalMaxPool", [Eo, Bo]], ["Greater", [Cy]], ["GreaterOrEqual", [gy]], ["GridSample", [by, Ty]], ["GroupQueryAttention", [Xy]], ["HardSigmoid", [Pi, xi]], ["InstanceNormalization", [ry]], ["LayerNormalization", [my]], ["LeakyRelu", [ni, HE]], ["Less", [Qy]], ["LessOrEqual", [By]], ["Log", [ri]], ["MatMul", [ey]], ["MatMulNBits", [vy, uy]], ["MaxPool", [Qo, go]], ["Mul", [$i]], ["MultiHeadAttention", [Py, xy]], ["Neg", [qi]], ["Not", [di]], ["Pad", [_y]], ["Pow", [Ay]], ["QuickGelu", [mi, HE]], ["Range", [wo]], ["Reciprocal", [Vi]], ["ReduceMin", [gi]], ["ReduceMean", [$J]], ["ReduceMax", [Qi]], ["ReduceSum", [Ei]], ["ReduceProd", [Bi]], ["ReduceL1", [Ai]], ["ReduceL2", [Ii]], ["ReduceLogSum", [Ri]], ["ReduceLogSumExp", [Ci]], ["ReduceSumSquare", [Ui]], ["Relu", [bi]], ["Resize", [Mo, Go]], ["RotaryEmbedding", [Oy]], ["ScatterND", [Fo, Do]], ["Sigmoid", [Ti]], ["Sin", [fi]], ["Sinh", [pi]], ["Slice", [io, yo]], ["SkipLayerNormalization", [Jo]], ["Split", [py, ty]], ["Sqrt", [ti]], ["Softmax", [oo, No]], ["Sub", [Iy]], ["Tan", [Wi]], ["Tanh", [Oi]], ["ThresholdedRelu", [Xi, HE]], ["Tile", [so]], ["Transpose", [pJ, tJ]], ["Where", [jo]]]);
}), ho, ys = sA(() => {
  FQ(), tQ(), II(), ho = class {
    constructor(B) {
      this.backend = B, this.repo = /* @__PURE__ */ new Map(), this.attributesBound = !1;
    }
    getArtifact(B) {
      return this.repo.get(B);
    }
    setArtifact(B, R) {
      this.repo.set(B, R);
    }
    run(B, R, F, i, s) {
      lQ(B.programInfo.name);
      let N = this.backend.device, j = this.backend.getComputePassEncoder();
      this.backend.writeTimestamp(this.backend.pendingDispatchNumber * 2);
      let h = [];
      for (let k of R) h.push({ binding: h.length, resource: { buffer: k.buffer } });
      for (let k of F) h.push({ binding: h.length, resource: { buffer: k.buffer } });
      s && h.push({ binding: h.length, resource: s });
      let l = N.createBindGroup({ layout: B.computePipeline.getBindGroupLayout(0), entries: h, label: B.programInfo.name });
      if (this.backend.sessionStatus === "capturing") {
        let k = { kernelId: this.backend.currentKernelId, computePipeline: B.computePipeline, bindGroup: l, dispatchGroup: i };
        this.backend.capturedCommandList.get(this.backend.currentSessionId).push(k);
      }
      j.setPipeline(B.computePipeline), j.setBindGroup(0, l), j.dispatchWorkgroups(...i), this.backend.writeTimestamp(this.backend.pendingDispatchNumber * 2 + 1), this.backend.pendingDispatchNumber++, (this.backend.pendingDispatchNumber >= this.backend.maxDispatchNumber || this.backend.queryType === "at-passes") && this.backend.endComputePass(), this.backend.pendingDispatchNumber >= this.backend.maxDispatchNumber && this.backend.flush(), DQ(B.programInfo.name);
    }
    dispose() {
    }
    build(B, R) {
      lQ(B.name);
      let F = this.backend.device, i = [];
      [{ feature: "shader-f16", extension: "f16" }, { feature: "subgroups", extension: "subgroups" }].forEach((k) => {
        F.features.has(k.feature) && i.push(`enable ${k.extension};`);
      });
      let s = fJ(R, this.backend.device.limits), N = B.getShaderSource(s), j = `${i.join(`
`)}
${s.additionalImplementations}
${N}`, h = F.createShaderModule({ code: j, label: B.name });
      wI("verbose", () => `[WebGPU] ${B.name} shader code: ${j}`);
      let l = F.createComputePipeline({ compute: { module: h, entryPoint: "main" }, layout: "auto", label: B.name });
      return DQ(B.name), { programInfo: B, computePipeline: l, uniformVariablesInfo: s.variablesInfo };
    }
    normalizeDispatchGroupSize(B) {
      let R = typeof B == "number" ? B : B.x, F = typeof B == "number" ? 1 : B.y || 1, i = typeof B == "number" ? 1 : B.z || 1, s = this.backend.device.limits.maxComputeWorkgroupsPerDimension;
      if (R <= s && F <= s && i <= s) return [R, F, i];
      let N = R * F * i, j = Math.ceil(Math.sqrt(N));
      if (j > s) {
        if (j = Math.ceil(Math.cbrt(N)), j > s) throw new Error("Total dispatch size exceeds WebGPU maximum.");
        return [j, j, j];
      } else return [j, j, 1];
    }
  };
}), Lo = {};
nB(Lo, { WebGpuBackend: () => Yo });
var OG, zG, XG, Yo, os = sA(() => {
  FQ(), zA(), tQ(), VJ(), kN(), is(), ys(), OG = (B, R) => {
    if (R.length !== B.length) throw new Error(`inputDependencies length ${R.length} is not equal to inputTensors length ${B.length}.`);
    let F = [];
    for (let i = 0; i < B.length; ++i) {
      let s = B[i].dataType;
      switch (R[i]) {
        case "none": {
          F.push("");
          break;
        }
        case "type": {
          F.push(`${s}`);
          break;
        }
        case "rank": {
          let N = B[i].dims.length;
          F.push(`${s};${N}`);
          break;
        }
        case "dims": {
          let N = B[i].dims.join(",");
          F.push(`${s};${N}`);
          break;
        }
        default:
          throw new Error(`unsupported input dependency: ${R[i]}`);
      }
    }
    return F.join("|");
  }, zG = (B, R, F) => {
    var s, N;
    let i = B.name;
    return (s = B.shaderCache) != null && s.hint && (i += "[" + B.shaderCache.hint + "]"), i += ":" + F + `:${OG(R, ((N = B.shaderCache) == null ? void 0 : N.inputDependencies) ?? new Array(R.length).fill("dims"))}`, i;
  }, XG = class {
    constructor(B) {
      B && (this.architecture = B.architecture, this.vendor = B.vendor);
    }
    isArchitecture(B) {
      return this.architecture === B;
    }
    isVendor(B) {
      return this.vendor === B;
    }
  }, Yo = class {
    constructor() {
      this.currentSessionId = null, this.currentKernelId = null, this.commandEncoder = null, this.computePassEncoder = null, this.maxDispatchNumber = 16, this.pendingDispatchNumber = 0, this.pendingKernels = [], this.pendingQueries = /* @__PURE__ */ new Map(), this.sessionStatus = "default", this.capturedCommandList = /* @__PURE__ */ new Map(), this.capturedPendingKernels = /* @__PURE__ */ new Map(), this.sessionExternalDataMapping = /* @__PURE__ */ new Map();
    }
    get currentKernelCustomData() {
      if (this.currentKernelId === null) throw new Error("currentKernelCustomData(): currentKernelId is null. (should not happen)");
      let B = this.kernelCustomData.get(this.currentKernelId);
      return B || (B = {}, this.kernelCustomData.set(this.currentKernelId, B)), B;
    }
    async initialize(B, R) {
      this.env = B;
      let F = [], i = { requiredLimits: { maxComputeWorkgroupStorageSize: R.limits.maxComputeWorkgroupStorageSize, maxComputeWorkgroupsPerDimension: R.limits.maxComputeWorkgroupsPerDimension, maxStorageBufferBindingSize: R.limits.maxStorageBufferBindingSize, maxBufferSize: R.limits.maxBufferSize, maxComputeInvocationsPerWorkgroup: R.limits.maxComputeInvocationsPerWorkgroup, maxComputeWorkgroupSizeX: R.limits.maxComputeWorkgroupSizeX, maxComputeWorkgroupSizeY: R.limits.maxComputeWorkgroupSizeY, maxComputeWorkgroupSizeZ: R.limits.maxComputeWorkgroupSizeZ }, requiredFeatures: F }, s = (N) => R.features.has(N) && F.push(N) && !0;
      s("chromium-experimental-timestamp-query-inside-passes") || s("timestamp-query"), s("shader-f16"), s("subgroups"), this.device = await R.requestDevice(i), this.adapterInfo = new XG(R.info || await R.requestAdapterInfo()), this.gpuDataManager = xJ(this), this.programManager = new ho(this), this.kernels = /* @__PURE__ */ new Map(), this.kernelPersistentData = /* @__PURE__ */ new Map(), this.kernelCustomData = /* @__PURE__ */ new Map(), Zw(B.logLevel, !!B.debug), this.device.onuncapturederror = (N) => {
        N.error instanceof GPUValidationError && console.error(`An uncaught WebGPU validation error was raised: ${N.error.message}`);
      }, Object.defineProperty(this.env.webgpu, "device", { value: this.device, writable: !1, enumerable: !0, configurable: !1 }), Object.defineProperty(this.env.webgpu, "adapter", { value: R, writable: !1, enumerable: !0, configurable: !1 }), this.setQueryType();
    }
    dispose() {
      typeof this.querySet < "u" && this.querySet.destroy(), this.gpuDataManager.dispose();
    }
    getCommandEncoder() {
      return this.commandEncoder || (this.commandEncoder = this.device.createCommandEncoder()), this.commandEncoder;
    }
    getComputePassEncoder() {
      if (!this.computePassEncoder) {
        let B = this.getCommandEncoder(), R = {};
        this.queryType === "at-passes" && (R.timestampWrites = { querySet: this.querySet, beginningOfPassWriteIndex: this.pendingDispatchNumber * 2, endOfPassWriteIndex: this.pendingDispatchNumber * 2 + 1 }), this.computePassEncoder = B.beginComputePass(R);
      }
      return this.computePassEncoder;
    }
    endComputePass() {
      this.computePassEncoder && (this.computePassEncoder.end(), this.computePassEncoder = null);
    }
    flush() {
      if (!this.commandEncoder) return;
      lQ(), this.endComputePass();
      let B;
      this.queryType !== "none" && (this.commandEncoder.resolveQuerySet(this.querySet, 0, this.pendingDispatchNumber * 2, this.queryResolveBuffer, 0), B = this.device.createBuffer({ size: this.pendingDispatchNumber * 2 * 8, usage: GPUBufferUsage.MAP_READ | GPUBufferUsage.COPY_DST }), this.pendingQueries.set(B, this.pendingKernels), this.pendingKernels = [], this.commandEncoder.copyBufferToBuffer(this.queryResolveBuffer, 0, B, 0, this.pendingDispatchNumber * 2 * 8)), this.device.queue.submit([this.commandEncoder.finish()]), this.gpuDataManager.refreshPendingBuffers(), this.commandEncoder = null, this.pendingDispatchNumber = 0, this.queryType !== "none" && B.mapAsync(GPUMapMode.READ).then(() => {
        var i;
        let R = new BigUint64Array(B.getMappedRange()), F = this.pendingQueries.get(B);
        for (let s = 0; s < R.length / 2; s++) {
          let N = F[s], j = N.kernelId, h = this.kernels.get(j), l = h.kernelType, k = h.kernelName, q = N.programName, d = N.inputTensorViews, b = N.outputTensorViews, P = R[s * 2], W = R[s * 2 + 1];
          typeof this.queryTimeBase > "u" && (this.queryTimeBase = P);
          let r = Number(P - this.queryTimeBase), $ = Number(W - this.queryTimeBase);
          if (!Number.isSafeInteger(r) || !Number.isSafeInteger($)) throw new RangeError("incorrect timestamp range");
          if ((i = this.env.webgpu.profiling) != null && i.ondata) this.env.webgpu.profiling.ondata({ version: 1, inputsMetadata: d.map((m) => ({ dims: m.dims, dataType: fQ(m.dataType) })), outputsMetadata: b.map((m) => ({ dims: m.dims, dataType: fQ(m.dataType) })), kernelId: j, kernelType: l, kernelName: k, programName: q, startTime: r, endTime: $ });
          else {
            let m = "";
            d.forEach((IA, M) => {
              m += `input[${M}]: [${IA.dims}] | ${fQ(IA.dataType)}, `;
            });
            let z = "";
            b.forEach((IA, M) => {
              z += `output[${M}]: [${IA.dims}] | ${fQ(IA.dataType)}, `;
            }), console.log(`[profiling] kernel "${j}|${l}|${k}|${q}" ${m}${z}execution time: ${$ - r} ns`);
          }
          ZU("GPU", `${q}::${P}::${W}`);
        }
        B.unmap(), this.pendingQueries.delete(B);
      }), DQ();
    }
    run(B, R, F, i, s, N) {
      lQ(B.name);
      let j = [];
      for (let z = 0; z < R.length; ++z) {
        let IA = R[z].data;
        if (IA === 0) continue;
        let M = this.gpuDataManager.get(IA);
        if (!M) throw new Error(`no GPU data for input: ${IA}`);
        j.push(M);
      }
      let { outputs: h, dispatchGroup: l, programUniforms: k } = B.getRunData(R), q = F.length === 0 ? h.map((z, IA) => IA) : F;
      if (q.length !== h.length) throw new Error(`Output size ${q.length} must be equal to ${h.length}.`);
      let d = [], b = [];
      for (let z = 0; z < h.length; ++z) {
        if (!Number.isInteger(q[z]) || q[z] < -3 || q[z] >= N) throw new Error(`Invalid output index: ${q[z]}`);
        if (q[z] === -3) continue;
        let IA = q[z] === -1, M = q[z] === -2, L = IA || M ? s(h[z].dataType, h[z].dims) : i(q[z], h[z].dataType, h[z].dims);
        if (d.push(L), L.data === 0) continue;
        let A = this.gpuDataManager.get(L.data);
        if (!A) throw new Error(`no GPU data for output: ${L.data}`);
        if (IA && this.temporaryData.push(A), M) {
          let G = this.kernelPersistentData.get(this.currentKernelId);
          G || (G = [], this.kernelPersistentData.set(this.currentKernelId, G)), G.push(A);
        }
        b.push(A);
      }
      if (j.length !== R.length || b.length !== d.length) {
        if (b.length === 0) return DQ(B.name), d;
        throw new Error(`Program ${B.name} has zero-sized tensor(s) in inputs or outputs. This is not supported now.`);
      }
      let P;
      if (k) {
        let z = 0, IA = [];
        k.forEach((G) => {
          let a = typeof G.data == "number" ? [G.data] : G.data;
          if (a.length === 0) return;
          let UA = G.type === 10 ? 2 : 4, H, T;
          G.type === 10 ? (T = a.length > 4 ? 16 : a.length > 2 ? 8 : a.length * UA, H = a.length > 4 ? 16 : UA * a.length) : (T = a.length <= 2 ? a.length * UA : 16, H = 16), z = Math.ceil(z / T) * T, IA.push(z);
          let cA = G.type === 10 ? 8 : 4;
          z += a.length > 4 ? Math.ceil(a.length / cA) * H : a.length * UA;
        });
        let M = 16;
        z = Math.ceil(z / M) * M;
        let L = new ArrayBuffer(z);
        k.forEach((G, a) => {
          let UA = IA[a], H = typeof G.data == "number" ? [G.data] : G.data;
          if (G.type === 6) new Int32Array(L, UA, H.length).set(H);
          else if (G.type === 12) new Uint32Array(L, UA, H.length).set(H);
          else if (G.type === 10) new Uint16Array(L, UA, H.length).set(H);
          else if (G.type === 1) new Float32Array(L, UA, H.length).set(H);
          else throw new Error(`Unsupported uniform type: ${fQ(G.type)}`);
        });
        let A = this.gpuDataManager.create(z, GPUBufferUsage.COPY_DST | GPUBufferUsage.UNIFORM);
        this.device.queue.writeBuffer(A.buffer, 0, L, 0, z), this.gpuDataManager.release(A.id), P = { offset: 0, size: z, buffer: A.buffer };
      }
      let W = this.programManager.normalizeDispatchGroupSize(l), r = W[1] === 1 && W[2] === 1, $ = zG(B, R, r), m = this.programManager.getArtifact($);
      if (m || (m = this.programManager.build(B, W), this.programManager.setArtifact($, m), wI("info", () => `[artifact] key: ${$}, programName: ${B.name}`)), k && m.uniformVariablesInfo) {
        if (k.length !== m.uniformVariablesInfo.length) throw new Error(`Uniform variables count mismatch: expect ${m.uniformVariablesInfo.length}, got ${k.length} in program "${m.programInfo.name}".`);
        for (let z = 0; z < k.length; z++) {
          let IA = k[z], M = IA.type, L = typeof IA.data == "number" ? 1 : IA.data.length, [A, G] = m.uniformVariablesInfo[z];
          if (M !== A || L !== G) throw new Error(`Uniform variable ${z} mismatch: expect type ${A} with size ${G}, got type ${M} with size ${L} in program "${m.programInfo.name}".`);
        }
      }
      if (wI("info", () => `[ProgramManager] run "${B.name}" (key=${$}) with ${W[0]}x${W[1]}x${W[2]}`), this.queryType !== "none" || this.sessionStatus === "capturing") {
        let z = { kernelId: this.currentKernelId, programName: m.programInfo.name, inputTensorViews: R, outputTensorViews: d };
        this.pendingKernels.push(z), this.sessionStatus === "capturing" && this.capturedPendingKernels.get(this.currentSessionId).push(z);
      }
      return this.programManager.run(m, j, b, W, P), DQ(B.name), d;
    }
    upload(B, R) {
      this.gpuDataManager.upload(B, R);
    }
    memcpy(B, R) {
      this.gpuDataManager.memcpy(B, R);
    }
    async download(B, R) {
      await this.gpuDataManager.download(B, R);
    }
    alloc(B) {
      return this.gpuDataManager.create(B).id;
    }
    free(B) {
      return this.gpuDataManager.release(B);
    }
    createKernel(B, R, F, i) {
      let s = So.get(B);
      if (!s) throw new Error(`kernel not implemented: ${B}`);
      let N = { kernelType: B, kernelName: i, kernelEntry: s[0], attributes: [s[1], F] };
      this.kernels.set(R, N);
    }
    releaseKernel(B) {
      let R = this.kernelPersistentData.get(B);
      if (R) {
        for (let F of R) this.gpuDataManager.release(F.id);
        this.kernelPersistentData.delete(B);
      }
      this.kernelCustomData.delete(B), this.kernels.delete(B);
    }
    computeKernel(B, R, F) {
      let i = this.kernels.get(B);
      if (!i) throw new Error(`kernel not created: ${B}`);
      let s = i.kernelType, N = i.kernelName, j = i.kernelEntry, h = i.attributes;
      if (this.currentKernelId !== null) throw new Error(`kernel "[${s}] ${N}" is not allowed to be called recursively`);
      this.currentKernelId = B, h[0] && (h[1] = h[0](h[1]), h[0] = void 0), wI("info", () => `[WebGPU] Start to run kernel "[${s}] ${N}"...`);
      let l = this.env.debug;
      this.temporaryData = [];
      try {
        return l && this.device.pushErrorScope("validation"), j(R, h[1]), 0;
      } catch (k) {
        return F.push(Promise.resolve(`[WebGPU] Kernel "[${s}] ${N}" failed. ${k}`)), 1;
      } finally {
        l && F.push(this.device.popErrorScope().then((k) => k ? `GPU validation error for kernel "[${s}] ${N}": ${k.message}` : null));
        for (let k of this.temporaryData) this.gpuDataManager.release(k.id);
        this.temporaryData = [], this.currentKernelId = null;
      }
    }
    registerBuffer(B, R, F, i) {
      let s = this.sessionExternalDataMapping.get(B);
      s || (s = /* @__PURE__ */ new Map(), this.sessionExternalDataMapping.set(B, s));
      let N = s.get(R), j = this.gpuDataManager.registerExternalBuffer(F, i, N);
      return s.set(R, [j, F]), j;
    }
    unregisterBuffers(B) {
      let R = this.sessionExternalDataMapping.get(B);
      R && (R.forEach((F) => this.gpuDataManager.unregisterExternalBuffer(F[0])), this.sessionExternalDataMapping.delete(B));
    }
    getBuffer(B) {
      let R = this.gpuDataManager.get(B);
      if (!R) throw new Error(`no GPU data for buffer: ${B}`);
      return R.buffer;
    }
    createDownloader(B, R, F) {
      return async () => {
        let i = await Rw(this, B, R);
        return nw(i.buffer, F);
      };
    }
    writeTimestamp(B) {
      this.queryType === "inside-passes" && this.computePassEncoder.writeTimestamp(this.querySet, B);
    }
    setQueryType() {
      var B;
      this.queryType = "none", (((B = this.env.webgpu.profiling) == null ? void 0 : B.mode) === "default" || (typeof this.env.trace > "u" ? this.env.wasm.trace : this.env.trace)) && (this.device.features.has("chromium-experimental-timestamp-query-inside-passes") ? this.queryType = "inside-passes" : this.device.features.has("timestamp-query") && (this.queryType = "at-passes"), this.queryType !== "none" && typeof this.querySet > "u" && (this.querySet = this.device.createQuerySet({ type: "timestamp", count: this.maxDispatchNumber * 2 }), this.queryResolveBuffer = this.device.createBuffer({ size: this.maxDispatchNumber * 2 * 8, usage: GPUBufferUsage.COPY_SRC | GPUBufferUsage.QUERY_RESOLVE })));
    }
    captureBegin() {
      wI("info", "captureBegin"), this.capturedCommandList.get(this.currentSessionId) || this.capturedCommandList.set(this.currentSessionId, []), this.capturedPendingKernels.get(this.currentSessionId) || this.capturedPendingKernels.set(this.currentSessionId, []), this.flush(), this.sessionStatus = "capturing";
    }
    captureEnd() {
      wI("info", "captureEnd"), this.flush(), this.sessionStatus = "default";
    }
    replay() {
      wI("info", "replay"), this.sessionStatus = "replaying";
      let B = this.capturedCommandList.get(this.currentSessionId), R = this.capturedPendingKernels.get(this.currentSessionId), F = B.length;
      this.pendingKernels = [];
      for (let i = 0; i < F; i++) {
        let s = this.getComputePassEncoder(), N = B[i];
        this.writeTimestamp(this.pendingDispatchNumber * 2), s.setPipeline(N.computePipeline), s.setBindGroup(0, N.bindGroup), s.dispatchWorkgroups(...N.dispatchGroup), this.writeTimestamp(this.pendingDispatchNumber * 2 + 1), this.pendingDispatchNumber++, this.queryType !== "none" && this.pendingKernels.push(R[i]), (this.pendingDispatchNumber >= this.maxDispatchNumber || this.queryType === "at-passes") && this.endComputePass(), this.pendingDispatchNumber >= this.maxDispatchNumber && this.flush();
      }
      this.flush(), this.sessionStatus = "default";
    }
    onCreateSession() {
      this.gpuDataManager.onCreateSession();
    }
    onReleaseSession(B) {
      this.unregisterBuffers(B), this.capturedCommandList.has(B) && this.capturedCommandList.delete(B), this.capturedPendingKernels.has(B) && this.capturedPendingKernels.delete(B), this.gpuDataManager.onReleaseSession(B);
    }
    onRunStart(B) {
      this.currentSessionId = B, this.setQueryType();
    }
  };
}), Ko = {};
nB(Ko, { init: () => lo });
var KU, rG, lo, Ns = sA(() => {
  zA(), tQ(), $A(), lN(), KU = class ko {
    constructor(R, F, i, s) {
      this.module = R, this.dataType = F, this.data = i, this.dims = s;
    }
    getFloat32Array() {
      if (this.dataType !== 1) throw new Error("Invalid data type");
      let R = RA.size(this.dims);
      return R === 0 ? new Float32Array() : new Float32Array(this.module.HEAP8.buffer, this.data, R);
    }
    getBigInt64Array() {
      if (this.dataType !== 7) throw new Error("Invalid data type");
      let R = RA.size(this.dims);
      return R === 0 ? new BigInt64Array() : new BigInt64Array(this.module.HEAP8.buffer, this.data, R);
    }
    getInt32Array() {
      if (this.dataType !== 6) throw new Error("Invalid data type");
      let R = RA.size(this.dims);
      return R === 0 ? new Int32Array() : new Int32Array(this.module.HEAP8.buffer, this.data, R);
    }
    getUint16Array() {
      if (this.dataType !== 10 && this.dataType !== 4) throw new Error("Invalid data type");
      let R = RA.size(this.dims);
      return R === 0 ? new Uint16Array() : new Uint16Array(this.module.HEAP8.buffer, this.data, R);
    }
    reshape(R) {
      if (RA.size(R) !== RA.size(this.dims)) throw new Error("Invalid new shape");
      return new ko(this.module, this.dataType, this.data, R);
    }
  }, rG = class {
    constructor(B, R, F) {
      this.module = B, this.backend = R, this.customDataOffset = 0, this.customDataSize = 0, this.adapterInfo = R.adapterInfo;
      let i = B.PTR_SIZE, s = F / B.PTR_SIZE, N = i === 4 ? "i32" : "i64";
      this.opKernelContext = Number(B.getValue(i * s++, N));
      let j = Number(B.getValue(i * s++, N));
      this.outputCount = Number(B.getValue(i * s++, N)), this.customDataOffset = Number(B.getValue(i * s++, "*")), this.customDataSize = Number(B.getValue(i * s++, N));
      let h = [];
      for (let l = 0; l < j; l++) {
        let k = Number(B.getValue(i * s++, N)), q = Number(B.getValue(i * s++, "*")), d = Number(B.getValue(i * s++, N)), b = [];
        for (let P = 0; P < d; P++) b.push(Number(B.getValue(i * s++, N)));
        h.push(new KU(B, k, q, b));
      }
      this.inputs = h;
    }
    get kernelCustomData() {
      return this.backend.currentKernelCustomData;
    }
    get customDataBuffer() {
      return this.module.HEAPU8.subarray(this.customDataOffset, this.customDataOffset + this.customDataSize);
    }
    compute(B, R) {
      var j;
      let F = ((j = R == null ? void 0 : R.inputs) == null ? void 0 : j.map((h) => typeof h == "number" ? this.inputs[h] : h)) ?? this.inputs, i = (R == null ? void 0 : R.outputs) ?? [], s = (h, l, k) => new KU(this.module, l, this.output(h, k), k), N = (h, l) => {
        let k = Vg(h, l);
        if (!k) throw new Error(`Unsupported data type: ${h}`);
        let q = k > 0 ? this.backend.gpuDataManager.create(k).id : 0;
        return new KU(this.module, h, q, l);
      };
      return this.backend.run(B, F, i, s, N, this.outputCount);
    }
    output(B, R) {
      let F = this.module.stackSave();
      try {
        let i = this.module.PTR_SIZE, s = i === 4 ? "i32" : "i64", N = this.module.stackAlloc((1 + R.length) * i);
        this.module.setValue(N, R.length, s);
        for (let j = 0; j < R.length; j++) this.module.setValue(N + i * (j + 1), R[j], s);
        return this.module._JsepOutput(this.opKernelContext, B, N);
      } catch (i) {
        throw new Error(`Failed to generate kernel's output[${B}] with dims [${R}]. If you are running with pre-allocated output, please make sure the output type/dims are correct. Error: ${i}`);
      } finally {
        this.module.stackRestore(F);
      }
    }
  }, lo = async (B, R, F, i) => {
    let s = R.jsepInit;
    if (!s) throw new Error("Failed to initialize JSEP. The WebAssembly module is not built with JSEP support.");
    if (B === "webgpu") {
      let N = (os(), qE(Lo)).WebGpuBackend, j = new N();
      await j.initialize(F, i), s("webgpu", [j, (h) => j.alloc(Number(h)), (h) => j.free(h), (h, l, k, q = !1) => {
        if (q) wI("verbose", () => `[WebGPU] jsepCopyGpuToGpu: src=${Number(h)}, dst=${Number(l)}, size=${Number(k)}`), j.memcpy(Number(h), Number(l));
        else {
          wI("verbose", () => `[WebGPU] jsepCopyCpuToGpu: dataOffset=${Number(h)}, gpuDataId=${Number(l)}, size=${Number(k)}`);
          let d = R.HEAPU8.subarray(Number(h >>> 0), Number(h >>> 0) + Number(k));
          j.upload(Number(l), d);
        }
      }, async (h, l, k) => {
        wI("verbose", () => `[WebGPU] jsepCopyGpuToCpu: gpuDataId=${h}, dataOffset=${l}, size=${k}`), await j.download(Number(h), () => R.HEAPU8.subarray(Number(l) >>> 0, Number(l + k) >>> 0));
      }, (h, l, k) => j.createKernel(h, Number(l), k, R.UTF8ToString(R._JsepGetNodeName(Number(l)))), (h) => j.releaseKernel(h), (h, l, k, q) => {
        wI("verbose", () => `[WebGPU] jsepRun: sessionHandle=${k}, kernel=${h}, contextDataOffset=${l}`);
        let d = new rG(R, j, Number(l));
        return j.computeKernel(Number(h), d, q);
      }, () => j.captureBegin(), () => j.captureEnd(), () => j.replay()]);
    } else {
      let N = new TJ(F);
      s("webnn", [N, () => N.reserveTensorId(), (j) => N.releaseTensorId(j), async (j, h, l, k, q) => N.ensureTensor(j, h, l, k, q), (j, h) => {
        N.uploadTensor(j, h);
      }, async (j, h) => N.downloadTensor(j, h)]);
    }
  };
}), mG, Ww, Ow, Bg, eG, vR, xU, zw, Xw, uR, rw, mw, ew, co = sA(() => {
  LN(), YN(), zA(), pg(), kw(), ZJ(), mG = (B, R) => {
    cI()._OrtInit(B, R) !== 0 && jI("Can't initialize onnxruntime.");
  }, Ww = async (B) => {
    mG(B.wasm.numThreads, dU(B.logLevel));
  }, Ow = async (B, R) => {
    var F, i;
    (i = (F = cI()).asyncInit) == null || i.call(F);
    {
      let s = (Ns(), qE(Ko)).init;
      if (R === "webgpu") {
        if (typeof navigator > "u" || !navigator.gpu) throw new Error("WebGPU is not supported in current environment");
        let N = B.webgpu.adapter;
        if (N) {
          if (typeof N.limits != "object" || typeof N.features != "object" || typeof N.requestDevice != "function") throw new Error("Invalid GPU adapter set in `env.webgpu.adapter`. It must be a GPUAdapter object.");
        } else {
          let j = B.webgpu.powerPreference;
          if (j !== void 0 && j !== "low-power" && j !== "high-performance") throw new Error(`Invalid powerPreference setting: "${j}"`);
          let h = B.webgpu.forceFallbackAdapter;
          if (h !== void 0 && typeof h != "boolean") throw new Error(`Invalid forceFallbackAdapter setting: "${h}"`);
          if (N = await navigator.gpu.requestAdapter({ powerPreference: j, forceFallbackAdapter: h }), !N) throw new Error('Failed to get GPU adapter. You may need to enable flag "--enable-unsafe-webgpu" if you are using Chrome.');
        }
        await s("webgpu", cI(), B, N);
      }
      if (R === "webnn") {
        if (typeof navigator > "u" || !navigator.ml) throw new Error("WebNN is not supported in current environment");
        await s("webnn", cI(), B);
      }
    }
  }, Bg = /* @__PURE__ */ new Map(), eG = (B) => {
    let R = cI(), F = R.stackSave();
    try {
      let i = R.PTR_SIZE, s = R.stackAlloc(2 * i);
      R._OrtGetInputOutputCount(B, s, s + i) !== 0 && jI("Can't get session input/output count.");
      let N = i === 4 ? "i32" : "i64";
      return [Number(R.getValue(s, N)), Number(R.getValue(s + i, N))];
    } finally {
      R.stackRestore(F);
    }
  }, vR = (B, R) => {
    let F = cI(), i = F.stackSave(), s = 0;
    try {
      let N = F.PTR_SIZE, j = F.stackAlloc(2 * N);
      F._OrtGetInputOutputMetadata(B, R, j, j + N) !== 0 && jI("Can't get session input/output metadata.");
      let h = Number(F.getValue(j, "*"));
      s = Number(F.getValue(j + N, "*"));
      let l = F.HEAP32[s / 4];
      if (l === 0) return [h, 0];
      let k = F.HEAPU32[s / 4 + 1], q = [];
      for (let d = 0; d < k; d++) {
        let b = Number(F.getValue(s + 8 + d * N, "*"));
        q.push(b !== 0 ? F.UTF8ToString(b) : Number(F.getValue(s + 8 + (d + k) * N, "*")));
      }
      return [h, l, q];
    } finally {
      F.stackRestore(i), s !== 0 && F._OrtFree(s);
    }
  }, xU = (B) => {
    let R = cI(), F = R._malloc(B.byteLength);
    if (F === 0) throw new Error(`Can't create a session. failed to allocate a buffer of size ${B.byteLength}.`);
    return R.HEAPU8.set(B, F), [F, B.byteLength];
  }, zw = async (B, R) => {
    var d, b, P, W;
    let F, i, s = cI();
    Array.isArray(B) ? [F, i] = B : B.buffer === s.HEAPU8.buffer ? [F, i] = [B.byteOffset, B.byteLength] : [F, i] = xU(B);
    let N = 0, j = 0, h = 0, l = [], k = [], q = [];
    try {
      if ([j, l] = await aJ(R), (R == null ? void 0 : R.externalData) && s.mountExternalData) {
        let a = [];
        for (let UA of R.externalData) {
          let H = typeof UA == "string" ? UA : UA.path;
          a.push(aw(typeof UA == "string" ? UA : UA.data).then((T) => {
            s.mountExternalData(H, T);
          }));
        }
        await Promise.all(a);
      }
      for (let a of (R == null ? void 0 : R.executionProviders) ?? []) if ((typeof a == "string" ? a : a.name) === "webnn") {
        if (s.shouldTransferToMLTensor = !1, typeof a != "string") {
          let UA = a, H = UA == null ? void 0 : UA.context, T = UA == null ? void 0 : UA.gpuDevice, cA = UA == null ? void 0 : UA.deviceType, GA = UA == null ? void 0 : UA.powerPreference;
          H ? s.currentContext = H : T ? s.currentContext = await s.webnnCreateMLContext(T) : s.currentContext = await s.webnnCreateMLContext({ deviceType: cA, powerPreference: GA });
        } else s.currentContext = await s.webnnCreateMLContext();
        break;
      }
      N = await s._OrtCreateSession(F, i, j), (d = s.webgpuOnCreateSession) == null || d.call(s, N), N === 0 && jI("Can't create a session."), (b = s.jsepOnCreateSession) == null || b.call(s), s.currentContext && (s.webnnRegisterMLContext(N, s.currentContext), s.currentContext = void 0, s.shouldTransferToMLTensor = !0);
      let [r, $] = eG(N), m = !!(R != null && R.enableGraphCapture), z = [], IA = [], M = [], L = [], A = [];
      for (let a = 0; a < r; a++) {
        let [UA, H, T] = vR(N, a);
        UA === 0 && jI("Can't get an input name."), k.push(UA);
        let cA = s.UTF8ToString(UA);
        z.push(cA), M.push(H === 0 ? { name: cA, isTensor: !1 } : { name: cA, isTensor: !0, type: fQ(H), shape: T });
      }
      for (let a = 0; a < $; a++) {
        let [UA, H, T] = vR(N, a + r);
        UA === 0 && jI("Can't get an output name."), q.push(UA);
        let cA = s.UTF8ToString(UA);
        IA.push(cA), L.push(H === 0 ? { name: cA, isTensor: !1 } : { name: cA, isTensor: !0, type: fQ(H), shape: T });
        {
          if (m && (R == null ? void 0 : R.preferredOutputLocation) === void 0) {
            A.push("gpu-buffer");
            continue;
          }
          let GA = typeof (R == null ? void 0 : R.preferredOutputLocation) == "string" ? R.preferredOutputLocation : ((P = R == null ? void 0 : R.preferredOutputLocation) == null ? void 0 : P[cA]) ?? "cpu", aA = s.webnnIsGraphOutput;
          if (GA === "cpu" && aA && aA(N, cA)) {
            A.push("ml-tensor-cpu-output");
            continue;
          }
          if (GA !== "cpu" && GA !== "cpu-pinned" && GA !== "gpu-buffer" && GA !== "ml-tensor") throw new Error(`Not supported preferred output location: ${GA}.`);
          if (m && GA !== "gpu-buffer") throw new Error(`Not supported preferred output location: ${GA}. Only 'gpu-buffer' location is supported when enableGraphCapture is true.`);
          A.push(GA);
        }
      }
      let G = null;
      return A.some((a) => a === "gpu-buffer" || a === "ml-tensor" || a === "ml-tensor-cpu-output") && (h = s._OrtCreateBinding(N), h === 0 && jI("Can't create IO binding."), G = { handle: h, outputPreferredLocations: A, outputPreferredLocationsEncoded: A.map((a) => a === "ml-tensor-cpu-output" ? "ml-tensor" : a).map((a) => Ew(a)) }), Bg.set(N, [N, k, q, G, m, !1]), [N, z, IA, M, L];
    } catch (r) {
      throw k.forEach(($) => s._OrtFree($)), q.forEach(($) => s._OrtFree($)), h !== 0 && s._OrtReleaseBinding(h) !== 0 && jI("Can't release IO binding."), N !== 0 && s._OrtReleaseSession(N) !== 0 && jI("Can't release session."), r;
    } finally {
      s._free(F), j !== 0 && s._OrtReleaseSessionOptions(j) !== 0 && jI("Can't release session options."), l.forEach((r) => s._free(r)), (W = s.unmountExternalData) == null || W.call(s);
    }
  }, Xw = (B) => {
    var l, k, q;
    let R = cI(), F = Bg.get(B);
    if (!F) throw new Error(`cannot release session. invalid session id: ${B}`);
    let [i, s, N, j, h] = F;
    j && (h && R._OrtClearBoundOutputs(j.handle) !== 0 && jI("Can't clear bound outputs."), R._OrtReleaseBinding(j.handle) !== 0 && jI("Can't release IO binding.")), (l = R.jsepOnReleaseSession) == null || l.call(R, B), (k = R.webnnOnReleaseSession) == null || k.call(R, B), (q = R.webgpuOnReleaseSession) == null || q.call(R, B), s.forEach((d) => R._OrtFree(d)), N.forEach((d) => R._OrtFree(d)), R._OrtReleaseSession(i) !== 0 && jI("Can't release session."), Bg.delete(B);
  }, uR = async (B, R, F, i, s, N, j = !1) => {
    if (!B) {
      R.push(0);
      return;
    }
    let h = cI(), l = h.PTR_SIZE, k = B[0], q = B[1], d = B[3], b = d, P, W;
    if (k === "string" && (d === "gpu-buffer" || d === "ml-tensor")) throw new Error("String tensor is not supported on GPU.");
    if (j && d !== "gpu-buffer") throw new Error(`External buffer must be provided for input/output index ${N} when enableGraphCapture is true.`);
    if (d === "gpu-buffer") {
      let m = B[2].gpuBuffer;
      W = Vg(qg(k), q);
      {
        let z = h.jsepRegisterBuffer;
        if (!z) throw new Error('Tensor location "gpu-buffer" is not supported without using WebGPU.');
        P = z(i, N, m, W);
      }
    } else if (d === "ml-tensor") {
      let m = B[2].mlTensor;
      W = Vg(qg(k), q);
      let z = h.webnnRegisterMLTensor;
      if (!z) throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');
      P = z(i, m, qg(k), q);
    } else {
      let m = B[2];
      if (Array.isArray(m)) {
        W = l * m.length, P = h._malloc(W), F.push(P);
        for (let z = 0; z < m.length; z++) {
          if (typeof m[z] != "string") throw new TypeError(`tensor data at index ${z} is not a string`);
          h.setValue(P + z * l, wQ(m[z], F), "*");
        }
      } else {
        let z = h.webnnIsGraphInput, IA = h.webnnIsGraphOutput;
        if (k !== "string" && z && IA) {
          let M = h.UTF8ToString(s);
          if (z(i, M) || IA(i, M)) {
            let L = qg(k);
            W = Vg(L, q), b = "ml-tensor";
            let A = h.webnnCreateTemporaryTensor, G = h.webnnUploadTensor;
            if (!A || !G) throw new Error('Tensor location "ml-tensor" is not supported without using WebNN.');
            let a = await A(i, L, q);
            G(a, new Uint8Array(m.buffer, m.byteOffset, m.byteLength)), P = a;
          } else W = m.byteLength, P = h._malloc(W), F.push(P), h.HEAPU8.set(new Uint8Array(m.buffer, m.byteOffset, W), P);
        } else W = m.byteLength, P = h._malloc(W), F.push(P), h.HEAPU8.set(new Uint8Array(m.buffer, m.byteOffset, W), P);
      }
    }
    let r = h.stackSave(), $ = h.stackAlloc(4 * q.length);
    try {
      q.forEach((z, IA) => h.setValue($ + IA * l, z, l === 4 ? "i32" : "i64"));
      let m = h._OrtCreateTensor(qg(k), P, W, $, q.length, Ew(b));
      m === 0 && jI(`Can't create tensor for input/output. session=${i}, index=${N}.`), R.push(m);
    } finally {
      h.stackRestore(r);
    }
  }, rw = async (B, R, F, i, s, N) => {
    var T, cA, GA, aA;
    let j = cI(), h = j.PTR_SIZE, l = Bg.get(B);
    if (!l) throw new Error(`cannot run inference. invalid session id: ${B}`);
    let k = l[0], q = l[1], d = l[2], b = l[3], P = l[4], W = l[5], r = R.length, $ = i.length, m = 0, z = [], IA = [], M = [], L = [], A = j.stackSave(), G = j.stackAlloc(r * h), a = j.stackAlloc(r * h), UA = j.stackAlloc($ * h), H = j.stackAlloc($ * h);
    try {
      [m, z] = HJ(N);
      for (let HA = 0; HA < r; HA++) await uR(F[HA], IA, L, B, q[R[HA]], R[HA], P);
      for (let HA = 0; HA < $; HA++) await uR(s[HA], M, L, B, d[i[HA]], r + i[HA], P);
      for (let HA = 0; HA < r; HA++) j.setValue(G + HA * h, IA[HA], "*"), j.setValue(a + HA * h, q[R[HA]], "*");
      for (let HA = 0; HA < $; HA++) j.setValue(UA + HA * h, M[HA], "*"), j.setValue(H + HA * h, d[i[HA]], "*");
      if (b && !W) {
        let { handle: HA, outputPreferredLocations: PA, outputPreferredLocationsEncoded: YI } = b;
        if (q.length !== r) throw new Error(`input count from feeds (${r}) is expected to be always equal to model's input count (${q.length}).`);
        for (let MA = 0; MA < r; MA++) {
          let jA = R[MA];
          await j._OrtBindInput(HA, q[jA], IA[MA]) !== 0 && jI(`Can't bind input[${MA}] for session=${B}.`);
        }
        for (let MA = 0; MA < $; MA++) {
          let jA = i[MA];
          (T = s[MA]) != null && T[3] ? j._OrtBindOutput(HA, d[jA], M[MA], 0) !== 0 && jI(`Can't bind pre-allocated output[${MA}] for session=${B}.`) : j._OrtBindOutput(HA, d[jA], 0, YI[jA]) !== 0 && jI(`Can't bind output[${MA}] to ${PA[MA]} for session=${B}.`);
        }
        Bg.set(B, [k, q, d, b, P, !0]);
      }
      (cA = j.jsepOnRunStart) == null || cA.call(j, k), (GA = j.webnnOnRunStart) == null || GA.call(j, k);
      let rA;
      b ? rA = await j._OrtRunWithBinding(k, b.handle, $, UA, m) : rA = await j._OrtRun(k, a, G, r, H, $, UA, m), rA !== 0 && jI("failed to call OrtRun().");
      let lA = [], vA = [];
      for (let HA = 0; HA < $; HA++) {
        let PA = Number(j.getValue(UA + HA * h, "*"));
        if (PA === M[HA]) {
          lA.push(s[HA]);
          continue;
        }
        let YI = j.stackSave(), MA = j.stackAlloc(4 * h), jA = !1, LA, XA = 0;
        try {
          j._OrtGetTensorData(PA, MA, MA + h, MA + 2 * h, MA + 3 * h) !== 0 && jI(`Can't access output tensor data on index ${HA}.`);
          let $I = h === 4 ? "i32" : "i64", JA = Number(j.getValue(MA, $I));
          XA = j.getValue(MA + h, "*");
          let iI = j.getValue(MA + h * 2, "*"), WQ = Number(j.getValue(MA + h * 3, $I)), DC = [];
          for (let yI = 0; yI < WQ; yI++) DC.push(Number(j.getValue(iI + yI * h, $I)));
          j._OrtFree(iI) !== 0 && jI("Can't free memory for tensor dims.");
          let dC = DC.reduce((yI, nI) => yI * nI, 1);
          LA = fQ(JA);
          let vC = b == null ? void 0 : b.outputPreferredLocations[i[HA]];
          if (LA === "string") {
            if (vC === "gpu-buffer" || vC === "ml-tensor") throw new Error("String tensor is not supported on GPU.");
            let yI = [];
            for (let nI = 0; nI < dC; nI++) {
              let hC = j.getValue(XA + nI * h, "*"), kQ = j.getValue(XA + (nI + 1) * h, "*"), cQ = nI === dC - 1 ? void 0 : kQ - hC;
              yI.push(j.UTF8ToString(hC, cQ));
            }
            lA.push([LA, DC, yI, "cpu"]);
          } else if (vC === "gpu-buffer" && dC > 0) {
            let yI = j.jsepGetBuffer;
            if (!yI) throw new Error('preferredLocation "gpu-buffer" is not supported without using WebGPU.');
            let nI = yI(XA), hC = Vg(JA, dC);
            if (hC === void 0 || !cw(LA)) throw new Error(`Unsupported data type: ${LA}`);
            jA = !0, lA.push([LA, DC, { gpuBuffer: nI, download: j.jsepCreateDownloader(nI, hC, LA), dispose: () => {
              j._OrtReleaseTensor(PA) !== 0 && jI("Can't release tensor.");
            } }, "gpu-buffer"]);
          } else if (vC === "ml-tensor" && dC > 0) {
            let yI = j.webnnEnsureTensor, nI = j.webnnIsGraphInputOutputTypeSupported;
            if (!yI || !nI) throw new Error('preferredLocation "ml-tensor" is not supported without using WebNN.');
            if (Vg(JA, dC) === void 0 || !Hw(LA)) throw new Error(`Unsupported data type: ${LA}`);
            if (!nI(B, LA, !1)) throw new Error(`preferredLocation "ml-tensor" for ${LA} output is not supported by current WebNN Context.`);
            let hC = await yI(B, XA, JA, DC, !1);
            jA = !0, lA.push([LA, DC, { mlTensor: hC, download: j.webnnCreateMLTensorDownloader(XA, LA), dispose: () => {
              j.webnnReleaseTensorId(XA), j._OrtReleaseTensor(PA);
            } }, "ml-tensor"]);
          } else if (vC === "ml-tensor-cpu-output" && dC > 0) {
            let yI = j.webnnCreateMLTensorDownloader(XA, LA)(), nI = lA.length;
            jA = !0, vA.push((async () => {
              let hC = [nI, await yI];
              return j.webnnReleaseTensorId(XA), j._OrtReleaseTensor(PA), hC;
            })()), lA.push([LA, DC, [], "cpu"]);
          } else {
            let yI = WU(LA), nI = new yI(dC);
            new Uint8Array(nI.buffer, nI.byteOffset, nI.byteLength).set(j.HEAPU8.subarray(XA, XA + nI.byteLength)), lA.push([LA, DC, nI, "cpu"]);
          }
        } finally {
          j.stackRestore(YI), LA === "string" && XA && j._free(XA), jA || j._OrtReleaseTensor(PA);
        }
      }
      b && !P && (j._OrtClearBoundOutputs(b.handle) !== 0 && jI("Can't clear bound outputs."), Bg.set(B, [k, q, d, b, P, !1]));
      for (let [HA, PA] of await Promise.all(vA)) lA[HA][2] = PA;
      return lA;
    } finally {
      (aA = j.webnnOnRunEnd) == null || aA.call(j, k), j.stackRestore(A), IA.forEach((rA) => j._OrtReleaseTensor(rA)), M.forEach((rA) => j._OrtReleaseTensor(rA)), L.forEach((rA) => j._free(rA)), m !== 0 && j._OrtReleaseRunOptions(m), z.forEach((rA) => j._free(rA));
    }
  }, mw = (B) => {
    let R = cI(), F = Bg.get(B);
    if (!F) throw new Error("invalid session id");
    let i = F[0], s = R._OrtEndProfiling(i);
    s === 0 && jI("Can't get an profile file name."), R._OrtFree(s);
  }, ew = (B) => {
    let R = [];
    for (let F of B) {
      let i = F[2];
      !Array.isArray(i) && "buffer" in i && R.push(i.buffer);
    }
    return R;
  };
}), Eg, ZC, SB, KE, lE, lU, _R, kU, ag, Zg, vG, Ho, ao, Zo, no, qo, Vo, bo, To = sA(() => {
  FQ(), co(), pg(), Kw(), Eg = () => !!LI.wasm.proxy && typeof document < "u", SB = !1, KE = !1, lE = !1, kU = /* @__PURE__ */ new Map(), ag = (B, R) => {
    let F = kU.get(B);
    F ? F.push(R) : kU.set(B, [R]);
  }, Zg = () => {
    if (SB || !KE || lE || !ZC) throw new Error("worker not ready");
  }, vG = (B) => {
    switch (B.data.type) {
      case "init-wasm":
        SB = !1, B.data.err ? (lE = !0, _R[1](B.data.err)) : (KE = !0, _R[0]()), lU && (URL.revokeObjectURL(lU), lU = void 0);
        break;
      case "init-ep":
      case "copy-from":
      case "create":
      case "release":
      case "run":
      case "end-profiling": {
        let R = kU.get(B.data.type);
        B.data.err ? R.shift()[1](B.data.err) : R.shift()[0](B.data.out);
        break;
      }
    }
  }, Ho = async () => {
    if (!KE) {
      if (SB) throw new Error("multiple calls to 'initWasm()' detected.");
      if (lE) throw new Error("previous call to 'initWasm()' failed.");
      if (SB = !0, Eg()) return new Promise((B, R) => {
        ZC == null || ZC.terminate(), kJ().then(([F, i]) => {
          try {
            ZC = i, ZC.onerror = (N) => R(N), ZC.onmessage = vG, _R = [B, R];
            let s = { type: "init-wasm", in: LI };
            !s.in.wasm.wasmPaths && (F || Bw) && (s.in.wasm.wasmPaths = { wasm: new URL("kitten-tts/ort-wasm-simd-threaded.jsep.wasm", import.meta.url).href }), ZC.postMessage(s), lU = F;
          } catch (s) {
            R(s);
          }
        }, R);
      });
      try {
        await lw(LI.wasm), await Ww(LI), KE = !0;
      } catch (B) {
        throw lE = !0, B;
      } finally {
        SB = !1;
      }
    }
  }, ao = async (B) => {
    if (Eg()) return Zg(), new Promise((R, F) => {
      ag("init-ep", [R, F]);
      let i = { type: "init-ep", in: { epName: B, env: LI } };
      ZC.postMessage(i);
    });
    await Ow(LI, B);
  }, Zo = async (B) => Eg() ? (Zg(), new Promise((R, F) => {
    ag("copy-from", [R, F]);
    let i = { type: "copy-from", in: { buffer: B } };
    ZC.postMessage(i, [B.buffer]);
  })) : xU(B), no = async (B, R) => {
    if (Eg()) {
      if (R != null && R.preferredOutputLocation) throw new Error('session option "preferredOutputLocation" is not supported for proxy.');
      return Zg(), new Promise((F, i) => {
        ag("create", [F, i]);
        let s = { type: "create", in: { model: B, options: { ...R } } }, N = [];
        B instanceof Uint8Array && N.push(B.buffer), ZC.postMessage(s, N);
      });
    } else return zw(B, R);
  }, qo = async (B) => {
    if (Eg()) return Zg(), new Promise((R, F) => {
      ag("release", [R, F]);
      let i = { type: "release", in: B };
      ZC.postMessage(i);
    });
    Xw(B);
  }, Vo = async (B, R, F, i, s, N) => {
    if (Eg()) {
      if (F.some((j) => j[3] !== "cpu")) throw new Error("input tensor on GPU is not supported for proxy.");
      if (s.some((j) => j)) throw new Error("pre-allocated output tensor is not supported for proxy.");
      return Zg(), new Promise((j, h) => {
        ag("run", [j, h]);
        let l = F, k = { type: "run", in: { sessionId: B, inputIndices: R, inputs: l, outputIndices: i, options: N } };
        ZC.postMessage(k, ew(l));
      });
    } else return rw(B, R, F, i, s, N);
  }, bo = async (B) => {
    if (Eg()) return Zg(), new Promise((R, F) => {
      ag("end-profiling", [R, F]);
      let i = { type: "end-profiling", in: B };
      ZC.postMessage(i);
    });
    mw(B);
  };
}), $R, uG, xo, ss = sA(() => {
  FQ(), To(), zA(), Yw(), ZJ(), $R = (B, R) => {
    switch (B.location) {
      case "cpu":
        return [B.type, B.dims, B.data, "cpu"];
      case "gpu-buffer":
        return [B.type, B.dims, { gpuBuffer: B.gpuBuffer }, "gpu-buffer"];
      case "ml-tensor":
        return [B.type, B.dims, { mlTensor: B.mlTensor }, "ml-tensor"];
      default:
        throw new Error(`invalid data location: ${B.location} for ${R()}`);
    }
  }, uG = (B) => {
    switch (B[3]) {
      case "cpu":
        return new pC(B[0], B[2], B[1]);
      case "gpu-buffer": {
        let R = B[0];
        if (!cw(R)) throw new Error(`not supported data type: ${R} for deserializing GPU tensor`);
        let { gpuBuffer: F, download: i, dispose: s } = B[2];
        return pC.fromGpuBuffer(F, { dataType: R, dims: B[1], download: i, dispose: s });
      }
      case "ml-tensor": {
        let R = B[0];
        if (!Hw(R)) throw new Error(`not supported data type: ${R} for deserializing MLTensor tensor`);
        let { mlTensor: F, download: i, dispose: s } = B[2];
        return pC.fromMLTensor(F, { dataType: R, dims: B[1], download: i, dispose: s });
      }
      default:
        throw new Error(`invalid data location: ${B[3]}`);
    }
  }, xo = class {
    async fetchModelAndCopyToWasmMemory(B) {
      return Zo(await aw(B));
    }
    async loadModel(B, R) {
      lQ();
      let F;
      typeof B == "string" ? F = await this.fetchModelAndCopyToWasmMemory(B) : F = B, [this.sessionId, this.inputNames, this.outputNames, this.inputMetadata, this.outputMetadata] = await no(F, R), DQ();
    }
    async dispose() {
      return qo(this.sessionId);
    }
    async run(B, R, F) {
      lQ();
      let i = [], s = [];
      Object.entries(B).forEach((d) => {
        let b = d[0], P = d[1], W = this.inputNames.indexOf(b);
        if (W === -1) throw new Error(`invalid input '${b}'`);
        i.push(P), s.push(W);
      });
      let N = [], j = [];
      Object.entries(R).forEach((d) => {
        let b = d[0], P = d[1], W = this.outputNames.indexOf(b);
        if (W === -1) throw new Error(`invalid output '${b}'`);
        N.push(P), j.push(W);
      });
      let h = i.map((d, b) => $R(d, () => `input "${this.inputNames[s[b]]}"`)), l = N.map((d, b) => d ? $R(d, () => `output "${this.outputNames[j[b]]}"`) : null), k = await Vo(this.sessionId, s, h, j, l, F), q = {};
      for (let d = 0; d < k.length; d++) q[this.outputNames[j[d]]] = N[d] ?? uG(k[d]);
      return DQ(), q;
    }
    startProfiling() {
    }
    endProfiling() {
      bo(this.sessionId);
    }
  };
}), Po = {};
nB(Po, { OnnxruntimeWebAssemblyBackend: () => jw, initializeFlags: () => sw, wasmBackend: () => fo });
var sw, jw, fo, js = sA(() => {
  FQ(), To(), ss(), sw = () => {
    (typeof LI.wasm.initTimeout != "number" || LI.wasm.initTimeout < 0) && (LI.wasm.initTimeout = 0);
    let B = LI.wasm.simd;
    if (typeof B != "boolean" && B !== void 0 && B !== "fixed" && B !== "relaxed" && (console.warn(`Property "env.wasm.simd" is set to unknown value "${B}". Reset it to \`false\` and ignore SIMD feature checking.`), LI.wasm.simd = !1), typeof LI.wasm.proxy != "boolean" && (LI.wasm.proxy = !1), typeof LI.wasm.trace != "boolean" && (LI.wasm.trace = !1), typeof LI.wasm.numThreads != "number" || !Number.isInteger(LI.wasm.numThreads) || LI.wasm.numThreads <= 0) if (typeof self < "u" && !self.crossOriginIsolated) LI.wasm.numThreads = 1;
    else {
      let R = typeof navigator > "u" ? BN("node:os").cpus().length : navigator.hardwareConcurrency;
      LI.wasm.numThreads = Math.min(4, Math.ceil((R || 1) / 2));
    }
  }, jw = class {
    async init(B) {
      sw(), await Ho(), await ao(B);
    }
    async createInferenceSessionHandler(B, R) {
      let F = new xo();
      return await F.loadModel(B, R), F;
    }
  }, fo = new jw();
});
FQ();
FQ();
FQ();
var Ss = "1.22.0";
{
  let B = (js(), qE(Po)).wasmBackend;
  hB("webgpu", B, 5), hB("webnn", B, 5), hB("cpu", B, 10), hB("wasm", B, 10);
}
Object.defineProperty(LI.versions, "web", { value: Ss, enumerable: !0 });
/**
* @license
* Copyright 2021 Google LLC. All Rights Reserved.
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* =============================================================================
*/
/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */
var e = e !== void 0 ? e : {};
e.expectedDataFileDownloads || (e.expectedDataFileDownloads = 0);
var hs = typeof importScripts == "function", Aw = typeof process == "object" && typeof process.versions == "object" && typeof process.versions.node == "string", _G = typeof atob == "function" ? atob : function(B) {
  var R, F, i, s, N, j, h = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", l = "", k = 0;
  B = B.replace(/[^A-Za-z0-9\+\/\=]/g, "");
  do
    R = h.indexOf(B.charAt(k++)) << 2 | (s = h.indexOf(B.charAt(k++))) >> 4, F = (15 & s) << 4 | (N = h.indexOf(B.charAt(k++))) >> 2, i = (3 & N) << 6 | (j = h.indexOf(B.charAt(k++))), l += String.fromCharCode(R), N !== 64 && (l += String.fromCharCode(F)), j !== 64 && (l += String.fromCharCode(i));
  while (k < B.length);
  return l;
};
Aw && (process.argv.length > 1 && (vw = process.argv[1].replace(/\\/g, "/")), process.argv.slice(2), process.on("uncaughtException", function(B) {
  if (!(B instanceof Ls)) throw B;
}), process.on("unhandledRejection", function(B) {
  throw B;
}), e.inspect = function() {
  return "[Emscripten Module object]";
}), e.expectedDataFileDownloads++, function() {
  if (e.ENVIRONMENT_IS_PTHREAD) return;
  const B = "/usr/share/espeak-ng-data", R = B + "/lang", F = B + "/voices";
  (function(i) {
    var s = null, N = null;
    function j() {
      function h(b, P) {
        if (!b) throw P + new Error().stack;
      }
      function l(b, P, W) {
        this.start = b, this.end = P, this.audio = W;
      }
      e.FS_createPath("/", "usr", !0, !0), e.FS_createPath("/usr", "share", !0, !0), e.FS_createPath("/usr/share", "espeak-ng-data", !0, !0), e.FS_createPath(B, "lang", !0, !0), e.FS_createPath(R, "aav", !0, !0), e.FS_createPath(R, "art", !0, !0), e.FS_createPath(R, "azc", !0, !0), e.FS_createPath(R, "bat", !0, !0), e.FS_createPath(R, "bnt", !0, !0), e.FS_createPath(R, "ccs", !0, !0), e.FS_createPath(R, "cel", !0, !0), e.FS_createPath(R, "cus", !0, !0), e.FS_createPath(R, "dra", !0, !0), e.FS_createPath(R, "esx", !0, !0), e.FS_createPath(R, "gmq", !0, !0), e.FS_createPath(R, "gmw", !0, !0), e.FS_createPath(R, "grk", !0, !0), e.FS_createPath(R, "inc", !0, !0), e.FS_createPath(R, "ine", !0, !0), e.FS_createPath(R, "ira", !0, !0), e.FS_createPath(R, "iro", !0, !0), e.FS_createPath(R, "itc", !0, !0), e.FS_createPath(R, "jpx", !0, !0), e.FS_createPath(R, "map", !0, !0), e.FS_createPath(R, "miz", !0, !0), e.FS_createPath(R, "myn", !0, !0), e.FS_createPath(R, "poz", !0, !0), e.FS_createPath(R, "roa", !0, !0), e.FS_createPath(R, "sai", !0, !0), e.FS_createPath(R, "sem", !0, !0), e.FS_createPath(R, "sit", !0, !0), e.FS_createPath(R, "tai", !0, !0), e.FS_createPath(R, "trk", !0, !0), e.FS_createPath(R, "urj", !0, !0), e.FS_createPath(R, "zle", !0, !0), e.FS_createPath(R, "zls", !0, !0), e.FS_createPath(R, "zlw", !0, !0), e.FS_createPath(B, "voices", !0, !0), e.FS_createPath(F, "!v", !0, !0), e.FS_createPath(F, "mb", !0, !0), l.prototype = { requests: {}, open: function(b, P) {
        this.name = P, this.requests[P] = this, e.addRunDependency("fp " + this.name);
      }, send: function() {
      }, onload: function() {
        var b = this.byteArray.subarray(this.start, this.end);
        this.finish(b);
      }, finish: function(b) {
        e.FS_createDataFile(this.name, null, b, !0, !0, !0), e.removeRunDependency("fp " + this.name), this.requests[this.name] = null;
      } };
      for (var k = i.files, q = 0; q < k.length; ++q) new l(k[q].start, k[q].end, k[q].audio || 0).open("GET", k[q].filename);
      function d(b) {
        h(b, "Loading data file failed."), h(b.constructor.name === ArrayBuffer.name, "bad input to processPackageData");
        var P = new Uint8Array(b);
        l.prototype.byteArray = P;
        for (var W = i.files, r = 0; r < W.length; ++r) l.prototype.requests[W[r].filename].onload();
        e.removeRunDependency("datafile_js/espeakng.worker.data");
      }
      e.addRunDependency("datafile_js/espeakng.worker.data"), N ? (d(N), N = null) : s = d;
    }
    (async () => {
      const h = function(d) {
        if (typeof Aw == "boolean" && Aw) {
          var b = Buffer.from(d, "base64");
          return new Uint8Array(b.buffer, b.byteOffset, b.byteLength);
        }
        try {
          for (var P = _G(d), W = new Uint8Array(P.length), r = 0; r < P.length; ++r) W[r] = P.charCodeAt(r);
          return W;
        } catch ($) {
          throw console.error(_G), console.error($), new Error("Converting base64 string to bytes failed.");
        }
      }(""), l = new Blob([h]).stream().pipeThrough(new DecompressionStream("gzip")), k = [];
      for await (const d of l) k.push(d);
      const q = await new Blob(k).arrayBuffer();
      s ? (s(q), s = null) : N = q;
    })(), e.calledRun ? j() : (e.preRun || (e.preRun = []), e.preRun.push(j));
  })({ files: [{ filename: B + "/en_dict", start: 0, end: 167064 }, { filename: B + "/intonations", start: 167064, end: 169104 }, { filename: R + "/aav/vi", start: 169104, end: 169215 }, { filename: R + "/aav/vi-VN-x-central", start: 169215, end: 169358 }, { filename: R + "/aav/vi-VN-x-south", start: 169358, end: 169500 }, { filename: R + "/art/eo", start: 169500, end: 169541 }, { filename: R + "/art/ia", start: 169541, end: 169570 }, { filename: R + "/art/io", start: 169570, end: 169620 }, { filename: R + "/art/jbo", start: 169620, end: 169689 }, { filename: R + "/art/lfn", start: 169689, end: 169824 }, { filename: R + "/art/piqd", start: 169824, end: 169880 }, { filename: R + "/art/py", start: 169880, end: 170020 }, { filename: R + "/art/qdb", start: 170020, end: 170077 }, { filename: R + "/art/qya", start: 170077, end: 170250 }, { filename: R + "/art/sjn", start: 170250, end: 170425 }, { filename: R + "/azc/nci", start: 170425, end: 170539 }, { filename: R + "/bat/lt", start: 170539, end: 170567 }, { filename: R + "/bat/ltg", start: 170567, end: 170879 }, { filename: R + "/bat/lv", start: 170879, end: 171108 }, { filename: R + "/bnt/sw", start: 171108, end: 171149 }, { filename: R + "/bnt/tn", start: 171149, end: 171191 }, { filename: R + "/ccs/ka", start: 171191, end: 171315 }, { filename: R + "/cel/cy", start: 171315, end: 171352 }, { filename: R + "/cel/ga", start: 171352, end: 171418 }, { filename: R + "/cel/gd", start: 171418, end: 171469 }, { filename: R + "/cus/om", start: 171469, end: 171508 }, { filename: R + "/dra/kn", start: 171508, end: 171563 }, { filename: R + "/dra/ml", start: 171563, end: 171620 }, { filename: R + "/dra/ta", start: 171620, end: 171671 }, { filename: R + "/dra/te", start: 171671, end: 171741 }, { filename: R + "/esx/kl", start: 171741, end: 171771 }, { filename: R + "/eu", start: 171771, end: 171825 }, { filename: R + "/gmq/da", start: 171825, end: 171868 }, { filename: R + "/gmq/is", start: 171868, end: 171895 }, { filename: R + "/gmq/nb", start: 171895, end: 171982 }, { filename: R + "/gmq/sv", start: 171982, end: 172007 }, { filename: R + "/gmw/af", start: 172007, end: 172130 }, { filename: R + "/gmw/de", start: 172130, end: 172172 }, { filename: R + "/gmw/en", start: 172172, end: 172312 }, { filename: R + "/gmw/en-029", start: 172312, end: 172647 }, { filename: R + "/gmw/en-GB-scotland", start: 172647, end: 172942 }, { filename: R + "/gmw/en-GB-x-gbclan", start: 172942, end: 173180 }, { filename: R + "/gmw/en-GB-x-gbcwmd", start: 173180, end: 173368 }, { filename: R + "/gmw/en-GB-x-rp", start: 173368, end: 173617 }, { filename: R + "/gmw/en-US", start: 173617, end: 173874 }, { filename: R + "/gmw/en-US-nyc", start: 173874, end: 174145 }, { filename: R + "/gmw/lb", start: 174145, end: 174176 }, { filename: R + "/gmw/nl", start: 174176, end: 174199 }, { filename: R + "/grk/el", start: 174199, end: 174222 }, { filename: R + "/grk/grc", start: 174222, end: 174321 }, { filename: R + "/inc/as", start: 174321, end: 174363 }, { filename: R + "/inc/bn", start: 174363, end: 174388 }, { filename: R + "/inc/bpy", start: 174388, end: 174427 }, { filename: R + "/inc/gu", start: 174427, end: 174469 }, { filename: R + "/inc/hi", start: 174469, end: 174492 }, { filename: R + "/inc/kok", start: 174492, end: 174518 }, { filename: R + "/inc/mr", start: 174518, end: 174559 }, { filename: R + "/inc/ne", start: 174559, end: 174596 }, { filename: R + "/inc/or", start: 174596, end: 174635 }, { filename: R + "/inc/pa", start: 174635, end: 174660 }, { filename: R + "/inc/sd", start: 174660, end: 174726 }, { filename: R + "/inc/si", start: 174726, end: 174781 }, { filename: R + "/inc/ur", start: 174781, end: 174875 }, { filename: R + "/ine/hy", start: 174875, end: 174936 }, { filename: R + "/ine/hyw", start: 174936, end: 175301 }, { filename: R + "/ine/sq", start: 175301, end: 175404 }, { filename: R + "/ira/fa", start: 175404, end: 175494 }, { filename: R + "/ira/fa-Latn", start: 175494, end: 175763 }, { filename: R + "/ira/ku", start: 175763, end: 175803 }, { filename: R + "/iro/chr", start: 175803, end: 176372 }, { filename: R + "/itc/la", start: 176372, end: 176669 }, { filename: R + "/jpx/ja", start: 176669, end: 176721 }, { filename: R + "/ko", start: 176721, end: 176772 }, { filename: R + "/map/haw", start: 176772, end: 176814 }, { filename: R + "/miz/mto", start: 176814, end: 176997 }, { filename: R + "/myn/quc", start: 176997, end: 177207 }, { filename: R + "/poz/id", start: 177207, end: 177341 }, { filename: R + "/poz/mi", start: 177341, end: 177708 }, { filename: R + "/poz/ms", start: 177708, end: 178138 }, { filename: R + "/qu", start: 178138, end: 178226 }, { filename: R + "/roa/an", start: 178226, end: 178253 }, { filename: R + "/roa/ca", start: 178253, end: 178278 }, { filename: R + "/roa/es", start: 178278, end: 178341 }, { filename: R + "/roa/es-419", start: 178341, end: 178508 }, { filename: R + "/roa/fr", start: 178508, end: 178587 }, { filename: R + "/roa/fr-BE", start: 178587, end: 178671 }, { filename: R + "/roa/fr-CH", start: 178671, end: 178757 }, { filename: R + "/roa/ht", start: 178757, end: 178897 }, { filename: R + "/roa/it", start: 178897, end: 179006 }, { filename: R + "/roa/pap", start: 179006, end: 179068 }, { filename: R + "/roa/pt", start: 179068, end: 179163 }, { filename: R + "/roa/pt-BR", start: 179163, end: 179272 }, { filename: R + "/roa/ro", start: 179272, end: 179298 }, { filename: R + "/sai/gn", start: 179298, end: 179345 }, { filename: R + "/sem/am", start: 179345, end: 179386 }, { filename: R + "/sem/ar", start: 179386, end: 179436 }, { filename: R + "/sem/he", start: 179436, end: 179476 }, { filename: R + "/sem/mt", start: 179476, end: 179517 }, { filename: R + "/sem/ti", start: 179517, end: 179610 }, { filename: R + "/sit/cmn", start: 179610, end: 180296 }, { filename: R + "/sit/cmn-Latn-pinyin", start: 180296, end: 180457 }, { filename: R + "/sit/hak", start: 180457, end: 180585 }, { filename: R + "/sit/my", start: 180585, end: 180641 }, { filename: R + "/sit/yue", start: 180641, end: 180835 }, { filename: R + "/sit/yue-Latn-jyutping", start: 180835, end: 181048 }, { filename: R + "/tai/shn", start: 181048, end: 181140 }, { filename: R + "/tai/th", start: 181140, end: 181177 }, { filename: R + "/trk/az", start: 181177, end: 181222 }, { filename: R + "/trk/ba", start: 181222, end: 181247 }, { filename: R + "/trk/cv", start: 181247, end: 181287 }, { filename: R + "/trk/kk", start: 181287, end: 181327 }, { filename: R + "/trk/ky", start: 181327, end: 181370 }, { filename: R + "/trk/nog", start: 181370, end: 181409 }, { filename: R + "/trk/tk", start: 181409, end: 181434 }, { filename: R + "/trk/tr", start: 181434, end: 181459 }, { filename: R + "/trk/tt", start: 181459, end: 181482 }, { filename: R + "/trk/ug", start: 181482, end: 181506 }, { filename: R + "/trk/uz", start: 181506, end: 181545 }, { filename: R + "/urj/et", start: 181545, end: 181782 }, { filename: R + "/urj/fi", start: 181782, end: 182019 }, { filename: R + "/urj/hu", start: 182019, end: 182092 }, { filename: R + "/urj/smj", start: 182092, end: 182137 }, { filename: R + "/zle/be", start: 182137, end: 182189 }, { filename: R + "/zle/ru", start: 182189, end: 182246 }, { filename: R + "/zle/ru-LV", start: 182246, end: 182526 }, { filename: R + "/zle/ru-cl", start: 182526, end: 182617 }, { filename: R + "/zle/uk", start: 182617, end: 182714 }, { filename: R + "/zls/bg", start: 182714, end: 182825 }, { filename: R + "/zls/bs", start: 182825, end: 183055 }, { filename: R + "/zls/hr", start: 183055, end: 183317 }, { filename: R + "/zls/mk", start: 183317, end: 183345 }, { filename: R + "/zls/sl", start: 183345, end: 183388 }, { filename: R + "/zls/sr", start: 183388, end: 183638 }, { filename: R + "/zlw/cs", start: 183638, end: 183661 }, { filename: R + "/zlw/pl", start: 183661, end: 183699 }, { filename: R + "/zlw/sk", start: 183699, end: 183723 }, { filename: B + "/phondata", start: 183723, end: 734147 }, { filename: B + "/phonindex", start: 734147, end: 773403 }, { filename: B + "/phontab", start: 773403, end: 829491 }, { filename: F + "/!v/Alex", start: 829491, end: 829619 }, { filename: F + "/!v/Alicia", start: 829619, end: 830093 }, { filename: F + "/!v/Andrea", start: 830093, end: 830450 }, { filename: F + "/!v/Andy", start: 830450, end: 830770 }, { filename: F + "/!v/Annie", start: 830770, end: 831085 }, { filename: F + "/!v/AnxiousAndy", start: 831085, end: 831446 }, { filename: F + "/!v/Demonic", start: 831446, end: 835304 }, { filename: F + "/!v/Denis", start: 835304, end: 835609 }, { filename: F + "/!v/Diogo", start: 835609, end: 835988 }, { filename: F + "/!v/Gene", start: 835988, end: 836269 }, { filename: F + "/!v/Gene2", start: 836269, end: 836552 }, { filename: F + "/!v/Henrique", start: 836552, end: 836933 }, { filename: F + "/!v/Hugo", start: 836933, end: 837311 }, { filename: F + "/!v/Jacky", start: 837311, end: 837578 }, { filename: F + "/!v/Lee", start: 837578, end: 837916 }, { filename: F + "/!v/Marco", start: 837916, end: 838383 }, { filename: F + "/!v/Mario", start: 838383, end: 838653 }, { filename: F + "/!v/Michael", start: 838653, end: 838923 }, { filename: F + "/!v/Mike", start: 838923, end: 839035 }, { filename: F + "/!v/Mr serious", start: 839035, end: 842228 }, { filename: F + "/!v/Nguyen", start: 842228, end: 842508 }, { filename: F + "/!v/Reed", start: 842508, end: 842710 }, { filename: F + "/!v/RicishayMax", start: 842710, end: 842943 }, { filename: F + "/!v/RicishayMax2", start: 842943, end: 843378 }, { filename: F + "/!v/RicishayMax3", start: 843378, end: 843813 }, { filename: F + "/!v/Storm", start: 843813, end: 844233 }, { filename: F + "/!v/Tweaky", start: 844233, end: 847422 }, { filename: F + "/!v/UniRobot", start: 847422, end: 847839 }, { filename: F + "/!v/adam", start: 847839, end: 847914 }, { filename: F + "/!v/anika", start: 847914, end: 848407 }, { filename: F + "/!v/anikaRobot", start: 848407, end: 848919 }, { filename: F + "/!v/announcer", start: 848919, end: 849219 }, { filename: F + "/!v/antonio", start: 849219, end: 849600 }, { filename: F + "/!v/aunty", start: 849600, end: 849958 }, { filename: F + "/!v/belinda", start: 849958, end: 850298 }, { filename: F + "/!v/benjamin", start: 850298, end: 850499 }, { filename: F + "/!v/boris", start: 850499, end: 850723 }, { filename: F + "/!v/caleb", start: 850723, end: 850780 }, { filename: F + "/!v/croak", start: 850780, end: 850873 }, { filename: F + "/!v/david", start: 850873, end: 850985 }, { filename: F + "/!v/ed", start: 850985, end: 851272 }, { filename: F + "/!v/edward", start: 851272, end: 851423 }, { filename: F + "/!v/edward2", start: 851423, end: 851575 }, { filename: F + "/!v/f1", start: 851575, end: 851899 }, { filename: F + "/!v/f2", start: 851899, end: 852256 }, { filename: F + "/!v/f3", start: 852256, end: 852631 }, { filename: F + "/!v/f4", start: 852631, end: 852981 }, { filename: F + "/!v/f5", start: 852981, end: 853413 }, { filename: F + "/!v/fast", start: 853413, end: 853562 }, { filename: F + "/!v/grandma", start: 853562, end: 853825 }, { filename: F + "/!v/grandpa", start: 853825, end: 854081 }, { filename: F + "/!v/gustave", start: 854081, end: 854334 }, { filename: F + "/!v/ian", start: 854334, end: 857502 }, { filename: F + "/!v/iven", start: 857502, end: 857763 }, { filename: F + "/!v/iven2", start: 857763, end: 858042 }, { filename: F + "/!v/iven3", start: 858042, end: 858304 }, { filename: F + "/!v/iven4", start: 858304, end: 858565 }, { filename: F + "/!v/john", start: 858565, end: 861751 }, { filename: F + "/!v/kaukovalta", start: 861751, end: 862112 }, { filename: F + "/!v/klatt", start: 862112, end: 862150 }, { filename: F + "/!v/klatt2", start: 862150, end: 862188 }, { filename: F + "/!v/klatt3", start: 862188, end: 862227 }, { filename: F + "/!v/klatt4", start: 862227, end: 862266 }, { filename: F + "/!v/klatt5", start: 862266, end: 862305 }, { filename: F + "/!v/klatt6", start: 862305, end: 862344 }, { filename: F + "/!v/linda", start: 862344, end: 862694 }, { filename: F + "/!v/m1", start: 862694, end: 863029 }, { filename: F + "/!v/m2", start: 863029, end: 863293 }, { filename: F + "/!v/m3", start: 863293, end: 863593 }, { filename: F + "/!v/m4", start: 863593, end: 863883 }, { filename: F + "/!v/m5", start: 863883, end: 864145 }, { filename: F + "/!v/m6", start: 864145, end: 864333 }, { filename: F + "/!v/m7", start: 864333, end: 864587 }, { filename: F + "/!v/m8", start: 864587, end: 864871 }, { filename: F + "/!v/marcelo", start: 864871, end: 865122 }, { filename: F + "/!v/max", start: 865122, end: 865347 }, { filename: F + "/!v/michel", start: 865347, end: 865751 }, { filename: F + "/!v/miguel", start: 865751, end: 866133 }, { filename: F + "/!v/mike2", start: 866133, end: 866321 }, { filename: F + "/!v/norbert", start: 866321, end: 869510 }, { filename: F + "/!v/pablo", start: 869510, end: 872652 }, { filename: F + "/!v/paul", start: 872652, end: 872936 }, { filename: F + "/!v/pedro", start: 872936, end: 873288 }, { filename: F + "/!v/quincy", start: 873288, end: 873642 }, { filename: F + "/!v/rob", start: 873642, end: 873907 }, { filename: F + "/!v/robert", start: 873907, end: 874181 }, { filename: F + "/!v/robosoft", start: 874181, end: 874632 }, { filename: F + "/!v/robosoft2", start: 874632, end: 875086 }, { filename: F + "/!v/robosoft3", start: 875086, end: 875541 }, { filename: F + "/!v/robosoft4", start: 875541, end: 875988 }, { filename: F + "/!v/robosoft5", start: 875988, end: 876433 }, { filename: F + "/!v/robosoft6", start: 876433, end: 876720 }, { filename: F + "/!v/robosoft7", start: 876720, end: 877130 }, { filename: F + "/!v/robosoft8", start: 877130, end: 877373 }, { filename: F + "/!v/sandro", start: 877373, end: 877903 }, { filename: F + "/!v/shelby", start: 877903, end: 878183 }, { filename: F + "/!v/steph", start: 878183, end: 878547 }, { filename: F + "/!v/steph2", start: 878547, end: 878914 }, { filename: F + "/!v/steph3", start: 878914, end: 879291 }, { filename: F + "/!v/travis", start: 879291, end: 879674 }, { filename: F + "/!v/victor", start: 879674, end: 879927 }, { filename: F + "/!v/whisper", start: 879927, end: 880113 }, { filename: F + "/!v/whisperf", start: 880113, end: 880505 }, { filename: F + "/!v/zac", start: 880505, end: 880780 }, { filename: F + "/mb/mb-af1", start: 880780, end: 880868 }, { filename: F + "/mb/mb-af1-en", start: 880868, end: 880951 }, { filename: F + "/mb/mb-ar1", start: 880951, end: 881035 }, { filename: F + "/mb/mb-ar2", start: 881035, end: 881119 }, { filename: F + "/mb/mb-br1", start: 881119, end: 881251 }, { filename: F + "/mb/mb-br2", start: 881251, end: 881387 }, { filename: F + "/mb/mb-br3", start: 881387, end: 881519 }, { filename: F + "/mb/mb-br4", start: 881519, end: 881655 }, { filename: F + "/mb/mb-ca1", start: 881655, end: 881760 }, { filename: F + "/mb/mb-ca2", start: 881760, end: 881865 }, { filename: F + "/mb/mb-cn1", start: 881865, end: 881957 }, { filename: F + "/mb/mb-cr1", start: 881957, end: 882068 }, { filename: F + "/mb/mb-cz1", start: 882068, end: 882138 }, { filename: F + "/mb/mb-cz2", start: 882138, end: 882220 }, { filename: F + "/mb/mb-de1", start: 882220, end: 882364 }, { filename: F + "/mb/mb-de1-en", start: 882364, end: 882460 }, { filename: F + "/mb/mb-de2", start: 882460, end: 882588 }, { filename: F + "/mb/mb-de2-en", start: 882588, end: 882668 }, { filename: F + "/mb/mb-de3", start: 882668, end: 882767 }, { filename: F + "/mb/mb-de3-en", start: 882767, end: 882863 }, { filename: F + "/mb/mb-de4", start: 882863, end: 882992 }, { filename: F + "/mb/mb-de4-en", start: 882992, end: 883073 }, { filename: F + "/mb/mb-de5", start: 883073, end: 883309 }, { filename: F + "/mb/mb-de5-en", start: 883309, end: 883399 }, { filename: F + "/mb/mb-de6", start: 883399, end: 883521 }, { filename: F + "/mb/mb-de6-en", start: 883521, end: 883595 }, { filename: F + "/mb/mb-de6-grc", start: 883595, end: 883678 }, { filename: F + "/mb/mb-de7", start: 883678, end: 883828 }, { filename: F + "/mb/mb-de8", start: 883828, end: 883899 }, { filename: F + "/mb/mb-ee1", start: 883899, end: 883996 }, { filename: F + "/mb/mb-en1", start: 883996, end: 884127 }, { filename: F + "/mb/mb-es1", start: 884127, end: 884241 }, { filename: F + "/mb/mb-es2", start: 884241, end: 884349 }, { filename: F + "/mb/mb-es3", start: 884349, end: 884453 }, { filename: F + "/mb/mb-es4", start: 884453, end: 884541 }, { filename: F + "/mb/mb-fr1", start: 884541, end: 884707 }, { filename: F + "/mb/mb-fr1-en", start: 884707, end: 884811 }, { filename: F + "/mb/mb-fr2", start: 884811, end: 884914 }, { filename: F + "/mb/mb-fr3", start: 884914, end: 885014 }, { filename: F + "/mb/mb-fr4", start: 885014, end: 885141 }, { filename: F + "/mb/mb-fr4-en", start: 885141, end: 885248 }, { filename: F + "/mb/mb-fr5", start: 885248, end: 885348 }, { filename: F + "/mb/mb-fr6", start: 885348, end: 885448 }, { filename: F + "/mb/mb-fr7", start: 885448, end: 885531 }, { filename: F + "/mb/mb-gr1", start: 885531, end: 885625 }, { filename: F + "/mb/mb-gr2", start: 885625, end: 885719 }, { filename: F + "/mb/mb-gr2-en", start: 885719, end: 885807 }, { filename: F + "/mb/mb-hb1", start: 885807, end: 885875 }, { filename: F + "/mb/mb-hb2", start: 885875, end: 885958 }, { filename: F + "/mb/mb-hu1", start: 885958, end: 886060 }, { filename: F + "/mb/mb-hu1-en", start: 886060, end: 886157 }, { filename: F + "/mb/mb-ic1", start: 886157, end: 886245 }, { filename: F + "/mb/mb-id1", start: 886245, end: 886346 }, { filename: F + "/mb/mb-in1", start: 886346, end: 886415 }, { filename: F + "/mb/mb-in2", start: 886415, end: 886500 }, { filename: F + "/mb/mb-ir1", start: 886500, end: 887253 }, { filename: F + "/mb/mb-it1", start: 887253, end: 887337 }, { filename: F + "/mb/mb-it2", start: 887337, end: 887424 }, { filename: F + "/mb/mb-it3", start: 887424, end: 887566 }, { filename: F + "/mb/mb-it4", start: 887566, end: 887711 }, { filename: F + "/mb/mb-jp1", start: 887711, end: 887782 }, { filename: F + "/mb/mb-jp2", start: 887782, end: 887883 }, { filename: F + "/mb/mb-jp3", start: 887883, end: 887970 }, { filename: F + "/mb/mb-la1", start: 887970, end: 888053 }, { filename: F + "/mb/mb-lt1", start: 888053, end: 888140 }, { filename: F + "/mb/mb-lt2", start: 888140, end: 888227 }, { filename: F + "/mb/mb-ma1", start: 888227, end: 888325 }, { filename: F + "/mb/mb-mx1", start: 888325, end: 888445 }, { filename: F + "/mb/mb-mx2", start: 888445, end: 888565 }, { filename: F + "/mb/mb-nl1", start: 888565, end: 888634 }, { filename: F + "/mb/mb-nl2", start: 888634, end: 888730 }, { filename: F + "/mb/mb-nl2-en", start: 888730, end: 888821 }, { filename: F + "/mb/mb-nl3", start: 888821, end: 888906 }, { filename: F + "/mb/mb-nz1", start: 888906, end: 888974 }, { filename: F + "/mb/mb-pl1", start: 888974, end: 889073 }, { filename: F + "/mb/mb-pl1-en", start: 889073, end: 889155 }, { filename: F + "/mb/mb-pt1", start: 889155, end: 889286 }, { filename: F + "/mb/mb-ro1", start: 889286, end: 889373 }, { filename: F + "/mb/mb-ro1-en", start: 889373, end: 889454 }, { filename: F + "/mb/mb-sw1", start: 889454, end: 889552 }, { filename: F + "/mb/mb-sw1-en", start: 889552, end: 889645 }, { filename: F + "/mb/mb-sw2", start: 889645, end: 889747 }, { filename: F + "/mb/mb-sw2-en", start: 889747, end: 889846 }, { filename: F + "/mb/mb-tl1", start: 889846, end: 889931 }, { filename: F + "/mb/mb-tr1", start: 889931, end: 890016 }, { filename: F + "/mb/mb-tr2", start: 890016, end: 890130 }, { filename: F + "/mb/mb-us1", start: 890130, end: 890300 }, { filename: F + "/mb/mb-us2", start: 890300, end: 890478 }, { filename: F + "/mb/mb-us3", start: 890478, end: 890658 }, { filename: F + "/mb/mb-vz1", start: 890658, end: 890802 }] });
}();
var $G = Object.assign({}, e), vw = "./this.program", PU = e.print || console.log.bind(console), aB = e.printErr || console.warn.bind(console);
Object.assign(e, $G), $G = null, e.arguments && e.arguments, e.thisProgram && (vw = e.thisProgram), e.quit && e.quit, e.wasmBinary && e.wasmBinary, e.noExitRuntime;
var aU, ZB = { Memory: function(B) {
  this.buffer = new ArrayBuffer(65536 * B.initial);
}, Module: function(B) {
}, Instance: function(B, R) {
  this.exports = function(F) {
    for (var i, s = new Uint8Array(123), N = 25; N >= 0; --N) s[48 + N] = 52 + N, s[65 + N] = N, s[97 + N] = 26 + N;
    function j(m, z, IA) {
      for (var M, L, A = 0, G = z, a = IA.length, UA = z + (3 * a >> 2) - (IA[a - 2] == "=") - (IA[a - 1] == "="); A < a; A += 4) M = s[IA.charCodeAt(A + 1)], L = s[IA.charCodeAt(A + 2)], m[G++] = s[IA.charCodeAt(A)] << 2 | M >> 4, G < UA && (m[G++] = M << 4 | L >> 2), G < UA && (m[G++] = L << 6 | s[IA.charCodeAt(A + 3)]);
    }
    s[43] = 62, s[47] = 63;
    var h = new ArrayBuffer(16), l = new Int32Array(h), k = new Float32Array(h), q = new Float64Array(h);
    function d(m) {
      return l[m];
    }
    function b(m, z) {
      l[m] = z;
    }
    function P() {
      return q[0];
    }
    function W(m) {
      q[0] = m;
    }
    function r() {
      throw new Error("abort");
    }
    function $(m) {
      k[2] = m;
    }
    return function(m) {
      var z = m.a, IA = z.a.buffer, M = new Int8Array(IA), L = new Int16Array(IA), A = new Int32Array(IA), G = new Uint8Array(IA), a = new Uint16Array(IA), UA = new Uint32Array(IA), H = new Float64Array(IA), T = Math.imul, cA = Math.fround, GA = Math.abs, aA = Math.clz32, rA = Math.min, lA = Math.floor, vA = Math.ceil, HA = z.b, PA = z.c, YI = z.d, MA = z.e, jA = z.f, LA = z.g, XA = z.h, $I = z.i, JA = z.j, iI = z.k, WQ = z.l, DC = z.m, dC = z.n, vC = z.o, yI = z.p, nI = z.q, hC = z.r, kQ = z.s, cQ = z.t, bE = z.u, t = 294656, HQ = 0, MQ = 0, QA = 0;
      function dB(I) {
        var C, Q = 0, g = 0, E = 0, U = 0, w = 0, D = 0, J = 0, o = 0, y = 0, S = 0, Y = 0, c = 0, n = 0, V = 0, x = 0, O = 0, v = 0, _ = 0, AA = 0, CA = 0, BA = 0, EA = 0, wA = 0, yA = 0, NA = 0, kA = 0, nA = 0, WA = 0, gI = 0, FI = 0, oI = 0, kI = 0, ZI = 0, VI = 0, bI = 0, vI = 0, _I = 0, RC = 0, JC = 0, sC = 0, KC = 0, hQ = 0, LQ = 0, YQ = 0, sB = 0, GE = 0, jB = 0, JE = 0, iE = 0, iD = 0, yD = 0, oD = 0, ND = 0;
        if (t = C = t - 16 | 0, (0 | I) != 2) if (I = A[33283], A[I >> 2] != A[I + 4 >> 2]) {
          if (GC(A[A[32972] + 60 >> 2]), V = A[47192], sC = C + 12 | 0, sB = C + 8 | 0, t = J = t - 6832 | 0, A[J + 6816 >> 2] = 0, A[J + 6808 >> 2] = 32, A[J + 6800 >> 2] = 0, V) {
            A[47351] = 0, A[47350] = 0, A[47352] = 0, M[189076] = 0, I = A[33284], A[47353] = (0 | I) > 0 ? I : 0, A[47355] = A[47354] + 1, pA(yA = J + 5184 | 0, 0, 1600), _I = J + 6800 | 0, t = w = t - 2608 | 0, A[w + 2156 >> 2] = 32, A[w + 2148 >> 2] = 0, G[134760] && (M[190280] = 0, M[134760] = 0), A[V + 8216 >> 2] = 0, A[V + 8220 >> 2] = 0, A[V + 288 >> 2] = 0, A[J + 780 >> 2] = 0, M[189360] = 0;
            A: if (I = A[33691]) A[w + 2152 >> 2] = I;
            else {
              I: {
                Q: {
                  if (!(Q = A[33285])) {
                    if (I = A[33283], A[I >> 2] == A[I + 4 >> 2]) {
                      A[w + 2152 >> 2] = 0;
                      break A;
                    }
                    if (!(Q = A[33285])) break Q;
                  }
                  A[33285] = 0;
                  break I;
                }
                A[33284] = A[33284] + 1, I = A[33283], Q = 0 | fA[A[I + 8 >> 2]](I);
              }
              A[w + 2152 >> 2] = Q;
            }
            iE = yA + 2 | 0, BA = 32;
            A: {
              for (; ; ) {
                CA = BA;
                I: {
                  Q: {
                    B: {
                      if (Q = A[33691], (E = A[33285]) ? I = 0 : (E = A[33285], I = A[33283], I = A[I >> 2] == A[I + 4 >> 2]), Q | !I | E || !(A[32524] < 0)) {
                        if (!u(A[w + 2156 >> 2])) {
                          if ((E = (0 | (I = A[49828])) > 0) & (0 | (Q = I)) < (0 | (I = A[33284]))) break B;
                          if (!((0 | (Q = A[49845])) <= 0 | (0 | I) < (0 | Q))) {
                            A[49845] = 0, M[134760] = 1, A[33285] = A[w + 2152 >> 2], g = 16384;
                            break A;
                          }
                        }
                        BA = A[w + 2156 >> 2], A[w + 2156 >> 2] = A[w + 2152 >> 2];
                        E: {
                          R: {
                            D: {
                              F: {
                                w: {
                                  if ((0 | (Q = A[32524])) >= 0) {
                                    if (G[Q + 134736 | 0]) break w;
                                    A[32524] = -1;
                                  }
                                  if (Q = A[33285]) break D;
                                  if (I = A[33283], A[I >> 2] != A[I + 4 >> 2]) break F;
                                  Q = 32;
                                  break E;
                                }
                                A[33691] | Q || (A[w + 2156 >> 2] = M[134736], Q = 1), A[32524] = Q + 1, Q = M[Q + 134736 | 0];
                                break E;
                              }
                              if (!(Q = A[33285])) break R;
                            }
                            A[33285] = 0;
                            break E;
                          }
                          A[33284] = A[33284] + 1, I = A[33283], Q = 0 | fA[A[I + 8 >> 2]](I);
                        }
                        A[w + 2152 >> 2] = Q, A[33691] = 0;
                        E: if (!(o | !A[47203])) {
                          R: {
                            if ((0 | (I = A[w + 2156 >> 2])) != 60) {
                              if ((0 | Q) != 35 & Q - 97 >>> 0 > 25 | (0 | I) != 38) break E;
                              for (E = A[33285], U = 0; ; ) {
                                D: {
                                  if (A[w + 2156 >> 2] = Q, !E) {
                                    if (I = A[33283], A[I >> 2] == A[I + 4 >> 2]) break D;
                                    Q = A[w + 2156 >> 2];
                                  }
                                  if (!(!((Q = !!(0 | u(Q))) | (0 | (I = A[w + 2156 >> 2])) == 35) | U >>> 0 > 19)) {
                                    M[(w + 112 | 0) + U | 0] = I, U = U + 1 | 0, (Q = A[33285]) ? (A[33285] = 0, E = 0) : (A[33284] = A[33284] + 1, I = A[33283], Q = 0 | fA[A[I + 8 >> 2]](I), E = A[33285]);
                                    continue;
                                  }
                                }
                                break;
                              }
                              M[(w + 112 | 0) + U | 0] = 0;
                              D: {
                                F: {
                                  if (!(Q = A[33285])) {
                                    if (Q = 0, I = A[33283], A[I >> 2] == A[I + 4 >> 2]) break D;
                                    if (!(Q = A[33285])) break F;
                                  }
                                  A[33285] = 0;
                                  break D;
                                }
                                A[33284] = A[33284] + 1, I = A[33283], Q = 0 | fA[A[I + 8 >> 2]](I);
                              }
                              A[w + 2152 >> 2] = Q, A[w + 100 >> 2] = A[w + 2156 >> 2], A[w + 104 >> 2] = Q, A[w + 96 >> 2] = w + 112, iA(134736, 84252, w + 96 | 0);
                              D: {
                                if (A[w + 2156 >> 2] == 59) {
                                  U = w + 2156 | 0, n = w + 2152 | 0, t = E = t - 32 | 0;
                                  F: if (G[0 | (Q = w + 112 | 0)] != 35) I = -1, (0 | (Q = OA(130752, Q))) != -1 && (A[U >> 2] = Q, A[n >> 2] || (A[n >> 2] = 32), I = Q);
                                  else {
                                    if (G[0 | (I = Q + 1 | 0)] == 120) {
                                      A[E >> 2] = U, I = QI(Q + 2 | 0, 90005, E);
                                      break F;
                                    }
                                    A[E + 16 >> 2] = U, I = QI(I, 90070, E + 16 | 0);
                                  }
                                  if (t = E + 32 | 0, (0 | I) > 0) break D;
                                }
                                A[32524] = 0, A[w + 2156 >> 2] = 38, A[w + 2152 >> 2] = 32;
                                break E;
                              }
                              if ((0 | (I = A[w + 2156 >> 2])) > 32) break E;
                              if (!(Q = A[33692] - 20 | 0) | (0 | Q) == 16) break R;
                              break E;
                            }
                            if ((0 | Q) != 47 && !gA(Q) && (0 | (I = A[w + 2152 >> 2])) != 63 && (0 | I) != 33) break E;
                            if ((0 | (I = A[w + 2148 >> 2])) > 780) {
                              A[33691] = A[w + 2156 >> 2], M[0 | (I = I + 189424 | 0)] = 32, M[I + 1 | 0] = 0, A[33285] = A[w + 2152 >> 2], g = 16384;
                              break A;
                            }
                            for (n = A[33285], U = 0, Q = A[w + 2152 >> 2]; A[w + 2156 >> 2] = Q, E = 0, n || (I = A[33283], E = A[I >> 2] == A[I + 4 >> 2], Q = A[w + 2156 >> 2]), !((0 | Q) == 62 | E | U >>> 0 > 499); ) A[(w + 144 | 0) + (U << 2) >> 2] = Q, U = U + 1 | 0, (Q = A[33285]) ? (n = 0, A[33285] = 0) : (A[33284] = A[33284] + 1, I = A[33283], Q = 0 | fA[A[I + 8 >> 2]](I), n = A[33285]);
                            A[(E = w + 144 | 0) + (U << 2) >> 2] = 0, A[w + 2152 >> 2] = 32, EA = w + 2148 | 0, CA = A[32525], Q = 0, t = AA = t - 560 | 0;
                            D: if (wE(E, 84333, 3) && wE(E, 84477, 4)) {
                              for (I = (E + (ID(E) << 2) | 0) - 4 | 0, (0 | (NA = A[I >> 2])) == 47 && (A[I >> 2] = 32); ; ) {
                                if (I = A[E + (Q << 2) >> 2]) {
                                  if (pI(I)) I = Q;
                                  else if (M[(AA + 512 | 0) + Q | 0] = xC(I << 24 >> 24), I = 39, (0 | (Q = Q + 1 | 0)) != 39) continue;
                                } else I = Q;
                                break;
                              }
                              if (M[(AA + 512 | 0) + I | 0] = 0, G[AA + 512 | 0] != 47) {
                                if ((0 | (n = OA(130480, AA + 512 | 0))) != 16 && (Q = A[EA >> 2], A[EA >> 2] = Q + 1, M[Q + 189424 | 0] = 32), (0 | NA) == 47 && (Q = 0, !(502241 >>> n & 1))) break D;
                              } else (0 | (Q = OA(130480, AA + 512 | 1))) != 16 && (U = A[EA >> 2], A[EA >> 2] = U + 1, M[U + 189424 | 0] = 32), n = Q + 32 | 0;
                              U = E + (I << 2) | 0, I = A[33708], o = T(I, 76) + 133076 | 0, Q = 262174;
                              F: {
                                w: {
                                  U: {
                                    i: switch (n - 1 | 0) {
                                      case 33:
                                        N: if (!((0 | I) <= 1)) {
                                          for (; ; ) {
                                            if (A[T(Q = I - 1 | 0, 76) + 133152 >> 2] == 2) break N;
                                            if (A[33708] = Q, E = I >>> 0 > 2, I = Q, !E) break;
                                          }
                                          I = 1;
                                        }
                                        Q = cC(U, 34, I);
                                        break D;
                                      case 32:
                                        N: if (!((0 | I) <= 1)) {
                                          for (; ; ) {
                                            if (A[T(Q = I - 1 | 0, 76) + 133152 >> 2] == 1) break N;
                                            if (A[33708] = Q, E = I >>> 0 > 2, I = Q, !E) break;
                                          }
                                          I = 1;
                                        }
                                        Q = cC(U, 33, I) + 524328 | 0;
                                        break D;
                                      case 9:
                                        (0 | (Q = A[33709])) <= 18 && (A[33709] = Q + 1), A[(I = (o = Q << 6) + 134912 | 0) >> 2] = 10, A[I + 4 >> 2] = -1, A[I + 8 >> 2] = -1, A[I + 52 >> 2] = -1, A[I + 56 >> 2] = -1, A[I + 44 >> 2] = -1, A[I + 48 >> 2] = -1, A[I + 36 >> 2] = -1, A[I + 40 >> 2] = -1, A[I + 28 >> 2] = -1, A[I + 32 >> 2] = -1, A[I + 20 >> 2] = -1, A[I + 24 >> 2] = -1, A[I + 12 >> 2] = -1, A[I + 16 >> 2] = -1, A[I + 60 >> 2] = -1, I = PI(U, 88301), E = PI(U, 88390), BE(I, 88479) ? BE(I, 88528) || (A[28 + (134912 + (Q << 6) | 0) >> 2] = sQ(E, 130224)) : A[24 + (o + 134912 | 0) >> 2] = sQ(E, 130192), iQ(EA, A[33709]);
                                        break U;
                                      case 2:
                                        for ((0 | (I = A[33709])) <= 18 && (A[33709] = I + 1), A[(I = (GE = I << 6) + 134912 | 0) >> 2] = 3, A[I + 4 >> 2] = -1, A[I + 8 >> 2] = -1, A[I + 52 >> 2] = -1, A[I + 56 >> 2] = -1, A[I + 44 >> 2] = -1, A[I + 48 >> 2] = -1, A[I + 36 >> 2] = -1, A[I + 40 >> 2] = -1, A[I + 28 >> 2] = -1, A[I + 32 >> 2] = -1, A[I + 20 >> 2] = -1, A[I + 24 >> 2] = -1, A[I + 12 >> 2] = -1, A[I + 16 >> 2] = -1, A[I + 60 >> 2] = -1, oI = 1; ; ) {
                                          if (E = PI(U, A[(kI = oI << 2) + 130448 >> 2])) {
                                            NA = 0, I = A[kI + 131072 >> 2];
                                            N: if (n = A[I >> 2]) for (; ; ) {
                                              for (Q = 0; o = M[Q + n | 0], (CA = A[(Q << 2) + E >> 2]) && (Q = Q + 1 | 0, (0 | o) == (0 | CA)); ) ;
                                              o: switch (CA - 34 | 0) {
                                                case 0:
                                                case 5:
                                                  if (!o) break N;
                                                  break;
                                                default:
                                                  break o;
                                              }
                                              if (!(n = A[I + ((NA = NA + 1 | 0) << 3) >> 2])) break;
                                            }
                                            iD = kI + (GE + 134912 | 0) | 0;
                                            N: if ((0 | (I = A[4 + (I + (NA << 3) | 0) >> 2])) >= 0) I = (0 | T(I, A[4 + (kI + 134912 | 0) >> 2])) / 100 | 0;
                                            else {
                                              for (; E = (I = E) + 4 | 0, pI(A[I >> 2]); ) ;
                                              for (jB = A[I >> 2] == 43, E = ((JE = A[(I = I + (jB << 2) | 0) >> 2] == 45) << 2) + I | 0, NA = AA + 96 | 0, t = n = (t = o = t - 16 | 0) - 224 | 0, pA(n + 16 | 0, 0, 144), I = n + 160 | 4, A[n + 24 >> 2] = I, A[n + 60 >> 2] = I, A[n + 92 >> 2] = -1, A[n + 64 >> 2] = 60, A[n + 20 >> 2] = I, A[n + 48 >> 2] = 19, Q = E; Q = (I = Q) + 4 | 0, CA = (CA = A[I >> 2]) ? eA(124960, CA) : 0; ) ;
                                              A[n + 100 >> 2] = I, HC(Q = n + 16 | 0, 0, 0), uC(n, Q, 1, 1), Q = A[n + 8 >> 2], yD = A[n + 12 >> 2], CA = A[n >> 2], oD = A[n + 4 >> 2], NA && (ND = NA, NA = A[n + 136 >> 2] + (A[n + 20 >> 2] - A[n + 60 >> 2] | 0) | 0, A[ND >> 2] = NA ? I + (NA << 2) | 0 : E), A[(I = o) + 8 >> 2] = Q, A[I + 12 >> 2] = yD, A[I >> 2] = CA, A[I + 4 >> 2] = oD, t = n + 224 | 0, _ = zB(A[I >> 2], A[I + 4 >> 2], A[I + 8 >> 2], A[I + 12 >> 2]), t = I + 16 | 0;
                                              o: {
                                                Q = 100;
                                                s: if ((0 | (I = E)) != (0 | (E = A[AA + 96 >> 2]))) {
                                                  Q = JE ? -1 : jB;
                                                  y: {
                                                    if ((0 | (I = A[E >> 2])) != 115) {
                                                      if ((0 | I) != 37) break y;
                                                      if (GA(_ = Q ? +(0 | Q) * _ + 100 : _) < 2147483648) {
                                                        Q = ~~_;
                                                        break s;
                                                      }
                                                      Q = -2147483648;
                                                      break s;
                                                    }
                                                    if (A[E + 4 >> 2] == 116) {
                                                      W(+(gI = _ * +(0 | Q) / 12)), I = 0 | d(1), d(0);
                                                      l: {
                                                        if ((Q = (I = I >>> 20 & 2047) - 969 | 0) >>> 0 >= 63) {
                                                          if (_ = gI + 1, (0 | Q) < 0) break l;
                                                          if (W(+gI), Q = 0 | d(1), E = 0 | d(0), !(I >>> 0 < 1033)) {
                                                            if (_ = 0, !E & (0 | Q) == -1048576 || (_ = gI + 1, I >>> 0 >= 2047)) break l;
                                                            if ((0 | Q) > 0 | (0 | Q) >= 0) {
                                                              H[(I = t - 16 | 0) + 8 >> 3] = 3105036184601418e216, _ = 3105036184601418e216 * H[I + 8 >> 3];
                                                              break l;
                                                            }
                                                            if (!(Q >>> 0 < 3230714880)) {
                                                              H[(I = t - 16 | 0) + 8 >> 3] = 12882297539194267e-247, _ = 12882297539194267e-247 * H[I + 8 >> 3];
                                                              break l;
                                                            }
                                                          }
                                                          o = I, I = !(E << 1) & (0 | (I = Q << 1 | E >>> 31)) == -2129002496 | I >>> 0 < 2165964800 ? o : 0;
                                                        }
                                                        KC = (gI = (_ = gI - ((RC = (_ = H[14416]) + gI) - _)) * _) * gI * (_ * H[14421] + H[14420]), gI *= _ * H[14419] + H[14418], _ *= H[14417], W(+RC), d(1), o = 0 | d(0), _ = KC + (gI + (_ + H[(E = o << 4 & 2032) + 115376 >> 3])), CA = A[(E = E + 115384 | 0) >> 2], n = A[E + 4 >> 2], E = (Q = CA) + (CA = 0) | 0, Q = (o << 13) + n | 0, Q = E >>> 0 < CA >>> 0 ? Q + 1 | 0 : Q, I ? (b(0, 0 | E), b(1, 0 | Q), _ = (gI = +P()) * _ + gI) : -2147483648 & o ? (b(0, 0 | E), b(1, Q + 1071644672 | 0), (_ = (RC = (gI = +P()) * _) + gI) < 1 && (A[(I = t - 16 | 0) + 8 >> 2] = 0, A[I + 12 >> 2] = 1048576, H[I + 8 >> 3] = 22250738585072014e-324 * H[I + 8 >> 3], _ = (_ = (KC = _ + 1) + (RC + (gI - _) + (_ + (1 - KC))) + -1) == 0 ? 0 : _), _ *= 22250738585072014e-324) : (b(0, 0 | E), b(1, Q + -1048576 | 0), _ = (gI = +P()) * _ + gI, _ += _);
                                                      }
                                                      if (GA(_ *= 100) < 2147483648) {
                                                        Q = ~~_;
                                                        break s;
                                                      }
                                                      Q = -2147483648;
                                                      break s;
                                                    }
                                                  }
                                                  if ((0 | oI) != 1) break o;
                                                  if (Q) Q = (I = GA(_ = _ * +(0 | Q) * 100) < 2147483648 ? ~~_ : -2147483648) + 100 | 0;
                                                  else {
                                                    if (GA(_ *= 100) < 2147483648) {
                                                      Q = ~~_;
                                                      break s;
                                                    }
                                                    Q = -2147483648;
                                                  }
                                                }
                                                I = (0 | T(Q, A[kI + 134848 >> 2])) / 100 | 0;
                                                break N;
                                              }
                                              I = GA(_) < 2147483648 ? ~~_ : -2147483648, Q && (I = A[kI + 134848 >> 2] + T(I, Q) | 0);
                                            }
                                            A[iD + 4 >> 2] = I;
                                          }
                                          if ((0 | (oI = oI + 1 | 0)) == 5) break;
                                        }
                                        iQ(EA, A[33709]);
                                        break U;
                                      case 11:
                                        (0 | (Q = A[33709])) <= 18 && (A[33709] = Q + 1), A[(I = 134912 + (Q << 6) | 0) >> 2] = 12, A[I + 4 >> 2] = -1, A[I + 8 >> 2] = -1, A[I + 52 >> 2] = -1, A[I + 56 >> 2] = -1, A[I + 44 >> 2] = -1, A[I + 48 >> 2] = -1, A[I + 36 >> 2] = -1, A[I + 40 >> 2] = -1, A[I + 28 >> 2] = -1, A[I + 32 >> 2] = -1, A[I + 20 >> 2] = -1, A[I + 24 >> 2] = -1, A[I + 12 >> 2] = -1, A[I + 16 >> 2] = -1, A[I + 60 >> 2] = -1, I = (I = PI(U, 88658)) ? sQ(I, 130400) : 3, E = 134912 + (Q << 6) | 0, A[A[47192] + 148 >> 2] != 1 ? (A[52 + (134912 + (Q << 6) | 0) >> 2] = I, I = G[I + 102776 | 0]) : (A[20 + (134912 + (Q << 6) | 0) >> 2] = G[I + 102764 | 0], I = G[I + 102770 | 0]), A[E + 12 >> 2] = I, iQ(EA, A[33709]);
                                        break U;
                                      case 34:
                                      case 41:
                                      case 43:
                                        if (!((0 | (I = A[33709])) <= 0)) {
                                          if (U = n - 32 | 0, n = 0, E = 0, Q = 0, I >>> 0 >= 4) for (o = -4 & I, NA = 0; oI = 2 | Q, kI = 1 | Q, E = (0 | U) == A[134912 + ((CA = 3 | Q) << 6) >> 2] ? CA : (0 | U) == A[134912 + (oI << 6) >> 2] ? oI : (0 | U) == A[134912 + (kI << 6) >> 2] ? kI : (0 | U) == A[134912 + (Q << 6) >> 2] ? Q : E, Q = Q + 4 | 0, (0 | o) != (0 | (NA = NA + 4 | 0)); ) ;
                                          if (o = 3 & I) for (; E = (0 | U) == A[134912 + (Q << 6) >> 2] ? Q : E, Q = Q + 1 | 0, (0 | o) != (0 | (n = n + 1 | 0)); ) ;
                                          (0 | E) <= 0 || (A[33709] = E, I = E);
                                        }
                                        iQ(EA, I);
                                        break U;
                                      case 7:
                                        if (I = PI(U, 88741), Q = PI(U, 88860), (0 | sQ(I, 130176)) != 1) break U;
                                        I = A[EA >> 2], A[EA >> 2] = I + 1, M[I + 189424 | 0] = 91, I = A[EA >> 2], A[EA >> 2] = I + 1, M[I + 189424 | 0] = 91, I = vQ((I = A[EA >> 2]) + 189424 | 0, Q, 800 - I | 0) + A[EA >> 2] | 0, A[EA >> 2] = I + 1, M[I + 189424 | 0] = 93, I = A[EA >> 2], A[EA >> 2] = I + 1, M[I + 189424 | 0] = 93;
                                        break U;
                                      case 35:
                                        A[33692] == 36 && (M[A[EA >> 2] + 189424 | 0] = 0, (E = OA(131104, Q = (I = A[33707]) + 189424 | 0)) && (A[EA >> 2] = HI(E, Q) + I)), I = A[EA >> 2], A[EA >> 2] = I + 1, M[I + 189424 | 0] = 1, I = A[EA >> 2], A[EA >> 2] = I + 1, M[I + 189424 | 0] = 89, A[33692] = 0;
                                        break U;
                                      case 8:
                                        if (!(I = PI(U, 89299))) break U;
                                        M[134824] = 1, Q = A[EA >> 2], A[EA >> 2] = vQ(Q + 189424 | 0, I, 800 - Q | 0) + A[EA >> 2];
                                        break U;
                                      case 13:
                                        M[134824] = 1;
                                        break U;
                                      case 40:
                                      case 45:
                                        M[134824] = 0;
                                        break U;
                                      case 4:
                                        if (!(I = PI(U, 89360))) break U;
                                        if (vQ(AA + 352 | 0, I, 160), G[AA + 352 | 0] && !aI(199328, AA + 352 | 0)) {
                                          M[134760] = 1, M[199328] = 0, Q = 16384;
                                          break D;
                                        }
                                        if ((0 | (I = Cg(AA + 352 | 0))) < 0) break U;
                                        A[AA + 20 >> 2] = I, A[AA + 16 >> 2] = 1, iA(I = AA + 352 | 0, 89460, AA + 16 | 0), YA(A[EA >> 2] + 189424 | 0, I), A[EA >> 2] = A[EA >> 2] + SA(I);
                                        break U;
                                      case 10:
                                        (0 | (Q = A[33709])) <= 18 && (A[33709] = Q + 1), A[(I = 134912 + (Q << 6) | 0) >> 2] = 11, A[I + 4 >> 2] = -1, A[I + 8 >> 2] = -1, A[I + 52 >> 2] = -1, A[I + 56 >> 2] = -1, A[I + 44 >> 2] = -1, A[I + 48 >> 2] = -1, A[I + 36 >> 2] = -1, A[I + 40 >> 2] = -1, A[I + 28 >> 2] = -1, A[I + 32 >> 2] = -1, A[I + 20 >> 2] = -1, A[I + 24 >> 2] = -1, A[I + 12 >> 2] = -1, A[I + 16 >> 2] = -1, A[I + 60 >> 2] = -1;
                                        N: if (I = PI(U, 89514)) {
                                          if (vQ(AA + 352 | 0, I, 160), A[34441]) {
                                            if ((0 | (I = Cg(AA + 352 | 0))) < 0 || 0 | fA[A[34441]](1, I + A[33282] | 0, CA)) break N;
                                            A[AA + 68 >> 2] = I, A[AA + 64 >> 2] = 1, iA(AA + 352 | 0, 89658, AA - -64 | 0);
                                          } else {
                                            if (!CA | G[AA + 352 | 0] == 47 ? I = gU(AA + 352 | 0) : (A[AA + 48 >> 2] = CA, A[AA + 52 >> 2] = AA + 352, iA(I = AA + 96 | 0, 89564, AA + 48 | 0), I = gU(I)), (0 | I) < 0) break N;
                                            A[AA + 36 >> 2] = I, A[AA + 32 >> 2] = 1, iA(AA + 352 | 0, 89623, AA + 32 | 0);
                                          }
                                          I = AA + 352 | 0, YA(A[EA >> 2] + 189424 | 0, I), A[EA >> 2] = A[EA >> 2] + SA(I), A[4 + (134912 + (Q << 6) | 0) >> 2] = 1;
                                        }
                                        if (iQ(EA, A[33709]), (0 | NA) == 47) {
                                          _E(11, EA), Q = 16384;
                                          break D;
                                        }
                                        M[134772] = 1, Q = 16384;
                                        break D;
                                      case 42:
                                        _E(43, EA), M[134772] = 0, Q = 16384;
                                        break D;
                                      case 12:
                                        N: {
                                          if (I = PI(U, 89714)) {
                                            if (Q = 16384, (o = (0 | (I = sQ(I, 130336))) < 0 ? 2 : I) >>> 0 <= 2 && (I = A[EA >> 2], A[AA + 84 >> 2] = o, A[AA + 80 >> 2] = 1, iA(I + 189424 | 0, 89770, AA + 80 | 0), A[EA >> 2] = A[EA >> 2] + 3, Q = 0), I = A[102784 + (o << 2) >> 2], !(E = PI(U, 89907))) break N;
                                            break w;
                                          }
                                          if (Q = 16384, E = PI(U, 89907)) break w;
                                          I = 21;
                                          break F;
                                        }
                                        if (o >>> 0 < 3) break U;
                                        break F;
                                      case 0:
                                        (I = PI(U, 89965)) && (vQ(Q = AA + 352 | 0, I, 160), Cg(Q)), Q = cC(U, 1, A[33708]) ? 147456 : 0;
                                        break D;
                                      case 1:
                                        Q = cC(U, 2, I) ? 147456 : 0;
                                        break D;
                                      case 5:
                                        Q = 0, A[o >> 2] == 6 && (Q = cC(U, 38, I), I = A[33708]), Q = 524358 + (cC(U, 6, I) | Q) | 0;
                                        break D;
                                      case 6:
                                        Q = 0, (0 | (E = A[o >> 2])) == 6 && (Q = cC(U, 38, I), E = A[o >> 2]), (0 | E) == 7 && (Q = cC(U, 39, A[33708]) | Q), Q = 524358 + (Q | cC(U, 7, A[33708])) | 0;
                                        break D;
                                      case 37:
                                        if (Q = 524328, A[o >> 2] != 6) break D;
                                        Q = cC(U, 38, I) + 524328 | 0;
                                        break D;
                                      case 38:
                                        if (Q = 524358, (-2 & A[o >> 2]) != 6) break D;
                                        Q = cC(U, 39, I) + 524358 | 0;
                                        break D;
                                      case 14:
                                      case 46:
                                        break D;
                                      case 3:
                                        break i;
                                      default:
                                        break U;
                                    }
                                    I = PI(U, 88893), Q = PI(U, 88992), E = PI(U, 89153), U = sQ(I, 130272), Q = sQ(Q, 130320), I = UE(E, 0), A[AA >> 2] = 1, E = (0 | I) < 2 ? 193 : I - -64 | 0, Q = (0 | (I = (0 | Q) == 1 ? 19 : U)) == 64 ? E : I, A[AA + 4 >> 2] = Q, iA(I = AA + 352 | 0, 89230, AA), YA(A[EA >> 2] + 189424 | 0, I), I = A[EA >> 2] + SA(I) | 0, A[EA >> 2] = I, A[33707] = I, A[33692] = Q;
                                  }
                                  Q = 0;
                                  break D;
                                }
                                I = UE(E, 1), E = A[33722], f(1, A[33713]), (0 | (I = (0 | (E = (0 | T(I, E)) / 100 << 8)) / (0 | T(A[36429], 10)) | 0)) <= 199 && (I = (0 | E) / (0 | T(A[36428], 10)) | 0), Q = Q || 16384;
                              }
                              E = I >>> 5 | 0, U = I, Q = ((I = (0 | I) > 4095) ? E >>> 0 >= 4095 ? 4095 : E : U) + (I ? 8388608 | Q : Q) | 0;
                            }
                            if (t = AA + 560 | 0, Q) {
                              if (I = A[w + 2148 >> 2] + 189424 | 0, M[0 | I] = 32, M[I + 1 | 0] = 0, !(131072 & Q)) {
                                g = Q;
                                break A;
                              }
                              YA(189360, 134784), g = Q;
                              break A;
                            }
                            A[w + 2156 >> 2] = 32;
                            D: {
                              F: {
                                if (!(Q = A[33285])) {
                                  if (o = 0, I = A[33283], A[I >> 2] == A[I + 4 >> 2]) continue;
                                  if (!(Q = A[33285])) break F;
                                }
                                A[33285] = 0;
                                break D;
                              }
                              A[33284] = A[33284] + 1, I = A[33283], Q = 0 | fA[A[I + 8 >> 2]](I);
                            }
                            A[w + 2152 >> 2] = Q, o = 0;
                            continue;
                          }
                          A[w + 2156 >> 2] = I + 57344;
                        }
                        if (G[134824]) continue;
                        if (E = A[w + 2156 >> 2], !((0 | (I = A[w + 2152 >> 2])) != 10 | A[47268] != -1)) {
                          (0 | (g = XQ(E))) == 16384 ? (I = A[w + 2148 >> 2], L[yA + (I << 1) >> 1] = A[33284] - A[47353], A[_I >> 2] = I, g = 524328, I = HI(A[w + 2156 >> 2], I + 189424 | 0) + A[w + 2148 >> 2] | 0) : I = A[w + 2148 >> 2], M[0 | (I = I + 189424 | 0)] = 32, M[I + 1 | 0] = 0;
                          break A;
                        }
                        E: if ((0 | E) == 1) {
                          if ((0 | I) != 66) {
                            if ((0 | I) != 86) break E;
                            for (I = A[w + 2148 >> 2], A[w + 2148 >> 2] = I + 1, M[I + 189424 | 0] = 0; ; ) {
                              R: {
                                D: {
                                  F: {
                                    if (!(Q = A[33285])) {
                                      if (I = A[33283], A[I >> 2] == A[I + 4 >> 2]) break R;
                                      if (!(Q = A[33285])) break F;
                                    }
                                    A[33285] = 0;
                                    break D;
                                  }
                                  A[33284] = A[33284] + 1, I = A[33283], Q = 0 | fA[A[I + 8 >> 2]](I);
                                }
                                if (A[w + 2156 >> 2] = Q, !(pI(Q) || (0 | (I = A[w + 2148 >> 2])) >= 799)) {
                                  A[w + 2148 >> 2] = I + 1, M[I + 189424 | 0] = A[w + 2156 >> 2];
                                  continue;
                                }
                              }
                              break;
                            }
                            M[A[w + 2148 >> 2] + 189424 | 0] = 0, g = 147456;
                            break A;
                          }
                          Q = A[w + 2148 >> 2], M[0 | (I = Q + 189424 | 0)] = 32, M[I + 1 | 0] = 32, M[I + 2 | 0] = 32, M[I + 3 | 0] = 0, A[w + 2148 >> 2] = Q + 3;
                          R: {
                            D: {
                              F: {
                                w: {
                                  U: {
                                    i: {
                                      if (!(Q = A[33285])) {
                                        if (I = A[33283], A[I >> 2] == A[I + 4 >> 2]) break w;
                                        if (!(Q = A[33285])) break i;
                                      }
                                      A[33285] = 0;
                                      break U;
                                    }
                                    A[33284] = A[33284] + 1, I = A[33283], Q = 0 | fA[A[I + 8 >> 2]](I);
                                  }
                                  if (A[w + 2152 >> 2] = Q, E = 0, (0 | Q) != 48) break F;
                                  break D;
                                }
                                Q = A[w + 2152 >> 2];
                              }
                              if (A[47208] = 0, A[47201] = 1, (0 | Q) == 49) break R;
                              for (E = A[33285], U = 0; ; ) {
                                F: {
                                  if (!E) {
                                    if (I = A[33283], A[I >> 2] == A[I + 4 >> 2]) break F;
                                    Q = A[w + 2152 >> 2];
                                  }
                                  if (!(pI(Q) | U >>> 0 > 58)) {
                                    A[188832 + (U << 2) >> 2] = A[w + 2152 >> 2], (Q = A[33285]) ? (A[33285] = 0, E = 0) : (A[33284] = A[33284] + 1, I = A[33283], Q = 0 | fA[A[I + 8 >> 2]](I), E = A[33285]), U = U + 1 | 0, A[w + 2152 >> 2] = Q, I = A[w + 2148 >> 2], A[w + 2148 >> 2] = I + 1, M[I + 189424 | 0] = 32;
                                    continue;
                                  }
                                }
                                break;
                              }
                              E = 2, A[188832 + (U << 2) >> 2] = 0;
                            }
                            A[47201] = E;
                          }
                          R: {
                            if (!(Q = A[33285])) {
                              if (I = A[33283], A[I >> 2] == A[I + 4 >> 2]) continue;
                              if (!(Q = A[33285])) break R;
                            }
                            A[33285] = 0, A[w + 2152 >> 2] = Q;
                            continue;
                          }
                          A[33284] = A[33284] + 1, I = A[33283], A[w + 2152 >> 2] = fA[A[I + 8 >> 2]](I);
                          continue;
                        }
                        VI = VI + 1 | 0, Q = 0, I = A[V + 340 >> 2];
                        E: if (U = a[I >> 1]) {
                          for (; ; ) {
                            if ((65535 & U) != (0 | E)) {
                              if (U = a[I + ((Q = Q + 2 | 0) << 1) >> 1]) continue;
                              break E;
                            }
                            break;
                          }
                          R: switch (0 | (I = a[I + (Q << 1 | 2) >> 1])) {
                            case 1:
                              continue;
                            case 0:
                              break E;
                            default:
                              break R;
                          }
                          A[w + 2156 >> 2] = I, E = I;
                        }
                        u(E) ? (O = 1, Q = A[w + 2156 >> 2]) : nA ? (A[33285] = A[w + 2152 >> 2], Q = 1328, A[w + 2156 >> 2] = 1328, A[w + 2152 >> 2] = 32, nA = 0) : (0 | (Q = A[w + 2156 >> 2])) != 3851 ? (nA = 0, (0 | Q) != 3405 | A[w + 2152 >> 2] != 8205 || (Q = 3406, A[w + 2156 >> 2] = 3406)) : (Q = 32, A[w + 2156 >> 2] = 32, nA = 0);
                        E: if (mC(Q)) {
                          if (A[V + 8216 >> 2] = A[V + 8216 >> 2] + 1, A[33692] | A[47200] != 2 || mC(BA) || (A[w + 2544 >> 2] = 0, A[w + 2548 >> 2] = 0, A[w + 2304 >> 2] = 84731, !XI(V, w + 2304 | 0, w + 2160 | 0, w + 2544 | 0, 0, 0)) || (kC(V, I = w + 2160 | 0, w + 2544 | 0, -1, 0), FC(Q = I, I = w + 2336 | 0), A[w + 80 >> 2] = I, iA(Q = w + 2240 | 0, 85451, w + 80 | 0), I = A[w + 2148 >> 2], (0 | (Q = SA(Q) + I | 0)) >= 800)) break E;
                          YA(I + 189424 | 0, w + 2240 | 0), A[w + 2148 >> 2] = Q;
                        } else gA(A[w + 2156 >> 2]) && (A[V + 8220 >> 2] = A[V + 8220 >> 2] + 1);
                        if (Q = A[w + 2152 >> 2], I = A[w + 2156 >> 2], A[47204]) if ((0 | o) > 0) o = o - 1 | 0;
                        else {
                          if (!((0 | I) != 91 | (0 | Q) != 91)) {
                            E = 0, o = -1;
                            break I;
                          }
                          o = (0 | I) == 93 && (0 | Q) == 93 ? 2 : o;
                        }
                        if ((0 | I) == 10) {
                          for (E = A[33285], U = 0; ; ) {
                            E: {
                              if (!E) {
                                if (I = A[33283], A[I >> 2] == A[I + 4 >> 2]) break E;
                                Q = A[w + 2152 >> 2];
                              }
                              if (pI(Q)) {
                                U = (A[w + 2152 >> 2] == 10) + U | 0, (Q = A[33285]) ? (A[33285] = 0, E = 0) : (A[33284] = A[33284] + 1, I = A[33283], Q = 0 | fA[A[I + 8 >> 2]](I), E = A[33285]), A[w + 2152 >> 2] = Q;
                                continue;
                              }
                            }
                            break;
                          }
                          if ((0 | U) > 0) {
                            g && pA(I = bI + 189424 | 0, 32, mA(w + 2336 | 0, I)), I = A[w + 2148 >> 2] + 189424 | 0, M[0 | I] = 32, M[I + 1 | 0] = 0, A[33285] = A[w + 2152 >> 2], g = A[47203] ? 524358 : T((0 | U) >= 3 ? 3 : U, 30) + 524328 | 0;
                            break A;
                          }
                          if (I = A[47268] < (0 | VI), VI = 0, !I) {
                            I = A[w + 2148 >> 2] + 189424 | 0, M[0 | I] = 32, M[I + 1 | 0] = 0, A[33285] = A[w + 2152 >> 2], g = 262174;
                            break A;
                          }
                        }
                        if (E = 0, A[33692] | o) break I;
                        if (I = 0, !g) break Q;
                        if (pI(A[w + 2156 >> 2])) {
                          I = g;
                          break Q;
                        }
                        if (MI(A[w + 2156 >> 2]) && K(A[w + 2156 >> 2])) break Q;
                        A[33691] = A[w + 2156 >> 2], M[0 | (I = bI + 189424 | 0)] = 32, M[I + 1 | 0] = 0, A[33285] = A[w + 2152 >> 2];
                        break A;
                      }
                      nA && (A[w + 2148 >> 2] = HI(1328, A[w + 2148 >> 2] + 189424 | 0) + A[w + 2148 >> 2]), g && pA(I = bI + 189424 | 0, 32, mA(w + 2336 | 0, I)), I = A[w + 2148 >> 2] + 189424 | 0, M[0 | I] = 32, M[I + 1 | 0] = 0;
                    }
                    g = 589864;
                    break A;
                  }
                  if (!((0 | (Q = A[w + 2156 >> 2])) != 46 | A[w + 2152 >> 2] != 46)) {
                    Q: {
                      B: {
                        E: {
                          if (!(Q = A[33285])) {
                            if (Q = A[33283], A[Q >> 2] == A[Q + 4 >> 2]) break Q;
                            if (!(Q = A[33285])) break E;
                          }
                          A[33285] = 0;
                          break B;
                        }
                        A[33284] = A[33284] + 1, Q = A[33283], Q = 0 | fA[A[Q + 8 >> 2]](Q);
                      }
                      if (D = Q, (0 | Q) == 46) for (A[w + 2152 >> 2] = 32, A[w + 2156 >> 2] = 8230, D = A[33285]; ; ) {
                        B: {
                          E: {
                            if (!D) {
                              if (Q = A[33283], A[Q >> 2] == A[Q + 4 >> 2]) {
                                D = 46;
                                break Q;
                              }
                              if (!(D = A[33285])) break E;
                            }
                            A[33285] = 0, Q = 0;
                            break B;
                          }
                          A[33284] = A[33284] + 1, Q = A[33283], D = 0 | fA[A[Q + 8 >> 2]](Q), Q = A[33285];
                        }
                        if ((0 | D) != 46) break Q;
                        A[w + 2152 >> 2] = 32, A[w + 2156 >> 2] = 8230, D = Q;
                      }
                    }
                    (0 | (Q = A[w + 2156 >> 2])) != 8230 ? A[33285] = D : (A[w + 2152 >> 2] = D, Q = 8230);
                  }
                  if (NA = 0, (0 | (n = XQ(Q))) != 16384) {
                    Q: if (536621 & n) for (Q = A[33285]; ; ) {
                      if (!Q && (Q = A[33283], A[Q >> 2] == A[Q + 4 >> 2]) || !(536621 & XQ(A[w + 2152 >> 2]))) break Q;
                      (D = A[33285]) ? (A[33285] = 0, Q = 0) : (A[33284] = A[33284] + 1, Q = A[33283], D = 0 | fA[A[Q + 8 >> 2]](Q), Q = A[33285]), A[w + 2152 >> 2] = D;
                    }
                    if (1048576 & n) {
                      A[J + 780 >> 2] = n >>> 12 & 15, nA = 1, o = 0, g = I;
                      continue;
                    }
                    (pI(A[w + 2152 >> 2]) | 32768 & n || oB(A[w + 2152 >> 2]) || (0 | (Q = A[w + 2152 >> 2])) == 63 || (U = 0, A[33285] || (Q = A[33283], U = A[Q >> 2] == A[Q + 4 >> 2], Q = A[w + 2152 >> 2]), U || (0 | Q) == 1)) && (NA = 1);
                  }
                  if ((0 | (Q = A[w + 2156 >> 2])) == 57404 && (A[w + 2156 >> 2] = 60, Q = 60), A[47201]) {
                    g = 0;
                    Q: if (!(1 << (U = NQ(Q)) & 1879048255 && U >>> 0 <= 30)) {
                      if (!((U = NQ(Q)) >>> 0 > 27)) {
                        if (116672 & (o = 1 << U)) break Q;
                        if (134227968 & o) {
                          g = !(1024 & GQ(Q, U));
                          break Q;
                        }
                      }
                      g = 1;
                    }
                    if (!(G[134772] | !g) && (A[47201] == 1 || eA(188832, A[w + 2156 >> 2]))) {
                      A[V + 288 >> 2] = 0, E = A[w + 2156 >> 2], M[w + 2336 | 0] = 0, o = A[w + 2152 >> 2], Q = 0;
                      Q: {
                        B: if (!((0 | (g = A[34064])) <= 0)) for (; ; ) {
                          if ((0 | E) == A[136272 + (Q << 4) >> 2]) {
                            if (A[136276 + (Q << 4) >> 2]) break Q;
                            if (vg(0, Q)) break B;
                            break Q;
                          }
                          if ((0 | g) == (0 | (Q = Q + 1 | 0))) break;
                        }
                        Q = -1;
                      }
                      Q: if ((0 | Q) >= 0) A[w >> 2] = Q, iA(w + 2336 | 0, 86007, w), A[33285] = o;
                      else if ((U = !NA) | (0 | E) != 46 | (0 | o) == 46 || (A[w + 2600 >> 2] = 0, A[w + 2604 >> 2] = 0, A[w + 2540 >> 2] = 86036, !XI(V, w + 2540 | 0, w + 2544 | 0, w + 2600 | 0, 0, 0)) ? Q = ug(w + 2240 | 0, V, E, 0) : (kC(V, Q = w + 2544 | 0, w + 2600 | 0, -1, 0), FC(g = Q, Q = w + 2160 | 0), A[w + 64 >> 2] = Q, iA(Q = w + 2304 | 0, 85451, w - -64 | 0)), g = Q, U | !A[w + 2148 >> 2] | 2 & G[V + 76 | 0]) {
                        for (Q = A[33285], U = 1; ; ) {
                          B: {
                            E: {
                              if (!Q) {
                                if (Q = A[33283], A[Q >> 2] == A[Q + 4 >> 2] | (0 | E) == 60 | (0 | E) != (0 | o)) break B;
                                if (U = U + 1 | 0, o = A[33285]) break E;
                                A[33284] = A[33284] + 1, Q = A[33283], o = 0 | fA[A[Q + 8 >> 2]](Q), Q = A[33285];
                                continue;
                              }
                              if ((0 | E) == 60 | (0 | E) != (0 | o)) break B;
                              o = Q, U = U + 1 | 0;
                            }
                            Q = 0, A[33285] = 0;
                            continue;
                          }
                          break;
                        }
                        if (A[w + 2152 >> 2] = o, NA && (A[33285] = o), (0 | U) == 1) {
                          A[w + 16 >> 2] = g, iA(w + 2336 | 0, 86219, w + 16 | 0);
                          break Q;
                        }
                        if ((0 | U) <= 3) {
                          if (M[w + 2336 | 0] = 0, (0 | (Q = A[50786])) <= 299 && (A[w + 2336 >> 2] = G[86728] | G[86729] << 8 | G[86730] << 16 | G[86731] << 24, L[w + 2340 >> 1] = G[86732] | G[86733] << 8), (0 | U) > 0) {
                            for (; A[w + 32 >> 2] = g, iA(Q = w + 2160 | 0, 86219, w + 32 | 0), o = U >>> 0 > 1, UC(w + 2336 | 0, Q), U = U - 1 | 0, o; ) ;
                            Q = A[50786];
                          }
                          if ((0 | Q) > 299) break Q;
                          A[w + 2160 >> 2] = G[86857] | G[86858] << 8 | G[86859] << 16 | G[86860] << 24, Q = G[86860] | G[86861] << 8 | G[86862] << 16 | G[86863] << 24, M[w + 2163 | 0] = Q, M[w + 2164 | 0] = Q >>> 8, M[w + 2165 | 0] = Q >>> 16, M[w + 2166 | 0] = Q >>> 24, UC(w + 2336 | 0, w + 2160 | 0);
                          break Q;
                        }
                        A[w + 56 >> 2] = g, A[w + 52 >> 2] = U, A[w + 48 >> 2] = g, iA(w + 2336 | 0, 86932, w + 48 | 0);
                      } else A[33691] = E, A[33285] = o, L[w + 2336 >> 1] = 32;
                      if (U = SA(g = w + 2336 | 0), YA((Q = A[w + 2148 >> 2]) + 189424 | 0, g), A[w + 2148 >> 2] = Q + U, NA) {
                        if ((0 | E) == 45) {
                          g = 16384;
                          break A;
                        }
                        if (g = XQ(E), !(2 & G[V + 76 | 0] | (0 | Q) <= 0)) {
                          g = (-32769 & g) == 266270 ? 262148 : (28672 & g) == 4096 ? 266244 : 262148;
                          break A;
                        }
                        if (!(524288 & g)) {
                          g = (28672 & g) == 4096 ? 266244 : 262148;
                          break A;
                        }
                        if ((0 | g) >= 0) break A;
                      }
                      E = A[w + 2156 >> 2];
                    }
                  }
                  if (E | !(2097152 & n) || (Q = YA(A[w + 2148 >> 2] + 189424 | 0, ug(w + 2336 | 0, V, A[w + 2156 >> 2], 1)), G[0 | Q] ? (A[w + 2148 >> 2] = A[w + 2148 >> 2] + SA(Q), n &= -28673, E = A[w + 2156 >> 2]) : E = 0), o = 0, NA) {
                    Q: if (pI(D = A[w + 2152 >> 2])) for (U = A[33285], Q = 0; ; ) {
                      if (!U && (g = A[33283], A[g >> 2] == A[g + 4 >> 2]) || !pI(D)) break Q;
                      Q = ((0 | D) == 10) + Q | 0, (D = A[33285]) ? (A[33285] = 0, U = 0) : (A[33284] = A[33284] + 1, g = A[33283], D = 0 | fA[A[g + 8 >> 2]](g), U = A[33285]);
                    }
                    else Q = 0;
                    g = (0 | (o = A[w + 2156 >> 2])) == 46 && (0 | Q) < 2 ? 4194304 | n : n;
                    Q: {
                      if (!Q) {
                        U = 1, (0 | o) != 44 | (0 | BA) != 46 | A[V + 212 >> 2] != 26741 | CA - 48 >>> 0 >= 10 || D - 48 >>> 0 >= 10 && !K(D) || (A[w + 2156 >> 2] = 1367, U = 0), (0 | (n = A[w + 2156 >> 2])) != 46 | (0 | D) != 39 || (o = U, n = A[33283], (0 | (AA = A[n >> 2])) == A[n + 4 >> 2] ? U = 0 : (U = 0 | fA[A[n + 8 >> 2]](n), A[n >> 2] = AA), n = A[w + 2156 >> 2], U = (0 | U) != 115 & o);
                        B: if ((0 | n) != 46) U &= O;
                        else {
                          E: if (1 & M[V + 106 | 0]) {
                            if (!(BA - 48 >>> 0 < 10) && ((o = BA - 73 | 0) >>> 0 > 15 | !(1 << o & 40969) || !(1 << (o = CA - 73 | 0) & 40969 && o >>> 0 <= 15 || pI(CA))))
                              break E;
                            U = BA - 48 >>> 0 >= 10 ? 0 : !K(D) & (0 | D) != 45 & U;
                          }
                          if (K(D) && (U = G[V + 208 | 0] != 0 & U), O) {
                            n = A[w + 2156 >> 2];
                            break B;
                          }
                          n = 32, A[w + 2156 >> 2] = 32, U = 0;
                        }
                        if (!(!U | (0 | n) != 46 | !A[47203] | (0 | D) != 60)) {
                          bI = A[w + 2148 >> 2], I = g;
                          break Q;
                        }
                        if (!U) break Q;
                      }
                      if (I = A[w + 2148 >> 2] + 189424 | 0, M[0 | I] = 32, M[I + 1 | 0] = 0, A[33285] = D, BA - 48 >>> 0 < 10 && (g = MI(D) ? g : -4194305 & g), (0 | Q) < 2) break A;
                      g = (0 | g) == 536621 ? 536656 : (0 | g) == 532520 ? 532555 : 524358;
                      break A;
                    }
                    (A[33285] || (o = 0, Q = A[33283], A[Q >> 2] != A[Q + 4 >> 2])) && (o = 0, pI(A[w + 2152 >> 2]) && (A[33285] = D));
                  }
                  g = I;
                }
                if (A[33712] != 1) {
                  if ((0 | E) != (0 | (Q = A[w + 2156 >> 2]))) U = A[w + 2148 >> 2], (0 | Q) == 57404 && (Q = 60, A[w + 2156 >> 2] = 60);
                  else {
                    I: {
                      if (oB(E)) Q = 57384;
                      else {
                        if (Q = 45, A[w + 2156 >> 2] == 45) break I;
                        Q = 32;
                      }
                      A[w + 2156 >> 2] = Q;
                    }
                    U = A[w + 2148 >> 2];
                  }
                  A[w + 2148 >> 2] = HI(Q, U + 189424 | 0) + A[w + 2148 >> 2], pI(A[w + 2156 >> 2]) || oB(A[w + 2156 >> 2]) || (I = A[w + 2148 >> 2], L[yA + (I << 1) >> 1] = A[33284] - A[47353], (0 | I) <= (U + 1 | 0) || pA(iE + (U << 1) | 0, 255, I + ~U << 1)), Q = A[w + 2148 >> 2], A[_I >> 2] = Q;
                  I: {
                    Q: {
                      if ((0 | Q) > 725) {
                        if (!MI(A[w + 2156 >> 2])) break Q;
                        Q = A[w + 2148 >> 2];
                      }
                      if ((0 | Q) < 796) continue;
                      break I;
                    }
                    if (Q = A[w + 2148 >> 2], !(A[w + 2156 >> 2] - 48 >>> 0 >= 10) && (0 | Q) < 796) continue;
                  }
                  break;
                }
              }
              M[0 | (I = Q + 189424 | 0)] = 32, M[I + 1 | 0] = 0, A[33285] = A[w + 2152 >> 2], g = 16384;
            }
            t = w + 2608 | 0, nA = g, sC && (I = A[J + 780 >> 2], A[sC >> 2] = I || nA >>> 12 & 7), I = (J + 5184 | 0) + (A[J + 6800 >> 2] << 1) | 0, L[I + 6 >> 1] = 0, L[I + 2 >> 1] = 0, L[I + 4 >> 1] = 32767, n = T(4095 & nA, 8388608 & nA ? 320 : 10), g = 189424;
            A: {
              I: {
                Q: if (I = G[189424]) {
                  for (; ; ) {
                    if (!!(255 & (I = I << 24 >> 24)) & I >>> 0 < 33) {
                      if (I = G[0 | (g = g + 1 | 0)]) continue;
                      break Q;
                    }
                    break;
                  }
                  if (G[0 | g]) break I;
                }
                n = (0 | (Q = n - (I = A[47566]) | 0)) > 0 ? Q : 0, A[47566] = n + I, nA = G[190268] ? 524288 | nA : nA, A[V + 8240 >> 2] = nA;
                break A;
              }
              A[47566] = n, I = G[190268], A[V + 8240 >> 2] = nA, I && (WA = 1, A[47568] = A[47568] + 1, (0 | (I = A[47569])) <= 0 || (I = I - 1 | 0, A[47569] = I, I || (M[190280] = 0)));
            }
            A[49572] = 1, A[47572] = 655360, A[47573] = 0, A[V + 8184 >> 2] = 0, A[V + 8188 >> 2] = 0, I = 0, A[V + 288 >> 2] = 0, A[(Q = V - -8192 | 0) >> 2] = 0, A[Q + 4 >> 2] = 0, A[V + 8200 >> 2] = 0, A[V + 8224 >> 2] = 0, A[V + 8228 >> 2] = 0, A[(Q = V + 8232 | 0) >> 2] = 0, A[Q + 4 >> 2] = 0, M[J + 786 | 0] = 32, L[J + 784 >> 1] = 8192, A[J + 6812 >> 2] = 32, L[J + 1588 >> 1] = 3, A[J + 1584 >> 2] = 0, g = 0;
            A: if (!((0 | (Q = A[J + 6800 >> 2])) <= 0)) {
              for (; ; ) {
                if (L[(J + 5184 | 0) + (g << 1) >> 1] > 0) break A;
                if ((0 | Q) == (0 | (g = g + 1 | 0))) break;
              }
              g = Q;
            }
            if (Q = a[(J + 5184 | 0) + (g << 1) >> 1], L[J + 1592 >> 1] = Q, Q) for (; I = !!(65535 & ~Q) + I | 0, Q = a[(J + 5184 | 0) + ((g = g + 1 | 0) << 1) >> 1]; ) ;
            for (M[J + 1594 | 0] = I, U = 3, yA = 1, g = 0; ; ) {
              CA = A[J + 6808 >> 2], qQ(J + 6808 | 0, (EA = (J + 784 | 0) + U | 0) - 1 | 0), !G[V + 170 | 0] | A[J + 6808 >> 2] - 48 >>> 0 >= 10 || MI(CA) && (A[J + 6808 >> 2] = 97), v ? A[J + 6812 >> 2] = v : S && qQ(J + 6812 | 0, S + 189423 | 0), Q = S;
              A: {
                I: if (g || (Q = mA(J + 6816 | 0, S + 189424 | 0) + S | 0, g = A[J + 6816 >> 2])) {
                  if (O = mA(J + 6804 | 0, I = Q + 189424 | 0), (0 | g) == 1) {
                    if (E = Q - 1 | 0, v = 32, BA = 0, A[J + 6812 >> 2] != 32) {
                      Q = E, I = 32;
                      break I;
                    }
                    S = 0, g = Q;
                    Q: {
                      B: switch (G[0 | I] - 43 | 0) {
                        case 0:
                          g = Q + 1 | 0, S = 64;
                          break Q;
                        case 2:
                          break B;
                        default:
                          break Q;
                      }
                      g = Q + 1 | 0, S = 96;
                    }
                    if (M[0 | (I = g + 189424 | 0)] - 48 >>> 0 >= 10) D = g + 1 | 0, O = -1;
                    else {
                      for (O = VQ(I); g = (I = g) + 1 | 0, M[I + 189424 | 0] - 48 >>> 0 < 10; ) ;
                      D = g, g = I;
                    }
                    if ((0 | (v = A[47350])) > 247) I = 0;
                    else if (I = 0, !((0 | (g = M[g + 189424 | 0])) < 0) && (g = eQ(84868, 255 & g, 14))) {
                      Q = (I = g - 84868 | 0) + 1 | 0, (0 | O) == -1 && (O = A[105536 + (Q << 2) >> 2], S = 0);
                      Q: {
                        B: switch (I - 8 | 0) {
                          case 0:
                            A[49574] = 0, A[49573] = O;
                            break Q;
                          case 4:
                            break B;
                          default:
                            break Q;
                        }
                        (0 | O) >= 3 ? M[199304] = 1 : M[199304] = 0;
                      }
                      I = 1, A[47350] = v + 1, A[198304 + (v << 2) >> 2] = (Q + S | 0) + (O << 8), Q = D;
                    }
                    v = A[J + 6812 >> 2], pA(E + 189424 | 0, 32, Q - E | 0), JC = I + JC | 0, g = 0;
                    break A;
                  }
                  v = 0, (0 | g) == 32 | A[49573] != 36 ? (BA = 0, I = g) : (A[J + 6812 >> 2] != 32 | A[J + 6804 >> 2] != 32 || (A[49573] = 20), BA = 0, I = DE(g, V));
                } else A[J + 6804 >> 2] = 32, BA = 1, v = 0, O = 0, I = 32;
                I: if (ZI) {
                  if (ZI = 1, yA = 8, g = 0, (0 | I) != 93 | A[J + 6804 >> 2] != 93) break I;
                  Q = Q + 1 | 0, I = 32, ZI = 0;
                } else if ((240 & (g = A[49573])) != 64) if (ZI = 0, 16 & g) g = 0;
                else {
                  Q: {
                    B: {
                      E: {
                        R: {
                          if (!((0 | (D = (0 | I) == 8242 || (0 | I) == 8217 || (0 | I) == 146 || (0 | I) == 180 ? 39 : I)) != 8216 & (0 | D) != 63)) if (MI(A[J + 6808 >> 2])) {
                            if (D = I, MI(A[J + 6804 >> 2])) {
                              D = 39;
                              break R;
                            }
                          } else D = I;
                          D: {
                            if ((0 | D) != 1367) {
                              if ((0 | D) == 1328) {
                                c |= 1024, D = 32;
                                break R;
                              }
                              if ((I = D - 44032 | 0) >>> 0 > 11183) break R;
                              if (E = ((g = ((o = 65535 & I) >>> 0) / 28 | 0) >>> 0) % 21 | 0, I = I - T(g, 28) & 65535, D - 50500 >>> 0 > 587) break D;
                              g = I ? I + 4519 | 0 : 0, E = E + 4449 | 0;
                              break B;
                            }
                            c |= 131072, bI = A[J + 6804 >> 2], I = A[J + 6812 >> 2], D = 32;
                            break E;
                          }
                          g = 50500 + (I + T(E, 28) | 0) | 0, E = (o >>> 0) / 588 | 4352;
                          break B;
                        }
                        if (bI = A[J + 6804 >> 2], I = A[J + 6812 >> 2], !((g = D - 12592 | 0) >>> 0 > 51)) {
                          E = 4352 | G[g + 103296 | 0], g = 0;
                          break B;
                        }
                      }
                      w = Q + 189424 | 0;
                      E: if (!((0 | (g = A[V + 212 >> 2])) != 28268 & (0 | g) != 24934 | (0 | D) != 39) && !gA(I) && (mA(J + 6820 | 0, w + 1 | 0), yB(A[J + 6820 >> 2]))) {
                        E = 601, g = 0;
                        R: switch (bI - 110 | 0) {
                          case 6:
                            break B;
                          case 0:
                            break R;
                          default:
                            break E;
                        }
                        if (A[V + 212 >> 2] != 24934) break B;
                        M[0 | w] = 32;
                        break B;
                      }
                      if (A[J + 6824 >> 2] = 32, (0 | (I = A[49897])) > 0) A[49897] = I - 1, g = 0;
                      else {
                        if (!D) {
                          g = 0, E = 0;
                          break Q;
                        }
                        E: {
                          R: {
                            D: {
                              F: if ((NA = A[V + 180 >> 2]) && (o = D, (AA = mC(D)) && (o = DE(D, V)), !mU(NA))) for (; ; ) {
                                A[J + 16 >> 2] = 0, A[J + 624 >> 2] = o, I = mA(J + 16 | 0, NA) + NA | 0;
                                w: if (A[J + 624 >> 2] == A[J + 16 >> 2]) {
                                  if (G[0 | I]) {
                                    for (E = 1, oI = 0, g = w; kI = mA(J + 16 | 0, I), VI = mA(J + 624 | 0, g), _I = DE(A[J + 624 >> 2], V), A[J + 624 >> 2] = _I, g = g + VI | 0, oI = (VI = (0 | _I) == A[J + 16 >> 2]) + oI | 0, E &= VI, G[0 | (I = I + kI | 0)]; ) ;
                                    if (!E) break w;
                                    A[49897] = oI;
                                  }
                                  if (!(I = I + 1 | 0)) break F;
                                  if (8 & G[188788] && (A[J >> 2] = NA, A[J + 4 >> 2] = I, lI(A[47195], 85187, J)), I = mA(J + 6828 | 0, I) + I | 0, G[0 | I]) break D;
                                  g = 0;
                                  break R;
                                }
                                for (; g = I, I = I + 1 | 0, G[0 | g]; ) ;
                                for (; G[0 | (g = (I = g) + 1 | 0)]; ) ;
                                if (mU(NA = I + 2 | 0)) break;
                              }
                              g = 0, E = D;
                              break E;
                            }
                            mA(J + 6824 | 0, I), AA && mC(bI) && (A[J + 6824 >> 2] = MB(A[J + 6824 >> 2])), g = A[J + 6824 >> 2];
                          }
                          E = A[J + 6828 >> 2], c |= 2097152, AA && (E = MB(E));
                        }
                        if ((0 | E) != 8) break B;
                      }
                      E = Q;
                      break A;
                    }
                    g ? A[J + 6804 >> 2] = g : g = 0;
                  }
                  MI(E) || yB(E) || eA(A[V + 336 >> 2], E) || !MI(A[J + 6808 >> 2]) | !(!G[V + 170 | 0] | E - 48 >>> 0 >= 10) & A[J + 6804 >> 2] - 48 >>> 0 >= 10 || (E = 32, wA = 1);
                  Q: {
                    B: {
                      E: {
                        R: {
                          D: {
                            if (A[J + 6808 >> 2] - 48 >>> 0 < 10) {
                              if (E - 48 >>> 0 < 10) {
                                I = Y;
                                break D;
                              }
                              if (1 << (I = E - 32 | 0) & 20481 && I >>> 0 <= 14) break R;
                              wA = 1;
                            } else if (I = 0, A[J + 6812 >> 2] != 44 || (I = Y, (0 | E) != 44)) break D;
                            E = 32;
                            break R;
                          }
                          if ((0 | E) == 91 && ((0 | (D = A[J + 6804 >> 2])) == 2 || (E = 91, (0 | D) == 91 && A[47204])))
                            break E;
                          Y = I;
                        }
                        if (MI(E)) {
                          R: {
                            D: {
                              F: {
                                if (MI(A[J + 6808 >> 2])) {
                                  if (!G[V + 171 | 0] || (I = A[J + 6808 >> 2], !((0 | E) > 12352) && (0 | I) < 12353)) break F;
                                } else I = A[J + 6808 >> 2];
                                if (vI = eA(A[V + 336 >> 2], I) ? vI : 0, (0 | (I = A[J + 6808 >> 2])) != 32 && !eA(A[V + 336 >> 2], I)) {
                                  I = 32, x = oB(A[J + 6808 >> 2]) ? x : 256 | x;
                                  break D;
                                }
                                c = mC(E) ? 2 | c : c, A[J + 6808 >> 2] != 32 | M[EA - 2 | 0] - 48 >>> 0 >= 10 | A[J + 6812 >> 2] - 48 >>> 0 < 10 || (M[(J + 784 | 0) + U | 0] = 32, I = 1588 + (T(kA, 12) + J | 0) | 0, L[I >> 1] = a[I >> 1] + 1, U = U + 1 | 0);
                              }
                              if (I = 32, (0 | E) == 32) break R;
                              if (vI = vI + 1 | 0, (0 | (D = A[V + 600 >> 2])) <= 0) {
                                I = E;
                                break R;
                              }
                              if (!((0 | E) <= 591 & (0 | (o = A[J + 6808 >> 2])) >= (0 | D))) {
                                if ((0 | E) < (0 | D)) {
                                  I = E;
                                  break R;
                                }
                                if ((0 | vI) < 2) {
                                  I = E;
                                  break R;
                                }
                                if (!((0 | o) <= 591)) {
                                  I = E;
                                  break R;
                                }
                              }
                              if (!MI(o)) {
                                I = E;
                                break R;
                              }
                              c |= 16384, x |= 128;
                            }
                            wA = 1;
                          }
                          if (hQ = hQ + 1 | 0, mC(I)) {
                            if (D = DE(I, V), A[V - -64 >> 2]) {
                              I = LQ ? D : 712, g = LQ ? g : D, LQ = 1;
                              break I;
                            }
                            if (K(A[J + 6812 >> 2])) {
                              if (A[J + 6808 >> 2] == 32) {
                                I = D;
                                break I;
                              }
                              if (I = 32, A[V + 212 >> 2] != 26465) break Q;
                              for (E = 85240, o = (J + 784 | 0) + U | 0, O = 0; ; ) {
                                if (w = SA(E), G[0 | (CA = o - w | 0)] == 32 && !IC(CA + 1 | 0, E, w = w - 1 | 0)) {
                                  if ((0 | (E = M[E + w | 0])) == (0 | D)) {
                                    I = D;
                                    break I;
                                  }
                                  if ((0 | E) == 65 && QE(V, D)) {
                                    I = D;
                                    break I;
                                  }
                                }
                                if (E = A[131184 + ((O = O + 1 | 0) << 2) >> 2], (0 | O) == 11) break;
                              }
                              break Q;
                            }
                            if (I = 32, (0 | D) == 32) break I;
                            if (!mC(A[J + 6812 >> 2])) {
                              I = D;
                              break I;
                            }
                            if (!K(A[J + 6804 >> 2])) {
                              I = D;
                              break I;
                            }
                            if (mA(J + 16 | 0, 189424 + (Q + O | 0) | 0), !(A[V + 212 >> 2] != 28268 | (0 | vI) != 2 | (0 | D) != 106 | A[J + 6812 >> 2] != 73)) {
                              I = D;
                              break I;
                            }
                            if (A[J + 6808 >> 2] == 32) {
                              I = D;
                              break I;
                            }
                            if (!MI(A[J + 16 >> 2])) {
                              I = D;
                              break I;
                            }
                            x |= 256, v = 32, wA = 1;
                            break I;
                          }
                          if (!yA) {
                            yA = 0;
                            break I;
                          }
                          if ((0 | vI) < 3) {
                            yA = 0;
                            break I;
                          }
                          if ((0 | I) != 115) {
                            yA = 0;
                            break I;
                          }
                          if (A[V + 212 >> 2] != 25966) {
                            yA = 0;
                            break I;
                          }
                          if (A[J + 6804 >> 2] != 32) {
                            yA = 0;
                            break I;
                          }
                          if (yA |= 4, I = 32, G[(E = U + J | 0) + 783 | 0] != 39) break I;
                          M[E + 783 | 0] = 32;
                          break I;
                        }
                        I = 32;
                        R: {
                          D: {
                            F: {
                              w: {
                                U: switch (E - 39 | 0) {
                                  default:
                                    if ((0 | E) == 95) break I;
                                  case 1:
                                  case 2:
                                  case 3:
                                  case 4:
                                  case 5:
                                    if (E - 48 >>> 0 >= 10 || G[V + 170 | 0] && MI(A[J + 6808 >> 2]) && !((D = A[J + 6804 >> 2]) - 48 >>> 0 < 10 | D - 2406 >>> 0 < 10)) break R;
                                    if ((0 | (o = A[J + 6808 >> 2])) == 32) break D;
                                    if (D = A[J + 6808 >> 2], o - 48 >>> 0 < 10) break F;
                                    if ((0 | (o = D)) == (0 | (D = A[V + 128 >> 2]))) break w;
                                    wA = 1;
                                    break I;
                                  case 6:
                                    if (!yB(A[J + 6812 >> 2]) && MI(A[J + 6804 >> 2])) {
                                      if (A[J + 6808 >> 2] != 32) {
                                        wA = 1;
                                        break I;
                                      }
                                      if (c |= 128, (0 | kA) <= 0) break I;
                                      E = 1572 + (T(kA, 12) + J | 0) | 0, A[E >> 2] = 16384 | A[E >> 2];
                                      break I;
                                    }
                                    if (E = A[J + 6804 >> 2], !(A[J + 6812 >> 2] != 32 | (0 | E) != 32)) {
                                      FI = 4;
                                      break I;
                                    }
                                    if ((0 | E) == 45) {
                                      Q = Q + 1 | 0, FI = 4;
                                      break I;
                                    }
                                    if (I = 45, A[J + 6808 >> 2] != 32 || !MI(CA) || MI(A[J + 6812 >> 2])) break I;
                                    M[(J + 784 | 0) + U | 0] = 32, E = 1588 + (T(kA, 12) + J | 0) | 0, L[E >> 1] = a[E >> 1] + 1, U = U + 1 | 0;
                                    break I;
                                  case 7:
                                    if (A[J + 6808 >> 2] == 46) {
                                      wA = 1;
                                      break I;
                                    }
                                    if (I = 46, (0 | kA) <= 0 || (E = 1572 + (T(kA, 12) + J | 0) | 0, 1 & M[E + 1 | 0]) || !MI(A[J + 6812 >> 2])) break I;
                                    A[E >> 2] = 65536 | A[E >> 2], I = (I = yB(A[J + 6804 >> 2])) || A[J + 6804 >> 2] == 45 ? 32 : 46;
                                    break I;
                                  case 0:
                                    break U;
                                }
                                U: {
                                  if ((0 | (D = A[J + 6812 >> 2])) != 46 || (E = 115, A[J + 6804 >> 2] != 115)) {
                                    if (!u(D)) break U;
                                    E = A[J + 6804 >> 2];
                                  }
                                  if (MI(E)) break B;
                                }
                                if (1 & (E = A[V + 88 >> 2])) {
                                  if (MI(A[J + 6804 >> 2])) break B;
                                  E = A[V + 88 >> 2];
                                }
                                if (2 & E && MI(A[J + 6812 >> 2])) break B;
                                if (!(!eA(A[V + 332 >> 2], A[J + 6812 >> 2]) | (0 | CA) != 32)) {
                                  Q = (A[J + 6804 >> 2] == 32) + Q | 0;
                                  break B;
                                }
                                if (D = (0 | (E = A[J + 6808 >> 2])) != 115 | YQ, YQ = 0, !(1 & D)) break I;
                                YQ = !!(0 | yB(E)), FI = 4;
                                break I;
                              }
                              if ((0 | D) == 44 & Y) {
                                wA = 1;
                                break I;
                              }
                              Y = 1;
                              break R;
                            }
                            if ((0 | D) != 32) break R;
                          }
                          MI(CA) && (MI(A[J + 6812 >> 2]) || (M[(J + 784 | 0) + U | 0] = 32, I = 1588 + (T(kA, 12) + J | 0) | 0, L[I >> 1] = a[I >> 1] + 1, U = U + 1 | 0));
                        }
                        I = E;
                        break I;
                      }
                      ZI = 1, E = Q + 1 | 0, Y = I;
                      break A;
                    }
                    I = 39, YQ = 0;
                    break I;
                  }
                  wA = 1, v = 32;
                }
                else {
                  if (I - 48 >>> 0 < 10) {
                    g = 0, E = (0 | (D = A[49574] + 1 | 0)) > (15 & A[49573]), A[49574] = E ? 0 : D, I = E ? 32 : I, wA |= E, ZI = 0;
                    break I;
                  }
                  g = 0, A[49574] = 0, I = (E = A[J + 6808 >> 2] - 48 >>> 0 < 10) ? 32 : I, wA |= E, ZI = 0;
                }
                if (yB(I)) {
                  if (A[J + 6808 >> 2] == 32) {
                    c |= 262144, E = Q;
                    break A;
                  }
                  if (E = A[J + 6816 >> 2] - 9 >>> 0 < 2, o = 1 & wA) {
                    O = 0;
                    I: if (!((0 | y) > (0 | (I = Q - 1 | 0)))) for (; ; ) {
                      if (!(D = L[(J + 5184 | 0) + (I << 1) >> 1])) break I;
                      if (O = ((0 | D) > 0) + O | 0, !((0 | y) <= (0 | (I = I - 1 | 0)))) break;
                    }
                    M[1594 + (T(kA, 12) + J | 0) | 0] = O;
                  }
                  if (x = E ? 262144 | x : x, M[(J + 784 | 0) + U | 0] = 32, I = U + 1 | 0, !((0 | kA) > 298 || (E = (J + 1584 | 0) + T(kA, 12) | 0, (0 | (D = a[E + 4 >> 1])) >= (0 | I)))) {
                    if ((0 | JC) <= 0 ? y = A[E >> 2] : (y = 198300 + (A[47350] << 2) | 0, A[y >> 2] = 128 | A[y >> 2], JC = 0, y = 64 | A[E >> 2]), w = A[47352], M[E + 6 | 0] = w, A[E >> 2] = y | (hQ ? yA : -2 & yA) | (G[199304] ? 2048 : 0) | c, (0 | w) > 0) {
                      for (; c = (y = J + 784 | 0) + I | 0, y = y + (I = I - 1 | 0) | 0, M[0 | c] = G[0 | y], (0 | I) > (0 | D); ) ;
                      M[0 | y] = 32, L[E + 4 >> 1] = D + 1, I = U + 2 | 0;
                    }
                    D = (J + 1584 | 0) + T(kA = kA + 1 | 0, 12) | 0, A[D >> 2] = 0, L[D + 4 >> 1] = I, U = Q;
                    I: if (!((0 | (E = A[J + 6800 >> 2])) <= (0 | Q))) {
                      for (; ; ) {
                        if (L[(J + 5184 | 0) + (U << 1) >> 1] > 0) break I;
                        if ((0 | E) == (0 | (U = U + 1 | 0))) break;
                      }
                      U = E;
                    }
                    if (O = a[(J + 5184 | 0) + (U << 1) >> 1], L[D + 8 >> 1] = O, hQ = 0, E = 0, O) for (; E = !!(65535 & ~O) + E | 0, O = a[(J + 5184 | 0) + ((U = U + 1 | 0) << 1) >> 1]; ) ;
                    M[D + 10 | 0] = E, A[47352] = 0, yA = 1, c = x, x = 0, LQ = 0;
                  }
                  wA = 0, g = o ? 0 : g, E = o ? S : Q;
                } else (0 | U) > 795 ? (E = Q, Q = y, I = U) : (I = HI(I, (J + 784 | 0) + U | 0) + U | 0, E = Q, Q = y);
                A[47352] < (0 | FI) && (A[47352] = FI), FI = 0, y = Q, U = I;
              }
              if (BA || (S = E, !((0 | U) < 799))) break;
            }
            (0 | JC) <= 0 | kA || (I = 198300 + (A[47350] << 2) | 0, A[I >> 2] = 128 | A[I >> 2], A[J + 1584 >> 2] = 64 | A[J + 1584 >> 2], kA = 1), I = (J + 784 | 0) + U | 0, A[V + 8204 >> 2] = I - 1, Q = 0, M[0 | I] = 0, M[J + 1590 | 0] = 0, M[1590 + (T(kA, 12) + J | 0) | 0] = 8;
            A: if ((0 | kA) <= 0) A[J + 1584 >> 2] = 512 | A[J + 1584 >> 2], U = A[49572];
            else {
              I = kA - 1 | 0;
              I: if ((0 | kA) != 1) for (g = I; ; ) {
                if (!oB(M[a[1588 + (T(g, 12) + J | 0) >> 1] + (J + 784 | 0) | 0])) {
                  Q = g;
                  break I;
                }
                if (D = (0 | g) > 1, g = g - 1 | 0, !D) break;
              }
              if (Q = (J + 1584 | 0) + T(Q, 12) | 0, A[Q >> 2] = 16 | A[Q >> 2], 4194304 & nA && (I = (J + 1584 | 0) + T(I, 12) | 0, 256 & (Q = A[I >> 2]) || (A[I >> 2] = 65536 | Q)), A[J + 1584 >> 2] = 512 | A[J + 1584 >> 2], !((0 | kA) <= 0 | (0 | (U = A[49572])) > 990)) for (D = 3 | (I = J + 624 | 0), o = 2 | I, v = J + 754 | 0, BA = !(4194304 & nA), S = 0, y = 0; ; ) {
                A[47354] = A[47354] + 1;
                I: {
                  if ((0 | (I = A[49827])) <= 0 || (I = I - 1 | 0, A[49827] = I, I)) {
                    if (G[190280]) break I;
                  } else M[190280] = 0;
                  I = a[1588 + (T(S, 12) + J | 0) >> 1] + (J + 784 | 0) | 0;
                  Q: if (!(M[0 | I] - 48 >>> 0 >= 10) && (Q = J + 624 | 0, g = I, A[V + 112 >> 2] != 1227133512)) {
                    for (; ; ) {
                      B: {
                        if (M[0 | g] - 48 >>> 0 < 10) M[0 | Q] = G[0 | g], Q = Q + 1 | 0, g = g + 1 | 0;
                        else {
                          if (A[V + 124 >> 2] != M[0 | g] | G[g + 1 | 0] != 32 || (U = g + 2 | 0, G[g + 3 | 0] == 32 | M[0 | U] - 48 >>> 0 >= 10 | G[g + 4 | 0] == 32)) break B;
                          S = S + 1 | 0, g = U;
                        }
                        if (Q >>> 0 < v >>> 0) continue;
                        break Q;
                      }
                      break;
                    }
                    pA(I + (Q = Q - (Y = J + 624 | 0) | 0) | 0, 32, (g = (U = g - I | 0) - Q | 0) >>> 0 <= U >>> 0 ? g : 0), bA(I, Y, Q);
                  }
                  for (Q = 0; g = Q, Q = Q + 1 | 0, M[I + g | 0] - 48 >>> 0 < 10; ) ;
                  Q: if (g - 5 >>> 0 <= 27) {
                    for (M[J + 626 | 0] = 32, L[J + 624 >> 1] = 8224, G[0 | I] != 48 & A[V + 132 >> 2] >= (0 | g) || (Q = (J + 1584 | 0) + T(S, 12) | 0, A[Q >> 2] = 524288 | A[Q >> 2]), x = (J + 1584 | 0) + T(S, 12) | 0, O = 0, U = D; Q = I, !((I = M[0 | I]) - 48 >>> 0 >= 10 & (0 | I) != A[V + 128 >> 2]) && (M[0 | U] = I, I = U + 1 | 0, Y = g, (0 | (g = g - 1 | 0)) <= 0 ? U = I : A[V + 112 >> 2] >>> g & 1 ? (w = A[x + 4 >> 2], c = (J + 16 | 0) + T(O, 12) | 0, A[c >> 2] = A[x >> 2], A[c + 4 >> 2] = w, A[c + 8 >> 2] = A[x + 8 >> 2], O = O + 1 | 0, (0 | (c = A[V + 124 >> 2])) != 32 && (M[U + 1 | 0] = c, I = U + 2 | 0), M[0 | I] = 32, U = I + 1 | 0, 8 & G[x + 2 | 0] || ((FI = A[V + 112 >> 2]) >>> Y - 2 & 1 && (M[I + 1 | 0] = 48, M[I + 2 | 0] = 48, FI = A[V + 112 >> 2], U = I + 3 | 0), FI >>> Y - 3 & 1 && (M[0 | U] = 48, U = U + 1 | 0))) : U = I, I = Q + 1 | 0, U >>> 0 < v >>> 0); ) ;
                    if (g = A[x + 4 >> 2], I = (J + 16 | 0) + T(O, 12) | 0, A[I >> 2] = A[x >> 2], A[I + 4 >> 2] = g, g = A[x + 20 >> 2], A[I + 16 >> 2] = A[x + 16 >> 2], A[I + 20 >> 2] = g, g = A[x + 12 >> 2], A[I + 8 >> 2] = A[x + 8 >> 2], A[I + 12 >> 2] = g, g = 1, (0 | O) > 0) for (; I = (J + 16 | 0) + T(g, 12) | 0, A[I >> 2] = -262209 & A[I >> 2], (0 | O) >= (0 | (g = g + 1 | 0)); ) ;
                    if (I = G[Q + 4 | 0] | G[Q + 5 | 0] << 8 | G[Q + 6 | 0] << 16 | G[Q + 7 | 0] << 24, g = G[0 | Q] | G[Q + 1 | 0] << 8 | G[Q + 2 | 0] << 16 | G[Q + 3 | 0] << 24, M[0 | U] = g, M[U + 1 | 0] = g >>> 8, M[U + 2 | 0] = g >>> 16, M[U + 3 | 0] = g >>> 24, M[U + 4 | 0] = I, M[U + 5 | 0] = I >>> 8, M[U + 6 | 0] = I >>> 16, M[U + 7 | 0] = I >>> 24, I = G[Q + 12 | 0] | G[Q + 13 | 0] << 8 | G[Q + 14 | 0] << 16 | G[Q + 15 | 0] << 24, Q = G[Q + 8 | 0] | G[Q + 9 | 0] << 8 | G[Q + 10 | 0] << 16 | G[Q + 11 | 0] << 24, M[U + 8 | 0] = Q, M[U + 9 | 0] = Q >>> 8, M[U + 10 | 0] = Q >>> 16, M[U + 11 | 0] = Q >>> 24, M[U + 12 | 0] = I, M[U + 13 | 0] = I >>> 8, M[U + 14 | 0] = I >>> 16, M[U + 15 | 0] = I >>> 24, M[U + 16 | 0] = 0, U >>> 0 <= D >>> 0) break Q;
                    for (I = G[x + 6 | 0], O = 0, g = D; ; ) {
                      for (y = zg(V, g, (J + 16 | 0) + T(O, 12) | 0, 255 & I); I = G[0 | g], g = g + 1 | 0, (0 | I) != 32; ) ;
                      if (I = 0, M[x + 6 | 0] = 0, O = O + 1 | 0, !(g >>> 0 < U >>> 0)) break;
                    }
                  } else {
                    if (A[47352] = 0, y = zg(V, I, Q = (J + 1584 | 0) + T(S, 12) | 0, G[Q + 6 | 0]), (0 | (g = A[47352])) > G[Q + 18 | 0] && (M[Q + 18 | 0] = g, A[47352] = 0), !(!(4096 & y) | G[0 | I] == 32)) for (; pA(J + 624 | 0, 0, 150), A[J + 624 >> 2] = 538976288, A[J + 628 >> 2] = 538976288, M[J + 632 | 0] = 32, zg(V, bA(o, I, g = mA(J + 16 | 0, I)), Q, 0), G[0 | (I = I + g | 0)] != 32; ) ;
                    50331648 & y && (n = (I = BA | (~A[33264] + kA | 0) != (0 | S)) ? n : 10, I | !sC || (A[sC >> 2] = 4, n = 10));
                  }
                  if (128 & y && !((0 | (Q = A[33264])) <= 0)) {
                    if (I = 0, g = Q, U = 3 & Q) for (; Y = (J + 1584 | 0) + T(g + S | 0, 12) | 0, A[Y >> 2] = 1048576 | A[Y >> 2], g = g - 1 | 0, (0 | U) != (0 | (I = I + 1 | 0)); ) ;
                    if (Q >>> 0 >= 4) for (; I = (J + 1584 | 0) + T(g + S | 0, 12) | 0, A[I >> 2] = 1048576 | A[I >> 2], A[(Q = I - 12 | 0) >> 2] = 1048576 | A[Q >> 2], A[(Q = I - 24 | 0) >> 2] = 1048576 | A[Q >> 2], A[(I = I - 36 | 0) >> 2] = 1048576 | A[I >> 2], g = g - 4 | 0; ) ;
                    A[33264] = g;
                  }
                }
                if (U = A[49572], (0 | kA) <= (0 | (S = S + 1 | 0))) break A;
                if (!((0 | U) < 991)) break;
              }
            }
            if ((0 | (g = A[47351])) < (0 | (D = A[47350]))) {
              for (v = A[47202], BA = A[49846], O = A[47352]; ; ) {
                I = (Q = A[198304 + (g << 2) >> 2]) >> 8;
                A: {
                  I: switch ((31 & Q) - 9 | 0) {
                    case 0:
                      v = I;
                      break A;
                    case 4:
                      BA = I;
                      break A;
                    case 3:
                      break I;
                    default:
                      break A;
                  }
                  O = Q >>> 0 >= 256 ? I + O | 0 : 0;
                }
                if (!(!(128 & Q) & (0 | D) > (0 | (g = g + 1 | 0)))) break;
              }
              A[47352] = O, A[47351] = g, A[49846] = BA, A[47202] = v;
            }
            A[49572] = U + 2, A[(I = 190288 + (U << 3) | 0) >> 2] = 589824, L[I + 4 >> 1] = E, A[I + 8 >> 2] = 589824, L[I + 12 >> 1] = E, Q = kA && A[47199] ? n : 10, A[33285] ? I = 0 : (I = A[33283], I = A[I >> 2] == A[I + 4 >> 2]), n = I ? Q : n, S = WA, D = 0, kA = 0, t = o = t - 32192 | 0, A[o + 24 >> 2] = 0, A[o + 28 >> 2] = 0, A[o + 16 >> 2] = 0, A[o + 20 >> 2] = 0, A[o + 8 >> 2] = 0, A[o + 12 >> 2] = 0, A[o >> 2] = 0, A[o + 4 >> 2] = 0, E = A[49572], w = a[190284 + (E << 3) >> 1];
            A: {
              if ((0 | (g = E - 3 | 0)) < 0) I = g;
              else {
                for (; ; ) {
                  if (D = (0 | (Q = 127 & G[(I = 190288 + (g << 3) | 0) + 3 | 0])) < (0 | D) ? D : Q, a[I + 4 >> 1]) I = g;
                  else if (I = -1, Q = (0 | g) > 0, g = g - 1 | 0, Q) continue;
                  break;
                }
                if (D >>> 0 > 3) break A;
              }
              for (; ; ) {
                if ((0 | (I = I - 1 | 0)) < 0) break A;
                if (64 & G[0 | (Q = 190288 + (I << 3) | 0)]) {
                  M[Q + 3 | 0] = 4;
                  break A;
                }
                if (!(G[Q + 3 | 0] < 4)) break;
              }
            }
            if (I = A[V + 292 >> 2], g = 0, (0 | E) <= 0) D = 0;
            else for (Y = -1, D = 0; ; ) {
              Q = I, A[V + 292 >> 2] != (0 | I) && (L[(I = 190288 + (g << 3) | 0) >> 1] = 32 | a[I >> 1]), (0 | D) > 0 && (x = A[(y = 190288 + (g << 3) | 0) + 4 >> 2], A[(U = (I = g - D << 3) + 190288 | 0) >> 2] = A[y >> 2], A[U + 4 >> 2] = x, (0 | Y) != -1 && (L[4 + (I + 190288 | 0) >> 1] = Y), Y = -1);
              A: {
                if (G[2 + ((U = g << 3) + 190288 | 0) | 0] == 21) {
                  if (I = G[(y = U + 190288 | 0) + 7 | 0], 2 & G[0 | y]) break A;
                  I: if ((0 | I) != (0 | Q)) {
                    if (y = G[10 + (U + 190288 | 0) | 0] - 9 | 0) {
                      if ((0 | y) == 12) break I;
                      break A;
                    }
                    if (G[18 + (U + 190288 | 0) | 0] != 21) break A;
                  }
                  (0 | Y) == -1 && (Y = (I = a[4 + (U + 190288 | 0) >> 1]) || -1), D = D + 1 | 0;
                }
                I = Q;
              }
              if ((0 | E) == (0 | (g = g + 1 | 0))) break;
            }
            if (A[49572] = E - D, GC(I), (Q = A[V + 36 >> 2]) && !((0 | (I = (D = A[49572]) - 1 | 0)) < 0)) for (v = 256 & Q, c = 4 & Q, BA = 8 & Q, x = 15 & Q, wA = 16 & Q, WA = 2 & Q, Q = Q >>> 8 & 1, g = 0; ; ) {
              if (U = D, E = g, D = I, (0 | (I = G[(y = (yA = I << 3) + 190288 | 0) + 2 | 0])) == 21) {
                A: {
                  I: {
                    if ((0 | (g = U - 2 | 0)) >= 0) for (; ; ) {
                      if (G[2 + ((I = g << 3) + 190288 | 0) | 0] == 21) break I;
                      if (I = (0 | g) > 0, g = g - 1 | 0, !I) break;
                    }
                    I = A[V + 292 >> 2];
                    break A;
                  }
                  I = G[7 + (I + 190288 | 0) | 0];
                }
                GC(I), I = G[y + 2 | 0];
              }
              if (g = E, (I = A[144464 + ((255 & I) << 2) >> 2]) && (g = Q, !(32 & G[0 | y]))) {
                g = G[I + 11 | 0], Y = 0, WA && ((0 | (U = G[0 | I])) != 118 & (0 | U) != 82 || (E = wA ? 0 : E, Y = 1));
                A: {
                  I: {
                    Q: {
                      B: switch ((U = 253 & g) - 4 | 0) {
                        case 1:
                          break Q;
                        case 0:
                          break B;
                        default:
                          break I;
                      }
                      if (x && (g = 1, !E) || (0 | (g = E)) != 2 || (g = 2, !(I = G[I + 13 | 0]))) break A;
                      M[y + 2 | 0] = I;
                      break A;
                    }
                    if (x && (g = 2, !E) || (0 | (g = E)) != 1 || (g = 1, !(I = G[I + 13 | 0]))) break A;
                    M[y + 2 | 0] = I;
                    break A;
                  }
                  g = 0, BA && (g = U ? E : 0);
                }
                g = I = Y ? 0 : g, a[4 + (yA + 190288 | 0) >> 1] && (g = I = c ? 0 : I, v && (g = I || 1));
              }
              if (!((0 | (I = D - 1 | 0)) >= 0)) break;
            }
            if (GC(A[V + 292 >> 2]), A[49572] <= 0) wA = -2, g = 0;
            else {
              for (g = -1, E = 0, y = 0, BA = 0; ; ) {
                I = y << 3, (0 | g) != -1 && (L[4 + (I + 190288 | 0) >> 1] = g), G[(Y = I + 190288 | 0) + 2 | 0] == 21 && GC(G[7 + (I + 190288 | 0) | 0]), x = A[49572];
                A: {
                  if (!(32 & G[0 | (U = I + 190288 | 0)])) {
                    E = (0 | (Q = x - 1 | 0)) > (0 | y) ? A[144464 + (G[10 + (I + 190288 | 0) | 0] << 2) >> 2] : E, !(a[U + 12 >> 1] | (0 | Q) == (0 | y)) && (O = 0, G[E + 11 | 0] | !E) || (O = 1), D = G[Y + 2 | 0];
                    I: if (!((0 | (wA = A[49848])) <= 0)) for (Q = I + 190288 | 0, g = 0; ; ) {
                      if (v = T(g, 3), G[v + 199408 | 0] == (255 & D) && !((c = G[2 + (v + 199408 | 0) | 0]) & (1 ^ O) | (4 & G[Q + 3 | 0] ? 2 & c : 0) | (a[Q + 4 >> 1] ? 0 : 4 & c))) {
                        if (D = G[1 + (v + 199408 | 0) | 0], M[Y + 2 | 0] = D, !(2 & G[A[144464 + (D << 2) >> 2] + 4 | 0]) | G[Q + 3 | 0] < 2) break I;
                        M[Q + 3 | 0] = 0;
                        break I;
                      }
                      if ((0 | wA) == (0 | (g = g + 1 | 0))) break;
                    }
                    if (!(255 & D)) {
                      g = a[4 + (I + 190288 | 0) >> 1];
                      break A;
                    }
                  }
                  g = A[U + 4 >> 2], I = (o + 32 | 0) + (BA << 5) | 0, Q = A[U >> 2], A[I >> 2] = Q, A[I + 4 >> 2] = g, Q = A[144464 + (Q >>> 14 & 1020) >> 2], A[I + 8 >> 2] = Q, M[I + 17 | 0] = G[Q + 11 | 0], BA = BA + 1 | 0, g = -1;
                }
                if (!((0 | BA) < 1e3 & (0 | x) > (0 | (y = y + 1 | 0)))) break;
              }
              if (D = 0, g = 0, !((0 | (wA = BA - 2 | 0)) <= 0)) for (; ; ) {
                A: if (a[4 + ((o + 32 | 0) + (D << 5) | 0) >> 1]) {
                  for (Q = (0 | D) > (0 | wA) ? D : wA, g = 0, I = D; ; ) {
                    if ((0 | I) != (0 | Q)) {
                      if (g = (0 | g) > (0 | (U = G[3 + ((E = o + 32 | 0) + (I << 5) | 0) | 0])) ? g : U, !a[4 + (E + ((I = I + 1 | 0) << 5) | 0) >> 1]) continue;
                    } else I = Q;
                    break;
                  }
                  if ((0 | I) <= (0 | D)) break A;
                  if (Q = ~D + I | 0, E = 0, U = I - D & 7) for (; M[6 + ((o + 32 | 0) + (D << 5) | 0) | 0] = g, D = D + 1 | 0, (0 | U) != (0 | (E = E + 1 | 0)); ) ;
                  if (Q >>> 0 < 7) break A;
                  for (; M[(Q = (o + 32 | 0) + (D << 5) | 0) + 6 | 0] = g, M[Q + 38 | 0] = g, M[Q + 70 | 0] = g, M[Q + 102 | 0] = g, M[Q + 134 | 0] = g, M[Q + 166 | 0] = g, M[Q + 198 | 0] = g, M[Q + 230 | 0] = g, (0 | (D = D + 8 | 0)) != (0 | I); ) ;
                } else I = D + 1 | 0;
                if (D = I, !((0 | wA) > (0 | I))) break;
              }
            }
            for (A[o + 40 >> 2] = A[36125], GC(A[V + 292 >> 2]), CA = (0 | g) < 4, y = 1, v = 1, x = 0, Q = 0, g = 0, WA = 0; ; ) {
              A: {
                I: {
                  Q: {
                    B: {
                      if (Q) {
                        if (E = (I = o + 32 | 0) + ((Y = g - 1 | 0) << 5) | 0, x = G[2 + (I + (g << 5) | 0) | 0], (0 | Y) > 0) {
                          if (I = y - (g = (0 | y) > 0) | 0, Y >>> 0 >= (D = g ? y : 2) >>> 0) for (; U = (g = (o + 32 | 0) + (D << 5) | 0) - 32 | 0, y = A[g + 12 >> 2], A[U + 8 >> 2] = A[g + 8 >> 2], A[U + 12 >> 2] = y, y = A[g + 4 >> 2], A[U >> 2] = A[g >> 2], A[U + 4 >> 2] = y, y = A[g + 28 >> 2], A[U + 24 >> 2] = A[g + 24 >> 2], A[U + 28 >> 2] = y, y = A[g + 20 >> 2], A[U + 16 >> 2] = A[g + 16 >> 2], A[U + 20 >> 2] = y, (0 | Y) >= (0 | (D = D + 1 | 0)); ) ;
                          y = I;
                        }
                        O = A[144464 + (x << 2) >> 2], A[E >> 2] = 0, A[E + 4 >> 2] = 0, A[E + 24 >> 2] = 0, A[E + 28 >> 2] = 0, A[E + 16 >> 2] = 0, A[E + 20 >> 2] = 0, A[E + 8 >> 2] = 0, A[E + 12 >> 2] = 0, M[E + 2 | 0] = Q, I = A[144464 + (Q << 2) >> 2], A[E + 8 >> 2] = I, x = E;
                      } else {
                        if ((0 | g) >= (0 | wA) | (0 | WA) >= 997) break B;
                        U = G[(E = (D = g << 5) + (o + 32 | 0) | 0) + 2 | 0], I = A[144464 + (U << 2) >> 2], A[E + 8 >> 2] = I, Y = a[E + 4 >> 1], (0 | U) == 21 && GC(G[7 + (D + (o + 32 | 0) | 0) | 0]), y = Y ? g : y, O = A[144464 + (G[E + 34 | 0] << 2) >> 2], A[E + 40 >> 2] = O, Y = g;
                      }
                      if (!I) {
                        Q = 0, g = Y + 1 | 0;
                        continue;
                      }
                      if (AC(V, 256, E, o + 32040 | 0, o), (0 | (g = A[o + 32052 >> 2])) > 0 && (D = (o + 32 | 0) + (Y << 5) | 0, O = A[144464 + (g << 2) >> 2], A[D + 40 >> 2] = O, M[D + 34 | 0] = g, M[D + 49 | 0] = G[O + 11 | 0]), g = 0, Q) Q = I;
                      else if ((0 | (D = A[o + 32056 >> 2])) <= 0) Q = I;
                      else {
                        Q = A[144464 + (D << 2) >> 2], A[E + 8 >> 2] = Q, g = G[E + 2 | 0], M[E + 2 | 0] = D, D = a[E >> 1];
                        E: if (G[Q + 11 | 0] != 2) L[E >> 1] = 65531 & D;
                        else {
                          if (L[E >> 1] = 4 | D, G[I + 11 | 0] == 2) break E;
                          M[E + 3 | 0] = 0;
                        }
                        AC(V, 256, E, o + 32040 | 0, o);
                      }
                      if ((0 | (U = A[o + 32048 >> 2])) <= 0) D = Q;
                      else {
                        if (D = A[144464 + (U << 2) >> 2], M[E + 2 | 0] = U, A[E + 8 >> 2] = D, I = G[D + 11 | 0], BA = 1, (0 | U) == 1) {
                          yA = (0 | I) == 2;
                          break I;
                        }
                        U = a[E >> 1];
                        E: if ((0 | I) != 2) L[E >> 1] = 65531 & U;
                        else {
                          if (L[E >> 1] = 4 | U, G[Q + 11 | 0] == 2) break E;
                          M[E + 3 | 0] = 0;
                        }
                        AC(V, 256, E, o + 32040 | 0, o);
                      }
                      if (yA = 0, (0 | (I = G[D + 11 | 0])) != 2) {
                        BA = 0;
                        break I;
                      }
                      if (yA = 1, BA = 0, I = 2, G[E + 3 | 0] > 1) {
                        kA = 0;
                        break I;
                      }
                      U = E + 3 | 0, kA = kA + 1 | 0, Q = E;
                      E: {
                        if (8 & (c = A[V + 12 >> 2])) {
                          for (; ; ) {
                            R: switch (c = Q, Q = Q + 32 | 0, G[c + 49 | 0]) {
                              case 0:
                                break I;
                              case 2:
                                break R;
                              default:
                                continue;
                            }
                            break;
                          }
                          if (G[0 | (Q = c + 35 | 0)] > 1) break I;
                          if (G[E + 6 | 0] <= 3 && (M[0 | U] = 0), G[c + 38 | 0] < 4) break E;
                          break I;
                        }
                        if (1 & kA | (0 | kA) < 2) break I;
                        if (2 & c) break Q;
                        if (CA) Q = U;
                        else if (Q = U, a[E + 36 >> 1]) break Q;
                      }
                      M[0 | Q] = 0;
                      break I;
                    }
                    A[36423] = WA + 2, L[(I = 145840 + (WA << 5) | 0) >> 1] = 0, M[I + 2 | 0] = 9, M[I + 20 | 0] = 2, A[I + 12 >> 2] = n, L[I + 4 >> 1] = w, M[I + 17 | 0] = 0, M[I + 18 | 0] = 0, A[I + 8 >> 2] = A[36125], L[I + 32 >> 1] = 0, M[I + 34 | 0] = 9, M[I + 52 | 0] = 0, A[I + 44 >> 2] = 0, L[I + 36 >> 1] = 0, M[I + 49 | 0] = 0, M[I + 50 | 0] = 0, A[I + 40 >> 2] = A[36126], GC(A[V + 292 >> 2]), t = o + 32192 | 0;
                    break A;
                  }
                  kA = 1;
                }
                if (!(8 & (Q = a[E + 32 >> 1])) | (0 | Y) <= 0 || (U = G[O + 11 | 0]) >>> 0 > 15 | !(1 << U & 457) || (g = G[O + 10 | 0], L[E + 32 >> 1] = 8 ^ Q), AA = a[E + 36 >> 1]) {
                  I: if (Q = A[V + 4 >> 2]) {
                    Q: switch (0 | I) {
                      default:
                        g = 512 & Q ? 11 : g;
                        break;
                      case 0:
                        break I;
                      case 2:
                        break Q;
                    }
                    if (G[O + 11 | 0] == 2) {
                      (U = 12 & Q) && (g = (0 | U) != 12 ? 23 : 11);
                      Q: if (yA) {
                        B: switch (3 & Q) {
                          case 2:
                            g = 10;
                            break Q;
                          case 0:
                            break Q;
                          default:
                            break B;
                        }
                        g = 23;
                      }
                      G[E + 35 | 0] < 4 || (g = 256 & Q ? 10 : g);
                    }
                  }
                  if (!((0 | E) == (0 | x) | (0 | WA) <= 0)) {
                    I: {
                      Q: {
                        B: switch (0 | (Q = 7 & A[V >> 2])) {
                          case 0:
                            break I;
                          case 1:
                            break B;
                          default:
                            break Q;
                        }
                        if (g - 12 >>> 0 > 4294967293) break I;
                      }
                      g = G[Q + 101916 | 0];
                    }
                    g = A[47205] > 0 ? 24 : g;
                  }
                }
                if (A[E + 72 >> 2] = A[144464 + (G[E + 66 | 0] << 2) >> 2], Q = A[o + 32060 >> 2], Q = g || Q || g, !BA) {
                  M[(U = (c = WA << 5) + 145840 | 0) + 17 | 0] = I, A[U + 8 >> 2] = D, M[U + 16 | 0] = 0, L[U >> 1] = a[E >> 1], M[U + 3 | 0] = 15 & G[E + 3 | 0], M[U + 6 | 0] = G[E + 6 | 0], g = G[E + 7 | 0], L[U + 4 >> 1] = 0, M[U + 7 | 0] = g, BA = G[D + 10 | 0], M[U + 2 | 0] = BA;
                  I: if (g = a[E + 4 >> 1]) {
                    if (L[U + 4 >> 1] = g, S = 1 & S ? 5 : 1, M[(E = c + 145840 | 0) + 20 | 0] = S, g = v, v = 0, !g) {
                      S = 0;
                      break I;
                    }
                    M[E + 20 | 0] = 8 | S, S = 0;
                  } else M[20 + (c + 145840 | 0) | 0] = 0;
                  A[(g = c + 145840 | 0) + 12 >> 2] = A[o + 32084 >> 2] << 1, !AA | (0 | BA) != 24 || (0 | (E = A[47205])) <= 0 || (A[U + 8 >> 2] = A[36126], A[g + 12 >> 2] = T(E, 14)), (1 << I & 428 ? I >>> 0 <= 8 : 0) | 2 & G[D + 7 | 0] && (A[g + 12 >> 2] = 128, M[U + 16 | 0] = 0), M[(I = c + 145840 | 0) + 21 | 0] = 255, M[I + 22 | 0] = 255, L[I + 18 >> 1] = 5120, WA = WA + 1 | 0;
                }
                g = Y + 1 | 0;
                continue;
              }
              break;
            }
            L[88922] = 1, A[44462] = 0, JC && (L[145776 + (A[36423] << 5) >> 1] = 2, I = 198304 + (A[47350] << 2) | 0, A[I >> 2] = 128, A[(I = I - 4 | 0) >> 2] = 128 | A[I >> 2]), M[190268] = nA >>> 19 & 1, sB && (A[sB >> 2] = nA << 14 >> 31 & 189360);
          }
          t = J + 6832 | 0, wA = A[47192], yA = A[C + 12 >> 2], Q = 0, U = 0, y = 0, c = 0, x = 0, FI = 0, n = 0, t = w = t - 6e3 | 0;
          A: if (!((0 | (E = (WA = A[36423]) - 1 | 0)) <= 0)) {
            for (; M[2 + (w + T(Q, 6) | 0) | 0] = 0, 4 & G[(I = Q << 5) + 145840 | 0] ? (g = w + T(c, 6) | 0, M[g + 1 | 0] = 0, I = I + 145840 | 0, M[g + 3 | 0] = G[I + 49 | 0], I = G[I + 3 | 0], M[0 | g] = I, c = c + 1 | 0, FI = (I >>> 0 > 3) + FI | 0) : G[A[8 + (I + 145840 | 0) >> 2] + 10 | 0] != 27 | (0 | c) <= 0 || (I = (w + T(c, 6) | 0) - 4 | 0, M[0 | I] = 4 | G[0 | I]), (0 | E) != (0 | (Q = Q + 1 | 0)); ) ;
            if (M[w + T(c, 6) | 0] = 0, c) if (A[wA + 148 >> 2] == 1) {
              if (!((0 | WA) <= 0)) {
                for (I = -2 & WA, g = 1 & WA, Q = 145840; y = G[Q + 17 | 0] == 2 && G[Q + 3 | 0] > 3 ? U : y, y = G[Q + 49 | 0] == 2 && G[Q + 35 | 0] > 3 ? 1 | U : y, Q = Q - -64 | 0, U = U + 2 | 0, (0 | I) != (0 | (x = x + 2 | 0)); ) ;
                !g | G[Q + 17 | 0] != 2 || (y = G[Q + 3 | 0] > 3 ? U : y);
              }
              if (M[(D = (I = y << 5) + 145840 | 0) + 3 | 0] = 7, A[wA + 212 >> 2] == 30313 && (G[(I = I + 145840 | 0) + 7 | 0] || (M[I + 7 | 0] = EC(55), WA = A[36423])), !((0 | WA) <= 0)) {
                for (x = 0, Q = 145840, I = 145840, U = Y = A[36125], E = 0, v = 1; ; ) {
                  if (G[Q + 17 | 0] ? S = A[36125] : (S = A[36125], Y = (g = G[A[Q + 8 >> 2] + 14 | 0] > 50) ? S : Y, v |= g), g = G[Q + 20 | 0] ? S : U, 4 & G[0 | Q]) {
                    S = G[Q + 7 | 0], U = A[144464 + (S << 2) >> 2];
                    I: {
                      if ((0 | (c = A[wA + 212 >> 2])) == 6840683) {
                        if (A[g >> 2] != 49 || (c = A[U >> 2] - 49 | 0) >>> 0 > 5 | !(1 << c & 41)) break I;
                        M[I + 7 | 0] = EC(50), c = A[wA + 212 >> 2];
                      }
                      if (!((0 | c) != 6516078 & (0 | c) != 31336)) {
                        c = 0, S || (E = EC(1 & (c = E | v) ? 13621 : 12593), M[Q + 7 | 0] = E, U = A[144464 + (E << 2) >> 2]), (0 | y) != (0 | x) | (1024 | A[U >> 2]) != 13621 || (M[D + 3 | 0] = 6), A[Y >> 2] == 3420466 && (M[I + 7 | 0] = EC(A[U >> 2] == 3420466 ? 13619 : 12594));
                        Q: {
                          if (A[g >> 2] == 12597) {
                            if ((0 | (S = A[U >> 2])) != 12597) break Q;
                            M[I + 7 | 0] = EC(13109);
                          }
                          S = A[U >> 2];
                        }
                        E = c, (0 | S) == 12593 && ((0 | (S = A[Y >> 2])) == 13621 && (M[Q + 7 | 0] = EC(12850), S = A[Y >> 2]), (0 | S) == 13619 && (M[Q + 7 | 0] = EC(13107), S = A[Y >> 2]), (0 | S) == 3420466 && (M[Q + 7 | 0] = EC(13364)), M[Q + 3 | 0] = 0);
                      }
                    }
                    v = 0, Y = U, I = Q;
                  } else U = g;
                  if (Q = Q + 32 | 0, !((0 | (x = x + 1 | 0)) < (0 | (g = A[36423])))) break;
                }
                if (U = 0, Q = 145840, !((0 | g) <= 0)) for (; 4 & G[0 | Q] && ((I = G[Q + 7 | 0]) || (M[Q + 7 | 0] = 17, I = 17), I = A[144464 + (I << 2) >> 2], M[Q + 21 | 0] = G[I + 12 | 0], M[Q + 22 | 0] = G[I + 13 | 0]), Q = Q + 32 | 0, (0 | g) != (0 | (U = U + 1 | 0)); ) ;
              }
            } else {
              if (I = A[wA + 152 >> 2], I = wA + T(CA = (0 | I) > 7 ? 1 : I, 6) | 0, V = G[0 | (CA ? I + 637 : wA + 157)], nA = G[0 | (CA ? 636 + (I + yA | 0) : 156 + (wA + yA | 0))], M[133068] = (0 | yA) == 4, !((0 | c) <= 0)) {
                for (BA = c - 1 | 0, O = yA - 1 >>> 0 > 1, g = 0, E = 0; ; ) {
                  J = w + T(E, 6) | 0, n = ((I = G[0 | J]) << 24 >> 24 > 3) + n | 0;
                  I: if ((0 | I) == 6) {
                    I = E - 3 | 0, Q = E;
                    Q: {
                      for (; ; ) {
                        if ((0 | Q) <= (0 | g) | (0 | I) >= (0 | Q)) break Q;
                        B: switch (D = w + T(Q = Q - 1 | 0, 6) | 0, G[0 | D] - 4 | 0) {
                          case 2:
                            break Q;
                          case 0:
                            break B;
                          default:
                            continue;
                        }
                        break;
                      }
                      M[0 | D] = 3;
                    }
                    Q = E;
                    Q: {
                      for (; ; ) {
                        if ((0 | c) <= (0 | (Q = Q + 1 | 0))) break Q;
                        B: switch (G[w + T(Q, 6) | 0] - 4 | 0) {
                          case 0:
                            break Q;
                          case 2:
                            break B;
                          default:
                            continue;
                        }
                        break;
                      }
                      M[J + 2 | 0] = 2, M[0 | J] = 5, I = g;
                      break I;
                    }
                    if (G[0 | J] == 6) {
                      M[J + 2 | 0] = 2, o = 0;
                      Q: if ((0 | c) <= (0 | (I = E + 1 | 0))) D = E, ZI = 0;
                      else if (ZI = 1, (0 | (U = M[w + T(I, 6) | 0])) > 4) D = E;
                      else {
                        for (y = (FI - n | 0) > 1, D = E; ; ) {
                          if (Q = I, (255 & U) == 4 && (I = y + 1 | 0, y = 1, !((0 | I) <= 1))) {
                            I = Q;
                            break Q;
                          }
                          if (ZI = (0 | c) > (0 | (I = Q + 1 | 0)), (0 | I) == (0 | c)) break;
                          if (D = Q, (0 | (U = M[w + T(I, 6) | 0])) > 4) break Q;
                        }
                        D = BA, I = c;
                      }
                      U = -1, S = 0, y = 0, v = -1, x = 0, Y = -1;
                      Q: {
                        if ((0 | (Q = g)) < (0 | I)) {
                          for (; U = (AA = (0 | (Y = M[w + T(Q, 6) | 0])) > 3) && (0 | U) < 0 ? Q - g | 0 : U, o = (x = (0 | y) > (0 | Y)) ? o : (0 | y) < (0 | Y) ? Q : S, v = AA ? Q : v, S = x ? S : Q, AA = (0 | Q) != (0 | D), y = x ? y : Y, Q = Q + 1 | 0, AA; ) ;
                          if (x = S, Y = v, (0 | U) >= 0) break Q;
                        }
                        U = I, S = x, v = Y;
                      }
                      A[33269] = D - S, A[33268] = U, A[33270] = S, A[33271] = o;
                      Q: if (G[133068]) A[33270] = I, A[33271] = I;
                      else if ((0 | v) >= 0) {
                        if ((0 | I) != (0 | c)) break Q;
                        M[w + T(v, 6) | 0] = 7;
                      } else M[w + T(S, 6) | 0] = 7;
                      Xg(w, CA, g, I, nA), !ZI & !!(0 | yA) || (nA = O ? G[wA + 156 | 0] : G[wA + 157 | 0]);
                    } else I = g;
                  } else I = g;
                  if ((0 | I) >= (0 | E)) g = I;
                  else if (4 & G[J + 2 | 0]) {
                    for (g = E + 1 | 0, U = -1, v = 0, S = 0, y = 0, Q = I, o = -1; U = (x = (0 | (D = M[w + T(Q, 6) | 0])) > 3) && (0 | U) < 0 ? Q - I | 0 : U, v = (Y = (0 | D) < (0 | y)) ? v : (0 | D) > (0 | y) ? Q : S, o = x ? Q : o, S = Y ? S : Q, x = (0 | Q) != (0 | E), y = Y ? y : D, Q = Q + 1 | 0, x; ) ;
                    A[33269] = E - S, A[33270] = S, A[33271] = v, A[33268] = (0 | U) < 0 ? g : U, G[133068] ? (A[33270] = g, A[33271] = g) : (0 | o) >= 0 ? M[w + T(o, 6) | 0] = 7 : M[w + T(S, 6) | 0] = 7, Xg(w, CA, I, g, V);
                  } else g = I;
                  if ((0 | c) == (0 | (E = E + 1 | 0))) break;
                }
                if (!((0 | g) >= (0 | c))) {
                  for (U = -1, v = 0, S = 0, y = 0, Q = g, o = -1; U = (D = (0 | (I = M[w + T(Q, 6) | 0])) > 3) && (0 | U) < 0 ? Q - g | 0 : U, v = (E = (0 | I) < (0 | y)) ? v : (0 | I) > (0 | y) ? Q : S, o = D ? Q : o, S = E ? S : Q, y = E ? y : I, (0 | c) != (0 | (Q = Q + 1 | 0)); ) ;
                  A[33270] = S, A[33271] = v, A[33269] = ~S + c, A[33268] = (0 | U) < 0 ? c : U, G[133068] ? (A[33270] = c, A[33271] = c) : (0 | o) >= 0 ? M[w + T(o, 6) | 0] = 7 : M[w + T(S, 6) | 0] = 7, Xg(w, CA, g, c, nA);
                }
              }
              if ((0 | WA) <= 0) break A;
              for (Q = 0, x = 0; ; ) {
                if (Y = g = (D = Q << 5) + 145840 | 0, I = w + T(x, 6) | 0, U = G[0 | I], M[g + 3 | 0] = U, 4 & G[0 | g]) {
                  E = D + 145840 | 0, g = G[I + 4 | 0], M[E + 21 | 0] = g, y = G[I + 5 | 0], M[E + 16 | 0] = 0, M[E + 22 | 0] = y;
                  I: {
                    if (1 & (S = G[I + 2 | 0])) I = 2;
                    else {
                      if (U >>> 0 < 6) break I;
                      I = G[I + 1 | 0];
                    }
                    M[E + 16 | 0] = I;
                  }
                  g >>> 0 <= (255 & y) >>> 0 ? (I = y, y = g) : (M[E + 21 | 0] = y, M[E + 22 | 0] = g, I = g), (g = G[7 + (D + 145840 | 0) | 0]) && (I = (255 & I) + (255 & y) >>> 1 | 0, g = A[144464 + (g << 2) >> 2], M[E + 22 | 0] = I + G[g + 13 | 0], M[E + 21 | 0] = I + G[g + 12 | 0]), 2 & S && (M[Y + 3 | 0] = 8 | U), x = x + 1 | 0;
                }
                if ((0 | WA) == (0 | (Q = Q + 1 | 0))) break;
              }
            }
          }
          if (t = w + 6e3 | 0, x = A[47192], Q = 0, O = 0, o = 0, n = 0, t = w = t - 160 | 0, A[36423] >= 2) for (yA = A[30450], U = 1; ; ) {
            if (U = (I = U) + 1 | 0, c = G[(E = (y = I << 5) + 145840 | 0) + 3 | 0], 2 & (S = a[E >> 1])) {
              for (; (31 & (D = A[198304 + (n << 2) >> 2])) == 2 && (OB(127 & D, D >>> 8 | 0), A[36432] = 110, A[36433] = 100, A[36434] = 450, A[36430] = 5, S = A[50786], Y = A[32972], (0 | (g = A[Y + 84 >> 2])) > 0 && (S = (0 | T(g, S)) / 100 | 0), v = G[((0 | (g = (0 | S) >= 359 ? 359 : S)) <= 80 ? 80 : g) + 101856 | 0], g = (0 | (g = (0 | S) >= 450 ? 450 : S)) > 399 ? 6 : (0 | g) > 379 ? 7 : v, A[32526] = (0 | T(g, A[Y + 72 >> 2])) / 256, A[32527] = (0 | T(g, A[Y + 76 >> 2])) / 256, A[32528] = (0 | T(g, A[Y + 80 >> 2])) / 256, g >>> 0 > 7 || (Y = g - 1 | 0, A[32528] = Y, A[32526] = g, A[32527] = Y)), n = n + 1 | 0, !(128 & D); ) ;
              S = a[E >> 1];
            }
            Y = U << 5, v = I - 1 | 0, g = 7 & c;
            A: {
              I: {
                Q: {
                  B: {
                    E: {
                      R: {
                        D: {
                          F: {
                            w: {
                              U: switch (nA = G[17 + (y + 145840 | 0) | 0], 0 | (D = 4 & S ? 2 : nA)) {
                                case 2:
                                  break E;
                                case 3:
                                case 8:
                                  break R;
                                case 5:
                                  break D;
                                case 6:
                                case 7:
                                  break F;
                                case 4:
                                  break w;
                                case 0:
                                  break U;
                                default:
                                  break A;
                              }
                              Q = 0;
                              break A;
                            }
                            if ((0 | (I = G[17 + (145840 + (v << 5) | 0) | 0])) != 6 ? (g = (0 | I) == 4 ? 60 : A[34063] > 0 || g >>> 0 < 4 ? 48 : 60, M[18 + (y + 145840 | 0) | 0] = g) : (g = 25, M[18 + (y + 145840 | 0) | 0] = 25), !(16 & G[0 | x]) | !G[20 + (y + 145840 | 0) | 0] || (M[18 + (y + 145840 | 0) | 0] = 60, g = 60), 64 & G[A[8 + (y + 145840 | 0) >> 2] + 6 | 0] && (g = g + 30 | 0, M[18 + (y + 145840 | 0) | 0] = g), Q = 0, !(8 & S)) break A;
                            M[18 + (y + 145840 | 0) | 0] = G[x + 164 | 0] + g;
                            break A;
                          }
                          !(E = G[(I = y + 145840 | 0) + 20 | 0]) | 1 & M[A[I + 8 >> 2] + 7 | 0] & G[17 + (145840 + (v << 5) | 0) | 0] == 2 || (M[18 + (y + 145840 | 0) | 0] = 15), g = G[17 + (Y + 145840 | 0) | 0], 8 & G[A[8 + (y + 145840 | 0) >> 2] + 4 | 0] | g | G[17 + (145840 + (v << 5) | 0) | 0] != 8 || (M[18 + (y + 145840 | 0) | 0] = 25), 64 & G[A[8 + ((I = v << 5) + 145840 | 0) >> 2] + 5 | 0] && (M[18 + (y + 145840 | 0) | 0] = 30), !E | !(16 & A[x >> 2]) || (M[18 + (y + 145840 | 0) | 0] = 30);
                          F: if (G[20 + (Y + 145840 | 0) | 0] | !(32 & G[A[8 + (y + 145840 | 0) >> 2] + 4 | 0]) | (0 | g) != 4) A[12 + (y + 145840 | 0) >> 2] = 256;
                          else {
                            if (E = y + 145840 | 0, G[17 + (I + 145840 | 0) | 0] == 2) {
                              A[E + 12 >> 2] = 200;
                              break F;
                            }
                            A[E + 12 >> 2] = 150;
                          }
                          if ((0 | D) != 7 || (O |= (0 | g) == 2, (254 & G[17 + (I + 145840 | 0) | 0]) != 2)) break A;
                          A[12 + (y + 145840 | 0) >> 2] = A[12 + (I + 145840 | 0) >> 2] + 255 >>> 1;
                          break A;
                        }
                        (254 & (g = G[17 + ((I = v << 5) + 145840 | 0) | 0])) == 6 | (0 | g) == 3 | 32 & A[A[8 + (I + 145840 | 0) >> 2] + 4 >> 2] && (M[18 + (y + 145840 | 0) | 0] = 30);
                        D: if ((254 & (E = G[17 + (Y + 145840 | 0) | 0])) == 2) {
                          O = G[20 + (Y + 145840 | 0) | 0] && (0 | E) != 2 ? O : 1, M[(E = y + 145840 | 0) + 18 | 0] = 40, c = 0;
                          F: {
                            w: switch (0 | g) {
                              case 0:
                                if ((I = A[12 + (I + 145840 | 0) >> 2]) >>> 0 > 39) break F;
                                c = 40 - I | 0;
                                break F;
                              case 2:
                                break F;
                              default:
                                break w;
                            }
                            if (G[20 + (y + 145840 | 0) | 0]) break D;
                            c = 20;
                            w: switch (g - 3 | 0) {
                              case 1:
                                if (c = 0, !(8 & G[A[8 + (I + 145840 | 0) >> 2] + 4 | 0])) break F;
                                break D;
                              case 0:
                                break F;
                              case 5:
                                break w;
                              default:
                                break D;
                            }
                            c = 12;
                          }
                          M[E + 18 | 0] = c;
                        }
                        if (!(16 & G[0 | x]) | !G[20 + (y + 145840 | 0) | 0] || G[(I = y + 145840 | 0) + 18 | 0] > 19) break A;
                        M[I + 18 | 0] = 20;
                        break A;
                      }
                      E = G[x + 296 | 0], D = g = y + 145840 | 0, A[g + 12 >> 2] = 256, M[g + 19 | 0] = E;
                      R: if (G[g + 20 | 0]) {
                        S = 25;
                        D: switch (G[17 + (145840 + (v << 5) | 0) | 0] - 2 | 0) {
                          case 0:
                            if (S = 12, 1 & M[A[8 + (y + 145840 | 0) >> 2] + 7 | 0]) break R;
                            break;
                          case 1:
                            break D;
                          default:
                            break R;
                        }
                        M[18 + (y + 145840 | 0) | 0] = S;
                      }
                      if ((0 | (Y = G[17 + (Y + 145840 | 0) | 0])) == 2) {
                        o = 1;
                        break A;
                      }
                      if (M[(E = y + 145840 | 0) + 22 | 0] = Q, (254 & G[17 + ((g = v << 5) + 145840 | 0) | 0]) == 2) break B;
                      if (g = Q, (0 | (D = A[36423])) <= (0 | I)) break I;
                      for (; ; ) {
                        if (G[17 + ((g = I << 5) + 145840 | 0) | 0] == 2) {
                          g = G[22 + (g + 145840 | 0) | 0], M[E + 22 | 0] = g;
                          break I;
                        }
                        if ((0 | D) == (0 | (I = I + 1 | 0))) break;
                      }
                      break Q;
                    }
                    if (wA = y + 145840 | 0, BA = g ^ g >>> 0 < 2, g = (WA = 8 & c) ? 25 : G[296 + (BA + x | 0) | 0] - o | 0, M[wA + 19 | 0] = g, (A[36423] - 3 | 0) > (0 | I) || (0 | (D = 255 & g)) <= (0 | (g = A[x + 52 >> 2])) || (M[wA + 19 | 0] = g), g = 0, c = 0, !(S = G[E + 52 | 0])) for (; D = A[E + 40 >> 2], c = G[E + 49 | 0] == 2 ? (~A[D + 4 >> 2] >>> 20 & 1) + c | 0 : c, g = G[D + 10 | 0] == 27 ? 2 : g, D = E, E = E + 32 | 0, !(S = G[D + 84 | 0]); ) ;
                    D = wA + 96 | 0, I = (CA = I + 2 << 5) + 145840 | 0, A[34063] = c, J = G[A[E + 40 >> 2] + 10 | 0], Y = Y + 145840 | 0, G[17 + (CA + 145840 | 0) | 0] | G[A[Y + 8 >> 2] + 10 | 0] != 23 ? (E = D, D = I, I = Y) : E = y + 145968 | 0, Y = G[A[D + 8 >> 2] + 15 | 0];
                    E: if (c) Y = G[A[x + 96 >> 2] + (G[A[I + 8 >> 2] + 15 | 0] + T(Y, 10) | 0) | 0], G[I + 17 | 0] != 8 | (254 & G[D + 17 | 0]) != 4 || (Y = 8 & G[A[E + 8 >> 2] + 4 | 0] ? Y - 15 | 0 : Y);
                    else {
                      if (V = A[x + 100 >> 2], CA = G[A[I + 8 >> 2] + 15 | 0], E = G[I + 20 | 0], Y = G[V + (CA + T(E | G[D + 20 | 0] ? (0 | Y) == 1 : Y, 10) | 0) | 0], !E | !(32 & G[0 | x])) break E;
                      Y = G[1 + (V + T(CA, 10) | 0) | 0] + Y >>> 1 | 0;
                    }
                    E = S >>> 1 | 0, CA = !c, S = (0 | (Y = (0 | T(A[130104 + (c ? (0 | c) == 1 ? 4 : 8 : 0) >> 2], Y)) / 128 | 0)) <= 8 ? 8 : Y;
                    E: if ((0 | BA) != 7) WA && (S = A[x + 200 >> 2] + S | 0);
                    else {
                      if (S = (Y = A[x + 200 >> 2]) + S | 0, !WA) break E;
                      S = ((0 | Y) / 2 | 0) + S | 0;
                    }
                    Y = E & CA | (0 | J) == 27, (E = a[304 + (x + (BA << 1) | 0) >> 1]) || (E = a[x + 316 >> 1]), S = T(E << 16 >> 16, S), (c = G[(E = y + 145840 | 0) + 7 | 0]) && (BA = G[A[144464 + (c << 2) >> 2] + 14 | 0]) && (S = (0 | T(S, BA)) / 100 | 0), (Y | (0 | g) == 2) == 1 && (2097152 & (g = A[x + 12 >> 2]) || (S = (0 | T(262144 & g ? 282 : 256 + ((280 - (G[A[8 + (y + 145840 | 0) >> 2] + 14 | 0] << 1) | 0) / 3 | 0) & 65535, S)) / 256 | 0)), BA = y + 145840 | 0, g = T(A[32526], A[x + 196 >> 2]), WA = (0 | nA) != 2 ? 256 : (0 | ((0 | g) > (0 | S) ? S : g)) / 128 | 0, A[BA + 12 >> 2] = WA, (g = G[BA + 16 | 0]) >>> 0 >= 19 && (rU(84371, 28, yA), M[BA + 16 | 0] = 0, c = G[E + 7 | 0], g = 0), S = g + 1 | 0, (g = 255 & c) ? (xA(g, w + 8 | 0), g = XU(A[w + 132 >> 2])) : g = A[129280 + ((255 & S) << 2) >> 2], Y = y + 145840 | 0, 1 & (o | O) && (E = (y = v << 5) + 145840 | 0, o = G[0 | g], g = G[Y + 21 | 0], g = ((0 | T(o, G[Y + 22 | 0] - g | 0)) / 256 | 0) + g | 0, M[E + 22 | 0] = g, Q = (g - (Q = (0 | g) == 255 ? 255 : Q) | 0) > 16 ? g - 16 | 0 : Q, M[E + 21 | 0] = Q, E = 0, (0 | Q) < (0 | g) && (M[BA + 16 | 0] = S, E = 2), A[(Q = y + 145840 | 0) + 12 >> 2] = WA, M[Q + 16 | 0] = E, g = G[wA + 19 | 0], M[Q + 19 | 0] = G[Q + 17 | 0] != 3 && g >>> 0 > 18 ? 18 : g), Q = (0 | nA) != 2, E = -2 & (g = a[I >> 1]), L[I >> 1] = E;
                    E: {
                      R: {
                        D: switch (G[I + 17 | 0] - 3 | 0) {
                          case 5:
                            if (G[D + 17 | 0] == 2) break E;
                            E = 1 | g;
                            break R;
                          case 0:
                            break D;
                          default:
                            break E;
                        }
                        if (L[I >> 1] = 1 | g, G[D + 17 | 0] != 2 && A[A[I + 8 >> 2] >> 2] != 12146) break E;
                      }
                      L[I >> 1] = E;
                    }
                    Q ? (0 | (I = Q << 4)) <= ((g = G[Y + 22 | 0]) - (E = G[Y + 21 | 0]) | 0) || (E = (0 | (I = g - I | 0)) > 0 ? I : 0, M[Y + 21 | 0] = E) : (g = G[Y + 22 | 0], E = G[Y + 21 | 0]), I = 255 & E, Q = ((0 | T(G[A[129280 + (G[BA + 16 | 0] << 2) >> 2] + 127 | 0], g - I | 0)) / 256 | 0) + I | 0, o = 0, O = 0;
                    break A;
                  }
                  E = A[12 + (g + 145840 | 0) >> 2], A[D + 12 >> 2] = E, (0 | nA) == 3 && (E = A[32526], A[D + 12 >> 2] = E), g = Q;
                  B: switch (Y - 5 | 0) {
                    case 0:
                      A[D + 12 >> 2] = (T(E, 160) >>> 0) / 100;
                      break Q;
                    case 2:
                      break B;
                    default:
                      break I;
                  }
                  A[D + 12 >> 2] = (T(E, 120) >>> 0) / 100;
                }
                g = Q;
              }
              O = 0, M[(I = y + 145840 | 0) + 16 | 0] = 0, E = I, g = (I = 255 & g) - 16 | 0, M[E + 21 | 0] = I >>> 0 >= g >>> 0 ? g : 0;
            }
            if (!(A[36423] > (0 | U))) break;
          }
          if (t = w + 160 | 0, 15 & (E = A[47197]) | A[36456]) {
            I = 0, D = 0, t = g = t - 80 | 0;
            A: if ((Q = A[33222]) || (A[33223] = 500, Q = KI(500), A[33222] = Q, Q)) {
              if (!((A[36423] - 2 | 0) < 2)) {
                for (I = E >> 8, x = 128 & E ? 0 : I, c = I & E << 24 >> 31, Y = 2 & E, E = g + 32 | 1, y = 1; ; ) {
                  if (nQ(g, A[(U = (v = y << 5) + 145840 | 0) + 8 >> 2], U, Y, g + 72 | 0), I = g + 32 | 0, (13 & (Q = G[U + 20 | 0])) == 1 && (M[g + 32 | 0] = 32, I = E), !x | (0 | x) != 32 & !!(0 | Q) | y >>> 0 < 2 || (mA(g + 76 | 0, g), A[g + 76 >> 2] - 880 >>> 0 > 4294967103 || (I = HI(x, I) + I | 0)), 4 & G[0 | U] && ((Q = G[3 + (v + 145840 | 0) | 0]) >>> 0 < 2 || (Q = Q >>> 0 >= 5 ? 5 : Q, Q = Y ? Q >>> 0 > 3 ? 712 : 716 : M[Q + 94144 | 0], A[g + 76 >> 2] = Q, I = HI(Q, I) + I | 0)), S = 0, A[g + 72 >> 2] = 0, G[0 | (Q = g)]) for (; Q = mA(g + 76 | 0, Q) + Q | 0, A[g + 72 >> 2] >>> S - 1 & 1 | !c | (0 | S) <= 0 || (o = A[g + 76 >> 2]) - 880 >>> 0 > 4294967103 || FU(o) && (I = HI(c, I) + I | 0), S = S + 1 | 0, I = HI(A[g + 76 >> 2], I) + I | 0, G[0 | Q]; ) ;
                  if (G[A[U + 8 >> 2] + 10 | 0] != 21 && (8 & (Q = a[U >> 1]) && (I = nQ(I, A[36128], U, Y, 0), Q = a[U >> 1]), !(4 & Q) | G[17 + (v + 145840 | 0) | 0] == 2 || (I = nQ(I, A[36136], U, Y, 0)), (Q = G[7 + (v + 145840 | 0) | 0]) && (I = nQ(I, A[144464 + (Q << 2) >> 2], U, Y, 0))), (I = (U = I - (g + 32 | 0) | 0) + D | 0) >>> 0 < UA[33223]) Q = A[33222];
                  else {
                    if (Q = I + 500 | 0, A[33223] = Q, !(Q = gC(A[33222], Q))) {
                      A[33223] = 0, Q = 86135;
                      break A;
                    }
                    A[33222] = Q;
                  }
                  if (M[(S = U) + (U = g + 32 | 0) | 0] = 0, YA(Q + D | 0, U), D = I, !((0 | (y = y + 1 | 0)) < (A[36423] - 2 | 0))) break;
                }
                if (!Q) {
                  Q = 86135;
                  break A;
                }
              }
              M[I + Q | 0] = 0;
            } else A[33223] = 0, Q = 86135;
            t = g + 80 | 0, 15 & G[188788] && (A[C >> 2] = Q, lI(A[47195], 84367, C)), (I = A[36456]) && fA[0 | I](Q);
          }
          G[190280] ? (A[36423] = 0, I = 1) : (qB(0), (I = A[C + 8 >> 2]) ? (t = Q = t + -64 | 0, sI(Q, I, 60), EB(Q, 1), g = 0, (I = $C(Q, 0)) && (g = I, G[202976] && (g = $C(202976, 2))), t = Q - -64 | 0, A[44468] = g) : g = A[44468], I = 1, g && (Q = A[32972], (g = KI(1344)) && (Q = bA(g, Q, 1344), g = 216192 + (A[50758] << 4) | 0, A[g >> 2] = 11, A[g + 8 >> 2] = Q, Q = A[50758] + 1 | 0, A[50758] = (0 | Q) <= 169 ? Q : 0), A[44468] = 0));
        } else I = 0, M[190280] = 0;
        else I = 0, A[36423] = 0, A[50758] = 0, A[50757] = 0;
        return t = C + 16 | 0, I;
      }
      function GQ(I, C) {
        var Q = 0, g = 0, E = 0, U = 0;
        Q = 1073741825;
        A: {
          I: {
            Q: {
              B: {
                E: {
                  R: {
                    D: {
                      F: {
                        w: {
                          U: {
                            i: {
                              N: {
                                o: {
                                  s: {
                                    y: {
                                      l: {
                                        j: {
                                          k: {
                                            P: {
                                              f: {
                                                r: {
                                                  c: {
                                                    Y: {
                                                      d: {
                                                        q: {
                                                          IA: {
                                                            p: {
                                                              _: {
                                                                T: {
                                                                  RA: {
                                                                    t: {
                                                                      qA: {
                                                                        m: {
                                                                          G: {
                                                                            J: {
                                                                              QA: {
                                                                                h: {
                                                                                  gA: {
                                                                                    S: {
                                                                                      g: {
                                                                                        CI: {
                                                                                          CA: {
                                                                                            C: {
                                                                                              iA: {
                                                                                                W: {
                                                                                                  yA: {
                                                                                                    sA: {
                                                                                                      QI: {
                                                                                                        MA: {
                                                                                                          x: {
                                                                                                            VA: {
                                                                                                              K: {
                                                                                                                bA: {
                                                                                                                  $: {
                                                                                                                    jA: {
                                                                                                                      SA: {
                                                                                                                        TA: {
                                                                                                                          xA: {
                                                                                                                            PA: {
                                                                                                                              fA: {
                                                                                                                                pA: {
                                                                                                                                  tA: {
                                                                                                                                    WA: {
                                                                                                                                      hA: {
                                                                                                                                        gI: {
                                                                                                                                          BA: {
                                                                                                                                            OA: {
                                                                                                                                              zA: {
                                                                                                                                                LA: {
                                                                                                                                                  XA: {
                                                                                                                                                    n: {
                                                                                                                                                      YA: {
                                                                                                                                                        O: {
                                                                                                                                                          yI: {
                                                                                                                                                            oI: {
                                                                                                                                                              NI: {
                                                                                                                                                                sI: {
                                                                                                                                                                  jI: {
                                                                                                                                                                    SI: {
                                                                                                                                                                      hI: {
                                                                                                                                                                        LI: {
                                                                                                                                                                          YI: {
                                                                                                                                                                            KI: {
                                                                                                                                                                              lI: {
                                                                                                                                                                                kI: {
                                                                                                                                                                                  cI: {
                                                                                                                                                                                    HI: {
                                                                                                                                                                                      aI: {
                                                                                                                                                                                        ZI: {
                                                                                                                                                                                          nI: {
                                                                                                                                                                                            dI: {
                                                                                                                                                                                              qI: {
                                                                                                                                                                                                VI: {
                                                                                                                                                                                                  bI: {
                                                                                                                                                                                                    TI: {
                                                                                                                                                                                                      xI: {
                                                                                                                                                                                                        PI: {
                                                                                                                                                                                                          fI: {
                                                                                                                                                                                                            pI: {
                                                                                                                                                                                                              tI: {
                                                                                                                                                                                                                WI: {
                                                                                                                                                                                                                  OI: {
                                                                                                                                                                                                                    zI: switch (0 | C) {
                                                                                                                                                                                                                      case 0:
                                                                                                                                                                                                                        C = I - 9 >>> 0 < 5 ? 1073741825 : 0, C = (I = (0 | I) == 133) ? 1073741825 : C;
                                                                                                                                                                                                                        break q;
                                                                                                                                                                                                                      case 1:
                                                                                                                                                                                                                        M: {
                                                                                                                                                                                                                          V: {
                                                                                                                                                                                                                            Z: {
                                                                                                                                                                                                                              b: {
                                                                                                                                                                                                                                H: {
                                                                                                                                                                                                                                  a: {
                                                                                                                                                                                                                                    e: {
                                                                                                                                                                                                                                      z: {
                                                                                                                                                                                                                                        v: {
                                                                                                                                                                                                                                          AA: {
                                                                                                                                                                                                                                            EA: {
                                                                                                                                                                                                                                              wA: {
                                                                                                                                                                                                                                                GA: {
                                                                                                                                                                                                                                                  JA: {
                                                                                                                                                                                                                                                    if ((0 | (C = -256 & I)) <= 2047) {
                                                                                                                                                                                                                                                      if (!C) break JA;
                                                                                                                                                                                                                                                      if ((0 | C) == 1536) break GA;
                                                                                                                                                                                                                                                      if ((0 | C) != 1792 || (Q = 0, g = 1, (0 | I) != 1807)) break M;
                                                                                                                                                                                                                                                      break C;
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                    if ((0 | C) <= 69631) {
                                                                                                                                                                                                                                                      if ((0 | C) == 2048) break wA;
                                                                                                                                                                                                                                                      if ((0 | C) != 8192) break M;
                                                                                                                                                                                                                                                      switch (Q = 131076, I - 8204 | 0) {
                                                                                                                                                                                                                                                        case 1:
                                                                                                                                                                                                                                                          break EA;
                                                                                                                                                                                                                                                        case 0:
                                                                                                                                                                                                                                                          break C;
                                                                                                                                                                                                                                                        default:
                                                                                                                                                                                                                                                          break AA;
                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                    if ((0 | C) == 69632) break v;
                                                                                                                                                                                                                                                    if ((0 | C) != 917504) break M;
                                                                                                                                                                                                                                                    switch (Q = 8388608, I - 917505 | 0) {
                                                                                                                                                                                                                                                      case 62:
                                                                                                                                                                                                                                                        break Z;
                                                                                                                                                                                                                                                      case 58:
                                                                                                                                                                                                                                                        break b;
                                                                                                                                                                                                                                                      case 57:
                                                                                                                                                                                                                                                        break H;
                                                                                                                                                                                                                                                      case 45:
                                                                                                                                                                                                                                                        break a;
                                                                                                                                                                                                                                                      case 43:
                                                                                                                                                                                                                                                        break e;
                                                                                                                                                                                                                                                      case 32:
                                                                                                                                                                                                                                                        break z;
                                                                                                                                                                                                                                                      case 0:
                                                                                                                                                                                                                                                        break C;
                                                                                                                                                                                                                                                      default:
                                                                                                                                                                                                                                                        break V;
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                  if (Q = 16, (0 | I) != 173) break M;
                                                                                                                                                                                                                                                  break C;
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                if (Q = 0, g = 1, I - 1536 >>> 0 < 6) break C;
                                                                                                                                                                                                                                                g = (0 | I) == 1757, C = (I = (0 | I) == 1564) ? 2 : 0;
                                                                                                                                                                                                                                                break d;
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                              if (Q = 0, g = 1, (0 | I) != 2274) break M;
                                                                                                                                                                                                                                              break C;
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            return QA = 64, 4;
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                          if (Q = 1073741826, (-2 & I) == 8206) break C;
                                                                                                                                                                                                                                          if (I - 8234 >>> 0 < 5) return QA = 0, 2;
                                                                                                                                                                                                                                          if (Q = 128, I - 8289 >>> 0 < 4 || (Q = 2, I - 8294 >>> 0 < 4)) break C;
                                                                                                                                                                                                                                          if (Q = 8388608, I - 8298 >>> 0 >= 6) break M;
                                                                                                                                                                                                                                          break C;
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                        C = !(I - 69821 & -17), I = 0;
                                                                                                                                                                                                                                        break Y;
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                      QA = 536870976;
                                                                                                                                                                                                                                      break c;
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    QA = 268435520;
                                                                                                                                                                                                                                    break c;
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                  QA = -2147483584;
                                                                                                                                                                                                                                  break c;
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                QA = 134217792;
                                                                                                                                                                                                                                break c;
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                              QA = 67108928;
                                                                                                                                                                                                                              break c;
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            QA = 1073741888;
                                                                                                                                                                                                                            break c;
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                          if (Q = 131072, g = 64, I - 917536 >>> 0 < 96) break C;
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                        break g;
                                                                                                                                                                                                                      case 2:
                                                                                                                                                                                                                        M: {
                                                                                                                                                                                                                          V: {
                                                                                                                                                                                                                            Z: {
                                                                                                                                                                                                                              b: {
                                                                                                                                                                                                                                H: {
                                                                                                                                                                                                                                  a: {
                                                                                                                                                                                                                                    e: {
                                                                                                                                                                                                                                      if ((0 | (C = -256 & I)) <= 130303) {
                                                                                                                                                                                                                                        if ((0 | C) <= 127743) {
                                                                                                                                                                                                                                          if ((0 | C) <= 64767) {
                                                                                                                                                                                                                                            if ((0 | C) <= 11007) {
                                                                                                                                                                                                                                              if ((0 | C) == 8192) break e;
                                                                                                                                                                                                                                              if ((0 | C) != 9216) break M;
                                                                                                                                                                                                                                              if (I - 9255 >>> 0 >= 25) break a;
                                                                                                                                                                                                                                              break S;
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            if ((0 | C) == 11008) break H;
                                                                                                                                                                                                                                            if ((0 | C) != 11776 || (Q = -2147483648, I - 11845 >>> 0 >= 59)) break M;
                                                                                                                                                                                                                                            break C;
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                          if ((0 | C) <= 126975) {
                                                                                                                                                                                                                                            if ((0 | C) == 64768) break b;
                                                                                                                                                                                                                                            if ((0 | C) != 65280 || (Q = 4194304, I - 65520 >>> 0 >= 9)) break M;
                                                                                                                                                                                                                                            break C;
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                          if ((0 | C) == 126976 | (0 | C) == 127232 | (0 | C) == 127488) break CA;
                                                                                                                                                                                                                                          break M;
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                        if ((0 | C) <= 129023) {
                                                                                                                                                                                                                                          if ((0 | C) <= 128255) {
                                                                                                                                                                                                                                            if ((0 | C) == 127744 | (0 | C) == 128e3) break CA;
                                                                                                                                                                                                                                            break M;
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                          if ((0 | C) == 128256 | (0 | C) == 128512 | (0 | C) == 128768) break CA;
                                                                                                                                                                                                                                          break M;
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                        if ((0 | C) <= 129535) {
                                                                                                                                                                                                                                          if ((0 | C) == 129024 | (0 | C) == 129280) break CA;
                                                                                                                                                                                                                                          break M;
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                        if ((0 | C) == 129536 | (0 | C) == 129792 | (0 | C) == 130048) break CA;
                                                                                                                                                                                                                                        break M;
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                      if ((0 | C) <= 919039) {
                                                                                                                                                                                                                                        if ((0 | C) <= 917759) {
                                                                                                                                                                                                                                          if ((0 | C) <= 130815) {
                                                                                                                                                                                                                                            if ((0 | C) == 130304) break CA;
                                                                                                                                                                                                                                            if ((0 | C) != 130560) break M;
                                                                                                                                                                                                                                            break CA;
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                          if ((0 | C) == 130816) break CA;
                                                                                                                                                                                                                                          if ((0 | C) != 917504) break M;
                                                                                                                                                                                                                                          if ((-128 & I) != 917632) break Z;
                                                                                                                                                                                                                                          break gA;
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                        if ((0 | C) <= 918271) {
                                                                                                                                                                                                                                          if ((0 | C) == 917760) break V;
                                                                                                                                                                                                                                          if (Q = 4194304, (0 | C) != 918016) break M;
                                                                                                                                                                                                                                          break C;
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                        if ((0 | C) == 918272 | (0 | C) == 918528) break gA;
                                                                                                                                                                                                                                        if (Q = 4194304, (0 | C) != 918784) break M;
                                                                                                                                                                                                                                        break C;
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                      if ((0 | C) <= 920319) {
                                                                                                                                                                                                                                        if ((0 | C) <= 919551) {
                                                                                                                                                                                                                                          if ((0 | C) == 919040) break gA;
                                                                                                                                                                                                                                          if (Q = 4194304, (0 | C) != 919296) break M;
                                                                                                                                                                                                                                          break C;
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                        if ((0 | C) == 919552 | (0 | C) == 919808) break gA;
                                                                                                                                                                                                                                        if (Q = 4194304, (0 | C) != 920064) break M;
                                                                                                                                                                                                                                        break C;
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                      if ((0 | C) <= 920831) {
                                                                                                                                                                                                                                        if ((0 | C) == 920320) break gA;
                                                                                                                                                                                                                                        if (Q = 4194304, (0 | C) != 920576) break M;
                                                                                                                                                                                                                                        break C;
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                      if ((0 | C) == 920832 | (0 | C) == 921088) break gA;
                                                                                                                                                                                                                                      if (Q = 4194304, (0 | C) != 921344) break M;
                                                                                                                                                                                                                                      break C;
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    if (Q = 4194304, (0 | I) != 8293) break M;
                                                                                                                                                                                                                                    break C;
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                  if (Q = -2147483648, I - 9291 >>> 0 >= 21) break M;
                                                                                                                                                                                                                                  break C;
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                if ((-16 & I) == 11248 | I - 11219 >>> 0 < 25 | (0 | I) == 11209 | I - 11194 >>> 0 < 3 || (0 | (C = -2 & I)) == 11124) break S;
                                                                                                                                                                                                                                if (Q = -2147483648, (0 | C) != 11158) break M;
                                                                                                                                                                                                                                break C;
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                              if (Q = 65536, I - 64976 >>> 0 >= 32) break M;
                                                                                                                                                                                                                              break C;
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            if ((0 | I) == 917504) break gA;
                                                                                                                                                                                                                            if (Q = 4194304, I - 917506 >>> 0 >= 30) break M;
                                                                                                                                                                                                                            break C;
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                          if (Q = 4194304, I >>> 0 > 917999) break C;
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                        C = (I = !(65534 & ~I)) >>> 16 | 0, I <<= 16;
                                                                                                                                                                                                                        break Y;
                                                                                                                                                                                                                      case 6:
                                                                                                                                                                                                                        M: {
                                                                                                                                                                                                                          V: {
                                                                                                                                                                                                                            Z: {
                                                                                                                                                                                                                              b: {
                                                                                                                                                                                                                                H: {
                                                                                                                                                                                                                                  a: {
                                                                                                                                                                                                                                    e: {
                                                                                                                                                                                                                                      z: {
                                                                                                                                                                                                                                        v: {
                                                                                                                                                                                                                                          AA: {
                                                                                                                                                                                                                                            EA: {
                                                                                                                                                                                                                                              wA: {
                                                                                                                                                                                                                                                if ((0 | (C = -256 & I)) <= 7679) {
                                                                                                                                                                                                                                                  if ((0 | C) <= 767) {
                                                                                                                                                                                                                                                    if (!C) break wA;
                                                                                                                                                                                                                                                    if ((0 | C) == 256) break EA;
                                                                                                                                                                                                                                                    if ((0 | C) != 512) break g;
                                                                                                                                                                                                                                                    if ((0 | I) != 585) break AA;
                                                                                                                                                                                                                                                    break r;
                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                  if ((0 | C) == 768) break v;
                                                                                                                                                                                                                                                  if ((0 | C) == 1024) break z;
                                                                                                                                                                                                                                                  if ((0 | C) != 7424 || (Q = 16777216, (0 | I) != 7574)) break g;
                                                                                                                                                                                                                                                  break C;
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                if ((0 | C) <= 119807) {
                                                                                                                                                                                                                                                  if ((0 | C) == 7680) break e;
                                                                                                                                                                                                                                                  if ((0 | C) == 8448) break a;
                                                                                                                                                                                                                                                  if ((0 | C) != 65280 || (Q = 256, I - 65345 >>> 0 >= 6)) break g;
                                                                                                                                                                                                                                                  break C;
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                if ((0 | C) <= 120319) {
                                                                                                                                                                                                                                                  if ((0 | C) == 119808) break H;
                                                                                                                                                                                                                                                  if ((0 | C) != 120064) break g;
                                                                                                                                                                                                                                                  if (I >>> 0 >= 120070) break b;
                                                                                                                                                                                                                                                  break h;
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                if ((0 | C) == 120320) break Z;
                                                                                                                                                                                                                                                if ((0 | C) != 120576) break g;
                                                                                                                                                                                                                                                if (I >>> 0 >= 120597) break V;
                                                                                                                                                                                                                                                break h;
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                              if (Q = 768, I - 97 >>> 0 < 6) break C;
                                                                                                                                                                                                                                              if (Q = 16777216, I - 105 >>> 0 >= 2) break g;
                                                                                                                                                                                                                                              break C;
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            Q = (C = (0 | I) == 329) >>> 9 | 0, C = (I = (0 | I) == 303) ? 16777216 : C << 23;
                                                                                                                                                                                                                                            break f;
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                          if ((0 | I) == 616) break r;
                                                                                                                                                                                                                                          if (Q = 16777216, (0 | I) != 669) break g;
                                                                                                                                                                                                                                          break C;
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                        Q = 128;
                                                                                                                                                                                                                                        v: switch (I - 976 | 0) {
                                                                                                                                                                                                                                          case 35:
                                                                                                                                                                                                                                            break M;
                                                                                                                                                                                                                                          case 0:
                                                                                                                                                                                                                                          case 1:
                                                                                                                                                                                                                                          case 2:
                                                                                                                                                                                                                                          case 5:
                                                                                                                                                                                                                                          case 32:
                                                                                                                                                                                                                                          case 33:
                                                                                                                                                                                                                                            break C;
                                                                                                                                                                                                                                          default:
                                                                                                                                                                                                                                            break v;
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                        if ((-2 & I) != 1012) break g;
                                                                                                                                                                                                                                        break C;
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                      g = (I = !(I - 1110 & -3)) >>> 8 | 0, I <<= 24;
                                                                                                                                                                                                                                      break P;
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    g = (C = (0 | I) == 7883) >>> 8 | 0, C = (I = (0 | I) == 7725) ? 16777216 : C << 24;
                                                                                                                                                                                                                                    break d;
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                  if (I - 8458 >>> 0 < 10) break h;
                                                                                                                                                                                                                                  if ((C = I - 8495 | 0) >>> 0 < 11) break OI;
                                                                                                                                                                                                                                  break iA;
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                if ((0 | (C = -2 & I)) == 119842) break QA;
                                                                                                                                                                                                                                if (I - 119808 >>> 0 < 85) break h;
                                                                                                                                                                                                                                if (I - 119894 >>> 0 < 2 | I - 119946 >>> 0 < 2) break QA;
                                                                                                                                                                                                                                if ((0 | I) == 119995 | I - 119896 >>> 0 < 69 | I - 119982 >>> 0 < 12) break h;
                                                                                                                                                                                                                                if ((0 | C) == 119998) break QA;
                                                                                                                                                                                                                                if (I - 119997 >>> 0 < 7) break h;
                                                                                                                                                                                                                                if (Q = 16777344, (0 | C) == 120050) break C;
                                                                                                                                                                                                                                if (Q = 128, I >>> 0 <= 120004) break g;
                                                                                                                                                                                                                                break C;
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                              if ((-2 & I) == 120102) break QA;
                                                                                                                                                                                                                              if (I - 120094 >>> 0 < 28) break h;
                                                                                                                                                                                                                              b: {
                                                                                                                                                                                                                                if ((0 | I) <= 120257) {
                                                                                                                                                                                                                                  if (I - 120154 >>> 0 < 2) break QA;
                                                                                                                                                                                                                                  if (Q = 16777344, I - 120206 >>> 0 >= 2) break b;
                                                                                                                                                                                                                                  break C;
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                if (I - 120258 >>> 0 < 2) break QA;
                                                                                                                                                                                                                                if (Q = 16777344, I - 120310 >>> 0 < 2) break C;
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                              if (Q = 128, I >>> 0 <= 120145) break g;
                                                                                                                                                                                                                              break C;
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            if (I - 120362 >>> 0 < 2 | I - 120414 >>> 0 < 2) break QA;
                                                                                                                                                                                                                            if (Q = 16777344, I - 120466 >>> 0 < 2) break C;
                                                                                                                                                                                                                            if (I - 120540 >>> 0 < 31 | I >>> 0 > 120571 | I >>> 0 < 120486) break h;
                                                                                                                                                                                                                            if (Q = 128, I - 120514 >>> 0 >= 25) break g;
                                                                                                                                                                                                                            break C;
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                          if (I - 120772 >>> 0 < 8 | I - 120746 >>> 0 < 25 | I - 120714 >>> 0 < 31 | I - 120688 >>> 0 < 25 || (0 | I) != 120597 & I >>> 0 < 120629 | I - 120656 >>> 0 < 31) break h;
                                                                                                                                                                                                                          if (Q = 128, I - 120630 >>> 0 < 25) break C;
                                                                                                                                                                                                                          break g;
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                        break r;
                                                                                                                                                                                                                      case 7:
                                                                                                                                                                                                                        M: {
                                                                                                                                                                                                                          V: {
                                                                                                                                                                                                                            Z: {
                                                                                                                                                                                                                              b: {
                                                                                                                                                                                                                                H: {
                                                                                                                                                                                                                                  a: {
                                                                                                                                                                                                                                    e: {
                                                                                                                                                                                                                                      z: {
                                                                                                                                                                                                                                        v: {
                                                                                                                                                                                                                                          AA: {
                                                                                                                                                                                                                                            EA: {
                                                                                                                                                                                                                                              wA: {
                                                                                                                                                                                                                                                GA: {
                                                                                                                                                                                                                                                  JA: {
                                                                                                                                                                                                                                                    L: {
                                                                                                                                                                                                                                                      DA: {
                                                                                                                                                                                                                                                        u: {
                                                                                                                                                                                                                                                          X: {
                                                                                                                                                                                                                                                            UA: {
                                                                                                                                                                                                                                                              FA: {
                                                                                                                                                                                                                                                                KA: {
                                                                                                                                                                                                                                                                  lA: {
                                                                                                                                                                                                                                                                    if ((0 | (C = -256 & I)) <= 11263) {
                                                                                                                                                                                                                                                                      if ((0 | C) <= 3583) {
                                                                                                                                                                                                                                                                        if ((0 | C) <= 1535) {
                                                                                                                                                                                                                                                                          if ((0 | C) == 512) break lA;
                                                                                                                                                                                                                                                                          if ((0 | C) == 768) break KA;
                                                                                                                                                                                                                                                                          if ((0 | C) != 1280 || (Q = 4096, (0 | I) != 1369)) break g;
                                                                                                                                                                                                                                                                          break C;
                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                        if ((0 | C) == 1536) break FA;
                                                                                                                                                                                                                                                                        if ((0 | C) == 1792) break UA;
                                                                                                                                                                                                                                                                        if ((0 | C) != 2304 || (Q = 4096, (0 | I) != 2417)) break g;
                                                                                                                                                                                                                                                                        break C;
                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                      if ((0 | C) <= 7167) {
                                                                                                                                                                                                                                                                        if ((0 | C) == 3584) break X;
                                                                                                                                                                                                                                                                        if ((0 | C) == 6144) break u;
                                                                                                                                                                                                                                                                        if ((0 | C) != 6656 || (Q = 8192, (0 | I) != 6823)) break g;
                                                                                                                                                                                                                                                                        break C;
                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                      if ((0 | C) == 7168) break DA;
                                                                                                                                                                                                                                                                      if ((0 | C) == 7424) break L;
                                                                                                                                                                                                                                                                      if ((0 | C) != 8192) break g;
                                                                                                                                                                                                                                                                      if (Q = 16793600, !(C = I - 8305 | 0)) break C;
                                                                                                                                                                                                                                                                      if ((0 | C) == 14) break JA;
                                                                                                                                                                                                                                                                      break GA;
                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                    if ((0 | C) <= 43263) {
                                                                                                                                                                                                                                                                      if ((0 | C) <= 40959) {
                                                                                                                                                                                                                                                                        if ((0 | C) == 11264) break wA;
                                                                                                                                                                                                                                                                        if ((0 | C) == 11776) break EA;
                                                                                                                                                                                                                                                                        if ((0 | C) != 12288) break g;
                                                                                                                                                                                                                                                                        switch (Q = 8192, I - 12293 | 0) {
                                                                                                                                                                                                                                                                          case 1:
                                                                                                                                                                                                                                                                          case 2:
                                                                                                                                                                                                                                                                          case 3:
                                                                                                                                                                                                                                                                          case 4:
                                                                                                                                                                                                                                                                          case 5:
                                                                                                                                                                                                                                                                          case 6:
                                                                                                                                                                                                                                                                          case 7:
                                                                                                                                                                                                                                                                          case 8:
                                                                                                                                                                                                                                                                          case 9:
                                                                                                                                                                                                                                                                          case 10:
                                                                                                                                                                                                                                                                          case 11:
                                                                                                                                                                                                                                                                          case 12:
                                                                                                                                                                                                                                                                          case 13:
                                                                                                                                                                                                                                                                          case 14:
                                                                                                                                                                                                                                                                          case 15:
                                                                                                                                                                                                                                                                          case 16:
                                                                                                                                                                                                                                                                          case 17:
                                                                                                                                                                                                                                                                          case 18:
                                                                                                                                                                                                                                                                          case 19:
                                                                                                                                                                                                                                                                          case 20:
                                                                                                                                                                                                                                                                          case 21:
                                                                                                                                                                                                                                                                          case 22:
                                                                                                                                                                                                                                                                          case 23:
                                                                                                                                                                                                                                                                          case 24:
                                                                                                                                                                                                                                                                          case 25:
                                                                                                                                                                                                                                                                          case 26:
                                                                                                                                                                                                                                                                          case 27:
                                                                                                                                                                                                                                                                          case 28:
                                                                                                                                                                                                                                                                          case 29:
                                                                                                                                                                                                                                                                          case 30:
                                                                                                                                                                                                                                                                          case 31:
                                                                                                                                                                                                                                                                          case 32:
                                                                                                                                                                                                                                                                          case 33:
                                                                                                                                                                                                                                                                          case 34:
                                                                                                                                                                                                                                                                          case 35:
                                                                                                                                                                                                                                                                          case 36:
                                                                                                                                                                                                                                                                          case 37:
                                                                                                                                                                                                                                                                          case 38:
                                                                                                                                                                                                                                                                          case 39:
                                                                                                                                                                                                                                                                          case 40:
                                                                                                                                                                                                                                                                          case 41:
                                                                                                                                                                                                                                                                          case 42:
                                                                                                                                                                                                                                                                          case 43:
                                                                                                                                                                                                                                                                            break v;
                                                                                                                                                                                                                                                                          case 0:
                                                                                                                                                                                                                                                                          case 44:
                                                                                                                                                                                                                                                                          case 45:
                                                                                                                                                                                                                                                                          case 46:
                                                                                                                                                                                                                                                                          case 47:
                                                                                                                                                                                                                                                                          case 48:
                                                                                                                                                                                                                                                                            break C;
                                                                                                                                                                                                                                                                          default:
                                                                                                                                                                                                                                                                            break AA;
                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                      if ((0 | C) == 40960) break z;
                                                                                                                                                                                                                                                                      if ((0 | C) == 42496) break e;
                                                                                                                                                                                                                                                                      if ((0 | C) != 42752) break g;
                                                                                                                                                                                                                                                                      if (I - 42775 >>> 0 >= 9) break a;
                                                                                                                                                                                                                                                                      break J;
                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                    if ((0 | C) <= 65279) {
                                                                                                                                                                                                                                                                      if ((0 | C) == 43264) break H;
                                                                                                                                                                                                                                                                      if ((0 | C) == 43520) break b;
                                                                                                                                                                                                                                                                      if ((0 | C) != 43776 || (Q = 20480, (-4 & I) != 43868)) break g;
                                                                                                                                                                                                                                                                      break C;
                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                    if ((0 | C) == 65280) break Z;
                                                                                                                                                                                                                                                                    if ((0 | C) == 92928) break V;
                                                                                                                                                                                                                                                                    if ((0 | C) != 93952) break g;
                                                                                                                                                                                                                                                                    if (Q = 4096, I - 94099 >>> 0 < 13) break C;
                                                                                                                                                                                                                                                                    if (Q = 8192, (-2 & I) != 94176) break g;
                                                                                                                                                                                                                                                                    break C;
                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                  if (Q = 16797696, (0 | I) == 690) break C;
                                                                                                                                                                                                                                                                  if (I - 688 >>> 0 < 9) return QA = 0, 20480;
                                                                                                                                                                                                                                                                  if (I - 697 >>> 0 < 7) break J;
                                                                                                                                                                                                                                                                  if ((0 | (C = -2 & I)) == 704) return QA = 0, 20480;
                                                                                                                                                                                                                                                                  if (Q = 4096, I - 710 >>> 0 < 10 || (Q = 12288, (0 | C) == 720) || (Q = 20480, I - 736 >>> 0 < 5)) break C;
                                                                                                                                                                                                                                                                  Q = (I = (-3 & I) == 748) >>> 20 | 0, I <<= 12;
                                                                                                                                                                                                                                                                  break k;
                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                C = (0 | I) == 890 ? 20480 : 0, C = (I = (0 | I) == 884) ? 4096 : C;
                                                                                                                                                                                                                                                                break q;
                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                              if (Q = 8192, (0 | I) == 1600) break C;
                                                                                                                                                                                                                                                              if (Q = 4096, I - 1765 >>> 0 >= 2) break g;
                                                                                                                                                                                                                                                              break C;
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                            if (Q = 4096, (-2 & I) == 2036) break C;
                                                                                                                                                                                                                                                            if (Q = 8192, (0 | I) != 2042) break g;
                                                                                                                                                                                                                                                            break C;
                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                          C = (I = !(I - 3654 & -129)) >>> 19 | 0, I <<= 13;
                                                                                                                                                                                                                                                          break Y;
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                        if (Q = 8192, (0 | I) != 6211) break g;
                                                                                                                                                                                                                                                        break C;
                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                      if (Q = 12288, (0 | I) == 7291) break C;
                                                                                                                                                                                                                                                      if (Q = 4096, I - 7288 >>> 0 >= 6) break g;
                                                                                                                                                                                                                                                      break C;
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                    if (Q = 16797696, (0 | I) == 7522 || (Q = 20480, I - 7468 >>> 0 < 63)) break C;
                                                                                                                                                                                                                                                    Q = 16384;
                                                                                                                                                                                                                                                    L: switch (I - 7588 | 0) {
                                                                                                                                                                                                                                                      default:
                                                                                                                                                                                                                                                        if ((0 | I) == 7544) break C;
                                                                                                                                                                                                                                                      case 1:
                                                                                                                                                                                                                                                      case 2:
                                                                                                                                                                                                                                                      case 3:
                                                                                                                                                                                                                                                        if (I - 7579 >>> 0 >= 37) break g;
                                                                                                                                                                                                                                                        break C;
                                                                                                                                                                                                                                                      case 0:
                                                                                                                                                                                                                                                      case 4:
                                                                                                                                                                                                                                                        break L;
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                    return QA = 0, 16793600;
                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                  return QA = 0, 16384;
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                if (Q = 16384, I - 8336 >>> 0 >= 13) break g;
                                                                                                                                                                                                                                                break C;
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                              C = (Q = (0 | I) == 11389) >>> 18 | 0, Q = (I = (0 | I) == 11388) ? 16793600 : Q << 14;
                                                                                                                                                                                                                                              break j;
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            if (Q = -2147479552, (0 | I) != 11823) break g;
                                                                                                                                                                                                                                            break C;
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                          if (I - 12445 >>> 0 < 2) break C;
                                                                                                                                                                                                                                          if ((0 | I) == 12540) break M;
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                        if (I - 12541 >>> 0 >= 2) break g;
                                                                                                                                                                                                                                        break C;
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                      if (Q = 8192, (0 | I) != 40981) break g;
                                                                                                                                                                                                                                      break C;
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    if ((0 | I) == 42508) break l;
                                                                                                                                                                                                                                    if ((0 | I) == 42623) break J;
                                                                                                                                                                                                                                    if (Q = 20480, (-2 & I) != 42652) break g;
                                                                                                                                                                                                                                    break C;
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                  if ((0 | I) == 42864) return QA = 0, 16384;
                                                                                                                                                                                                                                  if ((0 | I) == 42888) break J;
                                                                                                                                                                                                                                  if (Q = 20480, (-2 & I) != 43e3) break g;
                                                                                                                                                                                                                                  break C;
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                Q = (C = (0 | I) == 43494) >>> 19 | 0, C = (I = (0 | I) == 43471) ? 8192 : C << 13;
                                                                                                                                                                                                                                break f;
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                              if ((0 | I) == 43632 || (0 | I) == 43741) break l;
                                                                                                                                                                                                                              if (Q = 8192, I - 43763 >>> 0 >= 2) break g;
                                                                                                                                                                                                                              break C;
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            if (Q = 12288, (0 | I) == 65392) break C;
                                                                                                                                                                                                                            if (Q = 135168, (-2 & I) != 65438) break g;
                                                                                                                                                                                                                            break C;
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                          if (Q = 8192, (-2 & I) == 92994) break C;
                                                                                                                                                                                                                          break g;
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                        return QA = 0, 12288;
                                                                                                                                                                                                                      case 8:
                                                                                                                                                                                                                        Q = 128;
                                                                                                                                                                                                                        M: {
                                                                                                                                                                                                                          V: {
                                                                                                                                                                                                                            Z: {
                                                                                                                                                                                                                              b: {
                                                                                                                                                                                                                                H: {
                                                                                                                                                                                                                                  a: {
                                                                                                                                                                                                                                    e: {
                                                                                                                                                                                                                                      z: {
                                                                                                                                                                                                                                        v: {
                                                                                                                                                                                                                                          if ((0 | (C = -256 & I)) <= 12543) {
                                                                                                                                                                                                                                            if ((0 | C) <= 5887) {
                                                                                                                                                                                                                                              if ((0 | C) <= 3583) {
                                                                                                                                                                                                                                                if (!C) break v;
                                                                                                                                                                                                                                                if ((0 | C) != 1536 || (C = 8388608, (0 | I) != 1651)) break K;
                                                                                                                                                                                                                                                break MA;
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                              if ((0 | C) == 3584) break z;
                                                                                                                                                                                                                                              if ((0 | C) != 4352 || (Q = 4194304, I - 4447 >>> 0 >= 2)) break K;
                                                                                                                                                                                                                                              break x;
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            if ((0 | C) <= 8447) {
                                                                                                                                                                                                                                              if ((0 | C) == 5888) break e;
                                                                                                                                                                                                                                              if ((0 | C) != 6400 || (C = I - 6581 | 0) >>> 0 >= 6) break K;
                                                                                                                                                                                                                                              Q = A[(C = 81432 + (C << 3) | 0) >> 2], g = A[C + 4 >> 2];
                                                                                                                                                                                                                                              break x;
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            if ((0 | C) == 8448) break a;
                                                                                                                                                                                                                                            if ((0 | C) != 12288 || (C = 2048, (0 | I) != 12294)) break K;
                                                                                                                                                                                                                                            break MA;
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                          if ((0 | C) <= 68863) {
                                                                                                                                                                                                                                            if ((0 | C) <= 63999) {
                                                                                                                                                                                                                                              if ((0 | C) == 12544) break H;
                                                                                                                                                                                                                                              if ((0 | C) != 43520) break K;
                                                                                                                                                                                                                                              if ((C = I - 43701 | 0) >>> 0 < 8) break V;
                                                                                                                                                                                                                                              break VA;
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            if ((0 | C) == 64e3) break M;
                                                                                                                                                                                                                                            if ((0 | C) != 65280 || (C = 4194304, (0 | I) != 65440)) break K;
                                                                                                                                                                                                                                            break MA;
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                          if ((0 | C) <= 100095) {
                                                                                                                                                                                                                                            if ((0 | C) == 68864) break b;
                                                                                                                                                                                                                                            if ((0 | C) != 70400 || (Q = 8192, (0 | I) != 70493)) break K;
                                                                                                                                                                                                                                            break sA;
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                          if ((0 | C) == 100096) break Z;
                                                                                                                                                                                                                                          if ((0 | C) != 126464) break K;
                                                                                                                                                                                                                                          break x;
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                        g = (C = !(I - 170 & -17)) >>> 18 | 0, Q = C << 14;
                                                                                                                                                                                                                                        break x;
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                      if (Q = 33554432, I - 3648 >>> 0 < 5) break x;
                                                                                                                                                                                                                                      if (C = 0, U = 33554432, (0 | I) == 3759) break MA;
                                                                                                                                                                                                                                      if (I - 3776 >>> 0 >= 5) break K;
                                                                                                                                                                                                                                      break x;
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    if (Q = 8388608, I - 6051 >>> 0 >= 2) break K;
                                                                                                                                                                                                                                    break x;
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                  if (I - 8501 >>> 0 >= 4) break K;
                                                                                                                                                                                                                                  break x;
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                if (C = 4194304, (0 | I) != 12644) break K;
                                                                                                                                                                                                                                break MA;
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                              if (Q = 4096, (-2 & I) != 68898) break K;
                                                                                                                                                                                                                              break x;
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            if (Q = 2048, I - 100333 >>> 0 < 5) break x;
                                                                                                                                                                                                                            break K;
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                          if (Q = 33554432, !(211 >>> C & 1)) break VA;
                                                                                                                                                                                                                          break x;
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                        if ((C = I - 64014 | 0) >>> 0 >= 28) break K;
                                                                                                                                                                                                                        Q = A[(C = 81480 + (C << 3) | 0) >> 2], g = A[C + 4 >> 2];
                                                                                                                                                                                                                        break x;
                                                                                                                                                                                                                      case 10:
                                                                                                                                                                                                                        M: {
                                                                                                                                                                                                                          V: {
                                                                                                                                                                                                                            Z: {
                                                                                                                                                                                                                              b: {
                                                                                                                                                                                                                                H: {
                                                                                                                                                                                                                                  a: {
                                                                                                                                                                                                                                    if ((0 | (C = -256 & I)) <= 119807) {
                                                                                                                                                                                                                                      if ((0 | C) <= 8447) {
                                                                                                                                                                                                                                        if (!C) break a;
                                                                                                                                                                                                                                        if ((0 | C) != 768) break g;
                                                                                                                                                                                                                                        switch (Q = 128, I - 976 | 0) {
                                                                                                                                                                                                                                          case 0:
                                                                                                                                                                                                                                          case 1:
                                                                                                                                                                                                                                          case 2:
                                                                                                                                                                                                                                          case 36:
                                                                                                                                                                                                                                          case 37:
                                                                                                                                                                                                                                            break C;
                                                                                                                                                                                                                                          default:
                                                                                                                                                                                                                                            break g;
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                      if ((0 | C) == 8448) break H;
                                                                                                                                                                                                                                      if ((0 | C) != 65280 || (Q = 256, I - 65313 >>> 0 >= 6)) break g;
                                                                                                                                                                                                                                      break C;
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    if ((0 | C) <= 120319) {
                                                                                                                                                                                                                                      if ((0 | C) == 119808) break b;
                                                                                                                                                                                                                                      if ((0 | C) != 120064) break g;
                                                                                                                                                                                                                                      if (I >>> 0 >= 120070) break Z;
                                                                                                                                                                                                                                      break h;
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    if ((0 | C) == 120320) break V;
                                                                                                                                                                                                                                    if ((0 | C) != 120576) break g;
                                                                                                                                                                                                                                    if (I - 120772 >>> 0 >= 8) break M;
                                                                                                                                                                                                                                    break h;
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                  if (Q = 768, I - 65 >>> 0 >= 6) break g;
                                                                                                                                                                                                                                  break C;
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                Q = 128;
                                                                                                                                                                                                                                H: switch (I - 8450 | 0) {
                                                                                                                                                                                                                                  case 0:
                                                                                                                                                                                                                                  case 5:
                                                                                                                                                                                                                                    break C;
                                                                                                                                                                                                                                  default:
                                                                                                                                                                                                                                    break H;
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                if (I - 8458 >>> 0 < 10) break h;
                                                                                                                                                                                                                                if ((C = I - 8469 | 0) >>> 0 < 20) break WI;
                                                                                                                                                                                                                                if ((-4 & I) == 8508) break C;
                                                                                                                                                                                                                                break bA;
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                              if (I - 119982 >>> 0 < 12 | I >>> 0 > 120004 | I - 119977 >>> 0 < 4 | I - 119973 >>> 0 < 2 || (0 | I) == 119970 | (-2 & I) == 119966 | I - 119808 >>> 0 < 85) break h;
                                                                                                                                                                                                                              if (Q = 128, I - 119894 >>> 0 >= 71) break g;
                                                                                                                                                                                                                              break C;
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            if (I - 120138 >>> 0 < 7 | I >>> 0 > 120145 | (0 | I) == 120134 | I - 120128 >>> 0 < 5 || I - 120123 >>> 0 < 4 | I - 120094 >>> 0 < 28 | (0 | I) != 120070 & I >>> 0 < 120075 | I - 120086 >>> 0 < 7) break h;
                                                                                                                                                                                                                            if (Q = 128, I - 120077 >>> 0 >= 8) break g;
                                                                                                                                                                                                                            break C;
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                          if (I - 120540 >>> 0 < 31 | I >>> 0 < 120486) break h;
                                                                                                                                                                                                                          if (Q = 128, I - 120488 >>> 0 >= 25) break g;
                                                                                                                                                                                                                          break C;
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                        if (I - 120714 >>> 0 < 31 | I - 120598 >>> 0 < 31) break h;
                                                                                                                                                                                                                        if (Q = 128, I - 120656 >>> 0 < 31) break C;
                                                                                                                                                                                                                        break g;
                                                                                                                                                                                                                      case 11:
                                                                                                                                                                                                                        M: {
                                                                                                                                                                                                                          V: {
                                                                                                                                                                                                                            Z: {
                                                                                                                                                                                                                              b: {
                                                                                                                                                                                                                                H: {
                                                                                                                                                                                                                                  a: {
                                                                                                                                                                                                                                    e: {
                                                                                                                                                                                                                                      z: {
                                                                                                                                                                                                                                        v: {
                                                                                                                                                                                                                                          AA: {
                                                                                                                                                                                                                                            EA: {
                                                                                                                                                                                                                                              wA: {
                                                                                                                                                                                                                                                GA: {
                                                                                                                                                                                                                                                  JA: {
                                                                                                                                                                                                                                                    L: {
                                                                                                                                                                                                                                                      DA: {
                                                                                                                                                                                                                                                        u: {
                                                                                                                                                                                                                                                          if ((0 | (C = -256 & I)) <= 43263) {
                                                                                                                                                                                                                                                            if ((0 | C) <= 3839) {
                                                                                                                                                                                                                                                              if ((0 | C) <= 3071) {
                                                                                                                                                                                                                                                                if ((0 | C) == 2304) break u;
                                                                                                                                                                                                                                                                if ((0 | C) != 2816) break G;
                                                                                                                                                                                                                                                                if ((0 | I) > 3005) break L;
                                                                                                                                                                                                                                                                if ((0 | I) != 2878) break DA;
                                                                                                                                                                                                                                                                return QA = 0, 132096;
                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                              if ((0 | C) == 3072) break JA;
                                                                                                                                                                                                                                                              if ((0 | C) != 3328) break G;
                                                                                                                                                                                                                                                              switch (Q = 132096, I - 3535 | 0) {
                                                                                                                                                                                                                                                                case 0:
                                                                                                                                                                                                                                                                case 16:
                                                                                                                                                                                                                                                                  break C;
                                                                                                                                                                                                                                                                case 1:
                                                                                                                                                                                                                                                                case 2:
                                                                                                                                                                                                                                                                case 3:
                                                                                                                                                                                                                                                                case 4:
                                                                                                                                                                                                                                                                case 5:
                                                                                                                                                                                                                                                                case 6:
                                                                                                                                                                                                                                                                case 7:
                                                                                                                                                                                                                                                                case 8:
                                                                                                                                                                                                                                                                case 9:
                                                                                                                                                                                                                                                                case 10:
                                                                                                                                                                                                                                                                case 11:
                                                                                                                                                                                                                                                                case 12:
                                                                                                                                                                                                                                                                case 13:
                                                                                                                                                                                                                                                                case 14:
                                                                                                                                                                                                                                                                case 15:
                                                                                                                                                                                                                                                                  break G;
                                                                                                                                                                                                                                                                default:
                                                                                                                                                                                                                                                                  break GA;
                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                            if ((0 | C) <= 6911) {
                                                                                                                                                                                                                                                              if ((0 | C) == 3840) break wA;
                                                                                                                                                                                                                                                              if ((0 | C) != 4096) break G;
                                                                                                                                                                                                                                                              if (Q = 1024, I - 4139 >>> 0 < 2) break C;
                                                                                                                                                                                                                                                              switch (I - 4145 | 0) {
                                                                                                                                                                                                                                                                case 0:
                                                                                                                                                                                                                                                                case 7:
                                                                                                                                                                                                                                                                case 10:
                                                                                                                                                                                                                                                                case 11:
                                                                                                                                                                                                                                                                case 37:
                                                                                                                                                                                                                                                                case 38:
                                                                                                                                                                                                                                                                case 49:
                                                                                                                                                                                                                                                                case 54:
                                                                                                                                                                                                                                                                case 55:
                                                                                                                                                                                                                                                                case 82:
                                                                                                                                                                                                                                                                case 83:
                                                                                                                                                                                                                                                                  break C;
                                                                                                                                                                                                                                                                case 86:
                                                                                                                                                                                                                                                                case 87:
                                                                                                                                                                                                                                                                case 88:
                                                                                                                                                                                                                                                                case 89:
                                                                                                                                                                                                                                                                case 90:
                                                                                                                                                                                                                                                                case 91:
                                                                                                                                                                                                                                                                case 94:
                                                                                                                                                                                                                                                                case 105:
                                                                                                                                                                                                                                                                case 106:
                                                                                                                                                                                                                                                                  break M;
                                                                                                                                                                                                                                                                default:
                                                                                                                                                                                                                                                                  break EA;
                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                            if ((0 | C) == 6912) break AA;
                                                                                                                                                                                                                                                            if ((0 | C) == 7168) break v;
                                                                                                                                                                                                                                                            if ((0 | C) != 12288 || (Q = 135168, (-2 & I) != 12334)) break G;
                                                                                                                                                                                                                                                            break C;
                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                          if ((0 | C) <= 70399) {
                                                                                                                                                                                                                                                            if ((0 | C) <= 43775) {
                                                                                                                                                                                                                                                              if ((0 | C) == 43264) break z;
                                                                                                                                                                                                                                                              if ((0 | C) != 43520) break G;
                                                                                                                                                                                                                                                              return QA = 0, I - 43643 & -3 ? 1024 : 4096;
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                            if ((0 | C) == 43776) break e;
                                                                                                                                                                                                                                                            if ((0 | C) == 69888) break a;
                                                                                                                                                                                                                                                            if ((0 | C) != 70144 || (Q = 4096, (0 | I) != 70197)) break G;
                                                                                                                                                                                                                                                            break C;
                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                          if ((0 | C) <= 70911) {
                                                                                                                                                                                                                                                            if ((0 | C) == 70400) break H;
                                                                                                                                                                                                                                                            if ((0 | C) != 70656) break G;
                                                                                                                                                                                                                                                            C = (0 | I) == 70845 ? 132096 : 1024, C = (I = (0 | I) == 70832) ? 132096 : C;
                                                                                                                                                                                                                                                            break q;
                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                          if ((0 | C) == 70912) break b;
                                                                                                                                                                                                                                                          if ((0 | C) == 71168) break Z;
                                                                                                                                                                                                                                                          if ((0 | C) != 119040) break G;
                                                                                                                                                                                                                                                          switch (Q = 131072, I - 119141 | 0) {
                                                                                                                                                                                                                                                            case 8:
                                                                                                                                                                                                                                                              break J;
                                                                                                                                                                                                                                                            case 1:
                                                                                                                                                                                                                                                              break g;
                                                                                                                                                                                                                                                            case 0:
                                                                                                                                                                                                                                                              break C;
                                                                                                                                                                                                                                                            default:
                                                                                                                                                                                                                                                              break V;
                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                        C = (0 | I) == 2519 ? 132096 : 1024, C = (I = (0 | I) == 2494) ? 132096 : C;
                                                                                                                                                                                                                                                        break q;
                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                      if (Q = 132096, (0 | I) != 2903) break G;
                                                                                                                                                                                                                                                      break C;
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                    if ((0 | I) == 3006) return QA = 0, 132096;
                                                                                                                                                                                                                                                    if (Q = 132096, (0 | I) != 3031) break G;
                                                                                                                                                                                                                                                    break C;
                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                  if ((I = I - 3266 | 0) >>> 0 > 20 || (Q = 132096, !(1 << I & 1572865))) break G;
                                                                                                                                                                                                                                                  break C;
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                if ((0 | I) == 3390) break C;
                                                                                                                                                                                                                                                if ((0 | I) != 3415) break G;
                                                                                                                                                                                                                                                break C;
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                              if (Q = 4096, (-2 & I) != 3902) break G;
                                                                                                                                                                                                                                              break C;
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            Q = (I = (0 | I) == 4252) >>> 22 | 0, I <<= 10;
                                                                                                                                                                                                                                            break k;
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                          Q = 1024;
                                                                                                                                                                                                                                          AA: switch (I - 6965 | 0) {
                                                                                                                                                                                                                                            default:
                                                                                                                                                                                                                                              if ((0 | I) == 6916) break C;
                                                                                                                                                                                                                                              break;
                                                                                                                                                                                                                                            case 0:
                                                                                                                                                                                                                                            case 6:
                                                                                                                                                                                                                                              break C;
                                                                                                                                                                                                                                            case 1:
                                                                                                                                                                                                                                            case 2:
                                                                                                                                                                                                                                            case 3:
                                                                                                                                                                                                                                            case 4:
                                                                                                                                                                                                                                            case 5:
                                                                                                                                                                                                                                              break AA;
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                          if (I - 6973 >>> 0 < 5) break C;
                                                                                                                                                                                                                                          AA: switch (I - 6979 | 0) {
                                                                                                                                                                                                                                            case 1:
                                                                                                                                                                                                                                              break J;
                                                                                                                                                                                                                                            case 0:
                                                                                                                                                                                                                                              break C;
                                                                                                                                                                                                                                            default:
                                                                                                                                                                                                                                              break AA;
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                          if ((0 | I) == 7042 | (0 | I) == 7073 | (-2 & I) == 7078) break C;
                                                                                                                                                                                                                                          if ((0 | I) == 7082) break J;
                                                                                                                                                                                                                                          if ((0 | I) == 7143 | I - 7146 >>> 0 < 3) break C;
                                                                                                                                                                                                                                          Q = (I = (0 | I) == 7150) >>> 22 | 0, I <<= 10;
                                                                                                                                                                                                                                          break k;
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                        C = (0 | I) == 7415 ? 4096 : 1024, C = (I = (0 | I) == 7393) ? 4096 : C;
                                                                                                                                                                                                                                        break q;
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                      C = (0 | I) == 43456 ? 4096 : 1024, C = (I = (0 | I) == 43347) ? 4096 : C;
                                                                                                                                                                                                                                      break q;
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    if (Q = 4096, (0 | I) != 44012) break G;
                                                                                                                                                                                                                                    break C;
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                  if (Q = 4096, (0 | I) != 70080) break G;
                                                                                                                                                                                                                                  break C;
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                Q = 132096;
                                                                                                                                                                                                                                H: switch (I - 70462 | 0) {
                                                                                                                                                                                                                                  case 0:
                                                                                                                                                                                                                                  case 25:
                                                                                                                                                                                                                                    break C;
                                                                                                                                                                                                                                  case 15:
                                                                                                                                                                                                                                    break H;
                                                                                                                                                                                                                                  default:
                                                                                                                                                                                                                                    break G;
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                break J;
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                              if (Q = 132096, (0 | I) != 71087) break G;
                                                                                                                                                                                                                              break C;
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            if (Q = 4096, (0 | I) != 71350) break G;
                                                                                                                                                                                                                            break C;
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                          if (Q = 135168, I - 119150 >>> 0 < 5) break C;
                                                                                                                                                                                                                          break G;
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                        break J;
                                                                                                                                                                                                                      case 12:
                                                                                                                                                                                                                        C = ((0 | I) == 8419) << 6, I = 0;
                                                                                                                                                                                                                        break Y;
                                                                                                                                                                                                                      case 13:
                                                                                                                                                                                                                        M: {
                                                                                                                                                                                                                          V: {
                                                                                                                                                                                                                            Z: {
                                                                                                                                                                                                                              b: {
                                                                                                                                                                                                                                H: {
                                                                                                                                                                                                                                  a: {
                                                                                                                                                                                                                                    e: {
                                                                                                                                                                                                                                      z: {
                                                                                                                                                                                                                                        v: {
                                                                                                                                                                                                                                          AA: {
                                                                                                                                                                                                                                            EA: {
                                                                                                                                                                                                                                              wA: {
                                                                                                                                                                                                                                                GA: {
                                                                                                                                                                                                                                                  JA: {
                                                                                                                                                                                                                                                    L: {
                                                                                                                                                                                                                                                      DA: {
                                                                                                                                                                                                                                                        u: {
                                                                                                                                                                                                                                                          X: {
                                                                                                                                                                                                                                                            UA: {
                                                                                                                                                                                                                                                              FA: {
                                                                                                                                                                                                                                                                KA: {
                                                                                                                                                                                                                                                                  lA: {
                                                                                                                                                                                                                                                                    rA: {
                                                                                                                                                                                                                                                                      kA: {
                                                                                                                                                                                                                                                                        mA: {
                                                                                                                                                                                                                                                                          BI: {
                                                                                                                                                                                                                                                                            eA: {
                                                                                                                                                                                                                                                                              EI: {
                                                                                                                                                                                                                                                                                vA: {
                                                                                                                                                                                                                                                                                  UI: {
                                                                                                                                                                                                                                                                                    RI: {
                                                                                                                                                                                                                                                                                      cA: {
                                                                                                                                                                                                                                                                                        uA: {
                                                                                                                                                                                                                                                                                          _A: {
                                                                                                                                                                                                                                                                                            wI: {
                                                                                                                                                                                                                                                                                              HA: {
                                                                                                                                                                                                                                                                                                aA: {
                                                                                                                                                                                                                                                                                                  DI: {
                                                                                                                                                                                                                                                                                                    $A: {
                                                                                                                                                                                                                                                                                                      FI: {
                                                                                                                                                                                                                                                                                                        AI: {
                                                                                                                                                                                                                                                                                                          oA: {
                                                                                                                                                                                                                                                                                                            ZA: {
                                                                                                                                                                                                                                                                                                              nA: {
                                                                                                                                                                                                                                                                                                                dA: {
                                                                                                                                                                                                                                                                                                                  II: {
                                                                                                                                                                                                                                                                                                                    MI: {
                                                                                                                                                                                                                                                                                                                      NA: {
                                                                                                                                                                                                                                                                                                                        GI: {
                                                                                                                                                                                                                                                                                                                          JI: {
                                                                                                                                                                                                                                                                                                                            iI: {
                                                                                                                                                                                                                                                                                                                              if ((0 | (C = -256 & I)) <= 43775) {
                                                                                                                                                                                                                                                                                                                                if ((0 | C) <= 5887) {
                                                                                                                                                                                                                                                                                                                                  if ((0 | C) <= 2559) {
                                                                                                                                                                                                                                                                                                                                    if ((0 | C) <= 1535) {
                                                                                                                                                                                                                                                                                                                                      if ((0 | C) == 768) break iI;
                                                                                                                                                                                                                                                                                                                                      if ((0 | C) == 1024) break JI;
                                                                                                                                                                                                                                                                                                                                      if ((0 | C) != 1280) break g;
                                                                                                                                                                                                                                                                                                                                      if (I - 1425 >>> 0 >= 17) break GI;
                                                                                                                                                                                                                                                                                                                                      break J;
                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                    if ((0 | C) <= 2047) {
                                                                                                                                                                                                                                                                                                                                      if ((0 | C) == 1536) break NA;
                                                                                                                                                                                                                                                                                                                                      if ((0 | C) != 1792) break g;
                                                                                                                                                                                                                                                                                                                                      if (Q = 1024, (0 | I) == 1809) break C;
                                                                                                                                                                                                                                                                                                                                      if ((-16 & I) != 1840) break MI;
                                                                                                                                                                                                                                                                                                                                      return QA = 0, 5120;
                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                    if ((0 | C) == 2048) break II;
                                                                                                                                                                                                                                                                                                                                    if ((0 | C) != 2304) break g;
                                                                                                                                                                                                                                                                                                                                    if (I >>> 0 >= 2307) break dA;
                                                                                                                                                                                                                                                                                                                                    break G;
                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                  if ((0 | C) <= 3583) {
                                                                                                                                                                                                                                                                                                                                    if ((0 | C) <= 3071) {
                                                                                                                                                                                                                                                                                                                                      if ((0 | C) == 2560) break nA;
                                                                                                                                                                                                                                                                                                                                      if ((0 | C) != 2816) break g;
                                                                                                                                                                                                                                                                                                                                      switch (Q = 1024, I - 2876 | 0) {
                                                                                                                                                                                                                                                                                                                                        case 0:
                                                                                                                                                                                                                                                                                                                                          break J;
                                                                                                                                                                                                                                                                                                                                        case 3:
                                                                                                                                                                                                                                                                                                                                          break C;
                                                                                                                                                                                                                                                                                                                                        case 1:
                                                                                                                                                                                                                                                                                                                                        case 2:
                                                                                                                                                                                                                                                                                                                                          break oA;
                                                                                                                                                                                                                                                                                                                                        default:
                                                                                                                                                                                                                                                                                                                                          break ZA;
                                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                                    if ((0 | C) == 3072) break AI;
                                                                                                                                                                                                                                                                                                                                    if ((0 | C) != 3328) break g;
                                                                                                                                                                                                                                                                                                                                    if ((0 | (C = -2 & I)) != 3328) break FI;
                                                                                                                                                                                                                                                                                                                                    break G;
                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                  if ((0 | C) <= 4095) {
                                                                                                                                                                                                                                                                                                                                    if ((0 | C) == 3584) break $A;
                                                                                                                                                                                                                                                                                                                                    if ((0 | C) != 3840) break g;
                                                                                                                                                                                                                                                                                                                                    if ((0 | (C = -2 & I)) != 3864) break DI;
                                                                                                                                                                                                                                                                                                                                    break J;
                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                  if ((0 | C) == 4096) break aA;
                                                                                                                                                                                                                                                                                                                                  if ((0 | C) != 4864 || (Q = 1024, (0 | I) != 4959)) break g;
                                                                                                                                                                                                                                                                                                                                  break C;
                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                if ((0 | C) <= 8191) {
                                                                                                                                                                                                                                                                                                                                  if ((0 | C) <= 6655) {
                                                                                                                                                                                                                                                                                                                                    if ((0 | C) == 5888) break HA;
                                                                                                                                                                                                                                                                                                                                    if ((0 | C) == 6144) break wI;
                                                                                                                                                                                                                                                                                                                                    if ((0 | C) != 6400) break g;
                                                                                                                                                                                                                                                                                                                                    if ((C = I - 6432 | 0) >>> 0 <= 18 && (Q = 1024, 1 << C & 262535)) break C;
                                                                                                                                                                                                                                                                                                                                    if (Q = 4096, I - 6457 >>> 0 >= 3) break g;
                                                                                                                                                                                                                                                                                                                                    break C;
                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                  if ((0 | C) <= 7167) {
                                                                                                                                                                                                                                                                                                                                    if ((0 | C) == 6656) break _A;
                                                                                                                                                                                                                                                                                                                                    if ((0 | C) != 6912) break g;
                                                                                                                                                                                                                                                                                                                                    if (Q = 1024, (-4 & I) == 6912) break C;
                                                                                                                                                                                                                                                                                                                                    if ((0 | I) != 6964) break uA;
                                                                                                                                                                                                                                                                                                                                    break J;
                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                  if ((0 | C) == 7168) break cA;
                                                                                                                                                                                                                                                                                                                                  if ((0 | C) != 7424) break g;
                                                                                                                                                                                                                                                                                                                                  if (Q = 4096, I - 7620 >>> 0 < 12 || (Q = 1024, I - 7655 >>> 0 < 14)) break C;
                                                                                                                                                                                                                                                                                                                                  if ((I = I - 7669 | 0) >>> 0 >= 11) break g;
                                                                                                                                                                                                                                                                                                                                  C = A[(I = 82104 + (I << 3) | 0) >> 2];
                                                                                                                                                                                                                                                                                                                                  break y;
                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                if ((0 | C) <= 42495) {
                                                                                                                                                                                                                                                                                                                                  if ((0 | C) <= 11519) {
                                                                                                                                                                                                                                                                                                                                    if ((0 | C) == 8192) break RI;
                                                                                                                                                                                                                                                                                                                                    if ((0 | C) != 11264 || (Q = 4096, I - 11503 >>> 0 >= 3)) break g;
                                                                                                                                                                                                                                                                                                                                    break C;
                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                  if ((0 | C) == 11520) break UI;
                                                                                                                                                                                                                                                                                                                                  if ((0 | C) != 12288) break g;
                                                                                                                                                                                                                                                                                                                                  if (I - 12330 >>> 0 >= 4) break vA;
                                                                                                                                                                                                                                                                                                                                  break J;
                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                if ((0 | C) <= 43263) {
                                                                                                                                                                                                                                                                                                                                  if ((0 | C) == 42496) break EI;
                                                                                                                                                                                                                                                                                                                                  if ((0 | C) != 43008) break g;
                                                                                                                                                                                                                                                                                                                                  if (I - 43045 >>> 0 >= 2) break eA;
                                                                                                                                                                                                                                                                                                                                  break G;
                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                if ((0 | C) == 43264) break BI;
                                                                                                                                                                                                                                                                                                                                if ((0 | C) != 43520) break g;
                                                                                                                                                                                                                                                                                                                                switch (Q = 1024, I - 43561 | 0) {
                                                                                                                                                                                                                                                                                                                                  case 83:
                                                                                                                                                                                                                                                                                                                                  case 150:
                                                                                                                                                                                                                                                                                                                                  case 152:
                                                                                                                                                                                                                                                                                                                                    break J;
                                                                                                                                                                                                                                                                                                                                  case 0:
                                                                                                                                                                                                                                                                                                                                  case 1:
                                                                                                                                                                                                                                                                                                                                  case 2:
                                                                                                                                                                                                                                                                                                                                  case 3:
                                                                                                                                                                                                                                                                                                                                  case 4:
                                                                                                                                                                                                                                                                                                                                  case 5:
                                                                                                                                                                                                                                                                                                                                  case 8:
                                                                                                                                                                                                                                                                                                                                  case 9:
                                                                                                                                                                                                                                                                                                                                  case 12:
                                                                                                                                                                                                                                                                                                                                  case 13:
                                                                                                                                                                                                                                                                                                                                  case 26:
                                                                                                                                                                                                                                                                                                                                  case 35:
                                                                                                                                                                                                                                                                                                                                  case 135:
                                                                                                                                                                                                                                                                                                                                  case 137:
                                                                                                                                                                                                                                                                                                                                  case 138:
                                                                                                                                                                                                                                                                                                                                  case 139:
                                                                                                                                                                                                                                                                                                                                  case 142:
                                                                                                                                                                                                                                                                                                                                  case 143:
                                                                                                                                                                                                                                                                                                                                  case 149:
                                                                                                                                                                                                                                                                                                                                    break C;
                                                                                                                                                                                                                                                                                                                                  default:
                                                                                                                                                                                                                                                                                                                                    break mA;
                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                              if ((0 | C) <= 71423) {
                                                                                                                                                                                                                                                                                                                                if ((0 | C) <= 69375) {
                                                                                                                                                                                                                                                                                                                                  if ((0 | C) <= 66047) {
                                                                                                                                                                                                                                                                                                                                    if ((0 | C) == 43776) break kA;
                                                                                                                                                                                                                                                                                                                                    if ((0 | C) == 64256) break rA;
                                                                                                                                                                                                                                                                                                                                    if ((0 | C) != 65024) break g;
                                                                                                                                                                                                                                                                                                                                    if (Q = 536870912, I - 65024 >>> 0 < 15 || (g = 64, (0 | I) == 65039)) break C;
                                                                                                                                                                                                                                                                                                                                    if (Q = 4096, g = 0, (-16 & I) != 65056) break g;
                                                                                                                                                                                                                                                                                                                                    break C;
                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                  if ((0 | C) <= 68095) {
                                                                                                                                                                                                                                                                                                                                    if ((0 | C) == 66048) break lA;
                                                                                                                                                                                                                                                                                                                                    if ((0 | C) != 66304 || (Q = 1024, I - 66422 >>> 0 >= 5)) break g;
                                                                                                                                                                                                                                                                                                                                    break C;
                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                  if ((0 | C) == 68096) break KA;
                                                                                                                                                                                                                                                                                                                                  if ((0 | C) != 68864 || (Q = 5120, (-4 & I) != 68900)) break g;
                                                                                                                                                                                                                                                                                                                                  break C;
                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                if ((0 | C) <= 70399) {
                                                                                                                                                                                                                                                                                                                                  if ((0 | C) <= 69887) {
                                                                                                                                                                                                                                                                                                                                    if ((0 | C) == 69376) break FA;
                                                                                                                                                                                                                                                                                                                                    if ((0 | C) != 69632) break g;
                                                                                                                                                                                                                                                                                                                                    if (I - 69688 >>> 0 >= 14) break UA;
                                                                                                                                                                                                                                                                                                                                    break G;
                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                  if ((0 | C) == 69888) break X;
                                                                                                                                                                                                                                                                                                                                  if ((0 | C) != 70144) break g;
                                                                                                                                                                                                                                                                                                                                  if (Q = 1024, I - 70191 >>> 0 < 3) break C;
                                                                                                                                                                                                                                                                                                                                  switch (I - 70196 | 0) {
                                                                                                                                                                                                                                                                                                                                    case 2:
                                                                                                                                                                                                                                                                                                                                      break J;
                                                                                                                                                                                                                                                                                                                                    case 0:
                                                                                                                                                                                                                                                                                                                                    case 3:
                                                                                                                                                                                                                                                                                                                                    case 10:
                                                                                                                                                                                                                                                                                                                                      break C;
                                                                                                                                                                                                                                                                                                                                    case 1:
                                                                                                                                                                                                                                                                                                                                    case 4:
                                                                                                                                                                                                                                                                                                                                    case 5:
                                                                                                                                                                                                                                                                                                                                    case 6:
                                                                                                                                                                                                                                                                                                                                    case 7:
                                                                                                                                                                                                                                                                                                                                    case 8:
                                                                                                                                                                                                                                                                                                                                    case 9:
                                                                                                                                                                                                                                                                                                                                      break DA;
                                                                                                                                                                                                                                                                                                                                    default:
                                                                                                                                                                                                                                                                                                                                      break u;
                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                if ((0 | C) <= 70911) {
                                                                                                                                                                                                                                                                                                                                  if ((0 | C) == 70400) break L;
                                                                                                                                                                                                                                                                                                                                  if ((0 | C) != 70656) break g;
                                                                                                                                                                                                                                                                                                                                  if ((-8 & I) != 70712) break JA;
                                                                                                                                                                                                                                                                                                                                  break G;
                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                if ((0 | C) == 70912) break GA;
                                                                                                                                                                                                                                                                                                                                if ((0 | C) != 71168) break g;
                                                                                                                                                                                                                                                                                                                                if (Q = 1024, I - 71219 >>> 0 < 8) break C;
                                                                                                                                                                                                                                                                                                                                switch (I - 71229 | 0) {
                                                                                                                                                                                                                                                                                                                                  case 2:
                                                                                                                                                                                                                                                                                                                                    break J;
                                                                                                                                                                                                                                                                                                                                  case 0:
                                                                                                                                                                                                                                                                                                                                  case 3:
                                                                                                                                                                                                                                                                                                                                    break C;
                                                                                                                                                                                                                                                                                                                                  case 1:
                                                                                                                                                                                                                                                                                                                                    break EA;
                                                                                                                                                                                                                                                                                                                                  default:
                                                                                                                                                                                                                                                                                                                                    break wA;
                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                              if ((0 | C) <= 92927) {
                                                                                                                                                                                                                                                                                                                                if ((0 | C) <= 72703) {
                                                                                                                                                                                                                                                                                                                                  if ((0 | C) == 71424) break TI;
                                                                                                                                                                                                                                                                                                                                  if ((0 | C) == 71680) break AA;
                                                                                                                                                                                                                                                                                                                                  if ((0 | C) != 72192) break g;
                                                                                                                                                                                                                                                                                                                                  if (I - 72193 >>> 0 >= 10) break v;
                                                                                                                                                                                                                                                                                                                                  break G;
                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                if ((0 | C) <= 73215) {
                                                                                                                                                                                                                                                                                                                                  if ((0 | C) == 72704) break z;
                                                                                                                                                                                                                                                                                                                                  if ((0 | C) != 72960) break g;
                                                                                                                                                                                                                                                                                                                                  if ((C = I - 73009 | 0) >>> 0 < 19) break VI;
                                                                                                                                                                                                                                                                                                                                  break $;
                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                if ((0 | C) == 73216) break e;
                                                                                                                                                                                                                                                                                                                                if ((0 | C) != 92672 || (Q = 4096, I - 92912 >>> 0 >= 5)) break g;
                                                                                                                                                                                                                                                                                                                                break C;
                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                              if ((0 | C) <= 122879) {
                                                                                                                                                                                                                                                                                                                                if ((0 | C) <= 113663) {
                                                                                                                                                                                                                                                                                                                                  if ((0 | C) == 92928) break a;
                                                                                                                                                                                                                                                                                                                                  if ((0 | C) != 93952 || (Q = 4096, I - 94095 >>> 0 >= 4)) break g;
                                                                                                                                                                                                                                                                                                                                  break C;
                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                                if ((0 | C) == 113664) break H;
                                                                                                                                                                                                                                                                                                                                if ((0 | C) != 119040) break g;
                                                                                                                                                                                                                                                                                                                                switch (Q = 4096, I - 119143 | 0) {
                                                                                                                                                                                                                                                                                                                                  case 0:
                                                                                                                                                                                                                                                                                                                                  case 1:
                                                                                                                                                                                                                                                                                                                                  case 2:
                                                                                                                                                                                                                                                                                                                                  case 20:
                                                                                                                                                                                                                                                                                                                                  case 21:
                                                                                                                                                                                                                                                                                                                                  case 22:
                                                                                                                                                                                                                                                                                                                                  case 23:
                                                                                                                                                                                                                                                                                                                                  case 24:
                                                                                                                                                                                                                                                                                                                                  case 25:
                                                                                                                                                                                                                                                                                                                                  case 26:
                                                                                                                                                                                                                                                                                                                                  case 27:
                                                                                                                                                                                                                                                                                                                                  case 30:
                                                                                                                                                                                                                                                                                                                                  case 31:
                                                                                                                                                                                                                                                                                                                                  case 32:
                                                                                                                                                                                                                                                                                                                                  case 33:
                                                                                                                                                                                                                                                                                                                                  case 34:
                                                                                                                                                                                                                                                                                                                                  case 35:
                                                                                                                                                                                                                                                                                                                                  case 36:
                                                                                                                                                                                                                                                                                                                                  case 67:
                                                                                                                                                                                                                                                                                                                                  case 68:
                                                                                                                                                                                                                                                                                                                                  case 69:
                                                                                                                                                                                                                                                                                                                                  case 70:
                                                                                                                                                                                                                                                                                                                                    break C;
                                                                                                                                                                                                                                                                                                                                  default:
                                                                                                                                                                                                                                                                                                                                    break g;
                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                              if ((0 | C) <= 125183) {
                                                                                                                                                                                                                                                                                                                                if ((0 | C) == 122880) break b;
                                                                                                                                                                                                                                                                                                                                if ((0 | C) != 124928 || (Q = 4096, I - 125136 >>> 0 >= 7)) break g;
                                                                                                                                                                                                                                                                                                                                break C;
                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                              if ((0 | C) == 125184) break Z;
                                                                                                                                                                                                                                                                                                                              if ((0 | C) != 917760 || (Q = 536870912, I - 917760 >>> 0 >= 240)) break g;
                                                                                                                                                                                                                                                                                                                              break C;
                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                            if (I - 768 >>> 0 < 69) break J;
                                                                                                                                                                                                                                                                                                                            if (Q = 21504, (0 | I) == 837) break C;
                                                                                                                                                                                                                                                                                                                            if (I - 838 >>> 0 < 9) break J;
                                                                                                                                                                                                                                                                                                                            if (Q = 4194304, (0 | I) == 847) break C;
                                                                                                                                                                                                                                                                                                                            if ((-8 & I) == 848) break J;
                                                                                                                                                                                                                                                                                                                            if (Q = 4096, I - 861 >>> 0 >= 6) break g;
                                                                                                                                                                                                                                                                                                                            break C;
                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                          if (Q = 4096, I - 1155 >>> 0 >= 5) break g;
                                                                                                                                                                                                                                                                                                                          break C;
                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                        if (Q = 4096, I - 1443 >>> 0 < 13 || (Q = 5120, I - 1456 >>> 0 < 14)) break C;
                                                                                                                                                                                                                                                                                                                        if ((I = I - 1471 | 0) >>> 0 >= 9) break g;
                                                                                                                                                                                                                                                                                                                        C = A[(I = 81944 + (I << 3) | 0) >> 2];
                                                                                                                                                                                                                                                                                                                        break y;
                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                      if (I - 1552 >>> 0 < 11) break G;
                                                                                                                                                                                                                                                                                                                      if (Q = 5120, I - 1611 >>> 0 < 8) break C;
                                                                                                                                                                                                                                                                                                                      if (I - 1619 >>> 0 < 4) break G;
                                                                                                                                                                                                                                                                                                                      NA: switch (I - 1623 | 0) {
                                                                                                                                                                                                                                                                                                                        case 1:
                                                                                                                                                                                                                                                                                                                          break J;
                                                                                                                                                                                                                                                                                                                        case 0:
                                                                                                                                                                                                                                                                                                                          break C;
                                                                                                                                                                                                                                                                                                                        case 2:
                                                                                                                                                                                                                                                                                                                        case 3:
                                                                                                                                                                                                                                                                                                                        case 4:
                                                                                                                                                                                                                                                                                                                        case 5:
                                                                                                                                                                                                                                                                                                                        case 6:
                                                                                                                                                                                                                                                                                                                        case 7:
                                                                                                                                                                                                                                                                                                                        case 8:
                                                                                                                                                                                                                                                                                                                        case 25:
                                                                                                                                                                                                                                                                                                                        case 127:
                                                                                                                                                                                                                                                                                                                        case 128:
                                                                                                                                                                                                                                                                                                                        case 129:
                                                                                                                                                                                                                                                                                                                        case 130:
                                                                                                                                                                                                                                                                                                                        case 131:
                                                                                                                                                                                                                                                                                                                        case 132:
                                                                                                                                                                                                                                                                                                                        case 133:
                                                                                                                                                                                                                                                                                                                          break G;
                                                                                                                                                                                                                                                                                                                        default:
                                                                                                                                                                                                                                                                                                                          break NA;
                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                      if (Q = 4096, I - 1759 >>> 0 < 2) break C;
                                                                                                                                                                                                                                                                                                                      if ((C = I - 1761 | 0) >>> 0 < 8) break tI;
                                                                                                                                                                                                                                                                                                                      break jA;
                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                    if (I - 1856 >>> 0 < 11) break J;
                                                                                                                                                                                                                                                                                                                    if (Q = 5120, I - 1958 >>> 0 < 11) break C;
                                                                                                                                                                                                                                                                                                                    if (Q = 4096, I - 2027 >>> 0 >= 9) break g;
                                                                                                                                                                                                                                                                                                                    break C;
                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                  Q = 1024;
                                                                                                                                                                                                                                                                                                                  II: switch ((-2 & I) - 2070 | 0) {
                                                                                                                                                                                                                                                                                                                    case 2:
                                                                                                                                                                                                                                                                                                                      break J;
                                                                                                                                                                                                                                                                                                                    case 0:
                                                                                                                                                                                                                                                                                                                      break C;
                                                                                                                                                                                                                                                                                                                    default:
                                                                                                                                                                                                                                                                                                                      break II;
                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                  if (I - 2260 >>> 0 < 12 | I - 2089 >>> 0 < 4 | I - 2075 >>> 0 < 9 | I - 2085 >>> 0 < 3) break G;
                                                                                                                                                                                                                                                                                                                  if (I - 2275 >>> 0 < 7) return QA = 0, 5120;
                                                                                                                                                                                                                                                                                                                  if (Q = 4096, I - 2282 >>> 0 < 6 || (Q = 5120, I - 2288 >>> 0 < 15)) break C;
                                                                                                                                                                                                                                                                                                                  if (Q = 1024, (0 | I) != 2303) break g;
                                                                                                                                                                                                                                                                                                                  break C;
                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                Q = 1024;
                                                                                                                                                                                                                                                                                                                dA: switch (I - 2362 | 0) {
                                                                                                                                                                                                                                                                                                                  case 2:
                                                                                                                                                                                                                                                                                                                    break J;
                                                                                                                                                                                                                                                                                                                  case 0:
                                                                                                                                                                                                                                                                                                                    break C;
                                                                                                                                                                                                                                                                                                                  default:
                                                                                                                                                                                                                                                                                                                    break dA;
                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                if (I - 2369 >>> 0 < 8) break G;
                                                                                                                                                                                                                                                                                                                Q = 4096;
                                                                                                                                                                                                                                                                                                                dA: switch (I - 2381 | 0) {
                                                                                                                                                                                                                                                                                                                  case 0:
                                                                                                                                                                                                                                                                                                                  case 4:
                                                                                                                                                                                                                                                                                                                  case 5:
                                                                                                                                                                                                                                                                                                                  case 6:
                                                                                                                                                                                                                                                                                                                  case 7:
                                                                                                                                                                                                                                                                                                                  case 111:
                                                                                                                                                                                                                                                                                                                    break C;
                                                                                                                                                                                                                                                                                                                  case 8:
                                                                                                                                                                                                                                                                                                                  case 9:
                                                                                                                                                                                                                                                                                                                  case 10:
                                                                                                                                                                                                                                                                                                                  case 21:
                                                                                                                                                                                                                                                                                                                  case 22:
                                                                                                                                                                                                                                                                                                                  case 52:
                                                                                                                                                                                                                                                                                                                    break G;
                                                                                                                                                                                                                                                                                                                  default:
                                                                                                                                                                                                                                                                                                                    break dA;
                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                if (I - 2497 >>> 0 < 4) break G;
                                                                                                                                                                                                                                                                                                                if ((0 | I) == 2509) break C;
                                                                                                                                                                                                                                                                                                                if (Q = 1024, (-2 & I) != 2530) break g;
                                                                                                                                                                                                                                                                                                                break C;
                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                              if (I - 2561 >>> 0 < 2) break G;
                                                                                                                                                                                                                                                                                                              Q = 4096;
                                                                                                                                                                                                                                                                                                              nA: switch (I - 2620 | 0) {
                                                                                                                                                                                                                                                                                                                case 0:
                                                                                                                                                                                                                                                                                                                case 17:
                                                                                                                                                                                                                                                                                                                case 128:
                                                                                                                                                                                                                                                                                                                case 145:
                                                                                                                                                                                                                                                                                                                  break C;
                                                                                                                                                                                                                                                                                                                case 5:
                                                                                                                                                                                                                                                                                                                case 6:
                                                                                                                                                                                                                                                                                                                case 11:
                                                                                                                                                                                                                                                                                                                case 12:
                                                                                                                                                                                                                                                                                                                case 15:
                                                                                                                                                                                                                                                                                                                case 16:
                                                                                                                                                                                                                                                                                                                case 21:
                                                                                                                                                                                                                                                                                                                case 52:
                                                                                                                                                                                                                                                                                                                case 53:
                                                                                                                                                                                                                                                                                                                case 57:
                                                                                                                                                                                                                                                                                                                case 69:
                                                                                                                                                                                                                                                                                                                case 70:
                                                                                                                                                                                                                                                                                                                case 133:
                                                                                                                                                                                                                                                                                                                case 134:
                                                                                                                                                                                                                                                                                                                case 135:
                                                                                                                                                                                                                                                                                                                case 136:
                                                                                                                                                                                                                                                                                                                case 137:
                                                                                                                                                                                                                                                                                                                case 139:
                                                                                                                                                                                                                                                                                                                case 140:
                                                                                                                                                                                                                                                                                                                case 166:
                                                                                                                                                                                                                                                                                                                case 167:
                                                                                                                                                                                                                                                                                                                case 190:
                                                                                                                                                                                                                                                                                                                case 191:
                                                                                                                                                                                                                                                                                                                case 192:
                                                                                                                                                                                                                                                                                                                  break G;
                                                                                                                                                                                                                                                                                                                default:
                                                                                                                                                                                                                                                                                                                  break nA;
                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                              if (I - 2813 >>> 0 >= 3) break g;
                                                                                                                                                                                                                                                                                                              break C;
                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                            if ((0 | I) == 2817) break G;
                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                          if (I - 2881 >>> 0 < 4) break G;
                                                                                                                                                                                                                                                                                                          Q = 4096;
                                                                                                                                                                                                                                                                                                          oA: switch (I - 2893 | 0) {
                                                                                                                                                                                                                                                                                                            case 0:
                                                                                                                                                                                                                                                                                                              break C;
                                                                                                                                                                                                                                                                                                            case 9:
                                                                                                                                                                                                                                                                                                              break G;
                                                                                                                                                                                                                                                                                                            default:
                                                                                                                                                                                                                                                                                                              break oA;
                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                          if ((-2 & I) == 2914) break G;
                                                                                                                                                                                                                                                                                                          Q = 1024;
                                                                                                                                                                                                                                                                                                          oA: switch (I - 3008 | 0) {
                                                                                                                                                                                                                                                                                                            default:
                                                                                                                                                                                                                                                                                                              if ((0 | I) != 2946) break g;
                                                                                                                                                                                                                                                                                                              break C;
                                                                                                                                                                                                                                                                                                            case 1:
                                                                                                                                                                                                                                                                                                            case 2:
                                                                                                                                                                                                                                                                                                            case 3:
                                                                                                                                                                                                                                                                                                            case 4:
                                                                                                                                                                                                                                                                                                            case 5:
                                                                                                                                                                                                                                                                                                            case 6:
                                                                                                                                                                                                                                                                                                            case 7:
                                                                                                                                                                                                                                                                                                            case 8:
                                                                                                                                                                                                                                                                                                            case 9:
                                                                                                                                                                                                                                                                                                            case 10:
                                                                                                                                                                                                                                                                                                            case 11:
                                                                                                                                                                                                                                                                                                            case 12:
                                                                                                                                                                                                                                                                                                              break g;
                                                                                                                                                                                                                                                                                                            case 0:
                                                                                                                                                                                                                                                                                                              break C;
                                                                                                                                                                                                                                                                                                            case 13:
                                                                                                                                                                                                                                                                                                              break oA;
                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                          break J;
                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                        Q = 1024;
                                                                                                                                                                                                                                                                                                        AI: switch (I - 3072 | 0) {
                                                                                                                                                                                                                                                                                                          case 77:
                                                                                                                                                                                                                                                                                                          case 188:
                                                                                                                                                                                                                                                                                                          case 205:
                                                                                                                                                                                                                                                                                                            break J;
                                                                                                                                                                                                                                                                                                          case 0:
                                                                                                                                                                                                                                                                                                          case 62:
                                                                                                                                                                                                                                                                                                          case 63:
                                                                                                                                                                                                                                                                                                          case 64:
                                                                                                                                                                                                                                                                                                          case 70:
                                                                                                                                                                                                                                                                                                          case 71:
                                                                                                                                                                                                                                                                                                          case 72:
                                                                                                                                                                                                                                                                                                          case 74:
                                                                                                                                                                                                                                                                                                          case 75:
                                                                                                                                                                                                                                                                                                          case 76:
                                                                                                                                                                                                                                                                                                          case 85:
                                                                                                                                                                                                                                                                                                          case 86:
                                                                                                                                                                                                                                                                                                          case 98:
                                                                                                                                                                                                                                                                                                          case 99:
                                                                                                                                                                                                                                                                                                          case 129:
                                                                                                                                                                                                                                                                                                          case 191:
                                                                                                                                                                                                                                                                                                          case 198:
                                                                                                                                                                                                                                                                                                          case 204:
                                                                                                                                                                                                                                                                                                            break C;
                                                                                                                                                                                                                                                                                                          default:
                                                                                                                                                                                                                                                                                                            break AI;
                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                        if ((-2 & I) != 3298) break g;
                                                                                                                                                                                                                                                                                                        break C;
                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                      if (Q = 4096, I - 3387 >>> 0 < 2) break C;
                                                                                                                                                                                                                                                                                                      if (I - 3393 >>> 0 < 4) break G;
                                                                                                                                                                                                                                                                                                      if ((0 | I) == 3405) break C;
                                                                                                                                                                                                                                                                                                      if ((0 | C) == 3426) break G;
                                                                                                                                                                                                                                                                                                      switch (I - 3530 | 0) {
                                                                                                                                                                                                                                                                                                        case 0:
                                                                                                                                                                                                                                                                                                          break C;
                                                                                                                                                                                                                                                                                                        case 8:
                                                                                                                                                                                                                                                                                                        case 9:
                                                                                                                                                                                                                                                                                                        case 10:
                                                                                                                                                                                                                                                                                                        case 12:
                                                                                                                                                                                                                                                                                                          break G;
                                                                                                                                                                                                                                                                                                        default:
                                                                                                                                                                                                                                                                                                          break g;
                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                    if ((C = I - 3633 | 0) >>> 0 < 10) break pI;
                                                                                                                                                                                                                                                                                                    break SA;
                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                  if ((Q = I - 3893 | 0) >>> 0 > 4 | !(1 << Q & 21)) break TA;
                                                                                                                                                                                                                                                                                                  break J;
                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                Q = 1024;
                                                                                                                                                                                                                                                                                                aA: switch (I - 4141 | 0) {
                                                                                                                                                                                                                                                                                                  case 10:
                                                                                                                                                                                                                                                                                                  case 12:
                                                                                                                                                                                                                                                                                                  case 13:
                                                                                                                                                                                                                                                                                                    break J;
                                                                                                                                                                                                                                                                                                  case 0:
                                                                                                                                                                                                                                                                                                  case 1:
                                                                                                                                                                                                                                                                                                  case 2:
                                                                                                                                                                                                                                                                                                  case 3:
                                                                                                                                                                                                                                                                                                  case 5:
                                                                                                                                                                                                                                                                                                  case 6:
                                                                                                                                                                                                                                                                                                  case 7:
                                                                                                                                                                                                                                                                                                  case 8:
                                                                                                                                                                                                                                                                                                  case 9:
                                                                                                                                                                                                                                                                                                  case 16:
                                                                                                                                                                                                                                                                                                  case 17:
                                                                                                                                                                                                                                                                                                  case 43:
                                                                                                                                                                                                                                                                                                  case 44:
                                                                                                                                                                                                                                                                                                  case 49:
                                                                                                                                                                                                                                                                                                  case 50:
                                                                                                                                                                                                                                                                                                  case 51:
                                                                                                                                                                                                                                                                                                  case 68:
                                                                                                                                                                                                                                                                                                  case 69:
                                                                                                                                                                                                                                                                                                  case 70:
                                                                                                                                                                                                                                                                                                  case 71:
                                                                                                                                                                                                                                                                                                  case 85:
                                                                                                                                                                                                                                                                                                  case 88:
                                                                                                                                                                                                                                                                                                  case 89:
                                                                                                                                                                                                                                                                                                    break C;
                                                                                                                                                                                                                                                                                                  default:
                                                                                                                                                                                                                                                                                                    break aA;
                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                C = (Q = (0 | I) == 4253) >>> 22 | 0, Q = (I = (0 | I) == 4237) ? 4096 : Q << 10;
                                                                                                                                                                                                                                                                                                break j;
                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                              Q = 1024;
                                                                                                                                                                                                                                                                                              HA: {
                                                                                                                                                                                                                                                                                                aA: switch (I - 5906 | 0) {
                                                                                                                                                                                                                                                                                                  case 0:
                                                                                                                                                                                                                                                                                                  case 1:
                                                                                                                                                                                                                                                                                                  case 32:
                                                                                                                                                                                                                                                                                                  case 33:
                                                                                                                                                                                                                                                                                                    break C;
                                                                                                                                                                                                                                                                                                  case 2:
                                                                                                                                                                                                                                                                                                  case 3:
                                                                                                                                                                                                                                                                                                  case 4:
                                                                                                                                                                                                                                                                                                  case 5:
                                                                                                                                                                                                                                                                                                  case 6:
                                                                                                                                                                                                                                                                                                  case 7:
                                                                                                                                                                                                                                                                                                  case 8:
                                                                                                                                                                                                                                                                                                  case 9:
                                                                                                                                                                                                                                                                                                  case 10:
                                                                                                                                                                                                                                                                                                  case 11:
                                                                                                                                                                                                                                                                                                  case 12:
                                                                                                                                                                                                                                                                                                  case 13:
                                                                                                                                                                                                                                                                                                  case 14:
                                                                                                                                                                                                                                                                                                  case 15:
                                                                                                                                                                                                                                                                                                  case 16:
                                                                                                                                                                                                                                                                                                  case 17:
                                                                                                                                                                                                                                                                                                  case 18:
                                                                                                                                                                                                                                                                                                  case 19:
                                                                                                                                                                                                                                                                                                  case 20:
                                                                                                                                                                                                                                                                                                  case 21:
                                                                                                                                                                                                                                                                                                  case 22:
                                                                                                                                                                                                                                                                                                  case 23:
                                                                                                                                                                                                                                                                                                  case 24:
                                                                                                                                                                                                                                                                                                  case 25:
                                                                                                                                                                                                                                                                                                  case 26:
                                                                                                                                                                                                                                                                                                  case 27:
                                                                                                                                                                                                                                                                                                  case 28:
                                                                                                                                                                                                                                                                                                  case 29:
                                                                                                                                                                                                                                                                                                  case 30:
                                                                                                                                                                                                                                                                                                  case 31:
                                                                                                                                                                                                                                                                                                    break HA;
                                                                                                                                                                                                                                                                                                  default:
                                                                                                                                                                                                                                                                                                    break aA;
                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                switch (I - 5970 | 0) {
                                                                                                                                                                                                                                                                                                  case 0:
                                                                                                                                                                                                                                                                                                  case 1:
                                                                                                                                                                                                                                                                                                  case 32:
                                                                                                                                                                                                                                                                                                  case 33:
                                                                                                                                                                                                                                                                                                    break C;
                                                                                                                                                                                                                                                                                                  default:
                                                                                                                                                                                                                                                                                                    break HA;
                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                              if (Q = 4194304, (-2 & I) == 6068) break C;
                                                                                                                                                                                                                                                                                              if ((C = I - 6071 | 0) >>> 0 < 16) break fI;
                                                                                                                                                                                                                                                                                              break xA;
                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                            if (Q = 536870912, I - 6155 >>> 0 < 3 || (Q = 67109888, I - 6277 >>> 0 < 2)) break C;
                                                                                                                                                                                                                                                                                            if (Q = 1024, (0 | I) != 6313) break g;
                                                                                                                                                                                                                                                                                            break C;
                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                          if (I - 6679 >>> 0 < 2) break G;
                                                                                                                                                                                                                                                                                          Q = 1024;
                                                                                                                                                                                                                                                                                          _A: switch (I - 6683 | 0) {
                                                                                                                                                                                                                                                                                            case 0:
                                                                                                                                                                                                                                                                                            case 59:
                                                                                                                                                                                                                                                                                            case 61:
                                                                                                                                                                                                                                                                                            case 62:
                                                                                                                                                                                                                                                                                            case 63:
                                                                                                                                                                                                                                                                                            case 64:
                                                                                                                                                                                                                                                                                            case 65:
                                                                                                                                                                                                                                                                                            case 66:
                                                                                                                                                                                                                                                                                            case 67:
                                                                                                                                                                                                                                                                                            case 71:
                                                                                                                                                                                                                                                                                            case 74:
                                                                                                                                                                                                                                                                                            case 75:
                                                                                                                                                                                                                                                                                            case 76:
                                                                                                                                                                                                                                                                                            case 77:
                                                                                                                                                                                                                                                                                            case 78:
                                                                                                                                                                                                                                                                                            case 79:
                                                                                                                                                                                                                                                                                            case 80:
                                                                                                                                                                                                                                                                                            case 81:
                                                                                                                                                                                                                                                                                            case 88:
                                                                                                                                                                                                                                                                                            case 89:
                                                                                                                                                                                                                                                                                              break C;
                                                                                                                                                                                                                                                                                            default:
                                                                                                                                                                                                                                                                                              break _A;
                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                          if (Q = 4096, I - 6832 >>> 0 < 14) break C;
                                                                                                                                                                                                                                                                                          if ((I = I - 6773 | 0) >>> 0 >= 11) break g;
                                                                                                                                                                                                                                                                                          C = A[(I = 82016 + (I << 3) | 0) >> 2];
                                                                                                                                                                                                                                                                                          break y;
                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                        if (I - 6966 >>> 0 < 5) break C;
                                                                                                                                                                                                                                                                                        uA: switch (I - 6972 | 0) {
                                                                                                                                                                                                                                                                                          case 0:
                                                                                                                                                                                                                                                                                          case 6:
                                                                                                                                                                                                                                                                                            break C;
                                                                                                                                                                                                                                                                                          default:
                                                                                                                                                                                                                                                                                            break uA;
                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                        if (I - 7019 >>> 0 < 9) break J;
                                                                                                                                                                                                                                                                                        switch (I - 7040 | 0) {
                                                                                                                                                                                                                                                                                          case 43:
                                                                                                                                                                                                                                                                                            break J;
                                                                                                                                                                                                                                                                                          case 0:
                                                                                                                                                                                                                                                                                          case 1:
                                                                                                                                                                                                                                                                                          case 34:
                                                                                                                                                                                                                                                                                          case 35:
                                                                                                                                                                                                                                                                                          case 36:
                                                                                                                                                                                                                                                                                          case 37:
                                                                                                                                                                                                                                                                                          case 40:
                                                                                                                                                                                                                                                                                          case 41:
                                                                                                                                                                                                                                                                                          case 44:
                                                                                                                                                                                                                                                                                          case 45:
                                                                                                                                                                                                                                                                                          case 104:
                                                                                                                                                                                                                                                                                          case 105:
                                                                                                                                                                                                                                                                                          case 109:
                                                                                                                                                                                                                                                                                          case 111:
                                                                                                                                                                                                                                                                                          case 112:
                                                                                                                                                                                                                                                                                          case 113:
                                                                                                                                                                                                                                                                                            break C;
                                                                                                                                                                                                                                                                                          default:
                                                                                                                                                                                                                                                                                            break g;
                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                      if (Q = 1024, I - 7212 >>> 0 < 8) break C;
                                                                                                                                                                                                                                                                                      Q = 12288;
                                                                                                                                                                                                                                                                                      cA: switch (I - 7222 | 0) {
                                                                                                                                                                                                                                                                                        case 1:
                                                                                                                                                                                                                                                                                          break J;
                                                                                                                                                                                                                                                                                        case 0:
                                                                                                                                                                                                                                                                                          break C;
                                                                                                                                                                                                                                                                                        default:
                                                                                                                                                                                                                                                                                          break cA;
                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                      if (I - 7380 >>> 0 < 13) break J;
                                                                                                                                                                                                                                                                                      Q = 4096;
                                                                                                                                                                                                                                                                                      cA: switch (I - 7376 | 0) {
                                                                                                                                                                                                                                                                                        case 0:
                                                                                                                                                                                                                                                                                        case 1:
                                                                                                                                                                                                                                                                                        case 2:
                                                                                                                                                                                                                                                                                        case 18:
                                                                                                                                                                                                                                                                                        case 19:
                                                                                                                                                                                                                                                                                        case 20:
                                                                                                                                                                                                                                                                                        case 21:
                                                                                                                                                                                                                                                                                        case 22:
                                                                                                                                                                                                                                                                                        case 23:
                                                                                                                                                                                                                                                                                        case 24:
                                                                                                                                                                                                                                                                                        case 29:
                                                                                                                                                                                                                                                                                        case 36:
                                                                                                                                                                                                                                                                                          break C;
                                                                                                                                                                                                                                                                                        default:
                                                                                                                                                                                                                                                                                          break cA;
                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                      if ((-2 & I) != 7416) break g;
                                                                                                                                                                                                                                                                                      break C;
                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                    if (Q = 128, I - 8400 >>> 0 < 13) break C;
                                                                                                                                                                                                                                                                                    if ((I = I - 8417 | 0) >>> 0 >= 15) break g;
                                                                                                                                                                                                                                                                                    C = A[(I = 82192 + (I << 3) | 0) >> 2];
                                                                                                                                                                                                                                                                                    break y;
                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                  if (Q = 1024, (-32 & I) != 11744) break g;
                                                                                                                                                                                                                                                                                  break C;
                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                if (Q = 4096, I - 12441 >>> 0 >= 2) break g;
                                                                                                                                                                                                                                                                                break C;
                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                              if ((0 | I) == 42607) break J;
                                                                                                                                                                                                                                                                              if (I - 42612 >>> 0 < 8) break G;
                                                                                                                                                                                                                                                                              if ((0 | (I &= -2)) == 42620) break J;
                                                                                                                                                                                                                                                                              if ((0 | I) == 42654) break M;
                                                                                                                                                                                                                                                                              if (Q = 4096, (0 | I) != 42736) break g;
                                                                                                                                                                                                                                                                              break C;
                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                            Q = 4096;
                                                                                                                                                                                                                                                                            eA: switch (I - 43204 | 0) {
                                                                                                                                                                                                                                                                              case 0:
                                                                                                                                                                                                                                                                                break C;
                                                                                                                                                                                                                                                                              case 1:
                                                                                                                                                                                                                                                                                break G;
                                                                                                                                                                                                                                                                              default:
                                                                                                                                                                                                                                                                                break eA;
                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                            if (I - 43232 >>> 0 >= 18) break g;
                                                                                                                                                                                                                                                                            break C;
                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                          if (I - 43302 >>> 0 < 5) break G;
                                                                                                                                                                                                                                                                          if (I - 43307 >>> 0 < 3) break J;
                                                                                                                                                                                                                                                                          if (I - 43335 >>> 0 < 11 | I - 43392 >>> 0 < 3) break G;
                                                                                                                                                                                                                                                                          if (Q = 4096, (0 | I) == 43443 || (Q = 1024, I - 43446 >>> 0 < 4)) break C;
                                                                                                                                                                                                                                                                          g = (C = (0 | I) == 43493) >>> 20 | 0, C = (I = (0 | I) == 43452) ? 1024 : C << 12;
                                                                                                                                                                                                                                                                          break d;
                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                        if ((-2 & I) == 43756) break C;
                                                                                                                                                                                                                                                                        if (Q = 4096, (0 | I) != 43766) break g;
                                                                                                                                                                                                                                                                        break C;
                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                      Q = 1024;
                                                                                                                                                                                                                                                                      kA: switch (I - 44005 | 0) {
                                                                                                                                                                                                                                                                        case 0:
                                                                                                                                                                                                                                                                        case 3:
                                                                                                                                                                                                                                                                          break C;
                                                                                                                                                                                                                                                                        case 8:
                                                                                                                                                                                                                                                                          break kA;
                                                                                                                                                                                                                                                                        default:
                                                                                                                                                                                                                                                                          break g;
                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                      break J;
                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                    if (Q = 5120, (0 | I) != 64286) break g;
                                                                                                                                                                                                                                                                    break C;
                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                  if (Q = 4096, (0 | I) != 66272) break g;
                                                                                                                                                                                                                                                                  break C;
                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                if ((-4 & I) == 68108) break G;
                                                                                                                                                                                                                                                                if ((C = I - 68097 | 0) >>> 0 < 6) break PI;
                                                                                                                                                                                                                                                                break PA;
                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                              if (Q = 4096, I - 69446 >>> 0 >= 11) break g;
                                                                                                                                                                                                                                                              break C;
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                            if (I - 69811 >>> 0 < 4) break G;
                                                                                                                                                                                                                                                            if (Q = 1024, (0 | I) == 69633) break C;
                                                                                                                                                                                                                                                            if (Q = 4096, I - 69817 >>> 0 >= 2) break g;
                                                                                                                                                                                                                                                            break C;
                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                          Q = 1024;
                                                                                                                                                                                                                                                          X: switch (I - 69888 | 0) {
                                                                                                                                                                                                                                                            case 51:
                                                                                                                                                                                                                                                            case 52:
                                                                                                                                                                                                                                                            case 115:
                                                                                                                                                                                                                                                              break J;
                                                                                                                                                                                                                                                            case 0:
                                                                                                                                                                                                                                                            case 1:
                                                                                                                                                                                                                                                            case 2:
                                                                                                                                                                                                                                                            case 39:
                                                                                                                                                                                                                                                            case 40:
                                                                                                                                                                                                                                                            case 41:
                                                                                                                                                                                                                                                            case 42:
                                                                                                                                                                                                                                                            case 43:
                                                                                                                                                                                                                                                            case 45:
                                                                                                                                                                                                                                                            case 46:
                                                                                                                                                                                                                                                            case 47:
                                                                                                                                                                                                                                                            case 48:
                                                                                                                                                                                                                                                            case 49:
                                                                                                                                                                                                                                                            case 50:
                                                                                                                                                                                                                                                              break C;
                                                                                                                                                                                                                                                            default:
                                                                                                                                                                                                                                                              break X;
                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                          if ((-2 & I) == 70016 | I - 70070 >>> 0 < 9) break C;
                                                                                                                                                                                                                                                          if (Q = 4096, I - 70090 >>> 0 >= 3) break g;
                                                                                                                                                                                                                                                          break C;
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                        if ((0 | I) == 70367) break C;
                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                      if (I - 70371 >>> 0 < 6) break C;
                                                                                                                                                                                                                                                      if (Q = 4096, I - 70377 >>> 0 >= 2) break g;
                                                                                                                                                                                                                                                      break C;
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                    if ((-2 & I) == 70400) break G;
                                                                                                                                                                                                                                                    Q = 4096;
                                                                                                                                                                                                                                                    L: switch (I - 70460 | 0) {
                                                                                                                                                                                                                                                      case 0:
                                                                                                                                                                                                                                                      case 42:
                                                                                                                                                                                                                                                      case 43:
                                                                                                                                                                                                                                                      case 44:
                                                                                                                                                                                                                                                      case 45:
                                                                                                                                                                                                                                                      case 46:
                                                                                                                                                                                                                                                      case 47:
                                                                                                                                                                                                                                                      case 48:
                                                                                                                                                                                                                                                      case 52:
                                                                                                                                                                                                                                                      case 53:
                                                                                                                                                                                                                                                      case 54:
                                                                                                                                                                                                                                                      case 55:
                                                                                                                                                                                                                                                      case 56:
                                                                                                                                                                                                                                                        break C;
                                                                                                                                                                                                                                                      case 4:
                                                                                                                                                                                                                                                        break L;
                                                                                                                                                                                                                                                      default:
                                                                                                                                                                                                                                                        break g;
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                    break G;
                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                  if ((0 | I) == 70722) break J;
                                                                                                                                                                                                                                                  if (I - 70723 >>> 0 < 2) break G;
                                                                                                                                                                                                                                                  if ((C = I - 70835 | 0) >>> 0 <= 13) break V;
                                                                                                                                                                                                                                                  break fA;
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                if ((C = I - 71090 | 0) >>> 0 < 12) break xI;
                                                                                                                                                                                                                                                break pA;
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                              switch (I - 71339 | 0) {
                                                                                                                                                                                                                                                case 0:
                                                                                                                                                                                                                                                case 2:
                                                                                                                                                                                                                                                  break C;
                                                                                                                                                                                                                                                default:
                                                                                                                                                                                                                                                  break EA;
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            if (I - 71344 >>> 0 < 6) break C;
                                                                                                                                                                                                                                            if (Q = 4096, (0 | I) != 71351) break g;
                                                                                                                                                                                                                                            break C;
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                          if (Q = 1024, I - 71727 >>> 0 < 10) break C;
                                                                                                                                                                                                                                          if (Q = 4096, I - 71737 >>> 0 >= 2) break g;
                                                                                                                                                                                                                                          break C;
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                        if ((0 | I) == 72244) break J;
                                                                                                                                                                                                                                        if (I - 72245 >>> 0 < 10) break G;
                                                                                                                                                                                                                                        if (Q = 4096, (0 | I) == 72263) break C;
                                                                                                                                                                                                                                        if (I - 72273 >>> 0 < 11) break G;
                                                                                                                                                                                                                                        if (Q = 1024, I - 72330 >>> 0 < 13) break C;
                                                                                                                                                                                                                                        Q = (C = (0 | I) == 72345) >>> 20 | 0, C = (I = (0 | I) == 72344) ? 8192 : C << 12;
                                                                                                                                                                                                                                        break f;
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                      if ((C = I - 72752 | 0) >>> 0 < 16) break bI;
                                                                                                                                                                                                                                      break tA;
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    if (Q = 1024, I - 73459 >>> 0 >= 2) break g;
                                                                                                                                                                                                                                    break C;
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                  if (Q = 1024, I - 92976 >>> 0 >= 7) break g;
                                                                                                                                                                                                                                  break C;
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                if (Q = 1024, (0 | I) != 113822) break g;
                                                                                                                                                                                                                                break C;
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                              if (Q = 1024, I - 122888 >>> 0 < 17) break C;
                                                                                                                                                                                                                              if ((I = I - 122880 | 0) >>> 0 >= 43) break g;
                                                                                                                                                                                                                              C = A[(I = 82816 + (I << 3) | 0) >> 2];
                                                                                                                                                                                                                              break y;
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            if (Q = 12288, I - 125252 >>> 0 < 3 || (Q = 1024, (0 | I) == 125255) || (Q = 4096, I - 125256 >>> 0 < 3)) break C;
                                                                                                                                                                                                                            break g;
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                          if (!(1 << C & 12479)) break fA;
                                                                                                                                                                                                                          break G;
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                        break G;
                                                                                                                                                                                                                      case 14:
                                                                                                                                                                                                                        M: {
                                                                                                                                                                                                                          if ((0 | (C = -256 & I)) != 120576) {
                                                                                                                                                                                                                            if ((0 | C) != 65280) {
                                                                                                                                                                                                                              if (C || (Q = 768, g = 66, I - 48 >>> 0 >= 10)) break M;
                                                                                                                                                                                                                              break C;
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            if (Q = 256, I - 65296 >>> 0 >= 10) break M;
                                                                                                                                                                                                                            break C;
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                          if (Q = 128, I - 120782 >>> 0 < 50) break C;
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                        break g;
                                                                                                                                                                                                                      case 15:
                                                                                                                                                                                                                        M: {
                                                                                                                                                                                                                          if ((0 | (C = -256 & I)) != 12288) {
                                                                                                                                                                                                                            if ((0 | C) != 8448) break M;
                                                                                                                                                                                                                            C = (I = (0 | (Q = -16 & I)) == 8560) >>> 18 | 0, g = I << 14, Q = (I = (0 | Q) == 8544) ? 32768 : g;
                                                                                                                                                                                                                            break j;
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                          if (I - 12321 >>> 0 < 9 || I - 12344 >>> 0 < 3) return QA = 0, 2048;
                                                                                                                                                                                                                          if (Q = 2048, (0 | I) == 12295) break C;
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                        break g;
                                                                                                                                                                                                                      case 16:
                                                                                                                                                                                                                        M: {
                                                                                                                                                                                                                          V: {
                                                                                                                                                                                                                            Z: {
                                                                                                                                                                                                                              if ((0 | (C = -256 & I)) <= 9215) {
                                                                                                                                                                                                                                if ((0 | C) == 4864) break Z;
                                                                                                                                                                                                                                if ((0 | C) != 6400 || (Q = 134217728, (0 | I) != 6618)) break M;
                                                                                                                                                                                                                                break C;
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                              if ((0 | C) == 9216) break V;
                                                                                                                                                                                                                              if ((0 | C) != 127232) break M;
                                                                                                                                                                                                                              if (Q = 0, g = -2147483648, (0 | I) == 127232) break C;
                                                                                                                                                                                                                              if (g = 268435456, I - 127233 >>> 0 >= 10) break M;
                                                                                                                                                                                                                              break C;
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            if (Q = 134217728, I - 4969 >>> 0 >= 9) break M;
                                                                                                                                                                                                                            break C;
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                          if (Q = 0, g = -2147483648, I - 9352 >>> 0 < 20) break C;
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                        break g;
                                                                                                                                                                                                                      case 17:
                                                                                                                                                                                                                        g = (I = (0 | I) == 8256) >>> 25 | 0, I <<= 7;
                                                                                                                                                                                                                        break P;
                                                                                                                                                                                                                      case 18:
                                                                                                                                                                                                                        M: {
                                                                                                                                                                                                                          V: {
                                                                                                                                                                                                                            Z: {
                                                                                                                                                                                                                              b: {
                                                                                                                                                                                                                                if ((0 | (C = -256 & I)) <= 11775) {
                                                                                                                                                                                                                                  if ((0 | C) <= 6143) {
                                                                                                                                                                                                                                    if (Q = -2147483624, !C) break C;
                                                                                                                                                                                                                                    if ((0 | C) != 1280 || (Q = 24, (0 | I) != 1418)) break M;
                                                                                                                                                                                                                                    break C;
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                  if ((0 | C) == 6144) break b;
                                                                                                                                                                                                                                  if ((0 | C) != 8192) break M;
                                                                                                                                                                                                                                  if (Q = -2147483624, (-2 & I) == 8208) break C;
                                                                                                                                                                                                                                  I = I - 8211 >>> 0 < 2, C = -2147483640;
                                                                                                                                                                                                                                  break s;
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                if ((0 | C) <= 65023) {
                                                                                                                                                                                                                                  if ((0 | C) == 11776) break Z;
                                                                                                                                                                                                                                  if ((0 | C) != 12288) break M;
                                                                                                                                                                                                                                  C = (0 | I) == 12336, Q = (I = (0 | I) == 12316) || C ? -2147483640 : 8, QA = I ? 0 : C ? 130 : 0;
                                                                                                                                                                                                                                  break o;
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                if ((0 | C) == 65024) break V;
                                                                                                                                                                                                                                if ((0 | C) != 65280 || (Q = 24, (0 | I) != 65293)) break M;
                                                                                                                                                                                                                                break C;
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                              if (Q = 24, (0 | I) != 6150) break M;
                                                                                                                                                                                                                              break C;
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            if (Q = -2147483624, (0 | I) == 11799) break C;
                                                                                                                                                                                                                            I = (-2 & I) == 11834, C = -2147483640;
                                                                                                                                                                                                                            break s;
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                          if (Q = 8, g = 8388608, I - 65073 >>> 0 < 2 || (Q = 152, g = 0, (0 | I) == 65123)) break C;
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                        return QA = 0, 8;
                                                                                                                                                                                                                      case 19:
                                                                                                                                                                                                                        M: {
                                                                                                                                                                                                                          V: {
                                                                                                                                                                                                                            Z: {
                                                                                                                                                                                                                              b: {
                                                                                                                                                                                                                                H: {
                                                                                                                                                                                                                                  a: {
                                                                                                                                                                                                                                    if ((0 | (C = -256 & I)) <= 11775) {
                                                                                                                                                                                                                                      if ((0 | C) <= 8959) {
                                                                                                                                                                                                                                        if (C) break a;
                                                                                                                                                                                                                                        break S;
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                      if ((0 | C) == 8960) break H;
                                                                                                                                                                                                                                      if ((0 | C) == 9984) break b;
                                                                                                                                                                                                                                      if ((0 | C) != 10496) break g;
                                                                                                                                                                                                                                      break m;
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    if ((0 | C) <= 64767) {
                                                                                                                                                                                                                                      if (Q = -2147483648, (0 | C) == 11776) break C;
                                                                                                                                                                                                                                      if ((0 | C) != 12288) break g;
                                                                                                                                                                                                                                      switch (Q = -2147483616, I - 12301 | 0) {
                                                                                                                                                                                                                                        case 0:
                                                                                                                                                                                                                                        case 2:
                                                                                                                                                                                                                                          break C;
                                                                                                                                                                                                                                        default:
                                                                                                                                                                                                                                          break Z;
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    if ((0 | C) == 64768) break V;
                                                                                                                                                                                                                                    if ((0 | C) == 65024) break M;
                                                                                                                                                                                                                                    if ((0 | C) != 65280) break g;
                                                                                                                                                                                                                                    if (Q = 32, (0 | I) == 65379) break C;
                                                                                                                                                                                                                                    break g;
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                  if ((0 | C) != 8192) break g;
                                                                                                                                                                                                                                  a: switch (I - 8318 | 0) {
                                                                                                                                                                                                                                    default:
                                                                                                                                                                                                                                      if (Q = -2147483648, (0 | I) != 8262) break g;
                                                                                                                                                                                                                                      break C;
                                                                                                                                                                                                                                    case 1:
                                                                                                                                                                                                                                    case 2:
                                                                                                                                                                                                                                    case 3:
                                                                                                                                                                                                                                    case 4:
                                                                                                                                                                                                                                    case 5:
                                                                                                                                                                                                                                    case 6:
                                                                                                                                                                                                                                    case 7:
                                                                                                                                                                                                                                    case 8:
                                                                                                                                                                                                                                    case 9:
                                                                                                                                                                                                                                    case 10:
                                                                                                                                                                                                                                    case 11:
                                                                                                                                                                                                                                    case 12:
                                                                                                                                                                                                                                    case 13:
                                                                                                                                                                                                                                    case 14:
                                                                                                                                                                                                                                    case 15:
                                                                                                                                                                                                                                      break g;
                                                                                                                                                                                                                                    case 0:
                                                                                                                                                                                                                                    case 16:
                                                                                                                                                                                                                                      break a;
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                  break h;
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                Q = -2147483520;
                                                                                                                                                                                                                                H: switch (I - 8969 | 0) {
                                                                                                                                                                                                                                  case 1:
                                                                                                                                                                                                                                    break g;
                                                                                                                                                                                                                                  case 0:
                                                                                                                                                                                                                                  case 2:
                                                                                                                                                                                                                                    break C;
                                                                                                                                                                                                                                  default:
                                                                                                                                                                                                                                    break H;
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                if ((0 | I) != 9002) break g;
                                                                                                                                                                                                                                return QA = 0, -2139095040;
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                              if (Q = -2147483520, (0 | I) == 10182) break C;
                                                                                                                                                                                                                              break qA;
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            return QA = 0, (-2 & I) == 12318 ? -2147483616 : -2147483648;
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                          if (Q = -2147483648, (0 | I) != 64830) break g;
                                                                                                                                                                                                                          break C;
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                        g = (I = !(I - 65090 & -3)) >>> 27 | 0, I <<= 5;
                                                                                                                                                                                                                        break P;
                                                                                                                                                                                                                      case 20:
                                                                                                                                                                                                                      case 21:
                                                                                                                                                                                                                        if (!(I &= -256)) break N;
                                                                                                                                                                                                                        if (Q = -2147483616, (0 | I) == 8192) break C;
                                                                                                                                                                                                                        break CI;
                                                                                                                                                                                                                      case 22:
                                                                                                                                                                                                                        M: {
                                                                                                                                                                                                                          V: {
                                                                                                                                                                                                                            Z: {
                                                                                                                                                                                                                              b: {
                                                                                                                                                                                                                                H: {
                                                                                                                                                                                                                                  a: {
                                                                                                                                                                                                                                    e: {
                                                                                                                                                                                                                                      z: {
                                                                                                                                                                                                                                        v: {
                                                                                                                                                                                                                                          AA: {
                                                                                                                                                                                                                                            EA: {
                                                                                                                                                                                                                                              wA: {
                                                                                                                                                                                                                                                GA: {
                                                                                                                                                                                                                                                  JA: {
                                                                                                                                                                                                                                                    L: {
                                                                                                                                                                                                                                                      DA: {
                                                                                                                                                                                                                                                        u: {
                                                                                                                                                                                                                                                          X: {
                                                                                                                                                                                                                                                            UA: {
                                                                                                                                                                                                                                                              FA: {
                                                                                                                                                                                                                                                                KA: {
                                                                                                                                                                                                                                                                  lA: {
                                                                                                                                                                                                                                                                    rA: {
                                                                                                                                                                                                                                                                      kA: {
                                                                                                                                                                                                                                                                        mA: {
                                                                                                                                                                                                                                                                          BI: {
                                                                                                                                                                                                                                                                            eA: {
                                                                                                                                                                                                                                                                              EI: {
                                                                                                                                                                                                                                                                                vA: {
                                                                                                                                                                                                                                                                                  UI: {
                                                                                                                                                                                                                                                                                    RI: {
                                                                                                                                                                                                                                                                                      cA: {
                                                                                                                                                                                                                                                                                        uA: {
                                                                                                                                                                                                                                                                                          _A: {
                                                                                                                                                                                                                                                                                            wI: {
                                                                                                                                                                                                                                                                                              HA: {
                                                                                                                                                                                                                                                                                                aA: {
                                                                                                                                                                                                                                                                                                  DI: {
                                                                                                                                                                                                                                                                                                    $A: {
                                                                                                                                                                                                                                                                                                      FI: {
                                                                                                                                                                                                                                                                                                        AI: {
                                                                                                                                                                                                                                                                                                          oA: {
                                                                                                                                                                                                                                                                                                            ZA: {
                                                                                                                                                                                                                                                                                                              nA: {
                                                                                                                                                                                                                                                                                                                dA: {
                                                                                                                                                                                                                                                                                                                  II: {
                                                                                                                                                                                                                                                                                                                    MI: {
                                                                                                                                                                                                                                                                                                                      NA: {
                                                                                                                                                                                                                                                                                                                        if ((0 | (C = -256 & I)) <= 43519) {
                                                                                                                                                                                                                                                                                                                          if ((0 | C) <= 5887) {
                                                                                                                                                                                                                                                                                                                            if ((0 | C) <= 2303) {
                                                                                                                                                                                                                                                                                                                              if ((0 | C) <= 1535) {
                                                                                                                                                                                                                                                                                                                                if (!C) break NA;
                                                                                                                                                                                                                                                                                                                                if ((0 | C) == 768) break MI;
                                                                                                                                                                                                                                                                                                                                if ((0 | C) != 1280) break g;
                                                                                                                                                                                                                                                                                                                                if (Q = 0, g = 538968064, I - 1371 >>> 0 < 2) break C;
                                                                                                                                                                                                                                                                                                                                switch (g = 268435456, I - 1373 | 0) {
                                                                                                                                                                                                                                                                                                                                  case 0:
                                                                                                                                                                                                                                                                                                                                    break C;
                                                                                                                                                                                                                                                                                                                                  case 1:
                                                                                                                                                                                                                                                                                                                                    break dA;
                                                                                                                                                                                                                                                                                                                                  default:
                                                                                                                                                                                                                                                                                                                                    break II;
                                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                              if ((0 | C) == 1536) break ZA;
                                                                                                                                                                                                                                                                                                                              if ((0 | C) == 1792) break oA;
                                                                                                                                                                                                                                                                                                                              if ((0 | C) != 2048) break g;
                                                                                                                                                                                                                                                                                                                              if ((C = I - 2103 | 0) >>> 0 < 8) break dI;
                                                                                                                                                                                                                                                                                                                              break WA;
                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                            if ((0 | C) <= 3839) {
                                                                                                                                                                                                                                                                                                                              if ((0 | C) == 2304) break AI;
                                                                                                                                                                                                                                                                                                                              if ((0 | C) == 3328) break FI;
                                                                                                                                                                                                                                                                                                                              if ((0 | C) != 3584 || (Q = 64, (-2 & I) != 3674)) break g;
                                                                                                                                                                                                                                                                                                                              break C;
                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                            if ((0 | C) <= 4863) {
                                                                                                                                                                                                                                                                                                                              if ((0 | C) == 3840) break $A;
                                                                                                                                                                                                                                                                                                                              if ((0 | C) != 4096) break g;
                                                                                                                                                                                                                                                                                                                              if (Q = 268435520, (-2 & I) == 4170) break C;
                                                                                                                                                                                                                                                                                                                              if (Q = 0, g = 16777216, (0 | I) != 4347) break g;
                                                                                                                                                                                                                                                                                                                              break C;
                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                            if ((0 | C) == 4864) break DI;
                                                                                                                                                                                                                                                                                                                            if ((0 | C) != 5632) break g;
                                                                                                                                                                                                                                                                                                                            switch (Q = 64, I - 5741 | 0) {
                                                                                                                                                                                                                                                                                                                              case 1:
                                                                                                                                                                                                                                                                                                                                break E;
                                                                                                                                                                                                                                                                                                                              case 0:
                                                                                                                                                                                                                                                                                                                                break C;
                                                                                                                                                                                                                                                                                                                              default:
                                                                                                                                                                                                                                                                                                                                break aA;
                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                          if ((0 | C) <= 11263) {
                                                                                                                                                                                                                                                                                                                            if ((0 | C) <= 6655) {
                                                                                                                                                                                                                                                                                                                              if ((0 | C) == 5888) break HA;
                                                                                                                                                                                                                                                                                                                              if ((0 | C) == 6144) break ZI;
                                                                                                                                                                                                                                                                                                                              if ((0 | C) != 6400) break g;
                                                                                                                                                                                                                                                                                                                              C = (0 | I) == 6469, Q = (I = (0 | I) == 6468) || C ? 268435520 : 0, QA = I ? 536870912 : C ? 1073741824 : 0;
                                                                                                                                                                                                                                                                                                                              break o;
                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                            if ((0 | C) <= 7167) {
                                                                                                                                                                                                                                                                                                                              if ((0 | C) == 6656) break wI;
                                                                                                                                                                                                                                                                                                                              if ((0 | C) != 6912) break g;
                                                                                                                                                                                                                                                                                                                              if ((0 | (C = -2 & I)) != 7002) break _A;
                                                                                                                                                                                                                                                                                                                              break t;
                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                            if ((0 | C) == 7168) break uA;
                                                                                                                                                                                                                                                                                                                            if ((0 | C) != 8192) break g;
                                                                                                                                                                                                                                                                                                                            switch (Q = -2147483520, I - 8214 | 0) {
                                                                                                                                                                                                                                                                                                                              case 1:
                                                                                                                                                                                                                                                                                                                                break S;
                                                                                                                                                                                                                                                                                                                              case 0:
                                                                                                                                                                                                                                                                                                                                break C;
                                                                                                                                                                                                                                                                                                                              case 16:
                                                                                                                                                                                                                                                                                                                                break cA;
                                                                                                                                                                                                                                                                                                                              default:
                                                                                                                                                                                                                                                                                                                                break RI;
                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                          if ((0 | C) <= 41983) {
                                                                                                                                                                                                                                                                                                                            if ((0 | C) == 11264) break UI;
                                                                                                                                                                                                                                                                                                                            if ((0 | C) == 11776) break vA;
                                                                                                                                                                                                                                                                                                                            if ((0 | C) != 12288) break g;
                                                                                                                                                                                                                                                                                                                            switch (Q = -2147483584, g = 272629760, I - 12289 | 0) {
                                                                                                                                                                                                                                                                                                                              case 2:
                                                                                                                                                                                                                                                                                                                                break S;
                                                                                                                                                                                                                                                                                                                              case 0:
                                                                                                                                                                                                                                                                                                                                break C;
                                                                                                                                                                                                                                                                                                                              case 1:
                                                                                                                                                                                                                                                                                                                                break eA;
                                                                                                                                                                                                                                                                                                                              default:
                                                                                                                                                                                                                                                                                                                                break EI;
                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                          if ((0 | C) <= 43007) {
                                                                                                                                                                                                                                                                                                                            if ((0 | C) == 41984) break BI;
                                                                                                                                                                                                                                                                                                                            if ((0 | C) != 42496) break g;
                                                                                                                                                                                                                                                                                                                            switch (Q = 64, g = 268435456, I - 42739 | 0) {
                                                                                                                                                                                                                                                                                                                              case 4:
                                                                                                                                                                                                                                                                                                                                break R;
                                                                                                                                                                                                                                                                                                                              case 0:
                                                                                                                                                                                                                                                                                                                                break E;
                                                                                                                                                                                                                                                                                                                              case 3:
                                                                                                                                                                                                                                                                                                                                break Q;
                                                                                                                                                                                                                                                                                                                              case 2:
                                                                                                                                                                                                                                                                                                                                break C;
                                                                                                                                                                                                                                                                                                                              case 1:
                                                                                                                                                                                                                                                                                                                                break kA;
                                                                                                                                                                                                                                                                                                                              default:
                                                                                                                                                                                                                                                                                                                                break mA;
                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                          if ((0 | C) == 43008) break rA;
                                                                                                                                                                                                                                                                                                                          if ((0 | C) != 43264) break g;
                                                                                                                                                                                                                                                                                                                          switch (Q = 4096, I - 43310 | 0) {
                                                                                                                                                                                                                                                                                                                            case 0:
                                                                                                                                                                                                                                                                                                                              break C;
                                                                                                                                                                                                                                                                                                                            case 1:
                                                                                                                                                                                                                                                                                                                              break t;
                                                                                                                                                                                                                                                                                                                            default:
                                                                                                                                                                                                                                                                                                                              break lA;
                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                        if ((0 | C) <= 70655) {
                                                                                                                                                                                                                                                                                                                          if ((0 | C) <= 67839) {
                                                                                                                                                                                                                                                                                                                            if ((0 | C) <= 65279) {
                                                                                                                                                                                                                                                                                                                              if ((0 | C) == 43520) break KA;
                                                                                                                                                                                                                                                                                                                              if ((0 | C) == 43776) break FA;
                                                                                                                                                                                                                                                                                                                              if ((0 | C) != 65024) break g;
                                                                                                                                                                                                                                                                                                                              if (Q = 0, g = 268435456, (0 | (U = -2 & I)) == 65040) break C;
                                                                                                                                                                                                                                                                                                                              if ((C = I - 65042 | 0) >>> 0 < 8) break HI;
                                                                                                                                                                                                                                                                                                                              break hA;
                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                            if ((0 | C) == 65280) break UA;
                                                                                                                                                                                                                                                                                                                            if ((0 | C) == 66304) break X;
                                                                                                                                                                                                                                                                                                                            if ((0 | C) != 67584 || (Q = 64, (0 | I) != 67671)) break g;
                                                                                                                                                                                                                                                                                                                            break C;
                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                          if ((0 | C) <= 69375) {
                                                                                                                                                                                                                                                                                                                            if ((0 | C) == 67840) break u;
                                                                                                                                                                                                                                                                                                                            if ((0 | C) == 68096) break DA;
                                                                                                                                                                                                                                                                                                                            if ((0 | C) != 68352) break g;
                                                                                                                                                                                                                                                                                                                            switch (Q = 64, I - 68410 | 0) {
                                                                                                                                                                                                                                                                                                                              case 0:
                                                                                                                                                                                                                                                                                                                              case 1:
                                                                                                                                                                                                                                                                                                                              case 2:
                                                                                                                                                                                                                                                                                                                              case 3:
                                                                                                                                                                                                                                                                                                                              case 4:
                                                                                                                                                                                                                                                                                                                              case 5:
                                                                                                                                                                                                                                                                                                                              case 95:
                                                                                                                                                                                                                                                                                                                              case 96:
                                                                                                                                                                                                                                                                                                                              case 97:
                                                                                                                                                                                                                                                                                                                              case 98:
                                                                                                                                                                                                                                                                                                                                break C;
                                                                                                                                                                                                                                                                                                                              default:
                                                                                                                                                                                                                                                                                                                                break g;
                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                          if ((0 | C) <= 69887) {
                                                                                                                                                                                                                                                                                                                            if ((0 | C) == 69376) break L;
                                                                                                                                                                                                                                                                                                                            if ((0 | C) != 69632) break g;
                                                                                                                                                                                                                                                                                                                            if (I - 69703 >>> 0 >= 2) break JA;
                                                                                                                                                                                                                                                                                                                            break t;
                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                          if ((0 | C) == 69888) break GA;
                                                                                                                                                                                                                                                                                                                          if ((0 | C) != 70144) break g;
                                                                                                                                                                                                                                                                                                                          if ((C = I - 70200 | 0) >>> 0 <= 4) break wA;
                                                                                                                                                                                                                                                                                                                          if ((0 | I) != 70313) break g;
                                                                                                                                                                                                                                                                                                                          break t;
                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                        if ((0 | C) <= 74751) {
                                                                                                                                                                                                                                                                                                                          if ((0 | C) <= 71423) {
                                                                                                                                                                                                                                                                                                                            if ((0 | C) == 70656) break EA;
                                                                                                                                                                                                                                                                                                                            if ((0 | C) == 70912) break AA;
                                                                                                                                                                                                                                                                                                                            if ((0 | C) != 71168 || (Q = 268435520, I - 71233 >>> 0 >= 2)) break g;
                                                                                                                                                                                                                                                                                                                            break C;
                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                          if ((0 | C) <= 72703) {
                                                                                                                                                                                                                                                                                                                            if ((0 | C) == 71424) break v;
                                                                                                                                                                                                                                                                                                                            if ((0 | C) != 72192) break g;
                                                                                                                                                                                                                                                                                                                            if (I - 72258 >>> 0 >= 2) break z;
                                                                                                                                                                                                                                                                                                                            break t;
                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                          if ((0 | C) == 72704) break e;
                                                                                                                                                                                                                                                                                                                          if ((0 | C) != 73216 || (Q = 268435520, I - 73463 >>> 0 >= 2)) break g;
                                                                                                                                                                                                                                                                                                                          break C;
                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                        if ((0 | C) <= 93695) {
                                                                                                                                                                                                                                                                                                                          if ((0 | C) == 74752) break a;
                                                                                                                                                                                                                                                                                                                          if ((0 | C) == 92672) break b;
                                                                                                                                                                                                                                                                                                                          if ((0 | C) != 92928) break g;
                                                                                                                                                                                                                                                                                                                          if (Q = 268435520, I - 92983 >>> 0 < 2) break C;
                                                                                                                                                                                                                                                                                                                          C = (0 | I) == 92996 ? 268435520 : 0, C = (I = (0 | I) == 92985) ? 64 : C;
                                                                                                                                                                                                                                                                                                                          break q;
                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                        if ((0 | C) <= 121343) {
                                                                                                                                                                                                                                                                                                                          if ((0 | C) == 93696) break H;
                                                                                                                                                                                                                                                                                                                          if ((0 | C) != 113664 || (Q = 268435520, g = -2147483648, (0 | I) != 113823)) break g;
                                                                                                                                                                                                                                                                                                                          break C;
                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                        if ((0 | C) == 121344) break cI;
                                                                                                                                                                                                                                                                                                                        if ((0 | C) != 125184) break g;
                                                                                                                                                                                                                                                                                                                        Q = ((0 | I) == 125279) << 30, C = 0, QA = (I = (0 | I) == 125278) ? 536870912 : Q;
                                                                                                                                                                                                                                                                                                                        break U;
                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                      Q = -1879048128, g = 536870912;
                                                                                                                                                                                                                                                                                                                      NA: {
                                                                                                                                                                                                                                                                                                                        GI: {
                                                                                                                                                                                                                                                                                                                          JI: {
                                                                                                                                                                                                                                                                                                                            iI: {
                                                                                                                                                                                                                                                                                                                              XI: switch (I - 33 | 0) {
                                                                                                                                                                                                                                                                                                                                default:
                                                                                                                                                                                                                                                                                                                                  switch (I - 183 | 0) {
                                                                                                                                                                                                                                                                                                                                    case 1:
                                                                                                                                                                                                                                                                                                                                    case 2:
                                                                                                                                                                                                                                                                                                                                    case 3:
                                                                                                                                                                                                                                                                                                                                    case 4:
                                                                                                                                                                                                                                                                                                                                    case 5:
                                                                                                                                                                                                                                                                                                                                    case 6:
                                                                                                                                                                                                                                                                                                                                    case 7:
                                                                                                                                                                                                                                                                                                                                      break NA;
                                                                                                                                                                                                                                                                                                                                    case 8:
                                                                                                                                                                                                                                                                                                                                      break JI;
                                                                                                                                                                                                                                                                                                                                    case 0:
                                                                                                                                                                                                                                                                                                                                      break iI;
                                                                                                                                                                                                                                                                                                                                    default:
                                                                                                                                                                                                                                                                                                                                      break GI;
                                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                                case 2:
                                                                                                                                                                                                                                                                                                                                case 9:
                                                                                                                                                                                                                                                                                                                                  QA = 66;
                                                                                                                                                                                                                                                                                                                                  break F;
                                                                                                                                                                                                                                                                                                                                case 11:
                                                                                                                                                                                                                                                                                                                                  return QA = 268435456, -2147483584;
                                                                                                                                                                                                                                                                                                                                case 13:
                                                                                                                                                                                                                                                                                                                                  return QA = -2147483648, -1879048128;
                                                                                                                                                                                                                                                                                                                                case 25:
                                                                                                                                                                                                                                                                                                                                  return QA = 134217728, -2147483584;
                                                                                                                                                                                                                                                                                                                                case 26:
                                                                                                                                                                                                                                                                                                                                  return QA = 67108864, -2147483584;
                                                                                                                                                                                                                                                                                                                                case 1:
                                                                                                                                                                                                                                                                                                                                case 6:
                                                                                                                                                                                                                                                                                                                                  break N;
                                                                                                                                                                                                                                                                                                                                case 0:
                                                                                                                                                                                                                                                                                                                                  break C;
                                                                                                                                                                                                                                                                                                                                case 3:
                                                                                                                                                                                                                                                                                                                                case 4:
                                                                                                                                                                                                                                                                                                                                case 5:
                                                                                                                                                                                                                                                                                                                                case 7:
                                                                                                                                                                                                                                                                                                                                case 8:
                                                                                                                                                                                                                                                                                                                                case 10:
                                                                                                                                                                                                                                                                                                                                case 12:
                                                                                                                                                                                                                                                                                                                                case 14:
                                                                                                                                                                                                                                                                                                                                case 15:
                                                                                                                                                                                                                                                                                                                                case 16:
                                                                                                                                                                                                                                                                                                                                case 17:
                                                                                                                                                                                                                                                                                                                                case 18:
                                                                                                                                                                                                                                                                                                                                case 19:
                                                                                                                                                                                                                                                                                                                                case 20:
                                                                                                                                                                                                                                                                                                                                case 21:
                                                                                                                                                                                                                                                                                                                                case 22:
                                                                                                                                                                                                                                                                                                                                case 23:
                                                                                                                                                                                                                                                                                                                                case 24:
                                                                                                                                                                                                                                                                                                                                case 27:
                                                                                                                                                                                                                                                                                                                                case 28:
                                                                                                                                                                                                                                                                                                                                case 29:
                                                                                                                                                                                                                                                                                                                                  break NA;
                                                                                                                                                                                                                                                                                                                                case 30:
                                                                                                                                                                                                                                                                                                                                  break XI;
                                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                                              return QA = 1073741824, -1879048128;
                                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                                            return QA = 0, 134230016;
                                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                                          QA = 1078984704;
                                                                                                                                                                                                                                                                                                                          break F;
                                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                                        if ((0 | I) == 161) break gI;
                                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                                      break S;
                                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                                    C = (0 | I) == 903, Q = (I = (0 | I) == 894) ? 64 : C ? 134217792 : 0, QA = I ? 1073741824 : C ? 67108864 : 0;
                                                                                                                                                                                                                                                                                                                    break o;
                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                  if ((0 | I) == 1417) break nA;
                                                                                                                                                                                                                                                                                                                  if ((0 | I) != 1475) break g;
                                                                                                                                                                                                                                                                                                                  break RA;
                                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                                QA = 1075838976;
                                                                                                                                                                                                                                                                                                                break D;
                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                              QA = -2143289344;
                                                                                                                                                                                                                                                                                                              break B;
                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                            Q = 64, g = 268435456;
                                                                                                                                                                                                                                                                                                            ZA: switch (I - 1548 | 0) {
                                                                                                                                                                                                                                                                                                              case 15:
                                                                                                                                                                                                                                                                                                                break Q;
                                                                                                                                                                                                                                                                                                              case 1:
                                                                                                                                                                                                                                                                                                              case 2:
                                                                                                                                                                                                                                                                                                              case 3:
                                                                                                                                                                                                                                                                                                              case 4:
                                                                                                                                                                                                                                                                                                              case 5:
                                                                                                                                                                                                                                                                                                              case 6:
                                                                                                                                                                                                                                                                                                              case 7:
                                                                                                                                                                                                                                                                                                              case 8:
                                                                                                                                                                                                                                                                                                              case 9:
                                                                                                                                                                                                                                                                                                              case 10:
                                                                                                                                                                                                                                                                                                              case 11:
                                                                                                                                                                                                                                                                                                              case 12:
                                                                                                                                                                                                                                                                                                              case 13:
                                                                                                                                                                                                                                                                                                              case 14:
                                                                                                                                                                                                                                                                                                              case 16:
                                                                                                                                                                                                                                                                                                              case 17:
                                                                                                                                                                                                                                                                                                                break g;
                                                                                                                                                                                                                                                                                                              case 0:
                                                                                                                                                                                                                                                                                                                break C;
                                                                                                                                                                                                                                                                                                              case 19:
                                                                                                                                                                                                                                                                                                                break ZA;
                                                                                                                                                                                                                                                                                                              case 18:
                                                                                                                                                                                                                                                                                                                break t;
                                                                                                                                                                                                                                                                                                              default:
                                                                                                                                                                                                                                                                                                                break Z;
                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                            break R;
                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                          if ((C = I - 1792 | 0) >>> 0 < 6) break qI;
                                                                                                                                                                                                                                                                                                          if (Q = 64, g = 134217728, (-2 & I) == 1798) break C;
                                                                                                                                                                                                                                                                                                          g = 67108864;
                                                                                                                                                                                                                                                                                                          oA: {
                                                                                                                                                                                                                                                                                                            ZA: {
                                                                                                                                                                                                                                                                                                              nA: switch (I - 1800 | 0) {
                                                                                                                                                                                                                                                                                                                default:
                                                                                                                                                                                                                                                                                                                  switch (I - 2040 | 0) {
                                                                                                                                                                                                                                                                                                                    case 1:
                                                                                                                                                                                                                                                                                                                      break oA;
                                                                                                                                                                                                                                                                                                                    case 0:
                                                                                                                                                                                                                                                                                                                      break ZA;
                                                                                                                                                                                                                                                                                                                    default:
                                                                                                                                                                                                                                                                                                                      break g;
                                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                                case 3:
                                                                                                                                                                                                                                                                                                                  break g;
                                                                                                                                                                                                                                                                                                                case 0:
                                                                                                                                                                                                                                                                                                                  break C;
                                                                                                                                                                                                                                                                                                                case 1:
                                                                                                                                                                                                                                                                                                                  break nA;
                                                                                                                                                                                                                                                                                                                case 2:
                                                                                                                                                                                                                                                                                                                case 4:
                                                                                                                                                                                                                                                                                                                  break RA;
                                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                                              QA = 1073741824;
                                                                                                                                                                                                                                                                                                              break I;
                                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                                            QA = 268435456;
                                                                                                                                                                                                                                                                                                            break I;
                                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                                          QA = 536870912;
                                                                                                                                                                                                                                                                                                          break B;
                                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                                        C = (0 | I) == 2405, Q = (I = (0 | I) == 2404) || C ? 268435520 : 0, QA = I ? -2143289344 : C ? 16777216 : 0;
                                                                                                                                                                                                                                                                                                        break o;
                                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                                      if (Q = 0, g = -2143289344, (0 | I) != 3572) break g;
                                                                                                                                                                                                                                                                                                      break C;
                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                    Q = 64;
                                                                                                                                                                                                                                                                                                    $A: switch (I - 3848 | 0) {
                                                                                                                                                                                                                                                                                                      case 5:
                                                                                                                                                                                                                                                                                                        QA = -2143289344;
                                                                                                                                                                                                                                                                                                        break I;
                                                                                                                                                                                                                                                                                                      case 6:
                                                                                                                                                                                                                                                                                                        QA = 16777216;
                                                                                                                                                                                                                                                                                                        break I;
                                                                                                                                                                                                                                                                                                      case 0:
                                                                                                                                                                                                                                                                                                        break C;
                                                                                                                                                                                                                                                                                                      default:
                                                                                                                                                                                                                                                                                                        break $A;
                                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                                    if (I - 3854 >>> 0 < 5) break C;
                                                                                                                                                                                                                                                                                                    if (Q = 0, g = 268435456, (0 | I) != 3860) break g;
                                                                                                                                                                                                                                                                                                    break C;
                                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                                  if ((C = I - 4961 | 0) >>> 0 < 4) break nI;
                                                                                                                                                                                                                                                                                                  if (Q = 64, g = 134217728, I - 4965 >>> 0 < 2) break C;
                                                                                                                                                                                                                                                                                                  C = (0 | I) == 4968, Q = (I = (0 | I) == 4967) || C ? 268435520 : 0, QA = I ? 1073741824 : C ? 16777216 : 0;
                                                                                                                                                                                                                                                                                                  break o;
                                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                                if (I - 5867 >>> 0 >= 3) break g;
                                                                                                                                                                                                                                                                                                break C;
                                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                                              if (Q = 268435520, I - 5941 >>> 0 < 2) break C;
                                                                                                                                                                                                                                                                                              if ((I = I - 6100 | 0) >>> 0 >= 7) break g;
                                                                                                                                                                                                                                                                                              C = A[(I = 83240 + (I << 3) | 0) >> 2];
                                                                                                                                                                                                                                                                                              break y;
                                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                                            if (Q = 268435520, (-4 & I) != 6824) break g;
                                                                                                                                                                                                                                                                                            break C;
                                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                                          if (Q = 64, (0 | I) == 7005) break C;
                                                                                                                                                                                                                                                                                          if (Q = 268435520, (0 | C) != 7006) break g;
                                                                                                                                                                                                                                                                                          break C;
                                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                                        if (I - 7227 >>> 0 < 2) break t;
                                                                                                                                                                                                                                                                                        if (Q = 64, I - 7229 >>> 0 < 3 || (Q = 268435520, (-2 & I) == 7294)) break C;
                                                                                                                                                                                                                                                                                        if (Q = 4096, (0 | I) != 7379) break g;
                                                                                                                                                                                                                                                                                        break C;
                                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                                      QA = 33554432;
                                                                                                                                                                                                                                                                                      break F;
                                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                                    if ((-8 & I) == 8224) break S;
                                                                                                                                                                                                                                                                                    if (I - 8242 >>> 0 < 3) break C;
                                                                                                                                                                                                                                                                                    if (I - 8240 >>> 0 < 9) break S;
                                                                                                                                                                                                                                                                                    if ((C = I - 8251 | 0) >>> 0 < 21) break aI;
                                                                                                                                                                                                                                                                                    break BA;
                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                  if ((0 | I) == 11513) {
                                                                                                                                                                                                                                                                                    QA = -2147483648;
                                                                                                                                                                                                                                                                                    break D;
                                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                                  if (Q = 0, g = 1073741824, (-2 & I) == 11514) break C;
                                                                                                                                                                                                                                                                                  if (g = -2147483648, (0 | I) != 11518) break g;
                                                                                                                                                                                                                                                                                  break C;
                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                Q = -1879048128;
                                                                                                                                                                                                                                                                                vA: switch (I - 11822 | 0) {
                                                                                                                                                                                                                                                                                  case 4:
                                                                                                                                                                                                                                                                                  case 6:
                                                                                                                                                                                                                                                                                    QA = 268435456;
                                                                                                                                                                                                                                                                                    break F;
                                                                                                                                                                                                                                                                                  case 5:
                                                                                                                                                                                                                                                                                    QA = -2147483648;
                                                                                                                                                                                                                                                                                    break F;
                                                                                                                                                                                                                                                                                  case 7:
                                                                                                                                                                                                                                                                                    QA = 67108864;
                                                                                                                                                                                                                                                                                    break F;
                                                                                                                                                                                                                                                                                  case 14:
                                                                                                                                                                                                                                                                                    return QA = -2147483648, -1879048128;
                                                                                                                                                                                                                                                                                  case 19:
                                                                                                                                                                                                                                                                                    return QA = 268435456, -2147483584;
                                                                                                                                                                                                                                                                                  case 30:
                                                                                                                                                                                                                                                                                  case 32:
                                                                                                                                                                                                                                                                                    return QA = 0, -2147483584;
                                                                                                                                                                                                                                                                                  case 0:
                                                                                                                                                                                                                                                                                    break C;
                                                                                                                                                                                                                                                                                  default:
                                                                                                                                                                                                                                                                                    break vA;
                                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                                break S;
                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                              if ((0 | I) == 12349) break T;
                                                                                                                                                                                                                                                                              if ((0 | I) != 12539) break g;
                                                                                                                                                                                                                                                                              return QA = 0, 16;
                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                            return QA = -2143289344, -1879048128;
                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                          C = (0 | I) == 42239, Q = (I = (0 | I) == 42238) ? 64 : C ? 268435520 : 0, QA = I ? 268435456 : C ? -2147483648 : 0;
                                                                                                                                                                                                                                                                          break o;
                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                        mA: switch (I - 42509 | 0) {
                                                                                                                                                                                                                                                                          case 1:
                                                                                                                                                                                                                                                                            break E;
                                                                                                                                                                                                                                                                          case 0:
                                                                                                                                                                                                                                                                            break C;
                                                                                                                                                                                                                                                                          case 2:
                                                                                                                                                                                                                                                                            break mA;
                                                                                                                                                                                                                                                                          default:
                                                                                                                                                                                                                                                                            break g;
                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                        break R;
                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                      QA = 134217728;
                                                                                                                                                                                                                                                                      break I;
                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                    if (I - 43126 >>> 0 < 2) break t;
                                                                                                                                                                                                                                                                    if (Q = 268435520, I - 43214 >>> 0 >= 2) break g;
                                                                                                                                                                                                                                                                    break C;
                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                  if ((0 | I) == 43463) break RA;
                                                                                                                                                                                                                                                                  if (Q = 268435520, (-2 & I) != 43464) break g;
                                                                                                                                                                                                                                                                  break C;
                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                if (I - 43613 >>> 0 < 3) break t;
                                                                                                                                                                                                                                                                if (Q = 64, (0 | I) == 43743) break C;
                                                                                                                                                                                                                                                                if (Q = 268435520, (-2 & I) != 43760) break g;
                                                                                                                                                                                                                                                                break C;
                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                              if (Q = 268435520, (0 | I) != 44011) break g;
                                                                                                                                                                                                                                                              break C;
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                            Q = 268435520, g = 541065216;
                                                                                                                                                                                                                                                            UA: switch (I - 65281 | 0) {
                                                                                                                                                                                                                                                              case 1:
                                                                                                                                                                                                                                                              case 6:
                                                                                                                                                                                                                                                                return QA = 0, 32;
                                                                                                                                                                                                                                                              case 11:
                                                                                                                                                                                                                                                                QA = 272629760;
                                                                                                                                                                                                                                                                break I;
                                                                                                                                                                                                                                                              case 13:
                                                                                                                                                                                                                                                                QA = -2143289344;
                                                                                                                                                                                                                                                                break B;
                                                                                                                                                                                                                                                              case 100:
                                                                                                                                                                                                                                                                return QA = 0, 16;
                                                                                                                                                                                                                                                              case 25:
                                                                                                                                                                                                                                                                QA = 138412032;
                                                                                                                                                                                                                                                                break I;
                                                                                                                                                                                                                                                              case 26:
                                                                                                                                                                                                                                                                QA = 71303168;
                                                                                                                                                                                                                                                                break I;
                                                                                                                                                                                                                                                              case 30:
                                                                                                                                                                                                                                                                QA = 1077936128;
                                                                                                                                                                                                                                                                break B;
                                                                                                                                                                                                                                                              case 96:
                                                                                                                                                                                                                                                                break E;
                                                                                                                                                                                                                                                              case 59:
                                                                                                                                                                                                                                                                break h;
                                                                                                                                                                                                                                                              case 0:
                                                                                                                                                                                                                                                                break C;
                                                                                                                                                                                                                                                              case 99:
                                                                                                                                                                                                                                                                break UA;
                                                                                                                                                                                                                                                              default:
                                                                                                                                                                                                                                                                break g;
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                            QA = 268435456;
                                                                                                                                                                                                                                                            break I;
                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                          Q = (C = (0 | I) == 66512) >>> 26 | 0, C = (I = (0 | I) == 66463) ? 64 : C << 6;
                                                                                                                                                                                                                                                          break f;
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                        if (Q = 64, (0 | I) != 67871) break g;
                                                                                                                                                                                                                                                        break C;
                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                      if (Q = 268435520, (-2 & I) == 68182) break C;
                                                                                                                                                                                                                                                      if (Q = 64, I - 68336 >>> 0 >= 6) break g;
                                                                                                                                                                                                                                                      break C;
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                    if (Q = 268435520, I - 69461 >>> 0 >= 5) break g;
                                                                                                                                                                                                                                                    break C;
                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                  if (Q = 64, I - 69705 >>> 0 < 5) break C;
                                                                                                                                                                                                                                                  if (Q = 268435520, I - 69822 >>> 0 >= 4) break g;
                                                                                                                                                                                                                                                  break C;
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                if (I - 69953 >>> 0 < 2) break t;
                                                                                                                                                                                                                                                if ((C = I - 70085 | 0) >>> 0 <= 26) break V;
                                                                                                                                                                                                                                                break OA;
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                              if ((0 | C) != 2) break t;
                                                                                                                                                                                                                                              break RA;
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            if (Q = 268435520, I - 70731 >>> 0 < 2) break C;
                                                                                                                                                                                                                                            g = (C = (0 | I) == 70747) >>> 26 | 0, C = (I = (0 | I) == 70733) ? 64 : C << 6, QA = I ? 268435456 : g;
                                                                                                                                                                                                                                            break U;
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                          Q = 268435520;
                                                                                                                                                                                                                                          AA: switch ((-2 & I) - 71106 | 0) {
                                                                                                                                                                                                                                            case 0:
                                                                                                                                                                                                                                              break C;
                                                                                                                                                                                                                                            case 2:
                                                                                                                                                                                                                                              break M;
                                                                                                                                                                                                                                            default:
                                                                                                                                                                                                                                              break AA;
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                          if (Q = 8192, I - 71110 >>> 0 < 3) break C;
                                                                                                                                                                                                                                          if (Q = 268435520, I - 71113 >>> 0 >= 15) break g;
                                                                                                                                                                                                                                          break C;
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                        if (Q = 268435520, I - 71484 >>> 0 >= 3) break g;
                                                                                                                                                                                                                                        break C;
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                      if (Q = 268435520, I - 72347 >>> 0 < 2) break C;
                                                                                                                                                                                                                                      if (Q = 64, I - 72353 >>> 0 >= 2) break g;
                                                                                                                                                                                                                                      break C;
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    if (Q = 268435520, I - 72769 >>> 0 < 2) break C;
                                                                                                                                                                                                                                    Q = (C = (0 | I) == 72817) >>> 26 | 0, C = (I = (0 | I) == 72771) ? 64 : C << 6;
                                                                                                                                                                                                                                    break f;
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                  if (Q = 64, g = 134217728, I - 74865 >>> 0 < 2) break C;
                                                                                                                                                                                                                                  if (g = 0, I - 74864 >>> 0 >= 5) break g;
                                                                                                                                                                                                                                  break C;
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                C = (0 | I) == 93848 ? 268435520 : 0, C = (I = (0 | I) == 93847) ? 64 : C;
                                                                                                                                                                                                                                break q;
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                              if (Q = 268435520, (-2 & I) == 92782) break C;
                                                                                                                                                                                                                              if (g = -2147483648, (0 | I) != 92917) break g;
                                                                                                                                                                                                                              break C;
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            if ((0 | I) == 1748) break E;
                                                                                                                                                                                                                            break g;
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                          if (!(1 << C & 100663555)) break OA;
                                                                                                                                                                                                                          break t;
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                        break RA;
                                                                                                                                                                                                                      case 23:
                                                                                                                                                                                                                        M: {
                                                                                                                                                                                                                          V: {
                                                                                                                                                                                                                            Z: {
                                                                                                                                                                                                                              b: {
                                                                                                                                                                                                                                H: {
                                                                                                                                                                                                                                  a: {
                                                                                                                                                                                                                                    if ((0 | (C = -256 & I)) <= 11775) {
                                                                                                                                                                                                                                      if ((0 | C) <= 8959) {
                                                                                                                                                                                                                                        if (C) break a;
                                                                                                                                                                                                                                        break S;
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                      if ((0 | C) == 8960) break H;
                                                                                                                                                                                                                                      if ((0 | C) == 9984) break b;
                                                                                                                                                                                                                                      if ((0 | C) != 10496) break g;
                                                                                                                                                                                                                                      break m;
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    if ((0 | C) <= 64767) {
                                                                                                                                                                                                                                      if ((0 | C) == 11776) break Z;
                                                                                                                                                                                                                                      if ((0 | C) != 12288) break g;
                                                                                                                                                                                                                                      if ((I = I - 12300 | 0) >>> 0 <= 17 && (Q = -2147483616, 1 << I & 131077)) break C;
                                                                                                                                                                                                                                      break S;
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    if ((0 | C) == 64768) break V;
                                                                                                                                                                                                                                    if ((0 | C) == 65024) break M;
                                                                                                                                                                                                                                    if ((0 | C) != 65280) break g;
                                                                                                                                                                                                                                    if (Q = 32, (0 | I) == 65378) break C;
                                                                                                                                                                                                                                    break g;
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                  if ((0 | C) != 8192) break g;
                                                                                                                                                                                                                                  Q = -2147483616;
                                                                                                                                                                                                                                  a: switch (I - 8218 | 0) {
                                                                                                                                                                                                                                    case 1:
                                                                                                                                                                                                                                    case 2:
                                                                                                                                                                                                                                    case 3:
                                                                                                                                                                                                                                      break g;
                                                                                                                                                                                                                                    case 0:
                                                                                                                                                                                                                                    case 4:
                                                                                                                                                                                                                                      break C;
                                                                                                                                                                                                                                    default:
                                                                                                                                                                                                                                      break a;
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                  a: switch (I - 8317 | 0) {
                                                                                                                                                                                                                                    default:
                                                                                                                                                                                                                                      if ((0 | I) != 8261) break g;
                                                                                                                                                                                                                                      break S;
                                                                                                                                                                                                                                    case 1:
                                                                                                                                                                                                                                    case 2:
                                                                                                                                                                                                                                    case 3:
                                                                                                                                                                                                                                    case 4:
                                                                                                                                                                                                                                    case 5:
                                                                                                                                                                                                                                    case 6:
                                                                                                                                                                                                                                    case 7:
                                                                                                                                                                                                                                    case 8:
                                                                                                                                                                                                                                    case 9:
                                                                                                                                                                                                                                    case 10:
                                                                                                                                                                                                                                    case 11:
                                                                                                                                                                                                                                    case 12:
                                                                                                                                                                                                                                    case 13:
                                                                                                                                                                                                                                    case 14:
                                                                                                                                                                                                                                    case 15:
                                                                                                                                                                                                                                      break g;
                                                                                                                                                                                                                                    case 0:
                                                                                                                                                                                                                                    case 16:
                                                                                                                                                                                                                                      break a;
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                  break h;
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                Q = -2147483520;
                                                                                                                                                                                                                                H: switch (I - 8968 | 0) {
                                                                                                                                                                                                                                  case 1:
                                                                                                                                                                                                                                    break g;
                                                                                                                                                                                                                                  case 0:
                                                                                                                                                                                                                                  case 2:
                                                                                                                                                                                                                                    break C;
                                                                                                                                                                                                                                  default:
                                                                                                                                                                                                                                    break H;
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                if ((0 | I) != 9001) break g;
                                                                                                                                                                                                                                return QA = 0, -2139095040;
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                              if (Q = -2147483520, (0 | I) == 10181) break C;
                                                                                                                                                                                                                              break qA;
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            return QA = 0, (0 | I) == 11842 ? -2147483616 : -2147483648;
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                          if (Q = -2147483648, (0 | I) != 64831) break g;
                                                                                                                                                                                                                          break C;
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                        Q = (I = !(I - 65089 & -3)) >>> 27 | 0, I <<= 5;
                                                                                                                                                                                                                        break k;
                                                                                                                                                                                                                      case 24:
                                                                                                                                                                                                                        Q = (I = I >>> 0 < 256) >>> 1 | 0, I <<= 31;
                                                                                                                                                                                                                        break k;
                                                                                                                                                                                                                      case 25:
                                                                                                                                                                                                                        M: {
                                                                                                                                                                                                                          V: {
                                                                                                                                                                                                                            Z: {
                                                                                                                                                                                                                              b: {
                                                                                                                                                                                                                                H: {
                                                                                                                                                                                                                                  a: {
                                                                                                                                                                                                                                    e: {
                                                                                                                                                                                                                                      z: {
                                                                                                                                                                                                                                        if ((0 | (C = -256 & I)) <= 12287) {
                                                                                                                                                                                                                                          if ((0 | C) <= 767) {
                                                                                                                                                                                                                                            if (!C) break z;
                                                                                                                                                                                                                                            if ((0 | C) != 512) break M;
                                                                                                                                                                                                                                            if (I - 751 >>> 0 >= 17) break e;
                                                                                                                                                                                                                                            break J;
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                          if ((0 | C) == 768) break a;
                                                                                                                                                                                                                                          if ((0 | C) != 7936) break M;
                                                                                                                                                                                                                                          switch (Q = 4096, I - 8125 | 0) {
                                                                                                                                                                                                                                            case 0:
                                                                                                                                                                                                                                            case 2:
                                                                                                                                                                                                                                            case 3:
                                                                                                                                                                                                                                            case 4:
                                                                                                                                                                                                                                            case 16:
                                                                                                                                                                                                                                            case 17:
                                                                                                                                                                                                                                            case 18:
                                                                                                                                                                                                                                            case 32:
                                                                                                                                                                                                                                            case 33:
                                                                                                                                                                                                                                            case 34:
                                                                                                                                                                                                                                            case 48:
                                                                                                                                                                                                                                            case 49:
                                                                                                                                                                                                                                            case 50:
                                                                                                                                                                                                                                            case 64:
                                                                                                                                                                                                                                            case 65:
                                                                                                                                                                                                                                              break C;
                                                                                                                                                                                                                                            default:
                                                                                                                                                                                                                                              break M;
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                        if ((0 | C) <= 43775) {
                                                                                                                                                                                                                                          if ((0 | C) == 12288) break H;
                                                                                                                                                                                                                                          if ((0 | C) != 42752 || (Q = 4096, (-2 & I) != 42784)) break M;
                                                                                                                                                                                                                                          break C;
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                        if ((0 | C) == 43776) break b;
                                                                                                                                                                                                                                        if ((0 | C) == 65280) break Z;
                                                                                                                                                                                                                                        if (Q = 0, g = 78, (0 | C) != 127744) break M;
                                                                                                                                                                                                                                        break C;
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                      z: switch (I - 168 | 0) {
                                                                                                                                                                                                                                        default:
                                                                                                                                                                                                                                          Q = -2147479424;
                                                                                                                                                                                                                                          v: switch (I - 94 | 0) {
                                                                                                                                                                                                                                            case 0:
                                                                                                                                                                                                                                              break C;
                                                                                                                                                                                                                                            case 2:
                                                                                                                                                                                                                                              break v;
                                                                                                                                                                                                                                            default:
                                                                                                                                                                                                                                              break M;
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                          return QA = 0, -2147479552;
                                                                                                                                                                                                                                        case 0:
                                                                                                                                                                                                                                        case 7:
                                                                                                                                                                                                                                          break J;
                                                                                                                                                                                                                                        case 1:
                                                                                                                                                                                                                                        case 2:
                                                                                                                                                                                                                                        case 3:
                                                                                                                                                                                                                                        case 4:
                                                                                                                                                                                                                                        case 5:
                                                                                                                                                                                                                                        case 6:
                                                                                                                                                                                                                                        case 8:
                                                                                                                                                                                                                                        case 9:
                                                                                                                                                                                                                                        case 10:
                                                                                                                                                                                                                                        case 11:
                                                                                                                                                                                                                                        case 13:
                                                                                                                                                                                                                                        case 14:
                                                                                                                                                                                                                                        case 15:
                                                                                                                                                                                                                                          break M;
                                                                                                                                                                                                                                        case 12:
                                                                                                                                                                                                                                        case 16:
                                                                                                                                                                                                                                          break z;
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                      break J;
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    if ((0 | I) == 749 | I - 741 >>> 0 < 7) break J;
                                                                                                                                                                                                                                    if (I - 706 >>> 0 >= 4) break V;
                                                                                                                                                                                                                                    break J;
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                  if ((I = I - 885 | 0) >>> 0 > 16 || (Q = 4096, !(1 << I & 98305))) break M;
                                                                                                                                                                                                                                  break C;
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                if (Q = 67112960, I - 12443 >>> 0 >= 2) break M;
                                                                                                                                                                                                                                break C;
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                              if (Q = 4096, (0 | I) != 43867) break M;
                                                                                                                                                                                                                              break C;
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            Q = 4224;
                                                                                                                                                                                                                            Z: switch (I - 65342 | 0) {
                                                                                                                                                                                                                              default:
                                                                                                                                                                                                                                if ((0 | I) != 65507) break M;
                                                                                                                                                                                                                                break;
                                                                                                                                                                                                                              case 0:
                                                                                                                                                                                                                                break C;
                                                                                                                                                                                                                              case 1:
                                                                                                                                                                                                                                break M;
                                                                                                                                                                                                                              case 2:
                                                                                                                                                                                                                                break Z;
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            break J;
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                          if (Q = 4096, I - 722 >>> 0 < 14) break C;
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                        break g;
                                                                                                                                                                                                                      case 26:
                                                                                                                                                                                                                        M: {
                                                                                                                                                                                                                          V: {
                                                                                                                                                                                                                            Z: {
                                                                                                                                                                                                                              b: {
                                                                                                                                                                                                                                H: {
                                                                                                                                                                                                                                  a: {
                                                                                                                                                                                                                                    if ((0 | (C = -256 & I)) <= 9471) {
                                                                                                                                                                                                                                      if ((0 | C) <= 8447) {
                                                                                                                                                                                                                                        if (C) break M;
                                                                                                                                                                                                                                        break S;
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                      if ((0 | C) == 8448) break a;
                                                                                                                                                                                                                                      if ((0 | C) == 8704) break H;
                                                                                                                                                                                                                                      if (Q = -2147483648, (0 | C) != 8960) break g;
                                                                                                                                                                                                                                      break C;
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    if ((0 | C) <= 10495) {
                                                                                                                                                                                                                                      if ((0 | C) == 9472) break b;
                                                                                                                                                                                                                                      if ((0 | C) == 9728) break Z;
                                                                                                                                                                                                                                      if ((0 | C) == 9984) break S;
                                                                                                                                                                                                                                      break g;
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    if ((0 | C) == 10496) break V;
                                                                                                                                                                                                                                    if ((0 | C) == 10752) break S;
                                                                                                                                                                                                                                    if (Q = -2147483648, (0 | C) != 11008) break g;
                                                                                                                                                                                                                                    break C;
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                  if ((0 | I) == 8472) return QA = 0, 67108864;
                                                                                                                                                                                                                                  if ((0 | I) == 8596) break _;
                                                                                                                                                                                                                                  if (Q = -2147483648, I >>> 0 <= 8591) break g;
                                                                                                                                                                                                                                  break C;
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                if (Q = -2147483640, (0 | I) == 8722) break C;
                                                                                                                                                                                                                                C = -2147483648, QA = (I = I - 8942 >>> 0 < 4) ? 33554432 : 0;
                                                                                                                                                                                                                                break U;
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                              if (Q = -2147483648, g = 130, I - 9723 >>> 0 < 2) break C;
                                                                                                                                                                                                                              C = -2147483648, QA = (I = I - 9725 >>> 0 < 2) ? 134 : 0;
                                                                                                                                                                                                                              break U;
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            if (Q = -2147483648, g = 128, (0 | I) == 9839) break C;
                                                                                                                                                                                                                            break S;
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                          if (Q = -2147483648, g = 130, (-2 & I) == 10548) break C;
                                                                                                                                                                                                                          C = -2147483648, QA = (I = (0 | I) == 10626) ? 134217728 : 0;
                                                                                                                                                                                                                          break U;
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                        if ((0 | C) == 8192) break zA;
                                                                                                                                                                                                                        break g;
                                                                                                                                                                                                                      case 27:
                                                                                                                                                                                                                        M: {
                                                                                                                                                                                                                          V: {
                                                                                                                                                                                                                            Z: {
                                                                                                                                                                                                                              b: {
                                                                                                                                                                                                                                H: {
                                                                                                                                                                                                                                  a: {
                                                                                                                                                                                                                                    e: {
                                                                                                                                                                                                                                      z: {
                                                                                                                                                                                                                                        v: {
                                                                                                                                                                                                                                          AA: {
                                                                                                                                                                                                                                            EA: {
                                                                                                                                                                                                                                              wA: {
                                                                                                                                                                                                                                                GA: {
                                                                                                                                                                                                                                                  JA: {
                                                                                                                                                                                                                                                    L: {
                                                                                                                                                                                                                                                      DA: {
                                                                                                                                                                                                                                                        u: {
                                                                                                                                                                                                                                                          X: {
                                                                                                                                                                                                                                                            UA: {
                                                                                                                                                                                                                                                              FA: {
                                                                                                                                                                                                                                                                KA: {
                                                                                                                                                                                                                                                                  lA: {
                                                                                                                                                                                                                                                                    rA: {
                                                                                                                                                                                                                                                                      kA: {
                                                                                                                                                                                                                                                                        if ((0 | (C = -256 & I)) <= 12287) {
                                                                                                                                                                                                                                                                          if ((0 | C) <= 9727) {
                                                                                                                                                                                                                                                                            if ((0 | C) <= 8959) {
                                                                                                                                                                                                                                                                              if (!C) break kA;
                                                                                                                                                                                                                                                                              if ((0 | C) != 8448) break g;
                                                                                                                                                                                                                                                                              switch (Q = 0, g = 130, I - 8482 | 0) {
                                                                                                                                                                                                                                                                                case 7:
                                                                                                                                                                                                                                                                                  break h;
                                                                                                                                                                                                                                                                                case 0:
                                                                                                                                                                                                                                                                                  break C;
                                                                                                                                                                                                                                                                                case 1:
                                                                                                                                                                                                                                                                                case 2:
                                                                                                                                                                                                                                                                                case 3:
                                                                                                                                                                                                                                                                                case 4:
                                                                                                                                                                                                                                                                                case 5:
                                                                                                                                                                                                                                                                                case 6:
                                                                                                                                                                                                                                                                                case 8:
                                                                                                                                                                                                                                                                                case 9:
                                                                                                                                                                                                                                                                                case 10:
                                                                                                                                                                                                                                                                                case 11:
                                                                                                                                                                                                                                                                                  break FA;
                                                                                                                                                                                                                                                                                case 12:
                                                                                                                                                                                                                                                                                  break lA;
                                                                                                                                                                                                                                                                                default:
                                                                                                                                                                                                                                                                                  break rA;
                                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                            if ((0 | C) == 8960) break UA;
                                                                                                                                                                                                                                                                            if ((0 | C) == 9216) break X;
                                                                                                                                                                                                                                                                            if ((0 | C) != 9472) break g;
                                                                                                                                                                                                                                                                            switch (Q = -2147483520, (-2 & I) - 9632 | 0) {
                                                                                                                                                                                                                                                                              case 0:
                                                                                                                                                                                                                                                                                break C;
                                                                                                                                                                                                                                                                              case 10:
                                                                                                                                                                                                                                                                                break _;
                                                                                                                                                                                                                                                                              default:
                                                                                                                                                                                                                                                                                break u;
                                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                          if ((0 | C) <= 11007) {
                                                                                                                                                                                                                                                                            if ((0 | C) == 9728) break DA;
                                                                                                                                                                                                                                                                            if ((0 | C) == 9984) break L;
                                                                                                                                                                                                                                                                            if (Q = -2147483648, (0 | C) != 10240) break g;
                                                                                                                                                                                                                                                                            break C;
                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                          if ((0 | C) == 11008) break JA;
                                                                                                                                                                                                                                                                          if ((0 | C) == 11776) break GA;
                                                                                                                                                                                                                                                                          if ((0 | C) != 12032) break g;
                                                                                                                                                                                                                                                                          if (Q = 1048576, I >>> 0 < 12246) break C;
                                                                                                                                                                                                                                                                          switch (Q = 262144, (-2 & I) - 12272 | 0) {
                                                                                                                                                                                                                                                                            case 0:
                                                                                                                                                                                                                                                                              break C;
                                                                                                                                                                                                                                                                            case 2:
                                                                                                                                                                                                                                                                              break M;
                                                                                                                                                                                                                                                                            default:
                                                                                                                                                                                                                                                                              break wA;
                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                        if ((0 | C) <= 127999) {
                                                                                                                                                                                                                                                                          if ((0 | C) <= 127231) {
                                                                                                                                                                                                                                                                            if ((0 | C) == 12288) break EA;
                                                                                                                                                                                                                                                                            if ((0 | C) == 12800) break AA;
                                                                                                                                                                                                                                                                            if ((0 | C) != 126976) break g;
                                                                                                                                                                                                                                                                            C = (0 | I) == 127183, Q = 0, QA = (I = (0 | I) == 126980) || C ? 134 : 128;
                                                                                                                                                                                                                                                                            break o;
                                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                                          if ((0 | C) == 127232) break v;
                                                                                                                                                                                                                                                                          if ((0 | C) == 127488) break z;
                                                                                                                                                                                                                                                                          if ((0 | C) != 127744) break g;
                                                                                                                                                                                                                                                                          if (I >>> 0 >= 127777) break e;
                                                                                                                                                                                                                                                                          break p;
                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                        if ((0 | C) <= 128767) {
                                                                                                                                                                                                                                                                          if ((0 | C) == 128e3) break a;
                                                                                                                                                                                                                                                                          if ((0 | C) == 128256) break H;
                                                                                                                                                                                                                                                                          if ((0 | C) != 128512) break g;
                                                                                                                                                                                                                                                                          if ((C = I - 128581 | 0) >>> 0 < 11) break NI;
                                                                                                                                                                                                                                                                          break LA;
                                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                                        if ((0 | C) == 128768) break b;
                                                                                                                                                                                                                                                                        if ((0 | C) == 129280) break Z;
                                                                                                                                                                                                                                                                        if ((0 | C) != 129536) break g;
                                                                                                                                                                                                                                                                        QA = 128;
                                                                                                                                                                                                                                                                        break D;
                                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                                      C = (0 | I) == 174, Q = -2147483648, QA = (I = (0 | I) == 169) || C ? 130 : 0;
                                                                                                                                                                                                                                                                      break o;
                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                    switch (I - 8616 | 0) {
                                                                                                                                                                                                                                                                      case 0:
                                                                                                                                                                                                                                                                        break S;
                                                                                                                                                                                                                                                                      case 1:
                                                                                                                                                                                                                                                                      case 2:
                                                                                                                                                                                                                                                                        break KA;
                                                                                                                                                                                                                                                                      default:
                                                                                                                                                                                                                                                                        break FA;
                                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                                  return QA = 0, 67108864;
                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                return QA = 130, -2147483520;
                                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                                              if (Q = -2147483520, I - 8597 >>> 0 < 5) break C;
                                                                                                                                                                                                                                                              if (I - 8604 >>> 0 < 18) break m;
                                                                                                                                                                                                                                                              if ((C = I - 8624 | 0) >>> 0 < 8) break kI;
                                                                                                                                                                                                                                                              break XA;
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                            if (I >>> 0 < 8968) break S;
                                                                                                                                                                                                                                                            if ((0 | (C = -2 & I)) == 8986) break w;
                                                                                                                                                                                                                                                            if (I - 8972 >>> 0 < 20 | I - 8994 >>> 0 < 6) break S;
                                                                                                                                                                                                                                                            if ((0 | I) == 9e3) break _;
                                                                                                                                                                                                                                                            if (I - 9003 >>> 0 < 81) break S;
                                                                                                                                                                                                                                                            if (Q = -2147483648, g = 128, (0 | I) == 9096) break C;
                                                                                                                                                                                                                                                            if (I - 9085 >>> 0 < 30) break S;
                                                                                                                                                                                                                                                            if (Q = -2147483520, g = 0, (0 | C) == 9140) break C;
                                                                                                                                                                                                                                                            UA: switch (I - 9143 | 0) {
                                                                                                                                                                                                                                                              case 0:
                                                                                                                                                                                                                                                              case 25:
                                                                                                                                                                                                                                                                break C;
                                                                                                                                                                                                                                                              case 24:
                                                                                                                                                                                                                                                                break _;
                                                                                                                                                                                                                                                              default:
                                                                                                                                                                                                                                                                break UA;
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                            if (I - 9140 >>> 0 < 40) break S;
                                                                                                                                                                                                                                                            if ((0 | I) == 9186) break C;
                                                                                                                                                                                                                                                            if ((C = I - 9193 | 0) >>> 0 < 4) break w;
                                                                                                                                                                                                                                                            Q = -2147483648, g = 134;
                                                                                                                                                                                                                                                            UA: switch (I - 9200 | 0) {
                                                                                                                                                                                                                                                              case 0:
                                                                                                                                                                                                                                                              case 3:
                                                                                                                                                                                                                                                                break C;
                                                                                                                                                                                                                                                              default:
                                                                                                                                                                                                                                                                break UA;
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                            if (C >>> 0 < 11) break _;
                                                                                                                                                                                                                                                            if (g = 130, I - 9208 >>> 0 < 3) break C;
                                                                                                                                                                                                                                                            if (g = 0, I >>> 0 <= 9186) break g;
                                                                                                                                                                                                                                                            break C;
                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                          if (Q = -2147483648, I - 9216 >>> 0 < 75 || (Q = 33792, g = 130, (0 | I) == 9410) || (g = 0, I - 9398 >>> 0 < 26)) break C;
                                                                                                                                                                                                                                                          if (Q = 17408, I - 9424 >>> 0 >= 26) break g;
                                                                                                                                                                                                                                                          break C;
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                        if (I - 9646 >>> 0 < 8) break m;
                                                                                                                                                                                                                                                        if (g = 130, (0 | I) == 9654) break C;
                                                                                                                                                                                                                                                        if ((-4 & I) == 9660) break m;
                                                                                                                                                                                                                                                        u: switch (I - 9664 | 0) {
                                                                                                                                                                                                                                                          case 0:
                                                                                                                                                                                                                                                            break C;
                                                                                                                                                                                                                                                          case 6:
                                                                                                                                                                                                                                                          case 7:
                                                                                                                                                                                                                                                          case 10:
                                                                                                                                                                                                                                                          case 11:
                                                                                                                                                                                                                                                          case 15:
                                                                                                                                                                                                                                                          case 16:
                                                                                                                                                                                                                                                          case 17:
                                                                                                                                                                                                                                                          case 18:
                                                                                                                                                                                                                                                          case 19:
                                                                                                                                                                                                                                                          case 34:
                                                                                                                                                                                                                                                          case 36:
                                                                                                                                                                                                                                                            break m;
                                                                                                                                                                                                                                                          default:
                                                                                                                                                                                                                                                            break u;
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                        return QA = 0, I - 9703 >>> 0 < 6 ? -2147483520 : -2147483648;
                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                      DA: switch ((-16 & I) - 9728 >>> 4 | 0) {
                                                                                                                                                                                                                                                        case 0:
                                                                                                                                                                                                                                                          if (I >>> 0 < 9733) break _;
                                                                                                                                                                                                                                                          Q = -2147483520, g = 128;
                                                                                                                                                                                                                                                          u: switch (I - 9733 | 0) {
                                                                                                                                                                                                                                                            case 0:
                                                                                                                                                                                                                                                              break C;
                                                                                                                                                                                                                                                            case 9:
                                                                                                                                                                                                                                                              break u;
                                                                                                                                                                                                                                                            case 1:
                                                                                                                                                                                                                                                              break m;
                                                                                                                                                                                                                                                            default:
                                                                                                                                                                                                                                                              break n;
                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                          break _;
                                                                                                                                                                                                                                                        case 2:
                                                                                                                                                                                                                                                          if ((C = I - 9760 | 0) >>> 0 < 11) break KI;
                                                                                                                                                                                                                                                          if (Q = -2147483648, g = 130, I >>> 0 <= 9773) break n;
                                                                                                                                                                                                                                                          break C;
                                                                                                                                                                                                                                                        case 3:
                                                                                                                                                                                                                                                          if (Q = -2147483648, g = 130, I - 9784 >>> 0 >= 3) break n;
                                                                                                                                                                                                                                                          break C;
                                                                                                                                                                                                                                                        case 4:
                                                                                                                                                                                                                                                          Q = -2147483520, g = 130;
                                                                                                                                                                                                                                                          u: switch (I - 9792 | 0) {
                                                                                                                                                                                                                                                            case 0:
                                                                                                                                                                                                                                                            case 2:
                                                                                                                                                                                                                                                              break C;
                                                                                                                                                                                                                                                            default:
                                                                                                                                                                                                                                                              break u;
                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                          if (Q = -2147483648, g = 134, I >>> 0 <= 9799) break n;
                                                                                                                                                                                                                                                          break C;
                                                                                                                                                                                                                                                        case 5:
                                                                                                                                                                                                                                                          if (Q = -2147483648, g = 134, I >>> 0 < 9812) break C;
                                                                                                                                                                                                                                                          if (g = 130, (0 | I) != 9823) break n;
                                                                                                                                                                                                                                                          break C;
                                                                                                                                                                                                                                                        case 6:
                                                                                                                                                                                                                                                          if ((0 | I) == 9734) break m;
                                                                                                                                                                                                                                                          if ((0 | I) == 9824) return QA = 130, -2147483520;
                                                                                                                                                                                                                                                          if (Q = -2147483520, g = 128, I - 9825 >>> 0 < 2) break C;
                                                                                                                                                                                                                                                          if ((C = I - 9827 | 0) >>> 0 < 6) break YI;
                                                                                                                                                                                                                                                          break YA;
                                                                                                                                                                                                                                                        case 8:
                                                                                                                                                                                                                                                          if (Q = -2147483648, I >>> 0 <= 9861) break n;
                                                                                                                                                                                                                                                          break C;
                                                                                                                                                                                                                                                        case 10:
                                                                                                                                                                                                                                                          Q = -2147483648, g = 130;
                                                                                                                                                                                                                                                          u: switch (I - 9888 | 0) {
                                                                                                                                                                                                                                                            case 1:
                                                                                                                                                                                                                                                              break w;
                                                                                                                                                                                                                                                            case 0:
                                                                                                                                                                                                                                                              break C;
                                                                                                                                                                                                                                                            default:
                                                                                                                                                                                                                                                              break u;
                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                          if (g = 134, (-2 & I) != 9898) break n;
                                                                                                                                                                                                                                                          break C;
                                                                                                                                                                                                                                                        case 11:
                                                                                                                                                                                                                                                          if (Q = -2147483648, g = 130, (-2 & I) == 9904) break C;
                                                                                                                                                                                                                                                          if (g = 134, I - 9917 >>> 0 >= 2) break n;
                                                                                                                                                                                                                                                          break C;
                                                                                                                                                                                                                                                        case 12:
                                                                                                                                                                                                                                                          if ((-2 & I) == 9924) break w;
                                                                                                                                                                                                                                                          Q = -2147483648, g = 130;
                                                                                                                                                                                                                                                          u: switch (I - 9928 | 0) {
                                                                                                                                                                                                                                                            case 0:
                                                                                                                                                                                                                                                            case 7:
                                                                                                                                                                                                                                                              break C;
                                                                                                                                                                                                                                                            case 6:
                                                                                                                                                                                                                                                              break u;
                                                                                                                                                                                                                                                            default:
                                                                                                                                                                                                                                                              break n;
                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                          break w;
                                                                                                                                                                                                                                                        case 14:
                                                                                                                                                                                                                                                          C = (0 | I) == 9962, Q = -2147483648, QA = (I = (0 | I) == 9961) ? 130 : C ? 134 : 128;
                                                                                                                                                                                                                                                          break o;
                                                                                                                                                                                                                                                        case 13:
                                                                                                                                                                                                                                                          break SI;
                                                                                                                                                                                                                                                        case 9:
                                                                                                                                                                                                                                                          break hI;
                                                                                                                                                                                                                                                        case 15:
                                                                                                                                                                                                                                                          break DA;
                                                                                                                                                                                                                                                        case 7:
                                                                                                                                                                                                                                                          break LI;
                                                                                                                                                                                                                                                        case 1:
                                                                                                                                                                                                                                                          break lI;
                                                                                                                                                                                                                                                        default:
                                                                                                                                                                                                                                                          break n;
                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                      if ((0 | I) == 9972 | I >>> 0 < 9970) break _;
                                                                                                                                                                                                                                                      if (Q = -2147483648, g = 134, I >>> 0 < 9974 || (0 | I) != 9974 && (g = 130, I >>> 0 < 9977)) break C;
                                                                                                                                                                                                                                                      if ((I = I - 9977 | 0) >>> 0 < 5) break jI;
                                                                                                                                                                                                                                                      break n;
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                    L: {
                                                                                                                                                                                                                                                      DA: {
                                                                                                                                                                                                                                                        u: {
                                                                                                                                                                                                                                                          X: {
                                                                                                                                                                                                                                                            UA: switch ((-16 & I) - 9984 >>> 4 | 0) {
                                                                                                                                                                                                                                                              case 0:
                                                                                                                                                                                                                                                                if (Q = 0, g = 130, (0 | I) == 9986 || (g = 128, I >>> 0 < 9989) || (g = 134, (0 | I) == 9989)) break L;
                                                                                                                                                                                                                                                                g = 150;
                                                                                                                                                                                                                                                                FA: switch ((-2 & I) - 9994 | 0) {
                                                                                                                                                                                                                                                                  case 0:
                                                                                                                                                                                                                                                                    break L;
                                                                                                                                                                                                                                                                  case 2:
                                                                                                                                                                                                                                                                    break u;
                                                                                                                                                                                                                                                                  default:
                                                                                                                                                                                                                                                                    break FA;
                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                if (g = 130, I - 9992 >>> 0 < 6) break L;
                                                                                                                                                                                                                                                                C = (0 | I) == 9999, Q = 0, g = (I = (0 | I) == 9998) ? 128 : C ? 130 : 0;
                                                                                                                                                                                                                                                                break L;
                                                                                                                                                                                                                                                              case 1:
                                                                                                                                                                                                                                                                if (Q = 0, g = 128, I >>> 0 < 10002) break L;
                                                                                                                                                                                                                                                                if ((I = I - 10002 | 0) >>> 0 > 11 || (g = 130, !(1 << I & 2069))) break X;
                                                                                                                                                                                                                                                                break L;
                                                                                                                                                                                                                                                              case 2:
                                                                                                                                                                                                                                                                C = (0 | I) == 10024, Q = 0, g = (I = (0 | I) == 10017) ? 130 : C ? 134 : 0;
                                                                                                                                                                                                                                                                break L;
                                                                                                                                                                                                                                                              case 4:
                                                                                                                                                                                                                                                                Q = 0, g = 130;
                                                                                                                                                                                                                                                                FA: switch (I - 10052 | 0) {
                                                                                                                                                                                                                                                                  case 0:
                                                                                                                                                                                                                                                                  case 3:
                                                                                                                                                                                                                                                                    break L;
                                                                                                                                                                                                                                                                  case 8:
                                                                                                                                                                                                                                                                  case 10:
                                                                                                                                                                                                                                                                    break FA;
                                                                                                                                                                                                                                                                  default:
                                                                                                                                                                                                                                                                    break X;
                                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                                g = 134;
                                                                                                                                                                                                                                                                break L;
                                                                                                                                                                                                                                                              case 5:
                                                                                                                                                                                                                                                                if (Q = 0, g = 1073741958, I - 10067 >>> 0 < 2) break L;
                                                                                                                                                                                                                                                                g = (I = I - 10069 & -3) ? 0 : 536871046;
                                                                                                                                                                                                                                                                break L;
                                                                                                                                                                                                                                                              case 6:
                                                                                                                                                                                                                                                                if ((C = I - 10082 | 0) >>> 0 < 3) break DA;
                                                                                                                                                                                                                                                                if (Q = 0, g = 128, I >>> 0 <= 10084) break X;
                                                                                                                                                                                                                                                                break L;
                                                                                                                                                                                                                                                              case 9:
                                                                                                                                                                                                                                                                if (Q = 0, g = 134, I - 10133 >>> 0 >= 3) break X;
                                                                                                                                                                                                                                                                break L;
                                                                                                                                                                                                                                                              case 10:
                                                                                                                                                                                                                                                                if (Q = 0, g = 130, (0 | I) != 10145) break X;
                                                                                                                                                                                                                                                                break L;
                                                                                                                                                                                                                                                              case 11:
                                                                                                                                                                                                                                                                C = (0 | I) == 10175, Q = 0, g = (I = (0 | I) == 10160) || C ? 134 : 0;
                                                                                                                                                                                                                                                                break L;
                                                                                                                                                                                                                                                              case 3:
                                                                                                                                                                                                                                                                break UA;
                                                                                                                                                                                                                                                              default:
                                                                                                                                                                                                                                                                break X;
                                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                                            if (Q = 0, g = 130, I - 10035 >>> 0 < 2) break L;
                                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                                          Q = 0, g = 0;
                                                                                                                                                                                                                                                          break L;
                                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                                        g = 146;
                                                                                                                                                                                                                                                        break L;
                                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                                      Q = A[(I = 83992 + (C << 3) | 0) >> 2], g = A[I + 4 >> 2];
                                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                                    return QA = g, -2147483648 | Q;
                                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                                  if (Q = -2147483648, g = 130, I - 11013 >>> 0 < 3 || (g = 134, I - 11035 >>> 0 < 2)) break C;
                                                                                                                                                                                                                                                  C = (0 | I) == 11093, Q = -2147483648, QA = (I = (0 | I) == 11088) || C ? 134 : 0;
                                                                                                                                                                                                                                                  break o;
                                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                                if (I - 11904 >>> 0 >= 26) break V;
                                                                                                                                                                                                                                                return QA = 0, 1048576;
                                                                                                                                                                                                                                              }
                                                                                                                                                                                                                                              if (I - 12276 >>> 0 >= 8) break g;
                                                                                                                                                                                                                                              break C;
                                                                                                                                                                                                                                            }
                                                                                                                                                                                                                                            if ((I = I - 12306 | 0) >>> 0 > 14 || (Q = -2147483648, !(1 << I & 16387))) break g;
                                                                                                                                                                                                                                            break C;
                                                                                                                                                                                                                                          }
                                                                                                                                                                                                                                          C = 0, QA = (I = I - 12951 & -3) ? 0 : 130;
                                                                                                                                                                                                                                          break U;
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                        if (Q = 0, g = 128, (0 | I) == 127279) break C;
                                                                                                                                                                                                                                        if (I - 127280 >>> 0 < 26 || I - 127312 >>> 0 < 26) return QA = 0, 33792;
                                                                                                                                                                                                                                        if ((C = I - 127344 | 0) >>> 0 <= 15 && (Q = 33792, g = 130, 1 << C & 49155) || (Q = 33792, g = 0, C >>> 0 < 26)) break C;
                                                                                                                                                                                                                                        if ((0 | I) == 127374) break p;
                                                                                                                                                                                                                                        if (Q = 0, g = 134, I - 127377 >>> 0 < 10) break C;
                                                                                                                                                                                                                                        if (g = 102, I >>> 0 <= 127461) break g;
                                                                                                                                                                                                                                        break C;
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                      Q = 0, g = 134;
                                                                                                                                                                                                                                      z: {
                                                                                                                                                                                                                                        v: switch (I - 127489 | 0) {
                                                                                                                                                                                                                                          case 0:
                                                                                                                                                                                                                                          case 25:
                                                                                                                                                                                                                                            break C;
                                                                                                                                                                                                                                          case 1:
                                                                                                                                                                                                                                            break T;
                                                                                                                                                                                                                                          case 2:
                                                                                                                                                                                                                                          case 3:
                                                                                                                                                                                                                                          case 4:
                                                                                                                                                                                                                                          case 5:
                                                                                                                                                                                                                                          case 6:
                                                                                                                                                                                                                                          case 7:
                                                                                                                                                                                                                                          case 8:
                                                                                                                                                                                                                                          case 9:
                                                                                                                                                                                                                                          case 10:
                                                                                                                                                                                                                                          case 11:
                                                                                                                                                                                                                                          case 12:
                                                                                                                                                                                                                                          case 13:
                                                                                                                                                                                                                                          case 14:
                                                                                                                                                                                                                                          case 15:
                                                                                                                                                                                                                                          case 16:
                                                                                                                                                                                                                                          case 17:
                                                                                                                                                                                                                                          case 18:
                                                                                                                                                                                                                                          case 19:
                                                                                                                                                                                                                                          case 20:
                                                                                                                                                                                                                                          case 21:
                                                                                                                                                                                                                                          case 22:
                                                                                                                                                                                                                                          case 23:
                                                                                                                                                                                                                                          case 24:
                                                                                                                                                                                                                                            break z;
                                                                                                                                                                                                                                          default:
                                                                                                                                                                                                                                            break v;
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                        switch (I - 127535 | 0) {
                                                                                                                                                                                                                                          case 0:
                                                                                                                                                                                                                                            break C;
                                                                                                                                                                                                                                          case 8:
                                                                                                                                                                                                                                            break T;
                                                                                                                                                                                                                                          default:
                                                                                                                                                                                                                                            break z;
                                                                                                                                                                                                                                        }
                                                                                                                                                                                                                                      }
                                                                                                                                                                                                                                      if ((-2 & I) == 127568 | I - 127538 >>> 0 < 9) break C;
                                                                                                                                                                                                                                      if (g = 128, I >>> 0 <= 127583) break g;
                                                                                                                                                                                                                                      break C;
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    if ((0 | I) == 127777) break T;
                                                                                                                                                                                                                                    if (I - 127789 >>> 0 < 9 | I - 127799 >>> 0 < 70) break p;
                                                                                                                                                                                                                                    if ((0 | I) == 127877) break IA;
                                                                                                                                                                                                                                    if (I - 127870 >>> 0 < 22) break p;
                                                                                                                                                                                                                                    if (I - 127780 >>> 0 < 112) break T;
                                                                                                                                                                                                                                    Q = 0, g = 130;
                                                                                                                                                                                                                                    e: switch (I - 127894 | 0) {
                                                                                                                                                                                                                                      case 44:
                                                                                                                                                                                                                                      case 45:
                                                                                                                                                                                                                                      case 46:
                                                                                                                                                                                                                                      case 49:
                                                                                                                                                                                                                                        break IA;
                                                                                                                                                                                                                                      case 0:
                                                                                                                                                                                                                                      case 1:
                                                                                                                                                                                                                                      case 3:
                                                                                                                                                                                                                                      case 4:
                                                                                                                                                                                                                                      case 5:
                                                                                                                                                                                                                                        break C;
                                                                                                                                                                                                                                      default:
                                                                                                                                                                                                                                        break e;
                                                                                                                                                                                                                                    }
                                                                                                                                                                                                                                    if (I - 127904 >>> 0 < 42) break p;
                                                                                                                                                                                                                                    if (g = 150, (0 | I) == 127946 || (g = 146, I - 127947 >>> 0 < 2)) break C;
                                                                                                                                                                                                                                    if (I - 127951 >>> 0 < 5) break p;
                                                                                                                                                                                                                                    if (g = 134, I - 127968 >>> 0 < 17 || (g = 130, I - 127902 >>> 0 < 83)) break C;
                                                                                                                                                                                                                                    if ((C = I - 127987 | 0) >>> 0 < 5) break sI;
                                                                                                                                                                                                                                    break O;
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                  Q = 0, g = 130;
                                                                                                                                                                                                                                  a: switch (I - 128063 | 0) {
                                                                                                                                                                                                                                    case 0:
                                                                                                                                                                                                                                    case 2:
                                                                                                                                                                                                                                      break C;
                                                                                                                                                                                                                                    default:
                                                                                                                                                                                                                                      break a;
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                  if ((0 | I) == 128124 | (-5 & I) - 128129 >>> 0 < 3 | (0 | I) == 128110 | I - 128112 >>> 0 < 9 || (-2 & I) == 128066 | I - 128102 >>> 0 < 4 | I - 128070 >>> 0 < 11) break IA;
                                                                                                                                                                                                                                  a: switch (I - 128253 | 0) {
                                                                                                                                                                                                                                    case 1:
                                                                                                                                                                                                                                      QA = 128;
                                                                                                                                                                                                                                      break D;
                                                                                                                                                                                                                                    case 0:
                                                                                                                                                                                                                                      break T;
                                                                                                                                                                                                                                    default:
                                                                                                                                                                                                                                      break a;
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                  if (g = 150, (0 | I) == 128170) break C;
                                                                                                                                                                                                                                  break p;
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                if (I >>> 0 < 128318) break p;
                                                                                                                                                                                                                                if (Q = 0, I >>> 0 < 128326) break C;
                                                                                                                                                                                                                                if (I - 128329 >>> 0 < 2) break T;
                                                                                                                                                                                                                                if (I - 128331 >>> 0 < 4 | I - 128336 >>> 0 < 24) break p;
                                                                                                                                                                                                                                if (I - 128367 >>> 0 < 2) break T;
                                                                                                                                                                                                                                if ((-2 & I) == 128372) {
                                                                                                                                                                                                                                  QA = 146;
                                                                                                                                                                                                                                  break D;
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                if (I - 128371 >>> 0 < 7) break T;
                                                                                                                                                                                                                                if (g = 150, !(C = I - 128378 | 0)) break C;
                                                                                                                                                                                                                                if ((0 | C) == 13 | I - 128394 >>> 0 < 4) break T;
                                                                                                                                                                                                                                if (g = 146, (0 | I) == 128400 || (g = 150, I - 128405 >>> 0 < 2)) break C;
                                                                                                                                                                                                                                g = 134;
                                                                                                                                                                                                                                H: switch (I - 128420 | 0) {
                                                                                                                                                                                                                                  case 0:
                                                                                                                                                                                                                                    break C;
                                                                                                                                                                                                                                  case 1:
                                                                                                                                                                                                                                  case 4:
                                                                                                                                                                                                                                  case 13:
                                                                                                                                                                                                                                  case 14:
                                                                                                                                                                                                                                  case 24:
                                                                                                                                                                                                                                  case 30:
                                                                                                                                                                                                                                  case 31:
                                                                                                                                                                                                                                  case 32:
                                                                                                                                                                                                                                  case 45:
                                                                                                                                                                                                                                  case 46:
                                                                                                                                                                                                                                  case 47:
                                                                                                                                                                                                                                  case 56:
                                                                                                                                                                                                                                  case 57:
                                                                                                                                                                                                                                  case 58:
                                                                                                                                                                                                                                  case 61:
                                                                                                                                                                                                                                  case 63:
                                                                                                                                                                                                                                  case 68:
                                                                                                                                                                                                                                  case 75:
                                                                                                                                                                                                                                  case 79:
                                                                                                                                                                                                                                  case 86:
                                                                                                                                                                                                                                    break T;
                                                                                                                                                                                                                                  default:
                                                                                                                                                                                                                                    break H;
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                                I = I >>> 0 > 128506, C = 0;
                                                                                                                                                                                                                                break i;
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                              if (Q = 0, g = 128, I - 128981 >>> 0 >= 4) break g;
                                                                                                                                                                                                                              break C;
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            if (I >>> 0 < 129292) break g;
                                                                                                                                                                                                                            if (I - 129328 >>> 0 < 10) break IA;
                                                                                                                                                                                                                            Q = 0, g = 150;
                                                                                                                                                                                                                            Z: switch (I - 129304 | 0) {
                                                                                                                                                                                                                              case 35:
                                                                                                                                                                                                                                break g;
                                                                                                                                                                                                                              case 0:
                                                                                                                                                                                                                              case 1:
                                                                                                                                                                                                                              case 2:
                                                                                                                                                                                                                              case 3:
                                                                                                                                                                                                                              case 4:
                                                                                                                                                                                                                              case 6:
                                                                                                                                                                                                                              case 7:
                                                                                                                                                                                                                              case 14:
                                                                                                                                                                                                                                break C;
                                                                                                                                                                                                                              default:
                                                                                                                                                                                                                                break Z;
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                            if (I - 129341 >>> 0 < 2) break IA;
                                                                                                                                                                                                                            if (g = 0, (0 | I) == 129350 || (g = 198, (-4 & I) == 129456)) break C;
                                                                                                                                                                                                                            if ((C = I - 129461 | 0) >>> 0 < 5) break oI;
                                                                                                                                                                                                                            break yI;
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                          if (Q = 1048576, I - 11931 >>> 0 < 89) break C;
                                                                                                                                                                                                                          break g;
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                        return QA = 0, 524288;
                                                                                                                                                                                                                      case 29:
                                                                                                                                                                                                                        return QA = 16777216, 1073741825;
                                                                                                                                                                                                                      case 28:
                                                                                                                                                                                                                        break C;
                                                                                                                                                                                                                      case 30:
                                                                                                                                                                                                                        break zI;
                                                                                                                                                                                                                      default:
                                                                                                                                                                                                                        break g;
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                    return QA = 0, (0 | I) == 32 ? 1073741825 : 1;
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                  if (!(1079 >>> C & 1)) break iA;
                                                                                                                                                                                                                  C = A[(I = 81344 + (C << 3) | 0) >> 2];
                                                                                                                                                                                                                  break y;
                                                                                                                                                                                                                }
                                                                                                                                                                                                                if (557553 >>> C & 1) break h;
                                                                                                                                                                                                                if ((-4 & I) != 8508) break bA;
                                                                                                                                                                                                                break C;
                                                                                                                                                                                                              }
                                                                                                                                                                                                              if (!(207 >>> C & 1)) break jA;
                                                                                                                                                                                                              break G;
                                                                                                                                                                                                            }
                                                                                                                                                                                                            if (Q = 1024, !(1017 >>> C & 1)) break SA;
                                                                                                                                                                                                            break C;
                                                                                                                                                                                                          }
                                                                                                                                                                                                          if (Q = 1024, !(32895 >>> C & 1)) break xA;
                                                                                                                                                                                                          break C;
                                                                                                                                                                                                        }
                                                                                                                                                                                                        if (Q = 1024, !(55 >>> C & 1)) break PA;
                                                                                                                                                                                                        break C;
                                                                                                                                                                                                      }
                                                                                                                                                                                                      if (Q = 1024, !(3087 >>> C & 1)) break pA;
                                                                                                                                                                                                      break C;
                                                                                                                                                                                                    }
                                                                                                                                                                                                    if ((I = I - 71453 | 0) >>> 0 >= 15) break g;
                                                                                                                                                                                                    C = A[(I = 82312 + (I << 3) | 0) >> 2];
                                                                                                                                                                                                    break y;
                                                                                                                                                                                                  }
                                                                                                                                                                                                  if (!(49023 >>> C & 1)) break tA;
                                                                                                                                                                                                  C = A[(I = 82432 + (C << 3) | 0) >> 2];
                                                                                                                                                                                                  break y;
                                                                                                                                                                                                }
                                                                                                                                                                                                if (!(514623 >>> C & 1)) break $;
                                                                                                                                                                                                C = A[(I = 82664 + (C << 3) | 0) >> 2];
                                                                                                                                                                                                break y;
                                                                                                                                                                                              }
                                                                                                                                                                                              C = A[(I = 83160 + (C << 3) | 0) >> 2];
                                                                                                                                                                                              break y;
                                                                                                                                                                                            }
                                                                                                                                                                                            if (Q = 268435520, !(197 >>> C & 1)) break WA;
                                                                                                                                                                                            break C;
                                                                                                                                                                                          }
                                                                                                                                                                                          C = A[(I = 83208 + (C << 3) | 0) >> 2];
                                                                                                                                                                                          break y;
                                                                                                                                                                                        }
                                                                                                                                                                                        if ((I = I - 6145 | 0) >>> 0 >= 10) break g;
                                                                                                                                                                                        C = A[(I = 83296 + (I << 3) | 0) >> 2];
                                                                                                                                                                                        break y;
                                                                                                                                                                                      }
                                                                                                                                                                                      if (!(1077711 >>> C & 1)) break BA;
                                                                                                                                                                                      C = A[(I = 83376 + (C << 3) | 0) >> 2];
                                                                                                                                                                                      break y;
                                                                                                                                                                                    }
                                                                                                                                                                                    if (!(159 >>> C & 1)) break hA;
                                                                                                                                                                                    C = A[(I = 83544 + (C << 3) | 0) >> 2];
                                                                                                                                                                                    break y;
                                                                                                                                                                                  }
                                                                                                                                                                                  if ((I = I - 121479 | 0) >>> 0 >= 4) break g;
                                                                                                                                                                                  C = A[(I = 83608 + (I << 3) | 0) >> 2];
                                                                                                                                                                                  break y;
                                                                                                                                                                                }
                                                                                                                                                                                if (!(195 >>> C & 1)) break XA;
                                                                                                                                                                                break m;
                                                                                                                                                                              }
                                                                                                                                                                              if ((I = I - 9745 | 0) >>> 0 >= 13) break n;
                                                                                                                                                                              C = A[(I = 83640 + (I << 3) | 0) >> 2];
                                                                                                                                                                              break y;
                                                                                                                                                                            }
                                                                                                                                                                            if (1101 >>> C & 1) break _;
                                                                                                                                                                            if (Q = -2147483648, g = 130, I >>> 0 <= 9773) break n;
                                                                                                                                                                            break C;
                                                                                                                                                                          }
                                                                                                                                                                          if (!(45 >>> C & 1)) break YA;
                                                                                                                                                                          C = A[(I = 83744 + (C << 3) | 0) >> 2];
                                                                                                                                                                          break y;
                                                                                                                                                                        }
                                                                                                                                                                        if ((I = I - 9851 | 0) >>> 0 >= 5) break n;
                                                                                                                                                                        C = A[(I = 83792 + (I << 3) | 0) >> 2];
                                                                                                                                                                        break y;
                                                                                                                                                                      }
                                                                                                                                                                      if ((I = I - 9874 | 0) >>> 0 >= 11) break n;
                                                                                                                                                                      C = A[(I = 83832 + (I << 3) | 0) >> 2];
                                                                                                                                                                      break y;
                                                                                                                                                                    }
                                                                                                                                                                    if ((I = I - 9937 | 0) >>> 0 >= 4) break n;
                                                                                                                                                                    C = A[(I = 83920 + (I << 3) | 0) >> 2];
                                                                                                                                                                    break y;
                                                                                                                                                                  }
                                                                                                                                                                  C = A[(I = 83952 + (I << 3) | 0) >> 2];
                                                                                                                                                                  break y;
                                                                                                                                                                }
                                                                                                                                                                if (!(23 >>> C & 1)) break O;
                                                                                                                                                                C = A[(I = 84016 + (C << 3) | 0) >> 2];
                                                                                                                                                                break y;
                                                                                                                                                              }
                                                                                                                                                              if (Q = 0, g = 150, !(1991 >>> C & 1)) break LA;
                                                                                                                                                              break C;
                                                                                                                                                            }
                                                                                                                                                            if (g = 150, 27 >>> C & 1) break C;
                                                                                                                                                          }
                                                                                                                                                          C = 0, QA = (I = I - 129489 >>> 0 < 13) ? 150 : 134;
                                                                                                                                                          break U;
                                                                                                                                                        }
                                                                                                                                                        I = I - 127992 >>> 0 < 3, C = 0;
                                                                                                                                                        break i;
                                                                                                                                                      }
                                                                                                                                                      if (I - 9837 >>> 0 < 2) break C;
                                                                                                                                                    }
                                                                                                                                                    QA = 128;
                                                                                                                                                    break F;
                                                                                                                                                  }
                                                                                                                                                  if (I - 8623 >>> 0 < 13) break S;
                                                                                                                                                  if (I - 8636 >>> 0 < 18) break m;
                                                                                                                                                  if ((C = I - 8656 | 0) >>> 0 < 22 && (g = 0, 3157995 >>> C & 1) || (Q = -2147483648, g = 0, I - 8661 >>> 0 < 31)) break C;
                                                                                                                                                  break g;
                                                                                                                                                }
                                                                                                                                                if (I >>> 0 < 128592) break p;
                                                                                                                                                if (Q = 0, g = 0, I >>> 0 < 128640) break C;
                                                                                                                                                if (!((C = I - 128675 | 0) >>> 0 > 29 | !(1 << C & 537788417))) break IA;
                                                                                                                                                if (I >>> 0 < 128710) break p;
                                                                                                                                                if (g = 150, (0 | I) == 128716) break C;
                                                                                                                                                if (I - 128715 >>> 0 < 5) break T;
                                                                                                                                                if (I - 128720 >>> 0 < 3) break p;
                                                                                                                                                if (!((C = I - 128736 | 0) >>> 0 >= 10 | !(575 >>> C & 1))) break T;
                                                                                                                                                if (g = 134, I - 128747 >>> 0 < 2) break C;
                                                                                                                                                g = 130;
                                                                                                                                                LA: switch (I - 128752 | 0) {
                                                                                                                                                  case 0:
                                                                                                                                                  case 3:
                                                                                                                                                    break C;
                                                                                                                                                  default:
                                                                                                                                                    break LA;
                                                                                                                                                }
                                                                                                                                                I = I - 128756 >>> 0 < 6, C = 0;
                                                                                                                                                break i;
                                                                                                                                              }
                                                                                                                                              Q = -2147483648;
                                                                                                                                              zA: switch (I - 8260 | 0) {
                                                                                                                                                case 1:
                                                                                                                                                case 2:
                                                                                                                                                case 3:
                                                                                                                                                case 4:
                                                                                                                                                case 5:
                                                                                                                                                case 6:
                                                                                                                                                case 7:
                                                                                                                                                case 8:
                                                                                                                                                case 9:
                                                                                                                                                case 10:
                                                                                                                                                case 11:
                                                                                                                                                case 12:
                                                                                                                                                case 13:
                                                                                                                                                  break g;
                                                                                                                                                case 0:
                                                                                                                                                case 14:
                                                                                                                                                  break C;
                                                                                                                                                default:
                                                                                                                                                  break zA;
                                                                                                                                              }
                                                                                                                                              if ((0 | (I = I - 8315 | 0)) != 16 && I) break g;
                                                                                                                                              return QA = 0, 8;
                                                                                                                                            }
                                                                                                                                            if (Q = 268435520, g = 1073741824, (0 | I) != 69955) break g;
                                                                                                                                            break C;
                                                                                                                                          }
                                                                                                                                          if (I - 8266 >>> 0 < 8) break S;
                                                                                                                                          if (Q = -2147483640, (0 | I) == 8275) break C;
                                                                                                                                          if (Q = -2147483648, I - 8277 >>> 0 >= 10) break g;
                                                                                                                                          break C;
                                                                                                                                        }
                                                                                                                                        QA = 542113792;
                                                                                                                                        break F;
                                                                                                                                      }
                                                                                                                                      if (Q = -2147483648, g = 0, I - 65093 >>> 0 < 2 || (Q = 64, g = 268435456, (0 | U) == 65104)) break C;
                                                                                                                                      Q = 268435520, g = -2147483648;
                                                                                                                                      hA: switch (I - 65106 | 0) {
                                                                                                                                        case 3:
                                                                                                                                          QA = 134217728;
                                                                                                                                          break I;
                                                                                                                                        case 5:
                                                                                                                                          QA = 536870912;
                                                                                                                                          break B;
                                                                                                                                        case 4:
                                                                                                                                          break R;
                                                                                                                                        case 2:
                                                                                                                                          break Q;
                                                                                                                                        case 0:
                                                                                                                                          break C;
                                                                                                                                        case 15:
                                                                                                                                        case 22:
                                                                                                                                          break hA;
                                                                                                                                        default:
                                                                                                                                          break g;
                                                                                                                                      }
                                                                                                                                      break h;
                                                                                                                                    }
                                                                                                                                    if ((0 | I) == 2142) break RA;
                                                                                                                                    if (Q = 64, I - 2096 >>> 0 < 15) break C;
                                                                                                                                    break g;
                                                                                                                                  }
                                                                                                                                  if (Q = 1024, I - 72850 >>> 0 < 22) break C;
                                                                                                                                  if ((I = I - 72874 | 0) >>> 0 >= 13) break g;
                                                                                                                                  C = A[(I = 82560 + (I << 3) | 0) >> 2];
                                                                                                                                  break y;
                                                                                                                                }
                                                                                                                                if (Q = 4096, I - 71103 >>> 0 < 2) break C;
                                                                                                                                if (Q = 1024, (-2 & I) != 71132) break g;
                                                                                                                                break C;
                                                                                                                              }
                                                                                                                              if ((0 | I) == 70726) break J;
                                                                                                                              if (Q = 4096, (-2 & I) != 70850) break g;
                                                                                                                              break C;
                                                                                                                            }
                                                                                                                            if (Q = 4096, I - 68325 >>> 0 >= 2) break g;
                                                                                                                            break C;
                                                                                                                          }
                                                                                                                          if ((0 | I) == 6109) break J;
                                                                                                                          if (Q = 4096, I - 6089 >>> 0 >= 11) break g;
                                                                                                                          break C;
                                                                                                                        }
                                                                                                                        TA: switch (I - 3959 | 0) {
                                                                                                                          case 0:
                                                                                                                          case 2:
                                                                                                                            return QA = 0, 8389632;
                                                                                                                          default:
                                                                                                                            break TA;
                                                                                                                        }
                                                                                                                        if ((0 | C) == 3968 | I - 3953 >>> 0 < 14) break G;
                                                                                                                        if (!((C = I - 3970 | 0) >>> 0 >= 6 | !(55 >>> C & 1))) break J;
                                                                                                                        if (I - 3981 >>> 0 < 11) break G;
                                                                                                                        if (Q = 1024, I - 3993 >>> 0 < 36) break C;
                                                                                                                        if (Q = 4096, (0 | I) != 4038) break g;
                                                                                                                        break C;
                                                                                                                      }
                                                                                                                      if (I - 3655 >>> 0 < 6) break J;
                                                                                                                      if (!((C = I - 3761 | 0) >>> 0 > 11 | !(1 << C & 3577))) break G;
                                                                                                                      Q = 1024;
                                                                                                                      SA: switch (I - 3661 | 0) {
                                                                                                                        case 1:
                                                                                                                          break J;
                                                                                                                        case 0:
                                                                                                                          break C;
                                                                                                                        default:
                                                                                                                          break SA;
                                                                                                                      }
                                                                                                                      if (Q = 4096, I - 3784 >>> 0 < 5) break C;
                                                                                                                      if (Q = 1024, (0 | I) != 3789) break g;
                                                                                                                      break C;
                                                                                                                    }
                                                                                                                    if (I - 1770 >>> 0 < 3) break C;
                                                                                                                    if (Q = 1024, (0 | I) != 1773) break g;
                                                                                                                    break C;
                                                                                                                  }
                                                                                                                  if ((-2 & I) == 73028) break J;
                                                                                                                  Q = 1024;
                                                                                                                  $: switch (I - 73104 | 0) {
                                                                                                                    default:
                                                                                                                      if ((0 | I) != 73031) break g;
                                                                                                                      break C;
                                                                                                                    case 2:
                                                                                                                    case 3:
                                                                                                                    case 4:
                                                                                                                    case 6:
                                                                                                                      break g;
                                                                                                                    case 0:
                                                                                                                    case 1:
                                                                                                                    case 5:
                                                                                                                      break C;
                                                                                                                    case 7:
                                                                                                                      break $;
                                                                                                                  }
                                                                                                                  break J;
                                                                                                                }
                                                                                                                if ((I = I - 8492 | 0) >>> 0 >= 30) break g;
                                                                                                                C = A[(I = 81704 + (I << 3) | 0) >> 2];
                                                                                                                break y;
                                                                                                              }
                                                                                                              Q = 0;
                                                                                                              break x;
                                                                                                            }
                                                                                                            g = (C = (-3 & I) == 43712) >>> 20 | 0, Q = C << 12;
                                                                                                          }
                                                                                                          if ((0 | (E = -65536 & I)) == 131072) break QI;
                                                                                                          if ((0 | E) == 65536) break sA;
                                                                                                          if (C = Q, U = g, E) break yA;
                                                                                                        }
                                                                                                        if (I - 13312 >>> 0 < 6582 || I - 19968 >>> 0 < 20976) break A;
                                                                                                        if (E = 2048, I - 63744 >>> 0 < 366) return QA = U, 2048 | C;
                                                                                                        if (Q = C, g = U, I - 64112 >>> 0 >= 106) break yA;
                                                                                                        break W;
                                                                                                      }
                                                                                                      if (E = 2099200, I - 183984 >>> 0 < 7473 | I - 178208 >>> 0 < 5762 | I - 177984 >>> 0 < 222 | I - 131072 >>> 0 < 42711 || I - 173824 >>> 0 < 4149 || (E = 2048, I - 194560 >>> 0 < 542)) break W;
                                                                                                      break yA;
                                                                                                    }
                                                                                                    if (E = 2048, I - 110960 >>> 0 < 396 | I - 94208 >>> 0 < 6125 | I - 100352 >>> 0 < 755) break W;
                                                                                                  }
                                                                                                  E = 0;
                                                                                                }
                                                                                                return QA = g, Q | E;
                                                                                              }
                                                                                              if ((-4 & I) == 8508) break h;
                                                                                              if (Q = 128, !(I - 8517 >>> 0 < 3) && (Q = 16777344, (-2 & I) != 8520)) break g;
                                                                                            }
                                                                                            QA = g;
                                                                                            break o;
                                                                                          }
                                                                                          C = (I = I >>> 0 > 131069) ? 65536 : 0, QA = I ? 0 : 128;
                                                                                          break U;
                                                                                        }
                                                                                        if ((0 | I) == 11776) break S;
                                                                                      }
                                                                                      QA = 0;
                                                                                      break D;
                                                                                    }
                                                                                    QA = 0;
                                                                                    break F;
                                                                                  }
                                                                                  return QA = 0, 4194304;
                                                                                }
                                                                                return QA = 0, 128;
                                                                              }
                                                                              return QA = 0, 16777344;
                                                                            }
                                                                            return QA = 0, 4096;
                                                                          }
                                                                          return QA = 0, 1024;
                                                                        }
                                                                        return QA = 0, -2147483520;
                                                                      }
                                                                      return QA = 0, I - 10214 >>> 0 < 10 ? -2147483520 : -2147483648;
                                                                    }
                                                                    QA = 0;
                                                                    break B;
                                                                  }
                                                                  QA = 0;
                                                                  break I;
                                                                }
                                                                QA = 130;
                                                                break D;
                                                              }
                                                              QA = 130;
                                                              break F;
                                                            }
                                                            QA = 134;
                                                            break D;
                                                          }
                                                          return QA = 150, 0;
                                                        }
                                                        QA = 0;
                                                        break U;
                                                      }
                                                      QA = I ? 0 : g;
                                                      break U;
                                                    }
                                                    return QA = C, I;
                                                  }
                                                  return 131072;
                                                }
                                                return QA = 0, 16777216;
                                              }
                                              QA = I ? 0 : Q;
                                              break U;
                                            }
                                            return QA = g, I;
                                          }
                                          return QA = Q, I;
                                        }
                                        QA = I ? 0 : C;
                                        break o;
                                      }
                                      return QA = 0, 8192;
                                    }
                                    QA = A[I + 4 >> 2];
                                    break U;
                                  }
                                  QA = I ? 8388608 : 0;
                                  break U;
                                }
                                return Q;
                              }
                              return QA = 0, -2147483616;
                            }
                            QA = I ? 134 : 128;
                          }
                          return C;
                        }
                        QA = 134;
                      }
                      return -2147483648;
                    }
                    return 0;
                  }
                  QA = 1073741824;
                  break B;
                }
                QA = -2147483648;
              }
              return 268435520;
            }
            QA = 67108864;
          }
          return 64;
        }
        return QA = U, 2099200 | C;
      }
      function Wg(I) {
        var C, Q = 0, g = 0, E = 0, U = 0, w = 0;
        (C = KI(8244)) && (A[C + 328 >> 2] = 2, M[132848] = 0, A[C + 684 >> 2] = 0, A[C + 688 >> 2] = 0, A[C + 320 >> 2] = 0, A[C + 324 >> 2] = 0, M[C + 268 | 0] = 0, M[C + 228 | 0] = 0, A[C + 8216 >> 2] = 0, A[C + 8220 >> 2] = 0, A[C + 224 >> 2] = 104944, A[C + 216 >> 2] = 383, A[C + 220 >> 2] = 96, pA(C + 344 | 0, 0, 292), A[C + 8196 >> 2] = 0, A[(Q = C + 8188 | 0) >> 2] = 0, A[Q + 4 >> 2] = 0, A[C + 8180 >> 2] = 0, A[C + 8184 >> 2] = 0, M[C + 460 | 0] = 22, M[C + 461 | 0] = 129, M[C + 466 | 0] = 38, M[C + 462 | 0] = 38, M[C + 463 | 0] = 36, M[C + 464 | 0] = 22, M[C + 465 | 0] = 224, M[C + 456 | 0] = 22, M[C + 457 | 0] = 22, M[C + 458 | 0] = 44, M[C + 459 | 0] = 22, M[C + 454 | 0] = 46, M[C + 455 | 0] = 129, M[C + 446 | 0] = 22, M[C + 447 | 0] = 38, M[C + 448 | 0] = 28, M[C + 449 | 0] = 193, M[C + 450 | 0] = 38, M[C + 451 | 0] = 22, M[C + 452 | 0] = 46, M[C + 453 | 0] = 46, M[C + 441 | 0] = 129, M[C + 442 | 0] = 38, M[C + 443 | 0] = 22, M[C + 444 | 0] = 38, M[C + 445 | 0] = 193, A[C + 332 >> 2] = 104912, A[C + 336 >> 2] = 104916, A[C + 340 >> 2] = 105232, M[C + 296 | 0] = 18, M[C + 297 | 0] = 18, L[C + 304 >> 1] = 182, L[C + 306 >> 1] = 140, M[C + 298 | 0] = 20, L[C + 308 >> 1] = 220, L[C + 310 >> 1] = 220, L[C + 312 >> 1] = 220, M[C + 299 | 0] = 20, M[C + 300 | 0] = 20, L[C + 314 >> 1] = 240, M[C + 301 | 0] = 22, L[C + 316 >> 1] = 260, L[C + 318 >> 1] = 280, M[C + 302 | 0] = 22, M[C + 303 | 0] = 20, Q = pA(C, 0, 212), A[Q + 200 >> 2] = 20, A[Q + 192 >> 2] = 25966, A[Q + 196 >> 2] = 500, A[Q + 80 >> 2] = 95, A[Q + 16 >> 2] = 1, A[Q + 20 >> 2] = 3, A[Q + 8 >> 2] = 2, A[Q + 52 >> 2] = 19, M[Q + 168 | 0] = 3, A[Q + 92 >> 2] = 2, A[Q + 72 >> 2] = 4, A[Q + 40 >> 2] = 115, A[Q + 44 >> 2] = 95, A[Q + 140 >> 2] = 105244, hA(Q, 201), A[Q + 120 >> 2] = 2, A[Q + 124 >> 2] = 44, A[Q + 164 >> 2] = 100, A[Q + 128 >> 2] = 46, A[Q + 132 >> 2] = 14, A[Q + 112 >> 2] = 1227133512, A[Q + 116 >> 2] = 49, A[Q + 104 >> 2] = 1, g = A[26313], A[Q + 636 >> 2] = A[26312], A[Q + 640 >> 2] = g, g = A[26315], A[Q + 644 >> 2] = A[26314], A[Q + 648 >> 2] = g, g = A[26317], A[Q + 652 >> 2] = A[26316], A[Q + 656 >> 2] = g, g = A[26319], A[Q + 660 >> 2] = A[26318], A[Q + 664 >> 2] = g, g = A[26321], A[Q + 668 >> 2] = A[26320], A[Q + 672 >> 2] = g, g = A[26323], A[Q + 676 >> 2] = A[26322], A[Q + 680 >> 2] = g, g = G[104928] | G[104929] << 8, M[Q + 160 | 0] = g, M[Q + 161 | 0] = g >>> 8, g = G[104924] | G[104925] << 8 | G[104926] << 16 | G[104927] << 24, M[Q + 156 | 0] = g, M[Q + 157 | 0] = g >>> 8, M[Q + 158 | 0] = g >>> 16, M[Q + 159 | 0] = g >>> 24), E = YA(C + 228 | 0, I), Q = 0;
        A: {
          I: if (g = G[0 | I]) {
            for (; Q = (g << 24 >> 24) + (Q << 8) | 0, g = G[0 | (I = I + 1 | 0)]; ) ;
            Q: {
              B: {
                E: {
                  R: {
                    D: {
                      F: {
                        w: {
                          U: {
                            i: {
                              N: {
                                o: {
                                  s: {
                                    y: {
                                      l: {
                                        j: {
                                          k: {
                                            P: {
                                              f: {
                                                r: {
                                                  c: {
                                                    Y: {
                                                      d: {
                                                        q: {
                                                          IA: {
                                                            p: {
                                                              _: {
                                                                T: {
                                                                  RA: {
                                                                    t: {
                                                                      qA: {
                                                                        m: {
                                                                          G: {
                                                                            J: {
                                                                              QA: {
                                                                                h: {
                                                                                  gA: {
                                                                                    S: {
                                                                                      g: {
                                                                                        CI: {
                                                                                          CA: {
                                                                                            C: {
                                                                                              iA: {
                                                                                                W: {
                                                                                                  yA: {
                                                                                                    sA: {
                                                                                                      QI: {
                                                                                                        MA: {
                                                                                                          x: {
                                                                                                            VA: {
                                                                                                              K: {
                                                                                                                bA: {
                                                                                                                  $: {
                                                                                                                    jA: {
                                                                                                                      SA: {
                                                                                                                        TA: {
                                                                                                                          xA: {
                                                                                                                            PA: {
                                                                                                                              fA: {
                                                                                                                                pA: {
                                                                                                                                  tA: {
                                                                                                                                    WA: {
                                                                                                                                      hA: {
                                                                                                                                        gI: {
                                                                                                                                          BA: {
                                                                                                                                            OA: {
                                                                                                                                              zA: {
                                                                                                                                                LA: {
                                                                                                                                                  XA: {
                                                                                                                                                    n: {
                                                                                                                                                      YA: {
                                                                                                                                                        if ((0 | Q) <= 28008) {
                                                                                                                                                          if ((0 | Q) <= 26464) {
                                                                                                                                                            if ((0 | Q) <= 25696) {
                                                                                                                                                              O: switch (Q - 24934 | 0) {
                                                                                                                                                                case 20:
                                                                                                                                                                  break U;
                                                                                                                                                                case 1:
                                                                                                                                                                case 2:
                                                                                                                                                                case 3:
                                                                                                                                                                case 4:
                                                                                                                                                                case 5:
                                                                                                                                                                case 6:
                                                                                                                                                                case 9:
                                                                                                                                                                case 10:
                                                                                                                                                                case 11:
                                                                                                                                                                case 14:
                                                                                                                                                                case 15:
                                                                                                                                                                case 16:
                                                                                                                                                                case 17:
                                                                                                                                                                case 18:
                                                                                                                                                                case 19:
                                                                                                                                                                  break I;
                                                                                                                                                                case 8:
                                                                                                                                                                  break $;
                                                                                                                                                                case 12:
                                                                                                                                                                  break WA;
                                                                                                                                                                case 7:
                                                                                                                                                                  break hA;
                                                                                                                                                                case 0:
                                                                                                                                                                  break gI;
                                                                                                                                                                case 13:
                                                                                                                                                                  break YA;
                                                                                                                                                                default:
                                                                                                                                                                  break O;
                                                                                                                                                              }
                                                                                                                                                              O: switch (Q - 25189 | 0) {
                                                                                                                                                                case 1:
                                                                                                                                                                case 3:
                                                                                                                                                                case 4:
                                                                                                                                                                case 5:
                                                                                                                                                                case 6:
                                                                                                                                                                case 7:
                                                                                                                                                                case 8:
                                                                                                                                                                case 10:
                                                                                                                                                                case 11:
                                                                                                                                                                case 12:
                                                                                                                                                                case 13:
                                                                                                                                                                  break I;
                                                                                                                                                                case 14:
                                                                                                                                                                  break iA;
                                                                                                                                                                case 2:
                                                                                                                                                                  break pA;
                                                                                                                                                                case 0:
                                                                                                                                                                  break tA;
                                                                                                                                                                case 9:
                                                                                                                                                                  break YA;
                                                                                                                                                                default:
                                                                                                                                                                  break O;
                                                                                                                                                              }
                                                                                                                                                              switch (Q - 25441 | 0) {
                                                                                                                                                                case 18:
                                                                                                                                                                  break k;
                                                                                                                                                                case 0:
                                                                                                                                                                  break $;
                                                                                                                                                                case 24:
                                                                                                                                                                  break PA;
                                                                                                                                                                default:
                                                                                                                                                                  break I;
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                            O: switch (Q - 25964 | 0) {
                                                                                                                                                              case 1:
                                                                                                                                                              case 4:
                                                                                                                                                              case 5:
                                                                                                                                                              case 6:
                                                                                                                                                                break I;
                                                                                                                                                              case 8:
                                                                                                                                                                break VA;
                                                                                                                                                              case 9:
                                                                                                                                                                break bA;
                                                                                                                                                              case 7:
                                                                                                                                                                break $;
                                                                                                                                                              case 3:
                                                                                                                                                                break jA;
                                                                                                                                                              case 2:
                                                                                                                                                                break SA;
                                                                                                                                                              case 0:
                                                                                                                                                                break XA;
                                                                                                                                                              default:
                                                                                                                                                                break O;
                                                                                                                                                            }
                                                                                                                                                            O: switch (Q - 26209 | 0) {
                                                                                                                                                              case 1:
                                                                                                                                                              case 2:
                                                                                                                                                              case 3:
                                                                                                                                                              case 4:
                                                                                                                                                              case 5:
                                                                                                                                                              case 6:
                                                                                                                                                              case 7:
                                                                                                                                                              case 9:
                                                                                                                                                              case 10:
                                                                                                                                                              case 11:
                                                                                                                                                              case 12:
                                                                                                                                                              case 13:
                                                                                                                                                              case 14:
                                                                                                                                                              case 15:
                                                                                                                                                              case 16:
                                                                                                                                                                break I;
                                                                                                                                                              case 17:
                                                                                                                                                                break MA;
                                                                                                                                                              case 8:
                                                                                                                                                                break x;
                                                                                                                                                              case 0:
                                                                                                                                                                break K;
                                                                                                                                                              default:
                                                                                                                                                                break O;
                                                                                                                                                            }
                                                                                                                                                            switch (Q - 25697 | 0) {
                                                                                                                                                              case 4:
                                                                                                                                                                break TA;
                                                                                                                                                              case 0:
                                                                                                                                                                break xA;
                                                                                                                                                              default:
                                                                                                                                                                break I;
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                          if ((0 | Q) <= 27488) {
                                                                                                                                                            O: switch (Q - 26729 | 0) {
                                                                                                                                                              case 1:
                                                                                                                                                              case 2:
                                                                                                                                                              case 3:
                                                                                                                                                              case 4:
                                                                                                                                                              case 5:
                                                                                                                                                              case 6:
                                                                                                                                                              case 7:
                                                                                                                                                              case 8:
                                                                                                                                                              case 10:
                                                                                                                                                              case 13:
                                                                                                                                                              case 14:
                                                                                                                                                              case 15:
                                                                                                                                                                break I;
                                                                                                                                                              case 16:
                                                                                                                                                                break CI;
                                                                                                                                                              case 12:
                                                                                                                                                                break CA;
                                                                                                                                                              case 11:
                                                                                                                                                                break C;
                                                                                                                                                              case 9:
                                                                                                                                                                break iA;
                                                                                                                                                              case 0:
                                                                                                                                                                break W;
                                                                                                                                                              default:
                                                                                                                                                                break O;
                                                                                                                                                            }
                                                                                                                                                            O: switch (Q - 26977 | 0) {
                                                                                                                                                              case 1:
                                                                                                                                                              case 2:
                                                                                                                                                              case 4:
                                                                                                                                                              case 5:
                                                                                                                                                              case 6:
                                                                                                                                                              case 7:
                                                                                                                                                              case 8:
                                                                                                                                                              case 9:
                                                                                                                                                              case 10:
                                                                                                                                                              case 11:
                                                                                                                                                              case 12:
                                                                                                                                                              case 13:
                                                                                                                                                              case 15:
                                                                                                                                                              case 16:
                                                                                                                                                              case 17:
                                                                                                                                                                break I;
                                                                                                                                                              case 19:
                                                                                                                                                                break h;
                                                                                                                                                              case 18:
                                                                                                                                                                break gA;
                                                                                                                                                              case 3:
                                                                                                                                                                break S;
                                                                                                                                                              case 14:
                                                                                                                                                                break g;
                                                                                                                                                              case 0:
                                                                                                                                                                break $;
                                                                                                                                                              default:
                                                                                                                                                                break O;
                                                                                                                                                            }
                                                                                                                                                            switch (Q - 26465 | 0) {
                                                                                                                                                              case 20:
                                                                                                                                                                break W;
                                                                                                                                                              case 13:
                                                                                                                                                                break yA;
                                                                                                                                                              case 0:
                                                                                                                                                              case 3:
                                                                                                                                                                break sA;
                                                                                                                                                              default:
                                                                                                                                                                break I;
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                          O: switch (Q - 27489 | 0) {
                                                                                                                                                            case 13:
                                                                                                                                                              break i;
                                                                                                                                                            case 1:
                                                                                                                                                            case 2:
                                                                                                                                                            case 3:
                                                                                                                                                            case 4:
                                                                                                                                                            case 5:
                                                                                                                                                            case 6:
                                                                                                                                                            case 7:
                                                                                                                                                            case 8:
                                                                                                                                                            case 9:
                                                                                                                                                            case 12:
                                                                                                                                                            case 15:
                                                                                                                                                            case 16:
                                                                                                                                                            case 17:
                                                                                                                                                            case 18:
                                                                                                                                                            case 19:
                                                                                                                                                            case 21:
                                                                                                                                                            case 22:
                                                                                                                                                            case 23:
                                                                                                                                                              break I;
                                                                                                                                                            case 24:
                                                                                                                                                              break RA;
                                                                                                                                                            case 20:
                                                                                                                                                              break t;
                                                                                                                                                            case 14:
                                                                                                                                                              break qA;
                                                                                                                                                            case 11:
                                                                                                                                                              break m;
                                                                                                                                                            case 10:
                                                                                                                                                              break G;
                                                                                                                                                            case 0:
                                                                                                                                                              break J;
                                                                                                                                                            default:
                                                                                                                                                              break O;
                                                                                                                                                          }
                                                                                                                                                          switch (Q - 27745 | 0) {
                                                                                                                                                            case 19:
                                                                                                                                                              break _;
                                                                                                                                                            case 0:
                                                                                                                                                              break T;
                                                                                                                                                            case 21:
                                                                                                                                                              break zA;
                                                                                                                                                            default:
                                                                                                                                                              break I;
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                        if ((0 | Q) <= 29792) {
                                                                                                                                                          if ((0 | Q) <= 28768) {
                                                                                                                                                            O: switch (Q - 28009 | 0) {
                                                                                                                                                              case 3:
                                                                                                                                                                break i;
                                                                                                                                                              case 11:
                                                                                                                                                                break IA;
                                                                                                                                                              case 2:
                                                                                                                                                                break p;
                                                                                                                                                              case 1:
                                                                                                                                                              case 4:
                                                                                                                                                              case 5:
                                                                                                                                                              case 6:
                                                                                                                                                              case 7:
                                                                                                                                                              case 8:
                                                                                                                                                              case 12:
                                                                                                                                                              case 13:
                                                                                                                                                              case 14:
                                                                                                                                                              case 15:
                                                                                                                                                                break I;
                                                                                                                                                              case 10:
                                                                                                                                                                break S;
                                                                                                                                                              case 9:
                                                                                                                                                                break W;
                                                                                                                                                              case 0:
                                                                                                                                                              case 16:
                                                                                                                                                                break BA;
                                                                                                                                                              default:
                                                                                                                                                                break O;
                                                                                                                                                            }
                                                                                                                                                            O: switch (Q - 28258 | 0) {
                                                                                                                                                              case 0:
                                                                                                                                                                break d;
                                                                                                                                                              case 10:
                                                                                                                                                                break q;
                                                                                                                                                              case 1:
                                                                                                                                                              case 2:
                                                                                                                                                              case 4:
                                                                                                                                                              case 5:
                                                                                                                                                              case 6:
                                                                                                                                                              case 7:
                                                                                                                                                              case 8:
                                                                                                                                                              case 9:
                                                                                                                                                                break I;
                                                                                                                                                              case 3:
                                                                                                                                                                break W;
                                                                                                                                                              default:
                                                                                                                                                                break O;
                                                                                                                                                            }
                                                                                                                                                            switch (Q - 28525 | 0) {
                                                                                                                                                              case 0:
                                                                                                                                                                break Y;
                                                                                                                                                              case 5:
                                                                                                                                                                break W;
                                                                                                                                                              default:
                                                                                                                                                                break I;
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                          if ((0 | Q) <= 29539) {
                                                                                                                                                            O: switch (Q - 28769 | 0) {
                                                                                                                                                              case 19:
                                                                                                                                                                break r;
                                                                                                                                                              case 11:
                                                                                                                                                                break c;
                                                                                                                                                              case 1:
                                                                                                                                                              case 2:
                                                                                                                                                              case 3:
                                                                                                                                                              case 4:
                                                                                                                                                              case 5:
                                                                                                                                                              case 6:
                                                                                                                                                              case 7:
                                                                                                                                                              case 8:
                                                                                                                                                              case 9:
                                                                                                                                                              case 10:
                                                                                                                                                              case 12:
                                                                                                                                                              case 13:
                                                                                                                                                              case 14:
                                                                                                                                                              case 15:
                                                                                                                                                              case 16:
                                                                                                                                                              case 17:
                                                                                                                                                              case 18:
                                                                                                                                                              case 20:
                                                                                                                                                              case 21:
                                                                                                                                                              case 22:
                                                                                                                                                              case 23:
                                                                                                                                                                break I;
                                                                                                                                                              case 0:
                                                                                                                                                                break W;
                                                                                                                                                              case 24:
                                                                                                                                                                break BA;
                                                                                                                                                              default:
                                                                                                                                                                break O;
                                                                                                                                                            }
                                                                                                                                                            O: switch (Q - 29295 | 0) {
                                                                                                                                                              case 6:
                                                                                                                                                                break P;
                                                                                                                                                              case 0:
                                                                                                                                                                break f;
                                                                                                                                                              case 1:
                                                                                                                                                              case 2:
                                                                                                                                                              case 3:
                                                                                                                                                              case 4:
                                                                                                                                                              case 5:
                                                                                                                                                                break I;
                                                                                                                                                              default:
                                                                                                                                                                break O;
                                                                                                                                                            }
                                                                                                                                                            if ((0 | Q) == 29045) break BA;
                                                                                                                                                            break I;
                                                                                                                                                          }
                                                                                                                                                          switch (Q - 29540 | 0) {
                                                                                                                                                            case 19:
                                                                                                                                                              break N;
                                                                                                                                                            case 18:
                                                                                                                                                              break o;
                                                                                                                                                            case 13:
                                                                                                                                                              break s;
                                                                                                                                                            case 8:
                                                                                                                                                              break l;
                                                                                                                                                            case 5:
                                                                                                                                                              break j;
                                                                                                                                                            case 7:
                                                                                                                                                              break k;
                                                                                                                                                            case 14:
                                                                                                                                                              break iA;
                                                                                                                                                            case 0:
                                                                                                                                                              break D;
                                                                                                                                                            default:
                                                                                                                                                              break I;
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                        if ((0 | Q) > 6514801) break n;
                                                                                                                                                        if ((0 | Q) <= 30058) switch (Q - 29793 | 0) {
                                                                                                                                                          case 19:
                                                                                                                                                            break w;
                                                                                                                                                          case 17:
                                                                                                                                                            break U;
                                                                                                                                                          case 0:
                                                                                                                                                          case 4:
                                                                                                                                                            break i;
                                                                                                                                                          case 13:
                                                                                                                                                            break N;
                                                                                                                                                          case 7:
                                                                                                                                                            break BA;
                                                                                                                                                          default:
                                                                                                                                                            break I;
                                                                                                                                                        }
                                                                                                                                                        if ((0 | Q) <= 30312) switch (Q - 30059 | 0) {
                                                                                                                                                          case 0:
                                                                                                                                                            break F;
                                                                                                                                                          case 15:
                                                                                                                                                            break BA;
                                                                                                                                                          case 7:
                                                                                                                                                            break D;
                                                                                                                                                          default:
                                                                                                                                                            break I;
                                                                                                                                                        }
                                                                                                                                                        if ((0 | Q) == 30313) break R;
                                                                                                                                                        if ((0 | Q) == 31336) break E;
                                                                                                                                                        if ((0 | Q) != 6451321) break I;
                                                                                                                                                      }
                                                                                                                                                      if (A[C + 296 >> 2] = 303174162, A[C + 300 >> 2] = 370545684, A[C + 600 >> 2] = 2432, A[C + 8 >> 2] = 0, A[C + 12 >> 2] = 65540, A[C + 100 >> 2] = A[C + 96 >> 2], I = A[25889], A[C + 304 >> 2] = A[25888], A[C + 308 >> 2] = I, I = A[25891], A[C + 312 >> 2] = A[25890], A[C + 316 >> 2] = I, ZQ(C), M[C + 345 | 0] = 2 | G[C + 345 | 0], M[C + 406 | 0] = 16 | G[C + 406 | 0], M[C + 407 | 0] = 16 | G[C + 407 | 0], M[C + 408 | 0] = 16 | G[C + 408 | 0], M[C + 409 | 0] = 16 | G[C + 409 | 0], M[C + 410 | 0] = 16 | G[C + 410 | 0], M[C + 411 | 0] = 16 | G[C + 411 | 0], M[C + 412 | 0] = 16 | G[C + 412 | 0], M[C + 413 | 0] = 16 | G[C + 413 | 0], M[C + 414 | 0] = 16 | G[C + 414 | 0], M[C + 415 | 0] = 16 | G[C + 415 | 0], M[C + 416 | 0] = 16 | G[C + 416 | 0], M[C + 417 | 0] = 16 | G[C + 417 | 0], M[C + 418 | 0] = 16 | G[C + 418 | 0], M[C + 419 | 0] = 16 | G[C + 419 | 0], M[C + 420 | 0] = 16 | G[C + 420 | 0], M[C + 456 | 0] = 4 | G[C + 456 | 0], M[C + 457 | 0] = 4 | G[C + 457 | 0], A[C + 112 >> 2] = 613567144, A[C + 104 >> 2] = 16, (0 | Q) != 6451321) break A;
                                                                                                                                                      A[C + 104 >> 2] = 1, A[C + 108 >> 2] = 512, Q = 6451321;
                                                                                                                                                      break A;
                                                                                                                                                    }
                                                                                                                                                    if ((0 | Q) > 7364975) break OA;
                                                                                                                                                    if ((0 | Q) > 6840682) break LA;
                                                                                                                                                    if ((0 | Q) == 6514802) break fA;
                                                                                                                                                    if ((0 | Q) == 6516078) break E;
                                                                                                                                                    if ((0 | Q) != 6779491) break I;
                                                                                                                                                  }
                                                                                                                                                  if (A[C + 600 >> 2] = 896, A[C + 328 >> 2] = 8, A[C + 296 >> 2] = 336858127, A[C + 300 >> 2] = 353768980, A[C + 332 >> 2] = 103632, I = A[25905], A[C + 304 >> 2] = A[25904], A[C + 308 >> 2] = I, I = A[25907], A[C + 312 >> 2] = A[25906], A[C + 316 >> 2] = I, pA(C + 344 | 0, 0, 256), M[C + 388 | 0] = 129, M[C + 389 | 0] = 129, M[C + 390 | 0] = 129, M[C + 391 | 0] = 129, M[C + 420 | 0] = 129, M[C + 421 | 0] = 129, M[C + 422 | 0] = 129, M[C + 423 | 0] = 129, M[C + 360 | 0] = 129, M[C + 392 | 0] = 129, M[C + 393 | 0] = 129, M[C + 417 | 0] = 129, M[C + 418 | 0] = 129, M[C + 419 | 0] = 129, M[C + 420 | 0] = 129, M[C + 408 | 0] = 6, M[C + 409 | 0] = 4, M[C + 410 | 0] = 6, M[C + 411 | 0] = 6, M[C + 412 | 0] = 6, M[C + 413 | 0] = 193, M[C + 414 | 0] = 6, M[C + 415 | 0] = 6, M[C + 406 | 0] = 6, M[C + 407 | 0] = 129, M[C + 398 | 0] = 4, M[C + 399 | 0] = 193, M[C + 400 | 0] = 6, M[C + 401 | 0] = 193, M[C + 402 | 0] = 6, M[C + 403 | 0] = 4, M[C + 404 | 0] = 4, M[C + 405 | 0] = 4, M[C + 394 | 0] = 4, M[C + 395 | 0] = 4, M[C + 396 | 0] = 4, M[C + 397 | 0] = 193, A[C + 44 >> 2] = 130, A[C + 8 >> 2] = 2, A[C + 12 >> 2] = 6, A[C + 16 >> 2] = 0, A[C + 20 >> 2] = 2, A[C + 104 >> 2] = 264, A[C + 108 >> 2] = 6146, M[C + 391 | 0] = 193, M[C + 389 | 0] = 193, M[C + 390 | 0] = 193, M[C + 421 | 0] = 193, A[C + 100 >> 2] = A[C + 96 >> 2], M[C + 416 | 0] = 4 | G[C + 416 | 0], (0 | Q) != 6779491) break A;
                                                                                                                                                  A[C + 40 >> 2] = 1, Q = 6779491;
                                                                                                                                                  break A;
                                                                                                                                                }
                                                                                                                                                if ((0 | Q) == 6840683) break QI;
                                                                                                                                                if ((0 | Q) == 6972015) break QA;
                                                                                                                                                if ((0 | Q) != 7107687) break I;
                                                                                                                                              }
                                                                                                                                              A[C + 296 >> 2] = 134875662, A[C + 300 >> 2] = 252968960, A[C + 328 >> 2] = 5, M[C + 169 | 0] = 1, A[C + 132 >> 2] = 33, A[C + 104 >> 2] = 99336, A[C + 8 >> 2] = 0, A[C + 12 >> 2] = 262182, I = A[26069], A[C + 304 >> 2] = A[26068], A[C + 308 >> 2] = I, I = A[26071], A[C + 312 >> 2] = A[26070], A[C + 316 >> 2] = I;
                                                                                                                                              break A;
                                                                                                                                            }
                                                                                                                                            if ((0 | Q) <= 7564649) {
                                                                                                                                              if ((0 | Q) == 7364976) break $;
                                                                                                                                              if ((0 | Q) == 7435619) break BA;
                                                                                                                                              if ((0 | Q) != 7563374) break I;
                                                                                                                                              A[C + 148 >> 2] = 1, A[C + 112 >> 2] = 24, A[C + 104 >> 2] = 1, A[C + 100 >> 2] = A[C + 96 >> 2], Q = 7563374;
                                                                                                                                              break A;
                                                                                                                                            }
                                                                                                                                            if ((0 | Q) == 7564650) break y;
                                                                                                                                            if ((0 | Q) == 7959909) break E;
                                                                                                                                            if ((0 | Q) != 1885958500) break I;
                                                                                                                                          }
                                                                                                                                          A[C + 104 >> 2] = 0;
                                                                                                                                          break A;
                                                                                                                                        }
                                                                                                                                        A[C + 4 >> 2] = 48, A[C + 8 >> 2] = 0, A[C + 144 >> 2] = 1, A[C + 104 >> 2] = 16779472, A[C + 32 >> 2] = 1, A[C + 24 >> 2] = 1, I = A[25881], A[C + 304 >> 2] = A[25880], A[C + 308 >> 2] = I, I = A[25883], A[C + 312 >> 2] = A[25882], A[C + 316 >> 2] = I, M[C + 465 | 0] = 64 & G[C + 465 | 0] | 129, Q = 24934;
                                                                                                                                        break A;
                                                                                                                                      }
                                                                                                                                      A[C + 600 >> 2] = 4608, A[C + 296 >> 2] = 303173650, A[C + 300 >> 2] = 303174162, A[C + 8 >> 2] = 0, A[C + 12 >> 2] = 36, A[C + 104 >> 2] = 1024, A[C + 100 >> 2] = A[C + 96 >> 2], A[C + 40 >> 2] = 1, I = A[25865], A[C + 304 >> 2] = A[25864], A[C + 308 >> 2] = I, I = A[25867], A[C + 312 >> 2] = A[25866], A[C + 316 >> 2] = I, Q = 24941;
                                                                                                                                      break A;
                                                                                                                                    }
                                                                                                                                    for (A[C + 600 >> 2] = 1536, A[C + 224 >> 2] = 0, A[C + 216 >> 2] = 1631, A[C + 220 >> 2] = 1536, A[C + 104 >> 2] = 2884720, A[C + 328 >> 2] = 7, A[C + 40 >> 2] = 1, t = Q = t - 16 | 0, A[Q + 12 >> 2] = -1, I = 89684; E = mA(Q + 12 | 0, I), (0 | (g = A[Q + 12 >> 2])) >= 33 && (M[0 | (U = (C + g | 0) - 1192 | 0)] = 1 | G[0 | U]), I = I + E | 0, g; ) ;
                                                                                                                                    for (A[Q + 12 >> 2] = -1, I = 89743; E = mA(Q + 12 | 0, I), (0 | (g = A[Q + 12 >> 2])) >= 33 && (M[0 | (U = (C + g | 0) - 1192 | 0)] = 2 | G[0 | U]), I = I + E | 0, g; ) ;
                                                                                                                                    for (A[Q + 12 >> 2] = -1, I = 89795; E = mA(Q + 12 | 0, I), (0 | (g = A[Q + 12 >> 2])) >= 33 && (M[0 | (U = (C + g | 0) - 1192 | 0)] = 4 | G[0 | U]), I = I + E | 0, g; ) ;
                                                                                                                                    for (A[Q + 12 >> 2] = -1, I = 89941; E = mA(Q + 12 | 0, I), (0 | (g = A[Q + 12 >> 2])) >= 33 && (M[0 | (U = (C + g | 0) - 1192 | 0)] = 16 | G[0 | U]), I = I + E | 0, g; ) ;
                                                                                                                                    for (A[Q + 12 >> 2] = -1, I = 90045; E = mA(Q + 12 | 0, I), (0 | (g = A[Q + 12 >> 2])) >= 33 && (M[0 | (U = (C + g | 0) - 1192 | 0)] = 32 | G[0 | U]), I = I + E | 0, g; ) ;
                                                                                                                                    for (A[Q + 12 >> 2] = -1, I = 90045; E = mA(Q + 12 | 0, I), (0 | (g = A[Q + 12 >> 2])) >= 33 && (M[0 | (U = (C + g | 0) - 1192 | 0)] = 8 | G[0 | U]), I = I + E | 0, g; ) ;
                                                                                                                                    for (A[Q + 12 >> 2] = -1, I = 90045; E = mA(Q + 12 | 0, I), (0 | (g = A[Q + 12 >> 2])) >= 33 && (M[0 | (U = (C + g | 0) - 1192 | 0)] = 64 | G[0 | U]), I = I + E | 0, g; ) ;
                                                                                                                                    t = Q + 16 | 0, Q = 24946;
                                                                                                                                    break A;
                                                                                                                                  }
                                                                                                                                  A[C + 600 >> 2] = 1056, A[C + 12 >> 2] = 34, A[C + 216 >> 2] = 1118, A[C + 220 >> 2] = 1072, pA(C + 344 | 0, 0, 256), M[C + 406 | 0] = 4, M[C + 366 | 0] = 4, M[C + 367 | 0] = 4, M[C + 369 | 0] = 4, M[C + 370 | 0] = 4, M[C + 371 | 0] = 4, M[C + 372 | 0] = 4, M[C + 361 | 0] = 4, M[C + 362 | 0] = 4, M[C + 363 | 0] = 4, M[C + 364 | 0] = 4, M[C + 373 | 0] = 4, M[C + 380 | 0] = 4, M[C + 381 | 0] = 4, M[C + 382 | 0] = 4, M[C + 383 | 0] = 4, M[C + 375 | 0] = 4, M[C + 376 | 0] = 4, M[C + 377 | 0] = 4, M[C + 378 | 0] = 4, M[C + 384 | 0] = 4, M[C + 360 | 0] = 129, A[C + 328 >> 2] = 6, A[C + 296 >> 2] = 134744588, A[C + 300 >> 2] = 286261248, A[C + 40 >> 2] = 1, A[C + 8 >> 2] = 0, A[C + 104 >> 2] = 1032, A[C + 108 >> 2] = 66, I = A[25885], A[C + 304 >> 2] = A[25884], A[C + 308 >> 2] = I, I = A[25887], A[C + 312 >> 2] = A[25886], A[C + 316 >> 2] = I, Q = 25189;
                                                                                                                                  break A;
                                                                                                                                }
                                                                                                                                VC(C), A[C + 328 >> 2] = 6, A[C + 56 >> 2] = 2, A[C + 36 >> 2] = 263, A[C + 40 >> 2] = 1074, A[C + 124 >> 2] = 32, A[C + 104 >> 2] = 184554728, A[C + 8 >> 2] = 2, M[C + 386 | 0] = 64 & G[C + 386 | 0] | 129, Q = 25191;
                                                                                                                                break A;
                                                                                                                              }
                                                                                                                              A[C + 12 >> 2] = 262182, A[C + 40 >> 2] = 1, Q = 6514802;
                                                                                                                              break A;
                                                                                                                            }
                                                                                                                            A[C + 328 >> 2] = 14, A[C + 296 >> 2] = 303173393, A[C + 300 >> 2] = 336986112, A[C + 104 >> 2] = 1024, A[C + 16 >> 2] = 0, A[C + 20 >> 2] = 2, A[C + 8 >> 2] = 2, A[C + 12 >> 2] = 22, A[C + 44 >> 2] = 120, I = A[25893], A[C + 304 >> 2] = A[25892], A[C + 308 >> 2] = I, I = A[25895], A[C + 312 >> 2] = A[25894], A[C + 316 >> 2] = I, M[C + 463 | 0] = 64 & G[C + 463 | 0] | 129, M[C + 465 | 0] = 64 & G[C + 465 | 0] | 129, Q = 25465;
                                                                                                                            break A;
                                                                                                                          }
                                                                                                                          A[C + 8 >> 2] = 0, A[C + 104 >> 2] = 184618072, A[C + 32 >> 2] = 1, I = A[26101], A[C + 304 >> 2] = A[26100], A[C + 308 >> 2] = I, I = A[26103], A[C + 312 >> 2] = A[26102], A[C + 316 >> 2] = I, M[C + 465 | 0] = 64 & G[C + 465 | 0] | 129, Q = 25697;
                                                                                                                          break A;
                                                                                                                        }
                                                                                                                        A[C + 296 >> 2] = 336860180, A[C + 300 >> 2] = 336991764, A[C + 8 >> 2] = 0, A[C + 104 >> 2] = 16846872, A[C >> 2] = 8, A[C + 4 >> 2] = 48, A[C + 80 >> 2] = 87, A[C + 32 >> 2] = 1, A[C + 36 >> 2] = 256, A[C + 40 >> 2] = 2, I = A[25897], A[C + 304 >> 2] = A[25896], A[C + 308 >> 2] = I, I = A[25899], A[C + 312 >> 2] = A[25898], A[C + 316 >> 2] = I, M[C + 465 | 0] = 64 & G[C + 465 | 0] | 129, Q = 25701;
                                                                                                                        break A;
                                                                                                                      }
                                                                                                                      A[C + 132 >> 2] = 33, A[C + 104 >> 2] = 16779328, A[C + 8 >> 2] = 0, A[C + 12 >> 2] = 8, A[C + 204 >> 2] = 101, A[C + 60 >> 2] = 2, A[C + 40 >> 2] = 2, I = A[25901], A[C + 304 >> 2] = A[25900], A[C + 308 >> 2] = I, I = A[25903], A[C + 312 >> 2] = A[25902], A[C + 316 >> 2] = I, M[C + 441 | 0] = 64 | G[C + 441 | 0], M[C + 445 | 0] = 64 | G[C + 445 | 0], M[C + 449 | 0] = 64 | G[C + 449 | 0], M[C + 455 | 0] = 64 | G[C + 455 | 0], M[C + 461 | 0] = 64 | G[C + 461 | 0], M[C + 465 | 0] = 64 | G[C + 465 | 0], Q = 25966;
                                                                                                                      break A;
                                                                                                                    }
                                                                                                                    A[C + 328 >> 2] = 4, A[C + 296 >> 2] = 336858640, A[C + 300 >> 2] = 353768980, A[C + 104 >> 2] = 16782344, A[C + 20 >> 2] = 2, A[C + 12 >> 2] = 22, A[C + 4 >> 2] = 2, A[C + 8 >> 2] = 2, A[C + 332 >> 2] = 103640, I = A[25997], A[C + 304 >> 2] = A[25996], A[C + 308 >> 2] = I, I = A[25999], A[C + 312 >> 2] = A[25998], A[C + 316 >> 2] = I, Q = 25967;
                                                                                                                    break A;
                                                                                                                  }
                                                                                                                  A[C + 296 >> 2] = 269422096, A[C + 300 >> 2] = 370545684, A[C + 104 >> 2] = 86017320, A[C + 108 >> 2] = 6144, A[C + 16 >> 2] = 0, A[C + 20 >> 2] = 2, A[C + 8 >> 2] = 2, A[C + 12 >> 2] = 534, A[C + 100 >> 2] = A[C + 96 >> 2], A[C + 44 >> 2] = 120, I = A[25913], A[C + 304 >> 2] = A[25912], A[C + 308 >> 2] = I, I = A[25915], A[C + 312 >> 2] = A[25914], A[C + 316 >> 2] = I;
                                                                                                                  $: {
                                                                                                                    jA: {
                                                                                                                      if ((0 | Q) <= 26976) {
                                                                                                                        if ((0 | Q) == 24942) break jA;
                                                                                                                        if ((0 | Q) != 25441) break $;
                                                                                                                        A[C + 12 >> 2] = 566, A[C + 336 >> 2] = 103664, Q = 25441;
                                                                                                                        break A;
                                                                                                                      }
                                                                                                                      if ((0 | Q) != 26977) {
                                                                                                                        if ((0 | Q) != 7364976) break $;
                                                                                                                        A[C + 8 >> 2] = 3, A[C + 12 >> 2] = 310, Q = 7364976;
                                                                                                                        break A;
                                                                                                                      }
                                                                                                                      A[C + 104 >> 2] = 85984264, Q = 26977;
                                                                                                                      break A;
                                                                                                                    }
                                                                                                                    A[C + 104 >> 2] = 153093416, A[C + 108 >> 2] = 2048, A[C + 140 >> 2] = 103676, Q = 24942;
                                                                                                                    break A;
                                                                                                                  }
                                                                                                                  A[C + 40 >> 2] = 2;
                                                                                                                  break A;
                                                                                                                }
                                                                                                                A[C + 296 >> 2] = 303173648, A[C + 300 >> 2] = 303174162, A[C + 104 >> 2] = 3147080, A[C + 12 >> 2] = 65792, A[C + 84 >> 2] = 1, I = A[25921], A[C + 304 >> 2] = A[25920], A[C + 308 >> 2] = I, I = A[25923], A[C + 312 >> 2] = A[25922], A[C + 316 >> 2] = I, Q = 25973;
                                                                                                                break A;
                                                                                                              }
                                                                                                              A[C + 600 >> 2] = 1536, A[C + 216 >> 2] = 1740, A[C + 220 >> 2] = 1568, A[C + 104 >> 2] = 96, A[C + 224 >> 2] = 103696, A[C + 340 >> 2] = 103872, A[C + 40 >> 2] = 1, Q = 26209;
                                                                                                              break A;
                                                                                                            }
                                                                                                            A[C + 328 >> 2] = 5;
                                                                                                          }
                                                                                                          A[C + 104 >> 2] = 86024, A[C + 164 >> 2] = 130, M[C + 465 | 0] = 64 & G[C + 465 | 0] | 129;
                                                                                                          break A;
                                                                                                        }
                                                                                                        A[C + 296 >> 2] = 303173650, A[C + 300 >> 2] = 303174162, A[C + 8 >> 2] = 3, A[C + 12 >> 2] = 36, A[C + 144 >> 2] = 2, A[C + 104 >> 2] = 118658312, A[C + 28 >> 2] = 1, A[C + 100 >> 2] = A[C + 96 >> 2], I = A[25865], A[C + 304 >> 2] = A[25864], A[C + 308 >> 2] = I, I = A[25867], A[C + 312 >> 2] = A[25866], A[C + 316 >> 2] = I, M[C + 465 | 0] = 64 & G[C + 465 | 0] | 129, Q = 26226;
                                                                                                        break A;
                                                                                                      }
                                                                                                      L[C + 170 >> 1] = 257, A[C + 148 >> 2] = 1, A[C + 12 >> 2] = 2, Q = 6840683;
                                                                                                      break A;
                                                                                                    }
                                                                                                    A[C + 144 >> 2] = 2, A[C + 104 >> 2] = 2098176, A[C + 8 >> 2] = 0, A[C + 12 >> 2] = 32, A[C + 40 >> 2] = 3, A[C + 28 >> 2] = 1;
                                                                                                    break A;
                                                                                                  }
                                                                                                  A[C + 8 >> 2] = 3, A[C + 100 >> 2] = A[C + 96 >> 2], Q = 26478;
                                                                                                  break A;
                                                                                                }
                                                                                                A[C + 328 >> 2] = 18, A[C + 296 >> 2] = 320081425, A[C + 300 >> 2] = 353768980, A[C + 600 >> 2] = 2304, A[C + 112 >> 2] = 84648, A[C + 104 >> 2] = 16, A[C + 8 >> 2] = 6, A[C + 12 >> 2] = 65540, A[C + 100 >> 2] = A[C + 96 >> 2], I = A[25973], A[C + 304 >> 2] = A[25972], A[C + 308 >> 2] = I, I = A[25975], A[C + 312 >> 2] = A[25974], A[C + 316 >> 2] = I;
                                                                                                W: {
                                                                                                  yA: {
                                                                                                    sA: {
                                                                                                      if ((0 | Q) <= 28529) {
                                                                                                        if ((0 | Q) == 26485) break sA;
                                                                                                        if ((0 | Q) != 28261) break W;
                                                                                                        I = A[25861], A[C + 304 >> 2] = A[25860], A[C + 308 >> 2] = I, I = A[25863], A[C + 312 >> 2] = A[25862], A[C + 316 >> 2] = I, A[C + 296 >> 2] = 320017171, A[C + 300 >> 2] = 320017171, A[C + 132 >> 2] = 22, A[C + 112 >> 2] = -1431655768, A[C + 108 >> 2] = 32768 | A[C + 108 >> 2], ZQ(C);
                                                                                                        break A;
                                                                                                      }
                                                                                                      if ((0 | Q) == 28530) break yA;
                                                                                                      if ((0 | Q) != 28769) break W;
                                                                                                      A[C + 600 >> 2] = 2560, ZQ(C);
                                                                                                      break A;
                                                                                                    }
                                                                                                    I = A[25861], A[C + 304 >> 2] = A[25860], A[C + 308 >> 2] = I, I = A[25863], A[C + 312 >> 2] = A[25862], A[C + 316 >> 2] = I, A[C + 600 >> 2] = 2688, A[C + 296 >> 2] = 320017171, A[C + 300 >> 2] = 320017171, A[C + 8 >> 2] = 2, ZQ(C);
                                                                                                    break A;
                                                                                                  }
                                                                                                  A[C + 600 >> 2] = 2816;
                                                                                                }
                                                                                                ZQ(C);
                                                                                                break A;
                                                                                              }
                                                                                              M[0 | E] = 104, M[E + 1 | 0] = 98, M[E + 2 | 0] = 115, M[E + 3 | 0] = 0, (0 | Q) != 29554 ? (I = A[26093], A[C + 304 >> 2] = A[26092], A[C + 308 >> 2] = I, I = A[26095], A[C + 312 >> 2] = A[26094], A[C + 316 >> 2] = I) : (I = A[25977], A[C + 304 >> 2] = A[25976], A[C + 308 >> 2] = I, I = A[25979], A[C + 312 >> 2] = A[25978], A[C + 316 >> 2] = I), A[C + 328 >> 2] = 3, A[C + 296 >> 2] = 336859409, A[C + 300 >> 2] = 353768980, L[C + 168 >> 1] = 261, A[C + 8 >> 2] = 0, A[C + 12 >> 2] = 16, A[C + 144 >> 2] = 1, A[C + 184 >> 2] = 1056, A[C + 104 >> 2] = 33572172, A[C + 108 >> 2] = 330, A[C + 36 >> 2] = 3, M[C + 465 | 0] = 64 & G[C + 465 | 0] | 129, M[C + 458 | 0] = 64 & G[C + 458 | 0] | 129;
                                                                                              break A;
                                                                                            }
                                                                                            A[C + 104 >> 2] = 17990912, A[C + 8 >> 2] = 3, A[C + 12 >> 2] = 36, Q = 26740;
                                                                                            break A;
                                                                                          }
                                                                                          A[C + 328 >> 2] = 3, A[C + 296 >> 2] = 320016657, A[C + 300 >> 2] = 353768980, A[C + 124 >> 2] = 32, A[C + 128 >> 2] = 44, A[C + 104 >> 2] = 186758144, A[C + 12 >> 2] = 1081398, A[C + 16 >> 2] = 2, A[C + 4 >> 2] = 32, A[C + 8 >> 2] = 0, A[C + 116 >> 2] = 899, A[C + 120 >> 2] = 1, M[C + 169 | 0] = 1, A[C + 76 >> 2] = 2, I = A[25981], A[C + 304 >> 2] = A[25980], A[C + 308 >> 2] = I, I = A[25983], A[C + 312 >> 2] = A[25982], A[C + 316 >> 2] = I, M[C + 465 | 0] = 64 & G[C + 465 | 0] | 129, hA(C, 3), Q = 26741;
                                                                                          break A;
                                                                                        }
                                                                                        for (A[C + 600 >> 2] = 1328, A[C + 8 >> 2] = 3, I = A[25985], A[C + 304 >> 2] = A[25984], A[C + 308 >> 2] = I, I = A[25987], A[C + 312 >> 2] = A[25986], A[C + 316 >> 2] = I, E = pA(C + 344 | 0, 0, 256), M[C + 429 | 0] = 129, M[C + 416 | 0] = 129, M[C + 403 | 0] = 129, M[C + 399 | 0] = 129, M[C + 400 | 0] = 129, M[C + 397 | 0] = 129, M[C + 393 | 0] = 129, g = 103952, U = 50, w = 50; M[0 | (I = E + w | 0)] = 2 | G[0 | I], I = E + G[g + 1 | 0] | 0, M[0 | I] = 2 | G[0 | I], I = E + G[g + 2 | 0] | 0, M[0 | I] = 2 | G[0 | I], w = G[0 | (g = g + 3 | 0)], I = 103952, (0 | g) != 103982; ) ;
                                                                                        for (g = C + 344 | 0; M[0 | (E = g + U | 0)] = 4 | G[0 | E], E = g + G[I + 1 | 0] | 0, M[0 | E] = 4 | G[0 | E], E = g + G[I + 2 | 0] | 0, M[0 | E] = 4 | G[0 | E], U = G[0 | (I = I + 3 | 0)], (0 | I) != 103982; ) ;
                                                                                        M[C + 168 | 0] = 6, A[C + 104 >> 2] = 5128, M[C + 413 | 0] = 4 | G[C + 413 | 0];
                                                                                        break A;
                                                                                      }
                                                                                      A[C + 328 >> 2] = 4, A[C + 296 >> 2] = 336858640, A[C + 300 >> 2] = 353768980, A[C + 104 >> 2] = 16782440, A[C + 20 >> 2] = 2, A[C + 12 >> 2] = 22, A[C + 4 >> 2] = 2, A[C + 8 >> 2] = 2, A[C + 332 >> 2] = 104e3, I = A[25997], A[C + 304 >> 2] = A[25996], A[C + 308 >> 2] = I, I = A[25999], A[C + 312 >> 2] = A[25998], A[C + 316 >> 2] = I, Q = 26991;
                                                                                      break A;
                                                                                    }
                                                                                    A[C + 296 >> 2] = 303174160, A[C + 300 >> 2] = 353768980, A[C + 104 >> 2] = 16781320, A[C + 144 >> 2] = 2, A[C + 8 >> 2] = 2, A[C + 12 >> 2] = 22, I = A[26005], A[C + 304 >> 2] = A[26004], A[C + 308 >> 2] = I, I = A[26007], A[C + 312 >> 2] = A[26006], A[C + 316 >> 2] = I;
                                                                                    break A;
                                                                                  }
                                                                                  for (A[C + 8 >> 2] = 0, A[C + 12 >> 2] = 16, A[C + 56 >> 2] = 2, A[C + 28 >> 2] = 17, I = A[26009], A[C + 304 >> 2] = A[26008], A[C + 308 >> 2] = I, I = A[26011], A[C + 312 >> 2] = A[26010], A[C + 316 >> 2] = I, I = 0, g = C + 344 | 0; M[0 | (E = I + g | 0)] = 231 & G[0 | E], M[0 | (E = g + (1 | I) | 0)] = 231 & G[0 | E], M[0 | (E = g + (2 | I) | 0)] = 231 & G[0 | E], M[0 | (E = g + (3 | I) | 0)] = 231 & G[0 | E], (0 | (I = I + 4 | 0)) != 256; ) ;
                                                                                  A[C + 104 >> 2] = 2280, A[C + 108 >> 2] = 2, A[C + 608 >> 2] = 104048, M[C + 451 | 0] = 16 | G[C + 451 | 0], M[C + 456 | 0] = 16 | G[C + 456 | 0], M[C + 459 | 0] = 16 | G[C + 459 | 0], M[C + 460 | 0] = 16 | G[C + 460 | 0], M[C + 450 | 0] = 8 | G[C + 450 | 0], M[C + 462 | 0] = 8 | G[C + 462 | 0], M[C + 458 | 0] = 8 | G[C + 458 | 0], M[C + 465 | 0] = 64 & G[C + 465 | 0] | 129;
                                                                                  break A;
                                                                                }
                                                                                A[C + 296 >> 2] = 269618961, A[C + 300 >> 2] = 370546196, A[C + 12 >> 2] = 131110, A[C + 144 >> 2] = 2, A[C + 104 >> 2] = 184559112, A[C + 108 >> 2] = 8192, A[C + 16 >> 2] = 0, A[C + 20 >> 2] = 2, A[C + 4 >> 2] = 1, A[C + 8 >> 2] = 2, A[C + 100 >> 2] = A[C + 96 >> 2], A[C + 140 >> 2] = 103676, A[C + 68 >> 2] = 2, A[C + 56 >> 2] = 1, A[C + 44 >> 2] = 130, A[C + 28 >> 2] = 2, I = A[26025], A[C + 304 >> 2] = A[26024], A[C + 308 >> 2] = I, I = A[26027], A[C + 312 >> 2] = A[26026], A[C + 316 >> 2] = I, M[C + 465 | 0] = 64 & G[C + 465 | 0] | 129, Q = 26996;
                                                                                break A;
                                                                              }
                                                                              A[C + 4 >> 2] = 524, A[C + 8 >> 2] = 2, A[C + 196 >> 2] = 368, A[C + 104 >> 2] = 0, A[C + 336 >> 2] = 104128, A[C - -64 >> 2] = 1, I = A[26029], A[C + 304 >> 2] = A[26028], A[C + 308 >> 2] = I, I = A[26031], A[C + 312 >> 2] = A[26030], A[C + 316 >> 2] = I, M[C + 465 | 0] = 64 & G[C + 465 | 0] | 129, Q = 6972015;
                                                                              break A;
                                                                            }
                                                                            for (A[C + 296 >> 2] = 303174162, A[C + 300 >> 2] = 370545684, I = A[25873], A[C + 304 >> 2] = A[25872], A[C + 308 >> 2] = I, I = A[25875], A[C + 312 >> 2] = A[25874], A[C + 316 >> 2] = I, E = pA(C + 344 | 0, 0, 256), M[C + 431 | 0] = 1, M[C + 429 | 0] = 1, M[C + 411 | 0] = 1, M[C + 405 | 0] = 1, M[C + 400 | 0] = 1, M[C + 396 | 0] = 1, M[C + 392 | 0] = 1, I = 104160, g = 49; M[0 | (g = g + E | 0)] = 4 | G[0 | g], g = E + G[I + 1 | 0] | 0, M[0 | g] = 4 | G[0 | g], g = E + G[I + 2 | 0] | 0, M[0 | g] = 4 | G[0 | g], g = G[0 | (I = I + 3 | 0)], (0 | I) != 104193; ) ;
                                                                            A[C + 600 >> 2] = 4256, A[C + 8 >> 2] = 0, A[C + 12 >> 2] = 16, M[C + 168 | 0] = 7, A[C + 132 >> 2] = 32, M[C + 392 | 0] = 128 | G[C + 392 | 0], M[C + 396 | 0] = 128 | G[C + 396 | 0], M[C + 400 | 0] = 128 | G[C + 400 | 0], M[C + 405 | 0] = 128 | G[C + 405 | 0], M[C + 411 | 0] = 128 | G[C + 411 | 0], M[C + 429 | 0] = 128 | G[C + 429 | 0], M[C + 431 | 0] = 128 | G[C + 431 | 0], A[C + 188 >> 2] = 1056, A[C + 192 >> 2] = 29301, A[C + 104 >> 2] = 19964960;
                                                                            break A;
                                                                          }
                                                                          for (A[C + 600 >> 2] = 1056, E = pA(C + 344 | 0, 0, 256), M[C + 393 | 0] = 1, M[C + 365 | 0] = 1, M[C + 360 | 0] = 1, M[C + 545 | 0] = 1, M[C + 529 | 0] = 1, M[C + 391 | 0] = 1, M[C + 389 | 0] = 1, M[C + 390 | 0] = 1, M[C + 387 | 0] = 1, M[C + 379 | 0] = 1, M[C + 374 | 0] = 1, M[C + 368 | 0] = 1, M[C + 489 | 0] = 1, M[C + 487 | 0] = 1, M[C + 398 | 0] = 1, I = 104224, g = 17; M[0 | (g = g + E | 0)] = 4 | G[0 | g], g = E + G[I + 1 | 0] | 0, M[0 | g] = 4 | G[0 | g], g = E + G[I + 2 | 0] | 0, M[0 | g] = 4 | G[0 | g], g = G[0 | (I = I + 3 | 0)], (0 | I) != 104251; ) ;
                                                                          M[C + 360 | 0] = 128 | G[C + 360 | 0], M[C + 365 | 0] = 128 | G[C + 365 | 0], M[C + 393 | 0] = 128 | G[C + 393 | 0], M[C + 368 | 0] = 128 | G[C + 368 | 0], M[C + 374 | 0] = 128 | G[C + 374 | 0], M[C + 379 | 0] = 128 | G[C + 379 | 0], M[C + 387 | 0] = 128 | G[C + 387 | 0], M[C + 389 | 0] = 128 | G[C + 389 | 0], M[C + 390 | 0] = 128 | G[C + 390 | 0], M[C + 391 | 0] = 128 | G[C + 391 | 0], M[C + 529 | 0] = 128 | G[C + 529 | 0], M[C + 545 | 0] = 128 | G[C + 545 | 0], M[C + 489 | 0] = 128 | G[C + 489 | 0], M[C + 487 | 0] = 128 | G[C + 487 | 0], M[C + 398 | 0] = 128 | G[C + 398 | 0], I = A[26055], A[C + 312 >> 2] = A[26054], A[C + 316 >> 2] = I, I = A[26053], A[C + 304 >> 2] = A[26052], A[C + 308 >> 2] = I, A[C + 296 >> 2] = 353636370, A[C + 300 >> 2] = 336925972, A[C + 200 >> 2] = 0, A[C + 8 >> 2] = 7, A[C + 12 >> 2] = 2097184, M[C + 168 | 0] = 2, A[C + 104 >> 2] = 50176, A[C + 84 >> 2] = 1, hA(C, 3);
                                                                          break A;
                                                                        }
                                                                        A[C + 296 >> 2] = 320017171, A[C + 300 >> 2] = 320017171, A[C + 104 >> 2] = 184618072, A[C + 8 >> 2] = 12, A[C + 12 >> 2] = 32, I = A[25861], A[C + 304 >> 2] = A[25860], A[C + 308 >> 2] = I, I = A[25863], A[C + 312 >> 2] = A[25862], A[C + 316 >> 2] = I, Q = 27500;
                                                                        break A;
                                                                      }
                                                                      A[C + 184 >> 2] = 42752, A[C + 600 >> 2] = 4352, pA(C + 344 | 0, 0, 256), M[C + 456 | 0] = 1, M[C + 457 | 0] = 1, M[C + 458 | 0] = 1, M[C + 459 | 0] = 1, M[C + 449 | 0] = 1, M[C + 450 | 0] = 1, M[C + 451 | 0] = 1, M[C + 452 | 0] = 1, M[C + 453 | 0] = 1, M[C + 454 | 0] = 1, M[C + 455 | 0] = 1, M[C + 456 | 0] = 1, M[C + 441 | 0] = 1, M[C + 442 | 0] = 1, M[C + 443 | 0] = 1, M[C + 444 | 0] = 1, M[C + 445 | 0] = 1, M[C + 446 | 0] = 1, M[C + 447 | 0] = 1, M[C + 448 | 0] = 1, M[C + 460 | 0] = 65, M[C + 461 | 0] = 65, M[C + 532 | 0] = 32, M[C + 527 | 0] = 32, M[C + 519 | 0] = 32, M[C + 515 | 0] = 32, M[C + 349 | 0] = 32, M[C + 350 | 0] = 32, M[C + 346 | 0] = 32, A[C + 132 >> 2] = 20, A[C + 112 >> 2] = 286331152, A[C + 104 >> 2] = 1024, A[C + 108 >> 2] = 16384, A[C + 40 >> 2] = 1, A[C + 8 >> 2] = 8, M[C + 458 | 0] = 65, M[C + 453 | 0] = 65, M[C + 447 | 0] = 65, M[C + 448 | 0] = 65, M[C + 443 | 0] = 65, M[C + 444 | 0] = 65, Q = 27503;
                                                                      break A;
                                                                    }
                                                                    A[C + 328 >> 2] = 10, A[C + 296 >> 2] = 336859666, A[C + 300 >> 2] = 353768980, M[C + 168 | 0] = 2, A[C + 104 >> 2] = 263264, A[C + 8 >> 2] = 7, I = A[26065], A[C + 304 >> 2] = A[26064], A[C + 308 >> 2] = I, I = A[26067], A[C + 312 >> 2] = A[26066], A[C + 316 >> 2] = I, Q = 27509;
                                                                    break A;
                                                                  }
                                                                  A[C + 104 >> 2] = 1, Q = 27513;
                                                                  break A;
                                                                }
                                                                A[C + 116 >> 2] = 5e3, A[C + 104 >> 2] = 16777216, A[C + 24 >> 2] = 1, A[C + 16 >> 2] = 0, A[C + 20 >> 2] = 2, A[C + 8 >> 2] = 2, A[C + 12 >> 2] = 32, A[C + 328 >> 2] = 5, Q = 27745;
                                                                break A;
                                                              }
                                                              A[C + 116 >> 2] = 5e3, A[C + 104 >> 2] = 99336, A[C + 108 >> 2] = 256, A[C + 24 >> 2] = 1, A[C + 16 >> 2] = 0, A[C + 20 >> 2] = 2, A[C + 8 >> 2] = 2, A[C + 12 >> 2] = 32, A[C + 328 >> 2] = 5, Q = 27764;
                                                              break A;
                                                            }
                                                            A[C + 328 >> 2] = 6, A[C + 296 >> 2] = 336859409, A[C + 300 >> 2] = 353768980, A[C + 600 >> 2] = 1056, A[C + 104 >> 2] = 2114600, A[C + 108 >> 2] = 138, A[C + 8 >> 2] = 4, A[C + 632 >> 2] = 104288, A[C + 604 >> 2] = 104288, I = A[26093], A[C + 304 >> 2] = A[26092], A[C + 308 >> 2] = I, I = A[26095], A[C + 312 >> 2] = A[26094], A[C + 316 >> 2] = I, Q = 28011;
                                                            break A;
                                                          }
                                                          A[C + 328 >> 2] = 4, A[C + 104 >> 2] = 1, A[C + 8 >> 2] = 2, A[C + 36 >> 2] = 256, Q = 28020;
                                                          break A;
                                                        }
                                                        A[C + 4 >> 2] = 48, A[C + 8 >> 2] = 0, A[C + 12 >> 2] = 128, A[C + 104 >> 2] = 2169880, A[C + 32 >> 2] = 1, A[C + 36 >> 2] = 256, A[C + 24 >> 2] = 1, A[C + 136 >> 2] = 85767, I = A[26097], A[C + 304 >> 2] = A[26096], A[C + 308 >> 2] = I, I = A[26099], A[C + 312 >> 2] = A[26098], A[C + 316 >> 2] = I, M[C + 465 | 0] = 64 & G[C + 465 | 0] | 129, Q = 28268;
                                                        break A;
                                                      }
                                                      A[C + 8 >> 2] = 0, A[C + 104 >> 2] = 71752, I = A[26101], A[C + 304 >> 2] = A[26100], A[C + 308 >> 2] = I, I = A[26103], A[C + 312 >> 2] = A[26102], A[C + 316 >> 2] = I, M[C + 465 | 0] = 64 & G[C + 465 | 0] | 129, Q = 28258;
                                                      break A;
                                                    }
                                                    A[C + 296 >> 2] = 336858898, A[C + 300 >> 2] = 370546196, A[C + 104 >> 2] = 1088, A[C + 108 >> 2] = 512, A[C + 8 >> 2] = 2, A[C + 12 >> 2] = 524310, I = A[26105], A[C + 304 >> 2] = A[26104], A[C + 308 >> 2] = I, I = A[26107], A[C + 312 >> 2] = A[26106], A[C + 316 >> 2] = I, Q = 28525;
                                                    break A;
                                                  }
                                                  A[C + 328 >> 2] = 3, A[C + 296 >> 2] = 320015633, A[C + 300 >> 2] = 353768980, M[C + 168 | 0] = 7, A[C + 8 >> 2] = 2, A[C + 12 >> 2] = 6, A[C + 104 >> 2] = 20488, A[C + 108 >> 2] = 192, A[C + 36 >> 2] = 9, A[C + 60 >> 2] = 260, I = A[26109], A[C + 304 >> 2] = A[26108], A[C + 308 >> 2] = I, I = A[26111], A[C + 312 >> 2] = A[26110], A[C + 316 >> 2] = I, M[C + 465 | 0] = 64 & G[C + 465 | 0] | 129, Q = 28780;
                                                  break A;
                                                }
                                                for (A[C + 296 >> 2] = 353569552, A[C + 300 >> 2] = 353768980, A[C + 116 >> 2] = 5e3, A[C + 104 >> 2] = 33570920, A[C + 108 >> 2] = 14336, A[C + 8 >> 2] = 3, A[C + 12 >> 2] = 139286, A[C + 100 >> 2] = A[C + 96 >> 2], I = A[26113], A[C + 304 >> 2] = A[26112], A[C + 308 >> 2] = I, I = A[26115], A[C + 312 >> 2] = A[26114], A[C + 316 >> 2] = I, M[C + 465 | 0] = 64 & G[C + 465 | 0] | 129, I = 0, g = C + 344 | 0; M[0 | (E = I + g | 0)] = 253 & G[0 | E], M[0 | (E = g + (1 | I) | 0)] = 253 & G[0 | E], M[0 | (E = g + (2 | I) | 0)] = 253 & G[0 | E], M[0 | (E = g + (3 | I) | 0)] = 253 & G[0 | E], (0 | (I = I + 4 | 0)) != 256; ) ;
                                                M[C + 442 | 0] = 2 | G[C + 442 | 0], M[C + 443 | 0] = 2 | G[C + 443 | 0], M[C + 444 | 0] = 2 | G[C + 444 | 0], M[C + 446 | 0] = 2 | G[C + 446 | 0], M[C + 447 | 0] = 2 | G[C + 447 | 0], M[C + 450 | 0] = 2 | G[C + 450 | 0], M[C + 451 | 0] = 2 | G[C + 451 | 0], M[C + 453 | 0] = 2 | G[C + 453 | 0], M[C + 454 | 0] = 2 | G[C + 454 | 0], M[C + 456 | 0] = 2 | G[C + 456 | 0], M[C + 457 | 0] = 2 | G[C + 457 | 0], M[C + 459 | 0] = 2 | G[C + 459 | 0], M[C + 460 | 0] = 2 | G[C + 460 | 0], M[C + 462 | 0] = 2 | G[C + 462 | 0], M[C + 464 | 0] = 2 | G[C + 464 | 0], M[C + 466 | 0] = 2 | G[C + 466 | 0], A[C + 144 >> 2] = 2, A[C + 68 >> 2] = 2;
                                                break A;
                                              }
                                              A[C + 296 >> 2] = 303172879, A[C + 300 >> 2] = 353768980, A[C + 328 >> 2] = 3, A[C + 8 >> 2] = 3, A[C + 12 >> 2] = 262, A[C + 104 >> 2] = 16805928, A[C + 108 >> 2] = 30, I = A[26117], A[C + 304 >> 2] = A[26116], A[C + 308 >> 2] = I, I = A[26119], A[C + 312 >> 2] = A[26118], A[C + 316 >> 2] = I, Q = 29295;
                                              break A;
                                            }
                                            CU(C), Q = 29301;
                                            break A;
                                          }
                                          for (A[C + 328 >> 2] = 3, A[C + 296 >> 2] = 336859153, A[C + 300 >> 2] = 353768980, L[C + 168 >> 1] = 261, A[C + 8 >> 2] = 0, A[C + 12 >> 2] = 22, A[C + 124 >> 2] = 0, A[C + 128 >> 2] = 44, A[C + 104 >> 2] = 16794624, A[C + 108 >> 2] = 128, A[C + 36 >> 2] = 3, A[C + 60 >> 2] = 4, I = A[25869], A[C + 304 >> 2] = A[25868], A[C + 308 >> 2] = I, I = A[25871], A[C + 312 >> 2] = A[25870], A[C + 316 >> 2] = I, (0 | Q) == 25459 && (A[C + 108 >> 2] = 136), M[C + 465 | 0] = 64 & G[C + 465 | 0] | 129, M[C + 458 | 0] = 64 & G[C + 458 | 0] | 129, I = 0, g = C + 344 | 0; M[0 | (E = I + g | 0)] = 223 & G[0 | E], M[0 | (E = g + (1 | I) | 0)] = 223 & G[0 | E], M[0 | (E = g + (2 | I) | 0)] = 223 & G[0 | E], M[0 | (E = g + (3 | I) | 0)] = 223 & G[0 | E], (0 | (I = I + 4 | 0)) != 256; ) ;
                                          M[C + 442 | 0] = 32 | G[C + 442 | 0], M[C + 444 | 0] = 32 | G[C + 444 | 0], M[C + 447 | 0] = 32 | G[C + 447 | 0], M[C + 450 | 0] = 32 | G[C + 450 | 0], M[C + 452 | 0] = 32 | G[C + 452 | 0], M[C + 453 | 0] = 32 | G[C + 453 | 0], M[C + 454 | 0] = 32 | G[C + 454 | 0], M[C + 458 | 0] = 32 | G[C + 458 | 0], M[C + 462 | 0] = 32 | G[C + 462 | 0], M[C + 463 | 0] = 32 | G[C + 463 | 0], M[C + 466 | 0] = 32 | G[C + 466 | 0], M[C + 441 | 0] = 32 | G[C + 441 | 0], M[C + 445 | 0] = 32 | G[C + 445 | 0], M[C + 449 | 0] = 32 | G[C + 449 | 0], M[C + 455 | 0] = 32 | G[C + 455 | 0], M[C + 461 | 0] = 32 | G[C + 461 | 0], M[C + 465 | 0] = 32 | G[C + 465 | 0];
                                          break A;
                                        }
                                        for (A[C + 296 >> 2] = 303174162, A[C + 300 >> 2] = 370545684, A[C + 600 >> 2] = 3456, M[C + 169 | 0] = 1, A[C + 8 >> 2] = 0, A[C + 12 >> 2] = 22, A[C + 100 >> 2] = A[C + 96 >> 2], I = A[25873], A[C + 304 >> 2] = A[25872], A[C + 308 >> 2] = I, I = A[25875], A[C + 312 >> 2] = A[25874], A[C + 316 >> 2] = I, pA(C + 344 | 0, 0, 256), M[C + 365 | 0] = 1, M[C + 366 | 0] = 1, M[C + 357 | 0] = 1, M[C + 358 | 0] = 1, M[C + 359 | 0] = 1, M[C + 360 | 0] = 1, M[C + 361 | 0] = 1, M[C + 362 | 0] = 1, M[C + 363 | 0] = 1, M[C + 364 | 0] = 1, M[C + 349 | 0] = 1, M[C + 350 | 0] = 1, M[C + 351 | 0] = 1, M[C + 352 | 0] = 1, M[C + 353 | 0] = 1, M[C + 354 | 0] = 1, M[C + 355 | 0] = 1, M[C + 356 | 0] = 1, I = 74, g = 74; M[(E = C + g | 0) + 344 | 0] = 1 | G[E + 344 | 0], M[E + 345 | 0] = 1 | G[E + 345 | 0], M[E + 346 | 0] = 1 | G[E + 346 | 0], (0 | (g = g + 3 | 0)) != 116; ) ;
                                        for (; M[(g = I + C | 0) + 344 | 0] = 2 | G[g + 344 | 0], M[g + 345 | 0] = 2 | G[g + 345 | 0], M[g + 346 | 0] = 2 | G[g + 346 | 0], (0 | (I = I + 3 | 0)) != 116; ) ;
                                        for (g = 26; M[(I = C + g | 0) + 344 | 0] = 4 | G[I + 344 | 0], M[I + 345 | 0] = 4 | G[I + 345 | 0], M[I + 346 | 0] = 4 | G[I + 346 | 0], M[I + 347 | 0] = 4 | G[I + 347 | 0], M[I + 348 | 0] = 4 | G[I + 348 | 0], (0 | (g = g + 5 | 0)) != 71; ) ;
                                        A[C + 112 >> 2] = 84648, A[C + 104 >> 2] = 270589952, A[C + 108 >> 2] = 65536, A[C + 40 >> 2] = 1, A[C + 204 >> 2] = A[C + 600 >> 2] + 74;
                                        break A;
                                      }
                                      A[C + 8 >> 2] = 2, A[C + 12 >> 2] = 32, A[C + 328 >> 2] = 3, A[C + 124 >> 2] = 32, A[C + 104 >> 2] = 16864280, A[C + 108 >> 2] = 256, A[C + 68 >> 2] = 2, A[C + 36 >> 2] = 259, A[C + 40 >> 2] = 118, A[C + 28 >> 2] = 1, M[C + 458 | 0] = 128 | G[C + 458 | 0], Q = 29548;
                                      break A;
                                    }
                                    A[C + 296 >> 2] = 370544658, A[C + 300 >> 2] = 370546196, A[C + 164 >> 2] = 130, A[C + 8 >> 2] = 0, A[C + 12 >> 2] = 86, A[C + 104 >> 2] = 87064, M[C + 169 | 0] = 1, A[C + 152 >> 2] = 3, I = A[26121], A[C + 304 >> 2] = A[26120], A[C + 308 >> 2] = I, I = A[26123], A[C + 312 >> 2] = A[26122], A[C + 316 >> 2] = I, M[C + 465 | 0] = 64 & G[C + 465 | 0] | 129, Q = 7564650;
                                    break A;
                                  }
                                  A[C + 296 >> 2] = 269487120, A[C + 300 >> 2] = 320148500, A[C + 8 >> 2] = 3, A[C + 12 >> 2] = 278, A[C + 144 >> 2] = 2, A[C + 104 >> 2] = 32872, I = A[26125], A[C + 304 >> 2] = A[26124], A[C + 308 >> 2] = I, I = A[26127], A[C + 312 >> 2] = A[26126], A[C + 316 >> 2] = I, M[C + 465 | 0] = 64 & G[C + 465 | 0] | 129, Q = 29553;
                                  break A;
                                }
                                A[C + 296 >> 2] = 336859152, A[C + 300 >> 2] = 353768980, A[C + 8 >> 2] = 0, A[C + 144 >> 2] = 1, A[C + 104 >> 2] = 6408, I = A[26129], A[C + 304 >> 2] = A[26128], A[C + 308 >> 2] = I, I = A[26131], A[C + 312 >> 2] = A[26130], A[C + 316 >> 2] = I, M[C + 465 | 0] = 64 & G[C + 465 | 0] | 129, Q = 29558;
                                break A;
                              }
                              A[C + 296 >> 2] = 320015376, A[C + 300 >> 2] = 353768980, M[C + 168 | 0] = 4, A[C + 12 >> 2] = 22, A[C + 4 >> 2] = 1, A[C + 8 >> 2] = 2, A[C + 104 >> 2] = 1248, A[C + 100 >> 2] = A[C + 96 >> 2], I = A[26133], A[C + 304 >> 2] = A[26132], A[C + 308 >> 2] = I, I = A[26135], A[C + 312 >> 2] = A[26134], A[C + 316 >> 2] = I;
                              break A;
                            }
                            A[C + 296 >> 2] = 303174162, A[C + 300 >> 2] = 370545684, M[C + 169 | 0] = 1, A[C + 8 >> 2] = 0, A[C + 12 >> 2] = 22, A[C + 112 >> 2] = 5288, A[C + 100 >> 2] = A[C + 96 >> 2], I = A[25877], A[C + 304 >> 2] = A[25876], A[C + 308 >> 2] = I, I = A[25879], A[C + 312 >> 2] = A[25878], A[C + 316 >> 2] = I;
                            i: switch (Q - 29793 | 0) {
                              default:
                                if ((0 | Q) != 27502) {
                                  if ((0 | Q) != 28012) break Q;
                                  I = A[26137], A[C + 304 >> 2] = A[26136], A[C + 308 >> 2] = I, I = A[26139], A[C + 312 >> 2] = A[26138], A[C + 316 >> 2] = I, A[C + 600 >> 2] = 3328, A[C + 296 >> 2] = 320017171, A[C + 300 >> 2] = 320017171, A[C + 104 >> 2] = 2098176, A[C + 108 >> 2] = 131072, A[C + 8 >> 2] = 13;
                                  break Q;
                                }
                                A[C + 104 >> 2] = 1, A[C + 600 >> 2] = 3200;
                                break Q;
                              case 4:
                                break i;
                              case 1:
                              case 2:
                              case 3:
                                break Q;
                              case 0:
                                break B;
                            }
                            A[C + 104 >> 2] = 1, A[C + 108 >> 2] = 524288, A[C + 600 >> 2] = 3072;
                            break Q;
                          }
                          A[C + 328 >> 2] = 10, A[C + 296 >> 2] = 353636370, A[C + 300 >> 2] = 336925972, M[C + 173 | 0] = 1, A[C + 8 >> 2] = 7, A[C + 12 >> 2] = 32, M[C + 168 | 0] = 2, A[C + 84 >> 2] = 1, I = A[26141], A[C + 304 >> 2] = A[26140], A[C + 308 >> 2] = I, A[C + 104 >> 2] = (0 | Q) == 24954 ? 2118920 : 2114824, I = A[26143], A[C + 312 >> 2] = A[26142], A[C + 316 >> 2] = I;
                          break A;
                        }
                        VC(C), A[C + 296 >> 2] = 303173650, A[C + 300 >> 2] = 303174162, A[C + 104 >> 2] = 2131208, A[C + 8 >> 2] = 3, A[C + 12 >> 2] = 32, I = A[25865], A[C + 304 >> 2] = A[25864], A[C + 308 >> 2] = I, I = A[25867], A[C + 312 >> 2] = A[25866], A[C + 316 >> 2] = I, Q = 29812;
                        break A;
                      }
                      CU(C), Q = 30059;
                      break A;
                    }
                    A[C + 112 >> 2] = 21160, A[C + 104 >> 2] = 16, A[C + 600 >> 2] = 1536, A[C + 40 >> 2] = 1;
                    break A;
                  }
                  A[C + 296 >> 2] = 269488144, A[C + 300 >> 2] = 370546198, A[C + 8 >> 2] = 0, A[C >> 2] = 33, A[C + 148 >> 2] = 1, A[C + 104 >> 2] = 12615688, A[C + 16 >> 2] = 2, A[C + 100 >> 2] = A[C + 96 >> 2], A[C + 632 >> 2] = 104592, A[C + 604 >> 2] = 104592, I = A[26145], A[C + 304 >> 2] = A[26144], A[C + 308 >> 2] = I, I = A[26147], A[C + 312 >> 2] = A[26146], A[C + 316 >> 2] = I, Q = 30313;
                  break A;
                }
                if (A[C + 296 >> 2] = 370544662, A[C + 300 >> 2] = 370546198, A[C + 8 >> 2] = 3, A[C + 12 >> 2] = 2, A[C + 148 >> 2] = 1, A[C + 184 >> 2] = 12544, L[C + 170 >> 1] = 257, A[C + 176 >> 2] = 1, M[C + 172 | 0] = 1, A[C >> 2] = 33, A[C + 4 >> 2] = 0, A[C + 100 >> 2] = A[C + 96 >> 2], I = A[26225], A[C + 304 >> 2] = A[26224], A[C + 308 >> 2] = I, I = A[26227], A[C + 312 >> 2] = A[26226], A[C + 316 >> 2] = I, (0 | Q) != 7959909) break A;
                A[C + 112 >> 2] = 24, A[C + 104 >> 2] = 1, A[C + 108 >> 2] = 1048576, Q = 7959909;
                break A;
              }
              I = A[25873], A[C + 304 >> 2] = A[25872], A[C + 308 >> 2] = I, I = A[25875], A[C + 312 >> 2] = A[25874], A[C + 316 >> 2] = I, A[C + 600 >> 2] = 2944, A[C + 104 >> 2] = 2097152, A[C + 108 >> 2] = 262144, A[C + 48 >> 2] = 1;
            }
            ZQ(C), M[C + 422 | 0] = 2 | G[C + 422 | 0];
            break A;
          }
          A[C + 40 >> 2] = 1;
        }
        return A[C + 212 >> 2] = Q, 8 & (I = A[C + 104 >> 2]) && (A[C + 124 >> 2] = 46, A[C + 128 >> 2] = 44), 4 & I && (A[C + 124 >> 2] = 0), C;
      }
      function Og(I) {
        var C = 0, Q = 0, g = 0, E = 0, U = 0, w = 0, D = 0, J = 0, o = 0, y = 0, S = 0, Y = 0, c = 0, n = 0, V = 0, x = 0, O = 0, v = 0, _ = 0, AA = 0, CA = 0, BA = 0, EA = 0, wA = 0, yA = 0;
        A: {
          Q = A[32538], A[47354] = 0, A[47568] = 0, A[49828] = 0, A[47569] = 0, M[199328] = 0, A[49827] = 0, A[49845] = 0, M[190280] = 0, M[190268] = 1, A[47202] = 0, A[49573] = 0, A[49846] = 0, M[199304] = 0, M[199388] = 0, A[33691] = 0, A[33285] = 0, A[33708] = 1, A[33709] = 1, A[33288] = 0, C = A[33730], A[33712] = A[33729], A[33713] = C, C = A[33732], A[33714] = A[33731], A[33715] = C, C = A[33734], A[33716] = A[33733], A[33717] = C, C = A[33736], A[33718] = A[33735], A[33719] = C, C = A[33738], A[33720] = A[33737], A[33721] = C, C = A[33740], A[33722] = A[33739], A[33723] = C, C = A[33742], A[33724] = A[33741], A[33725] = C, A[33726] = A[33743], M[134784] = 0, M[134824] = 0, M[134772] = 0, M[134760] = 0, A[33284] = -1, A[33692] = 0, A[32525] = 0, A[47201] = A[33717], A[47200] = A[33718], QD(), A[34438] = 0, A[34437] = 0, C = A[33730], A[34048] = A[33729], A[34049] = C, C = A[33732], A[34050] = A[33731], A[34051] = C, C = A[33734], A[34052] = A[33733], A[34053] = C, C = A[33736], A[34054] = A[33735], A[34055] = C, C = A[33738], A[34056] = A[33737], A[34057] = C, C = A[33740], A[34058] = A[33739], A[34059] = C, C = A[33742], A[34060] = A[33741], A[34061] = C, A[34062] = A[33743];
          I: {
            Q: {
              if (1 & Q) {
                if (A[A[32539] >> 2] = 0, A[47569] | A[49845] | A[49827]) break Q;
                break I;
              }
              if (A[A[32539] >> 2] = 0, !(A[49845] | A[49827] || A[47569])) break I;
            }
            M[190280] = 1;
          }
          A[49828] = 0, C = 268436735;
          I: if (!(!A[34391] | !A[34388]) && (A[47204] = 0, A[47203] = 0, A[47199] = 0, A[34439] = 0, (A[47192] || !(C = vB(86228))) && ((C = A[33283]) || ((C = KI(16)) && (A[C >> 2] = 0, A[C + 4 >> 2] = 0, A[C + 8 >> 2] = 0, A[C + 12 >> 2] = 0), A[33283] = C), U = 268439807, (Q = A[A[47192] + 328 >> 2]) >>> 0 > 20 | !A[129104 + (Q << 3) >> 2] ? C = U : (I ? (U = 4, E = SA(I) + 1 | 0) : (U = 2, E = 0), A[C + 8 >> 2] = U, A[C >> 2] = I, A[C + 12 >> 2] = A[129108 + (Q << 3) >> 2], A[C + 4 >> 2] = I ? I + E | 0 : 0, C = 0), !C))) {
            dB(0);
            Q: {
              for (; ; ) {
                A[34436] = 0, I = A[34391], A[51290] = I, A[54046] = I + A[34390], A[50767] <= 102399 && (A[50767] = 102400);
                B: if (!((w = A[51290]) >>> 0 >= UA[54046])) for (; ; ) {
                  if ((((0 | (I = (E = A[50757]) - (D = A[50758]) | 0)) <= 0 ? I + 170 | 0 : I) - 171 | 0) >= -1) {
                    if ((0 | (I = A[54731])) <= 0) break B;
                    U = 0, A[50763] = 0, A[50762] = 0, A[50765] = 2147483647, I = G[218920] ? A[54732] : I;
                    E: {
                      for (; ; ) {
                        if (Q = I - 1 | 0, A[54732] = Q, (0 | I) <= 0) break E;
                        if (A[51290] = w + 1, C = (I = A[51293]) + 1 | 0, A[51293] = (0 | C) <= 5499 ? C : 0, C = (I = T(A[50755], L[205184 + (I << 1) >> 1])) >> 8, M[0 | w] = C, E = A[51290], A[51290] = E + 1, M[0 | E] = I >>> 16, (E = A[50756]) ? (I = Q, (Q = A[E + 4 >> 2]) && (fA[0 | Q](C << 16 >> 16), I = A[54732])) : I = Q, E = (Q = A[51292]) + 1 | 0, A[51292] = E, L[205184 + (Q << 1) >> 1] = C, (0 | E) >= 5500 && (A[51292] = 0), w = A[51290], !(UA[54046] >= w + 2 >>> 0)) break;
                      }
                      U = 1;
                    }
                    M[218920] = U;
                    break B;
                  }
                  I = A[(Q = 216192 + (E << 4) | 0) + 4 >> 2];
                  E: {
                    R: {
                      D: {
                        F: {
                          w: {
                            U: {
                              i: {
                                N: {
                                  o: {
                                    s: {
                                      y: {
                                        l: {
                                          j: {
                                            k: {
                                              P: {
                                                f: switch ((255 & (C = A[Q >> 2])) - 1 | 0) {
                                                  case 9:
                                                    break D;
                                                  case 7:
                                                    break F;
                                                  case 10:
                                                    break w;
                                                  case 11:
                                                    break U;
                                                  case 13:
                                                    break i;
                                                  case 0:
                                                    break N;
                                                  case 1:
                                                    break o;
                                                  case 2:
                                                    break s;
                                                  case 3:
                                                    break y;
                                                  case 6:
                                                    break l;
                                                  case 5:
                                                    break j;
                                                  case 4:
                                                    break k;
                                                  case 15:
                                                    break P;
                                                  case 8:
                                                    break f;
                                                  default:
                                                    break R;
                                                }
                                                if (!A[50759]) break R;
                                                C = A[Q + 12 >> 2], Q = A[Q + 8 >> 2], A[50768] = 0, w = Q || 99232, A[50766] = w, A[50769] = I ? 2097152 / (0 | I) | 0 : 0, I = A[50971], E = (0 | T(I, A[50788])) / 50 | 0, Q = T(E - I | 0, -18), I = ((0 | (I = A[50785])) >= 101 ? 101 : I) - A[50790] | 0, C = (U = Q + ((0 | T(A[50970], G[((0 | I) > 0 ? I : 0) + 105680 | 0])) / 128 | 0) | 0) + ((0 | T(E, (0 | (I = C >> 16)) < (0 | (Q = 65535 & C)) ? I : Q)) / 2 | 0) | 0, A[50770] = C, I = (U + ((0 | T(E, (0 | I) > (0 | Q) ? I : Q)) / 2 | 0) | 0) - C | 0, A[50771] = I, Q = G[0 | w], A[33072] = A[50976], A[50767] = C + (T(I, Q) >> 8);
                                                break R;
                                              }
                                              fA[A[A[50756] >> 2]](I, A[Q + 8 >> 2]), _A(I);
                                              break R;
                                            }
                                            if (G[218920] || (A[54731] = A[54731] - I), A[50781] = 100, A[50773] = 0, XB(), A[50763] = 0, A[50762] = 0, A[50765] = 2147483647, !I) break R;
                                            for (I = G[218920] ? A[54732] : I; ; ) {
                                              if (Q = I - 1 | 0, A[54732] = Q, (0 | I) <= 0) break R;
                                              if (I = A[51290], A[51290] = I + 1, E = (C = A[51293]) + 1 | 0, A[51293] = (0 | E) <= 5499 ? E : 0, E = I, C = (I = T(A[50755], L[205184 + (C << 1) >> 1])) >> 8, M[0 | E] = C, E = A[51290], A[51290] = E + 1, M[0 | E] = I >>> 16, (E = A[50756]) ? (I = Q, (Q = A[E + 4 >> 2]) && (fA[0 | Q](C << 16 >> 16), I = A[54732])) : I = Q, E = (Q = A[51292]) + 1 | 0, A[51292] = E, L[205184 + (Q << 1) >> 1] = C, (0 | E) >= 5500 && (A[51292] = 0), E = 1, !(UA[54046] >= A[51290] + 2 >>> 0)) break;
                                            }
                                            break E;
                                          }
                                          for (A[50773] = 0, A[54731] = A[54729], XB(), C = A[Q + 12 >> 2], E = A[Q + 8 >> 2], G[218920] ? I = A[54733] : A[54734] = 0, D = C >> 8, U = 255 & C, A[50762] = 0, A[50763] = 0; ; ) {
                                            if (Q = I - 1 | 0, A[54733] = Q, (0 | I) <= 0) break R;
                                            if (C = (I = A[54734]) + 1 | 0, U ? w = T(U, M[I + E | 0]) : (w = G[I + E | 0] | M[C + E | 0] << 8, C = I + 2 | 0), A[54734] = C, J = (I = A[51293]) + 1 | 0, A[51293] = J, C = (0 | (I = (0 | (I = ((0 | T(D, T(A[33037], T(A[33038], w)) >> 10)) / 32 | 0) + (T(A[50755], L[205184 + (I << 1) >> 1]) >> 8) | 0)) <= -32768 ? -32768 : I)) >= 32767 ? 32767 : I, (0 | J) >= 5500 && (A[51293] = 0), M[A[51290]] = C, M[A[51290] + 1 | 0] = C >>> 8, (w = A[50756]) ? (I = Q, (Q = A[w + 12 >> 2]) && (fA[0 | Q](C << 16 >> 16), I = A[54733])) : I = Q, Q = A[51290], A[51290] = Q + 2, J = (w = A[51292]) + 1 | 0, A[51292] = J, L[205184 + (w << 1) >> 1] = (0 | T(C, 3)) / 4, (0 | J) >= 5500 && (A[51292] = 0), !(UA[54046] >= Q + 4 >>> 0)) break;
                                          }
                                          E = 1;
                                          break E;
                                        }
                                        C = A[Q + 12 >> 2], E = I >>> 16 | 0, A[50777] = E, I &= 65535, A[50773] = I, U = 255 & C, A[50774] = U, A[50775] = C >> 8, U || (A[50777] = E << 1, A[50773] = I << 1), A[50778] = 0, A[50776] = 0, A[50772] = A[Q + 8 >> 2];
                                        break R;
                                      }
                                      A[50773] = 0;
                                    }
                                    if (A[54731] = A[54729], C = A[50759], G[218920]) {
                                      if (!C) break R;
                                    } else {
                                      if (!C) break R;
                                      for (U = A[Q + 12 >> 2], w = A[Q + 8 >> 2], Q = I >> 16, A[55912] = 255 & Q, M[218960] = 1, A[55908] = 0, 67108864 & I && (A[55908] = 3, A[55909] = A[110496 + (Q >>> 6 & 12) >> 2]), 134217728 & I && (A[55908] = 4, A[55909] = A[110512 + (Q >>> 6 & 12) >> 2]), I &= 65504; ; ) {
                                        if ((0 | D) != (0 | (E = (0 | (Q = E + 1 | 0)) <= 169 ? Q : 0))) if ((0 | (Q = A[216192 + (E << 4) >> 2])) != 3) {
                                          if (Q - 5 >>> 0 > 1) continue;
                                        } else M[218960] = 0;
                                        break;
                                      }
                                      for (A[55913] = A[50762], I = (I = I + 32 & 131008) || 64, A[50763] = I + A[50763], A[55684] = T(L[101997], 7800) + (a[102024] << 8) << 8, A[55704] = T(L[101998], 9e3) + (a[102025] << 8) << 8, c = A[50980], g = +(0 | I), S = +(I >>> 2 | 0), I = 0; (0 | I) != 7 && (E = L[(J = (Q = I << 1) + C | 0) + 218 >> 1] << 8, D = T(I, 80) + 222176 | 0, J = L[J + 164 >> 1], Y = E + T(J, L[2 + (Q + w | 0) >> 1]) << 8, A[D >> 2] = Y, y = +(0 | Y), H[D + 16 >> 3] = y, H[D + 48 >> 3] = 16 * (+(E + T(J, L[2 + (Q + U | 0) >> 1]) << 8) - y) / S), E = (Q = T(I, 80)) + 222176 | 0, J = L[(Y = C + (I << 1) | 0) + 182 >> 1], V = T(J, G[(D = I + w | 0) + 18 | 0]) << 6, A[E + 4 >> 2] = V, y = +(0 | V), H[E + 24 >> 3] = y, n = E, E = I + U | 0, H[n + 56 >> 3] = 64 * (+(T(J, G[E + 18 | 0]) << 6) - y) / g, (0 | I) > (0 | c) | I >>> 0 > 5 || (J = Q + 222176 | 0, V = L[Y + 200 >> 1], Y = T(V, G[D + 26 | 0]) << 10, A[J + 8 >> 2] = Y, y = +(0 | Y), H[J + 32 >> 3] = y, n = J - -64 | 0, J = V << 10, H[n >> 3] = 64 * (+(0 | T(J, G[E + 26 | 0])) - y) / g, I >>> 0 <= 2 ? (Q = Q + 222176 | 0, D = T(J, G[D + 32 | 0]), A[Q + 12 >> 2] = D, y = +(0 | D), H[Q + 40 >> 3] = y, H[Q + 72 >> 3] = 64 * (+(0 | T(J, G[E + 32 | 0])) - y) / g) : A[Q + 222188 >> 2] = Y), (0 | (I = I + 1 | 0)) != 8; ) ;
                                    }
                                    for (; ; ) {
                                      if (I = A[50762], !G[218960] & (0 | I) == A[50763]) break R;
                                      s: {
                                        y: {
                                          if (63 & I) {
                                            if (7 & I) break s;
                                            l: if (!((0 | (Q = A[54736])) <= 0 || (0 | (C = A[54735])) <= 0)) for (E = A[50826], I = 1; ; ) {
                                              if (A[(w = (U = I << 2) + E | 0) >> 2] = A[w >> 2] + A[U + 203312 >> 2], I >>> 0 > 28 | (0 | I) >= (0 | Q)) break l;
                                              if (U = (0 | I) < (0 | C), I = I + 1 | 0, !U) break;
                                            }
                                            if ((0 | (I = A[33073])) > 255) break s;
                                            A[33073] = I + 1;
                                            break s;
                                          }
                                          if (I) if (A[50759]) {
                                            if (Q = A[50768] + A[50769] | 0, A[50768] = Q, Q = (C = A[50766]) ? T(G[C + ((0 | (Q >>= 8)) >= 127 ? 127 : Q) | 0], A[50771]) >> 8 : 0, A[55911] = A[55911] + A[55915], C = (0 | (C = A[55914])) <= 23551 ? C : 0, A[55914] = C + A[50761], C = (Q + A[50770] | 0) + T(A[33072], G[110528 + (C >> 6) | 0] - 128 | 0) | 0, A[50767] = C, !(E = A[51291]) & (0 | (Q = E ? E << 12 : C)) > 102399 || (C = (0 | Q) <= 102400 ? 102400 : Q, A[50767] = C), (0 | I) != A[55913]) {
                                              if (I = 0, !((0 | (D = A[50980])) < 0)) {
                                                for (; w = T(I, 80), g = H[(Q = w + 222176 | 0) + 48 >> 3] + H[Q + 16 >> 3], H[Q + 16 >> 3] = g, S = H[Q + 56 >> 3] + H[Q + 24 >> 3], H[Q + 24 >> 3] = S, y = H[Q - -64 >> 3] + H[Q + 32 >> 3], H[Q + 32 >> 3] = y, E = GA(g) < 2147483648 ? ~~g : -2147483648, A[Q >> 2] = E, E = GA(y) < 2147483648 ? ~~y : -2147483648, A[Q + 8 >> 2] = E, U = GA(S) < 2147483648 ? ~~S : -2147483648, A[Q + 4 >> 2] = (0 | U) > 0 ? U : 0, (0 | I) > 2 || (g = H[(Q = w + 222176 | 0) + 72 >> 3] + H[Q + 40 >> 3], H[Q + 40 >> 3] = g, E = GA(g) < 2147483648 ? ~~g : -2147483648), A[w + 222188 >> 2] = E, (0 | D) >= (0 | (I = I + 1 | 0)); ) ;
                                                if ((0 | I) >= 8) break y;
                                              }
                                              for (; (0 | I) != 7 && (Q = T(I, 80) + 222176 | 0, g = H[Q + 48 >> 3] + H[Q + 16 >> 3], H[Q + 16 >> 3] = g, E = GA(g) < 2147483648 ? ~~g : -2147483648, A[Q >> 2] = E), Q = T(I, 80) + 222176 | 0, g = H[Q + 56 >> 3] + H[Q + 24 >> 3], H[Q + 24 >> 3] = g, E = GA(g) < 2147483648 ? ~~g : -2147483648, A[Q + 4 >> 2] = (0 | E) > 0 ? E : 0, (0 | (I = I + 1 | 0)) != 8; ) ;
                                            }
                                          } else C = A[50767];
                                          else A[50826] = 218976, A[54742] = 0, A[54736] = qC(A[50767] << 4, 218976, 0), C = A[50767], A[54737] = 890 / (C >> 12), A[54739] = (0 | T(A[50781], T(A[50779], C >> 8))) / 8e4;
                                        }
                                        if (A[55906] = C >> 11, A[54735] = A[54736], A[55904] = T(A[50760], C >> 7), A[55905] = A[50754] / (C >> 12), Q = 1 ^ (I = A[54742]), A[54742] = Q, A[50826] = T(I, 1600) + 218976, A[54736] = qC(C << 4, T(Q, 1600) + 218976 | 0, 1), !(!(C = A[50759]) | !A[51022])) for (S = H[25430], y = H[25429], I = 1; A[(Q = C + (I << 2) | 0) + 272 >> 2] && (E = A[Q + 308 >> 2], Q = T(I, 40) + 203456 | 0, o = yC(S * +L[2 + (T(I, 80) + 222176 | 0) >> 1]), o *= g = LC(y * +(0 | E)), o += o, H[Q + 8 >> 3] = o, g *= -g, H[Q + 16 >> 3] = g, H[Q >> 3] = 1 - o - g), (0 | (I = I + 1 | 0)) != 9; ) ;
                                      }
                                      if (U = A[50762] + 1 | 0, A[50762] = U, w = (I = A[50765]) + A[55904] | 0, A[50765] = w, (0 | w) < 0 & (0 | I) > 0) {
                                        if (J = A[55905], C = A[50800] + ((0 | J) / -2 | 0) | 0, A[55907] = C, (0 | (Y = A[50763])) < (0 | U)) break R;
                                        if (c = A[54738] + 1 | 0, A[54738] = c, D = A[50767], !((0 | (I = (Q = A[50980]) + 1 | 0)) > 8) && (E = D << 3, 1 & Q && (A[203264 + (I << 2) >> 2] = (1 + (A[T(I, 80) + 222176 >> 2] / (0 | E) | 0) | 0) / 2, I = Q + 2 | 0), (0 | Q) != 7)) for (; Q = 203264 + (I << 2) | 0, V = T(I, 80) + 222176 | 0, A[Q >> 2] = (1 + (A[V >> 2] / (0 | E) | 0) | 0) / 2, A[Q + 4 >> 2] = (1 + (A[V + 80 >> 2] / (0 | E) | 0) | 0) / 2, (0 | (I = I + 2 | 0)) != 9; ) ;
                                        I = (0 | T(A[50781], T(A[50779], D >> 8))) / 8e4 | 0, A[54739] = I;
                                        s: if (!((0 | (Q = A[55908])) <= 0)) {
                                          y: switch (Q - 3 | 0) {
                                            case 0:
                                              if ((Y - U | 0) >= J << 1) break s;
                                              A[55908] = 2, I = (0 | T(A[55909], I)) / 256 | 0, A[54739] = I;
                                              break s;
                                            case 1:
                                              A[55908] = 2, I = (0 | T(A[55909], I)) / 256 | 0, A[54739] = I;
                                              break s;
                                            default:
                                              break y;
                                          }
                                          A[55908] = Q - 1;
                                        }
                                        (Q = A[55910]) && (E = I, I = A[55911] >> 8, I = (0 | T(E, G[Q + ((0 | I) >= 127 ? 127 : I) | 0])) / 128 | 0, A[54739] = I), (0 | (Q = A[A[32972] + 92 >> 2])) > 7 || (Q = 15 & (E = G[A[55912] + (106336 + (Q << 3) | 0) | 0]), (E = E >>> 4 | 0) && ((0 | E) != 15 ? (0 | c) % (0 | E) | 0 || (A[54739] = (0 | T(I, Q)) / 16) : (A[55912] = 0, A[54739] = (0 | T(I, Q)) / 16)));
                                      } else C = A[55907];
                                      if (U = C + 1 | 0, A[55907] = U, Q = w >>> 16 | 0, E = 0, !((0 | U) < 0 | (0 | U) >= A[50799])) {
                                        if (!((0 | (I = (C = A[50980]) + 1 | 0)) > 8)) {
                                          if (D = 1 & (w = 8 - C | 0), (0 | C) != 7) for (J = -2 & w, C = 0; E = T(A[(Y = (w = I << 2) + 4 | 0) + 203216 >> 2], L[106400 + (T(Q, A[Y + 203264 >> 2]) >>> 4 & 4094) >> 1]) + (T(A[w + 203216 >> 2], L[106400 + (T(Q, A[w + 203264 >> 2]) >>> 4 & 4094) >> 1]) + E | 0) | 0, I = I + 2 | 0, (0 | J) != (0 | (C = C + 2 | 0)); ) ;
                                          D && (E = T(A[(I <<= 2) + 203216 >> 2], L[106400 + (T(Q, A[I + 203264 >> 2]) >>> 4 & 4094) >> 1]) + E | 0);
                                        }
                                        E = T(G[U + 132160 | 0], (0 | E) / A[55906] | 0);
                                      }
                                      if (I = 1, (0 | (U = A[54737])) <= 0) C = Q;
                                      else for (w = A[50826], C = Q; E = T(A[w + (I << 2) >> 2], L[106400 + ((65504 & C) >>> 4 | 0) >> 1]) + E | 0, C = C + Q | 0, (0 | U) >= (0 | (I = I + 1 | 0)); ) ;
                                      if ((0 | (U = A[54735])) >= (0 | I)) for (w = A[50826]; E = E - T(A[w + (I << 2) >> 2], L[106400 + ((65504 & C) >>> 4 | 0) >> 1]) | 0, C = C + Q | 0, (0 | U) >= (0 | (I = I + 1 | 0)); ) ;
                                      if (U = (0 | (I = A[54728])) == 64 ? E : T(I, E >> 6), A[51022]) {
                                        if (A[50759]) for (Q = tA(A[33209], 0, 1103515245, 0), I = QA, I = eU(Q = Q + 12345 | 0, I = Q >>> 0 < 12345 ? I + 1 | 0 : I), A[33209] = I, S = +((16383 & I) - -8192 | 0), C = A[50759], w = 0, I = 1; (E = A[272 + (C + (I << 2) | 0) >> 2]) && (D = A[T(I, 80) + 222180 >> 2], Q = T(I, 40) + 203456 | 0, g = H[Q + 32 >> 3], y = H[Q + 24 >> 3], H[Q + 32 >> 3] = y, g = g * H[Q + 16 >> 3] + (H[Q >> 3] * S + y * H[Q + 8 >> 3]), H[Q + 24 >> 3] = g, Q = GA(g) < 2147483648 ? ~~g : -2147483648, w = T(Q, T(E, D >> 14)) + w | 0), (0 | (I = I + 1 | 0)) != 9; ) ;
                                        else w = 0;
                                        U = U + w | 0;
                                      }
                                      C = 0, (0 | (I = A[50776])) >= A[50773] || (Q = A[50778], C = A[50772], (w = A[50774]) ? (E = I + 1 | 0, A[50776] = E, I = T(w, M[C + (I + Q | 0) | 0])) : (w = G[0 | (C = C + (I + Q | 0) | 0)], C = M[C + 1 | 0], E = I + 2 | 0, A[50776] = E, I = w | C << 8), C = (0 | T(T(I, A[50780]) >> 10, A[50775])) / 32 | 0, (0 | (I = A[50777])) > (Q + E | 0) || (A[50778] = Q + ((0 | T(I, 3)) / -4 | 0))), Q = (I = A[51293]) + 1 | 0, A[51293] = Q, I = ((T(A[54739], U >> 8) >> 13) + C | 0) + (T(A[50755], L[205184 + (I << 1) >> 1]) >> 8) | 0, (0 | Q) >= 5500 && (A[51293] = 0), Q = A[33073];
                                      s: {
                                        y: {
                                          if ((0 | (C = T(Q, I))) >= 8388608) {
                                            if ((0 | Q) >= (0 | (w = 8388608 / (0 | I) | 0))) break y;
                                            break s;
                                          }
                                          if ((0 | C) > -8388353 || (0 | Q) < (0 | (w = -8388608 / (0 | I) | 0))) break s;
                                        }
                                        Q = w - 1 | 0, A[33073] = Q, C = T(I, Q);
                                      }
                                      if (I = A[51290], A[51290] = I + 1, Q = I, I = C >> 8, M[0 | Q] = I, Q = A[51290], A[51290] = Q + 1, M[0 | Q] = C >>> 16, (Q = A[50756]) && (Q = A[Q + 8 >> 2]) && fA[0 | Q](I << 16 >> 16), C = (Q = A[51292]) + 1 | 0, A[51292] = C, L[205184 + (Q << 1) >> 1] = I, (0 | C) >= 5500 && (A[51292] = 0), !(UA[54046] >= A[51290] + 2 >>> 0)) break;
                                    }
                                    E = 1;
                                    break E;
                                  }
                                  A[50773] = 0;
                                }
                                A[54731] = A[54729], E = 1, D = 65535 & I, C = G[218920], w = A[Q + 8 >> 2], U = A[Q + 12 >> 2], g = 0, y = 0, t = Q = t + -64 | 0, J = A[50759];
                                N: if ((0 | (I = A[J + 132 >> 2])) != 6) {
                                  if (!C) {
                                    for (I - 1 >>> 0 <= 4 && (A[55921] = I, A[55964] = A[110896 + (I << 2) >> 2]), I = A[J + 88 >> 2], A[54741] = 1, A[55922] = (0 | I) / 32, C = A[50758], I = A[50757]; ; ) {
                                      o: if ((0 | C) != (0 | (I = (0 | (I = I + 1 | 0)) <= 169 ? I : 0))) if ((0 | (Y = A[216192 + (I << 4) >> 2])) != 1) {
                                        if (Y - 5 >>> 0 > 1) continue;
                                      } else {
                                        if (A[54741] = 0, I = A[8 + (216192 + (I << 4) | 0) >> 2], !(a[U + 4 >> 1] != a[I + 4 >> 1] | a[I + 6 >> 1] != a[U + 6 >> 1] | a[I + 8 >> 1] != a[U + 8 >> 1] | a[I + 10 >> 1] != a[U + 10 >> 1]) && a[I + 12 >> 1] == a[U + 12 >> 1]) break o;
                                        A[54741] = 2;
                                      }
                                      break;
                                    }
                                    for ((a[w + 4 >> 1] != a[113564] | a[w + 6 >> 1] != a[113565] | a[w + 8 >> 1] != a[113566] | a[w + 10 >> 1] != a[113567] || a[w + 12 >> 1] != a[113568]) && (DA(), A[55974] = 0, A[55975] = 0, A[55972] = 0, A[55973] = 0, A[55988] = 0, A[55989] = 0, A[55990] = 0, A[55991] = 0, A[56004] = 0, A[56005] = 0, A[56006] = 0, A[56007] = 0, A[56020] = 0, A[56021] = 0, A[56022] = 0, A[56023] = 0, A[56036] = 0, A[56037] = 0, A[56038] = 0, A[56039] = 0, A[56052] = 0, A[56053] = 0, A[56054] = 0, A[56055] = 0, A[56068] = 0, A[56069] = 0, A[56070] = 0, A[56071] = 0, A[56086] = 0, A[56087] = 0, A[56084] = 0, A[56085] = 0, A[56102] = 0, A[56103] = 0, A[56100] = 0, A[56101] = 0, A[56118] = 0, A[56119] = 0, A[56116] = 0, A[56117] = 0, A[56134] = 0, A[56135] = 0, A[56132] = 0, A[56133] = 0, A[56150] = 0, A[56151] = 0, A[56148] = 0, A[56149] = 0, A[56166] = 0, A[56167] = 0, A[56164] = 0, A[56165] = 0, A[56182] = 0, A[56183] = 0, A[56180] = 0, A[56181] = 0, A[56198] = 0, A[56199] = 0, A[56196] = 0, A[56197] = 0, A[56214] = 0, A[56215] = 0, A[56212] = 0, A[56213] = 0, A[56230] = 0, A[56231] = 0, A[56228] = 0, A[56229] = 0), I = a[U + 4 >> 1] | a[U + 6 >> 1] << 16, C = a[U >> 1] | a[U + 2 >> 1] << 16, L[113562] = C, L[113563] = C >>> 16, L[113564] = I, L[113565] = I >>> 16, I = a[U + 60 >> 1] | a[U + 62 >> 1] << 16, C = a[U + 56 >> 1] | a[U + 58 >> 1] << 16, L[113590] = C, L[113591] = C >>> 16, L[113592] = I, L[113593] = I >>> 16, I = a[U + 52 >> 1] | a[U + 54 >> 1] << 16, C = a[U + 48 >> 1] | a[U + 50 >> 1] << 16, L[113586] = C, L[113587] = C >>> 16, L[113588] = I, L[113589] = I >>> 16, I = a[U + 44 >> 1] | a[U + 46 >> 1] << 16, C = a[U + 40 >> 1] | a[U + 42 >> 1] << 16, L[113582] = C, L[113583] = C >>> 16, L[113584] = I, L[113585] = I >>> 16, I = a[U + 36 >> 1] | a[U + 38 >> 1] << 16, C = a[U + 32 >> 1] | a[U + 34 >> 1] << 16, L[113578] = C, L[113579] = C >>> 16, L[113580] = I, L[113581] = I >>> 16, I = a[U + 28 >> 1] | a[U + 30 >> 1] << 16, C = a[U + 24 >> 1] | a[U + 26 >> 1] << 16, L[113574] = C, L[113575] = C >>> 16, L[113576] = I, L[113577] = I >>> 16, I = a[U + 20 >> 1] | a[U + 22 >> 1] << 16, C = a[U + 16 >> 1] | a[U + 18 >> 1] << 16, L[113570] = C, L[113571] = C >>> 16, L[113572] = I, L[113573] = I >>> 16, I = a[U + 12 >> 1] | a[U + 14 >> 1] << 16, C = a[U + 8 >> 1] | a[U + 10 >> 1] << 16, L[113566] = C, L[113567] = C >>> 16, L[113568] = I, L[113569] = I >>> 16, S = +(0 | D), (n = 1 & L[w >> 1]) ? (I = G[w + 39 | 0], A[56680] = I, H[28364] = I >>> 0, H[28354] = +(G[U + 39 | 0] - I << 6) / S, I = G[w + 40 | 0], H[28366] = I >>> 0, H[28356] = +(G[U + 40 | 0] - I << 6) / S, I = G[w + 41 | 0], A[56682] = I, H[28368] = I >>> 0, H[28358] = +(G[U + 41 | 0] - I << 6) / S, C = G[w + 42 | 0], A[56684] = C, H[28370] = C >>> 0, I = G[w + 43 | 0], g = +(G[U + 43 | 0] - I << 6) / S, y = +(G[U + 42 | 0] - C << 6) / S, o = +(I >>> 0)) : (A[56728] = 0, A[56729] = 0, I = 0, A[56680] = 0, A[56708] = 0, A[56709] = 0, A[56732] = 0, A[56733] = 0, A[56712] = 0, A[56713] = 0, A[56682] = 0, A[56736] = 0, A[56737] = 0, A[56716] = 0, A[56717] = 0, A[56684] = 0, A[56740] = 0, A[56741] = 0, o = 0), A[56688] = I, H[28360] = y, H[28372] = o, H[28362] = g, A[56692] = 0, A[56748] = 0, A[56749] = 0, A[56694] = 0, A[56752] = 0, A[56753] = 0, A[56696] = 0, A[56756] = 0, A[56757] = 0, A[56700] = 0, A[56760] = 0, A[56761] = 0, A[56704] = 0, A[56764] = 0, A[56765] = 0, A[50764] = D, I = 1; c = L[(Y = (D = I << 1) + J | 0) + 164 >> 1], C = (AA = T(I, 80)) + 222896 | 0, y = +L[Y + 218 >> 1], g = 390625e-8 * +(0 | T(c, L[2 + (w + D | 0) >> 1])) + y, H[C + 16 >> 3] = g, V = GA(g) < 2147483648 ? ~~g : -2147483648, A[C >> 2] = V, H[C + 48 >> 3] = 64 * (390625e-8 * +(0 | T(c, L[2 + (U + D | 0) >> 1])) + y - g) / S, I >>> 0 <= 3 && (C = AA + 222896 | 0, g = 390625e-8 * +L[Y + 200 >> 1] * +(G[35 + (I + w | 0) | 0] << 1), H[C + 24 >> 3] = g, D = GA(g) < 2147483648 ? ~~g : -2147483648, A[C + 4 >> 2] = D, H[C + 56 >> 3] = 64 * (+(G[35 + (I + U | 0) | 0] << 1) - g) / S), (0 | (I = I + 1 | 0)) != 6; ) ;
                                    if (g = +((I = G[w + 40 | 0]) << 1), H[27864] = g, C = A[56618], I || (g = +(0 | C), H[27864] = g), I = GA(g) < 2147483648 ? ~~g : -2147483648, A[55724] = I, D = G[U + 40 | 0], A[55730] = 0, A[55731] = 1079394304, A[55738] = 0, A[55739] = 0, A[55725] = 89, I = 1, H[27868] = 64 * (+(0 | (D ? D << 1 : C)) - g) / S, n) for (; C = T(I, 80) + 222896 | 0, J = G[(D = I + w | 0) + 56 | 0] << 2, A[C + 12 >> 2] = J, g = +(0 | J), H[C + 40 >> 3] = g, J = I + U | 0, H[C + 72 >> 3] = 64 * (+(G[J + 56 | 0] << 2) - g) / S, D = G[D + 49 | 0], A[C + 8 >> 2] = D, g = +(D >>> 0), H[C + 32 >> 3] = g, H[C - -64 >> 3] = 64 * (+G[J + 49 | 0] - g) / S, (0 | (I = I + 1 | 0)) != 7; ) ;
                                    A[56606] = 0;
                                  }
                                  for (; ; ) {
                                    if ((0 | (V = A[50764])) > (0 | (U = A[56606]))) {
                                      for (I = A[50767], A[56609] = A[55724], A[56619] = A[55725], A[56610] = A[55744], A[56611] = A[55764], A[56612] = A[55784], A[56613] = A[55804], n = T(I, 10), A[56607] = (0 | n) / 4096, A[56620] = A[55745], A[56621] = A[55765], A[56622] = A[55785], A[56614] = A[55824], A[56630] = A[55746], A[56631] = A[55766], A[56632] = A[55786], A[56633] = A[55806], A[56634] = A[55826], A[56635] = A[55846], AA = A[56680], A[56608] = AA, w = A[56694], A[56656] = w, D = A[56696], A[56653] = D, J = A[56700], A[56655] = J, Y = A[56684], A[56649] = Y, A[56651] = A[56704], A[56654] = A[56688], A[56652] = A[56682], A[56650] = A[56692], I = 0; C = T(I, 80) + 222896 | 0, g = H[C + 48 >> 3] + H[C + 16 >> 3], H[C + 16 >> 3] = g, S = H[C + 56 >> 3] + H[C + 24 >> 3], H[C + 24 >> 3] = S, y = H[C + 72 >> 3] + H[C + 40 >> 3], H[C + 40 >> 3] = y, o = H[C - -64 >> 3] + H[C + 32 >> 3], H[C + 32 >> 3] = o, c = GA(g) < 2147483648 ? ~~g : -2147483648, A[C >> 2] = c, c = GA(S) < 2147483648 ? ~~S : -2147483648, A[C + 4 >> 2] = c, c = GA(y) < 2147483648 ? ~~y : -2147483648, A[C + 12 >> 2] = c, c = GA(o) < 2147483648 ? ~~o : -2147483648, A[C + 8 >> 2] = c, (0 | (I = I + 1 | 0)) != 9; ) ;
                                      for (g = H[28354] + H[28364], H[28364] = g, H[28366] = H[28356] + H[28366], S = H[28358] + H[28368], H[28368] = S, y = H[28360] + H[28370], H[28370] = y, o = H[28362] + H[28372], H[28372] = o, I = GA(g) < 2147483648 ? ~~g : -2147483648, A[56680] = I, I = GA(S) < 2147483648 ? ~~S : -2147483648, A[56682] = I, I = GA(y) < 2147483648 ? ~~y : -2147483648, A[56684] = I, I = GA(o) < 2147483648 ? ~~o : -2147483648, A[56688] = I, g = H[28374] + 0, H[28374] = g, I = GA(g) < 2147483648 ? ~~g : -2147483648, A[56692] = I, g = H[28376] + 0, H[28376] = g, I = GA(g) < 2147483648 ? ~~g : -2147483648, A[56694] = I, g = H[28378] + 0, H[28378] = g, I = GA(g) < 2147483648 ? ~~g : -2147483648, A[56696] = I, g = H[28380] + 0, H[28380] = g, I = GA(g) < 2147483648 ? ~~g : -2147483648, A[56700] = I, g = H[28382] + 0, H[28382] = g, I = GA(g) < 2147483648 ? ~~g : -2147483648, A[56704] = I, A[56659] = A[55724], A[56669] = A[55725], A[56660] = A[55744], A[56670] = A[55745], A[56661] = A[55764], A[56671] = A[55765], A[56662] = A[55784], A[56672] = A[55785], A[56663] = A[55804], A[56664] = A[55824], A[56665] = A[55844], I = A[50768] + A[50769] | 0, A[50768] = I, I >>= 8, A[50767] = A[50770] + (T(A[50771], G[A[50766] + ((0 | I) >= 127 ? 127 : I) | 0]) >> 8), I = V - U | 0, A[55923] = (0 | I) >= 64 ? 64 : I, A[55961] = (0 | n) / 40960, I = AA - 7 | 0, A[56658] = (0 | I) > 0 ? I : 0, H[27974] = Y >>> 0 <= 87 ? 1e-3 * +L[111136 + (Y << 1) >> 1] * 0.05 : 0, H[27975] = D >>> 0 <= 87 ? 1e-3 * +L[111136 + (D << 1) >> 1] * 0.25 : 0, H[27973] = w >>> 0 <= 87 ? 1e-3 * +L[111136 + (w << 1) >> 1] : 0, H[27971] = J >>> 0 <= 87 ? 1e-3 * +L[111136 + (J << 1) >> 1] * 0.05 : 0, g = (I = A[56629]) >>> 0 <= 87 ? 1e-3 * +L[111136 + (I << 1) >> 1] * 0.6 : 0, H[Q >> 3] = g, g = (I = A[56630]) >>> 0 <= 87 ? 1e-3 * +L[111136 + (I << 1) >> 1] * 0.4 : 0, H[Q + 8 >> 3] = g, g = (I = A[56631]) >>> 0 <= 87 ? 1e-3 * +L[111136 + (I << 1) >> 1] * 0.15 : 0, H[Q + 16 >> 3] = g, g = (I = A[56632]) >>> 0 <= 87 ? 1e-3 * +L[111136 + (I << 1) >> 1] * 0.06 : 0, H[Q + 24 >> 3] = g, g = (I = A[56633]) >>> 0 <= 87 ? 1e-3 * +L[111136 + (I << 1) >> 1] * 0.04 : 0, H[Q + 32 >> 3] = g, g = (I = A[56634]) >>> 0 <= 87 ? 1e-3 * +L[111136 + (I << 1) >> 1] * 0.022 : 0, H[Q + 40 >> 3] = g, g = (I = A[56635]) >>> 0 <= 87 ? 1e-3 * +L[111136 + (I << 1) >> 1] * 0.03 : 0, H[Q + 48 >> 3] = g, g = (I = (0 | (I = A[56657] - 3 | 0)) <= 0 ? 57 : I) >>> 0 <= 87 ? 1e-3 * +L[111136 + (I << 1) >> 1] : 0, H[27977] = g / +A[55964], S = H[27968], y = H[27967], I = 1; C = (U = I << 6) + 223664 | 0, o = (g = LC(y * +A[(D = (w = I << 2) + 226428 | 0) + 48 >> 2])) * -g, H[C + 216 >> 3] = o, g *= yC(S * +A[D + 8 >> 2]), g += g, H[C + 208 >> 3] = g, v = 1 - g - o, H[C + 200 >> 3] = v, I >>> 0 <= 5 && (D = A[(w = w + 226428 | 0) + 208 >> 2], C = U + 223664 | 0, O = (x = LC(y * +A[w + 248 >> 2])) * yC(S * +(0 | D)), O += O, H[C + 1488 >> 3] = O, x *= -x, H[C + 1496 >> 3] = x, _ = 1 - O - x, H[C + 1480 >> 3] = _, H[C + 256 >> 3] = 0.015625 * (x - o), H[C + 248 >> 3] = 0.015625 * (O - g), H[C + 240 >> 3] = 0.015625 * (_ - v)), (0 | (I = I + 1 | 0)) != 10; ) ;
                                      for (x = (g = LC(y * +A[56619])) * -g, H[27985] = x, O = (g *= yC(S * +(0 - A[56609] | 0))) + g, H[27984] = O, g = 1 - O - x, H[27983] = g, g != 0 && (g = 1 / g, H[27983] = g, x *= o = -g, H[27985] = x, O *= o, H[27984] = O), v = (o = LC(y * +A[56669])) * -o, H[28145] = v, _ = (o *= yC(S * +(0 - A[56659] | 0))) + o, H[28144] = _, o = 1 - _ - v, H[28143] = o, o != 0 && (o = 1 / o, H[28143] = o, v *= EA = -o, H[28145] = v, _ *= EA, H[28144] = _), H[27990] = 0.015625 * (v - x), H[27989] = 0.015625 * (_ - O), H[27988] = 0.015625 * (o - g), I = 0; w = A[(U = 226428 + (I << 2) | 0) + 8 >> 2], C = 223664 + (I << 6) | 0, o = (g = LC(y * +A[U + 128 >> 2])) * yC(S * +(0 | w)), o += o, H[C + 848 >> 3] = o, g *= -g, H[C + 856 >> 3] = g, H[C + 840 >> 3] = H[Q + (I << 3) >> 3] * (1 - o - g), (0 | (I = I + 1 | 0)) != 7; ) ;
                                      if (y = (g = LC(y * +(A[55918] / 2 | 0))) * -g, H[28137] = y, g *= yC(0 * S), g += g, H[28136] = g, H[28135] = 1 - g - y, I = 1, (0 | xE()) != 1) continue;
                                      break N;
                                    }
                                    break;
                                  }
                                  I = 1, A[54741] > 0 && (A[54741] = 0, A[55963] = 64, A[56606] = U + -64, A[55923] = 64, (0 | xE()) == 1) || (I = 0);
                                } else {
                                  if (t = Y = t - 752 | 0, !C) {
                                    pA(I = Y + 376 | 0, 0, 376), OC(J, w, I), OC(J, U, I = pA(Y, 0, 376)), C = A[50768] + T(A[50769], D >>> 6 | 0) | 0, A[50768] = C, C >>= 8, C = A[50770] + (T(A[50771], G[A[50766] + ((0 | C) >= 127 ? 127 : C) | 0]) >> 8) | 0, A[50767] = C, H[I + 368 >> 3] = (0 | C) / 4096 | 0, A[50773] && (H[I + 736 >> 3] = H[I + 736 >> 3] / 5, H[I + 360 >> 3] = H[I + 360 >> 3] / 5), C = A[A[56797] + 4 >> 2], fA[A[A[C >> 2] >> 2]](C, I + 376 | 0, 110, 110, -1, 0), U = D - 110 | 0, J = A[50758], C = A[50757];
                                    o: {
                                      for (; ; ) {
                                        if ((0 | J) != (0 | (C = (C + 1 | 0) % 170 | 0)) && !((c = A[216192 + (C << 4) >> 2]) - 5 >>> 0 < 2)) {
                                          if (w = 1, (0 | c) != 1) continue;
                                          break o;
                                        }
                                        break;
                                      }
                                      U = D - 220 | 0, w = 0;
                                    }
                                    (0 | U) > 0 && (C = A[A[56797] + 4 >> 2], fA[A[A[C >> 2] >> 2]](C, I, U, U || 1, -1, 0)), w || (A[I + 352 >> 2] = 0, A[I + 356 >> 2] = 0, H[I >> 3] = H[I + 368 >> 3], C = A[A[56797] + 4 >> 2], fA[A[A[C >> 2] >> 2]](C, I, 55, 55, -1, 0), A[I + 360 >> 2] = 0, A[I + 364 >> 2] = 0, C = A[A[56797] + 4 >> 2], fA[A[A[C >> 2] >> 2]](C, I, 55, 55, -1, 0));
                                  }
                                  I = A[A[56797] + 8 >> 2], C = A[51290], D = 0 | fA[A[A[I >> 2] >> 2]](I, A[54046] - C >>> 1 | 0, C), J = A[51290];
                                  o: if (D && !((0 | (C = A[50776])) >= (0 | (AA = A[50773])))) for (CA = A[50777], wA = (0 | T(CA, 3)) / -4 | 0, g = 9765625e-10 * +A[50780], c = A[50772], U = A[50778], yA = A[50775], V = A[50774], I = 0; ; ) {
                                    if (n = G[c + (w = C + U | 0) | 0], V ? n = T(V, n << 24 >> 24) : (C = C + 1 | 0, A[50776] = C, n |= M[c + (w = C + U | 0) | 0] << 8), n = GA(S = g * +(0 | n)) < 2147483648 ? ~~S : -2147483648, L[(BA = J + (I << 1) | 0) >> 1] = a[BA >> 1] + ((0 | T(n, yA)) / 40 | 0), (0 | w) >= (0 | CA) && (U = U + wA | 0, A[50778] = U), C = C + 1 | 0, A[50776] = C, (0 | C) >= (0 | AA)) break o;
                                    if (!(D >>> 0 > (I = I + 1 | 0) >>> 0)) break;
                                  }
                                  I = J + (D << 1) | 0, A[51290] = I, t = Y + 752 | 0, I = UA[54046] <= I >>> 0;
                                }
                                if (t = Q - -64 | 0, I) break E;
                                break R;
                              }
                              A[50781] = I || 100;
                              break R;
                            }
                            OB(I, A[Q + 8 >> 2]);
                            break R;
                          }
                          I = A[Q + 8 >> 2], A[50759] = bA(203816, I, 1344), A[50801] = A[I + 108 >> 2] ? 105792 : 106064, I = (0 | T(A[I + 120 >> 2], 26)) / 100 | 0, A[33038] = I, (0 | (E = A[50754])) <= 11e3 && (M[203300] = 1, A[33038] = I << 1), A[54728] = A[50982], I = A[50979], C = A[50978], pA(205184, 0, 11e3), A[51293] = 0, I = (C = (w = (0 | (U = A[50789])) > 0) ? 130 : (0 | C) >= 5499 ? 5499 : C) ? w ? U : (0 | I) >= 100 ? 100 : I : 0, A[50755] = I, C = (0 | T(C, E)) / 1e3 | 0, A[51292] = C, A[54729] = (0 | I) > 20 ? C << 1 : I ? C : 0, A[33037] = (0 | T(500 - I | 0, (0 | T(G[A[50797] + 105596 | 0], (0 | T(A[50787], 55)) / 100 | 0)) / 16 | 0)) / 500, I = 256, (0 | (C = (0 | (C = A[50785])) >= 101 ? 101 : C)) >= 51 && (I = 256 + (((T(C, 25) - 1250 & 65535) >>> 0) / 50 | 0) | 0), L[101990] = (0 | T(L[102026], I)) / 256, L[101991] = (0 | T(L[102027], I)) / 256, L[101992] = (0 | T(L[102028], I)) / 256, L[101993] = (0 | T(L[102029], I)) / 256, L[101994] = (0 | T(L[102030], I)) / 256, L[101995] = (0 | T(L[102031], I)) / 256, I = A[50790], L[101999] = (0 | T(L[102035], T(I, -6) + 256 | 0)) / 256, L[102e3] = (0 | T(L[102036], T(I, -3) + 256 | 0)) / 256, uE(8, 0, A[50986], 0, A[51290]), _A(A[Q + 8 >> 2]);
                          break R;
                        }
                        if (!A[50759]) break R;
                        C = A[Q + 12 >> 2], Q = A[Q + 8 >> 2], A[55911] = 0, A[55915] = I ? 2097152 / (0 | I) | 0 : 0, A[55910] = Q, I = (0 | T(C, A[33037])) / 16 | 0, A[50779] = I, A[50780] = (0 | T(T(I, A[50985]), 15)) / 100;
                        break R;
                      }
                      uE(C >> 8, I, A[Q + 8 >> 2], A[Q + 12 >> 2], w);
                    }
                    E = 0, I = A[50757] + 1 | 0, A[50757] = (0 | I) <= 169 ? I : 0;
                  }
                  if (M[218920] = E, !((w = A[51290]) >>> 0 < UA[54046])) break;
                }
                U = A[34391], Q = (A[51290] - U | 0) / 2 | 0, A[34439] = Q + A[34439], C = A[34436], I = A[34388] + T(C, 36) | 0, A[I + 4 >> 2] = 0, A[I >> 2] = 0, A[I + 24 >> 2] = A[34438];
                B: if (2 & (I = A[32538])) {
                  if (w = A[34388], (-2 & I) == 2 && (!(Q = C ? w : 0) | A[Q >> 2] != 8 || (0 | (Q = A[Q + 28 >> 2])) != A[34389] && (A[34389] = Q)), E = 1, (0 | C) < 2) break B;
                  for (; ; ) {
                    Q = C ? w + T(E, 36) | 0 : 0;
                    E: {
                      R: switch (0 | I) {
                        case 2:
                        case 3:
                          if (!Q | A[Q >> 2] != 8 || (0 | (Q = A[Q + 28 >> 2])) == A[34389]) break E;
                          A[34389] = Q;
                          break E;
                        case 0:
                          break R;
                        default:
                          break E;
                      }
                      (I = A[34440]) ? (fA[0 | I](U, 0, Q), C = A[34436], I = A[32538]) : I = 0;
                    }
                    if (!((0 | (E = E + 1 | 0)) < (0 | C))) break;
                  }
                } else if ((I = A[34440]) && 0 | fA[0 | I](U, Q, A[34388])) break Q;
                if (!qB(1) && !(170 - ((0 | (I = A[50757] - A[50758] | 0)) <= 0 ? I + 170 | 0 : I) | 0 || (I = A[34388], A[I >> 2] = 0, A[I + 4 >> 2] = A[34437], A[I + 24 >> 2] = A[34438], dB(1)))) break;
              }
              if (C = 0, 2 & G[130152] || !(I = A[34440]) || !(0 | fA[0 | I](0, 0, A[34388]))) break I;
            }
            dB(2), C = 268439295;
          }
          if ((0 | C) <= 268437502) {
            if (!C | (0 | C) == 268436479 | (0 | C) != 268437247) break A;
            return;
          }
        }
      }
      function qB(I) {
        var C, Q = 0, g = 0, E = 0, U = 0, w = 0, D = 0, J = 0, o = 0, y = 0, S = 0, Y = 0, c = 0, n = 0, V = 0, x = 0, O = 0, v = 0, _ = 0, AA = 0, CA = 0, BA = 0;
        t = C = t - 720 | 0, Q = A[47198], I || (A[36443] = 0, A[36442] = 1, A[36444] = 0, A[36440] = 0, A[36441] = 0, I = A[50758], A[36454] = I, A[36427] = -1, A[36424] = -1, A[36446] = 0, A[36447] = 0, A[36439] = -1, A[36426] = 0, A[36455] = I, A[36448] = 0, A[36449] = 0, A[36450] = 0, A[36451] = 0, A[36452] = 0, A[36453] = 0, aQ(), A[36427] = -1, I = 216192 + (A[50758] << 4) | 0, A[I >> 2] = 5, A[I + 4 >> 2] = 0, I = A[50758] + 1 | 0, A[50758] = (0 | I) <= 169 ? I : 0, A[36426] = 0, A[36438] && (A[36438] = 0, I = 216192 + (A[50758] << 4) | 0, A[I >> 2] = 14, A[I + 4 >> 2] = 0, I = A[50758] + 1 | 0, A[50758] = (0 | I) <= 169 ? I : 0));
        A: {
          I: if (!((0 | (I = A[36442])) > 997 | A[36423] <= (0 | I))) for (n = Q >>> 1 & 1, V = C + 48 | 4, x = C + 348 | 0, O = C + 652 | 0, v = A[32322], S = A[32320], _ = C + 60 | 0, AA = C + 648 | 0, CA = C + 56 | 0, BA = C + 620 | 0, Y = C - -64 | 0; ; ) {
            if (g = 145840 + (I << 5) | 0, !(I = A[50756]) | !A[I >> 2] || (A[C + 12 >> 2] = 0, nQ(I = C + 16 | 0, A[g + 8 >> 2], g, 0, C + 12 | 0), Q = MU(I), E = G[g + 17 | 0], I = 216192 + (A[50758] << 4) | 0, A[I >> 2] = 16, A[I + 8 >> 2] = E, A[I + 4 >> 2] = Q, I = A[50758] + 1 | 0, A[50758] = (0 | I) <= 169 ? I : 0), I = 1, (0 | (E = (0 | (Q = A[50757] - A[50758] | 0)) <= 0 ? Q + 170 | 0 : Q)) <= (0 | ((Q = G[g + 17 | 0]) ? (0 | Q) == 2 ? 25 : 15 : 10))) break A;
            if (o = A[36442], 2 & G[0 | g]) for (y = 2047 & a[g + 4 >> 1]; ; ) {
              if (E = A[36443], D = 127 & (Q = A[198304 + (E << 2) >> 2])) {
                I = Q >>> 8 | 0, A[36443] = E + 1;
                Q: {
                  B: {
                    E: switch ((31 & Q) - 2 | 0) {
                      case 0:
                        OB(96 & Q | 8, I), zQ(2);
                        break Q;
                      case 5:
                        if ((0 | I) >= A[34064] || !A[(D = (E = I << 4) + 136272 | 0) + 4 >> 2]) break Q;
                        zC(10, 0), I = 216192 + (A[50758] << 4) | 0, A[I >> 2] = 6, D = A[D + 4 >> 2], A[I + 8 >> 2] = A[8 + (E + 136272 | 0) >> 2] + 44, A[I + 12 >> 2] = 5376, A[I + 4 >> 2] = D;
                        break B;
                      case 8:
                        if ((0 | ((0 | (E = A[50757] - A[50758] | 0)) <= 0 ? E + 170 : E)) < 6) break Q;
                        D = A[47353], E = 216192 + (A[50758] << 4) | 0, A[E >> 2] = 778, A[E + 8 >> 2] = I, A[E + 4 >> 2] = D + y & 16777215;
                        break B;
                      case 9:
                        if ((0 | ((0 | (E = A[50757] - A[50758] | 0)) <= 0 ? E + 170 : E)) < 6) break Q;
                        D = A[33284], E = 216192 + (A[50758] << 4) | 0, A[E >> 2] = 1034, A[E + 8 >> 2] = I, A[E + 4 >> 2] = D + 1 & 16777215;
                        break B;
                      default:
                        break E;
                    }
                    zC(10, 0), E = 216192 + (A[50758] << 4) | 0, A[E >> 2] = 12, A[E + 8 >> 2] = I, A[E + 4 >> 2] = D;
                  }
                  I = A[50758] + 1 | 0, A[50758] = (0 | I) <= 169 ? I : 0;
                }
                if (!(128 & Q)) continue;
              }
              break;
            }
            (I = G[g + 20 | 0]) && (1 & M[A[47192] + 48 | 0] & G[g + 17 | 0] == 2 | 1 & M[A[g + 8 >> 2] + 7 | 0] || (A[36426] = 0), Q = A[47353] + (2047 & a[g + 4 >> 1]) | 0, A[36445] = Q, 4 & I && ((0 | ((0 | (I = A[50757] - A[50758] | 0)) <= 0 ? I + 170 : I)) < 6 || (E = A[47568], I = 216192 + (A[50758] << 4) | 0, A[I >> 2] = 522, A[I + 8 >> 2] = E, A[I + 4 >> 2] = 16777215 & Q, I = A[50758] + 1 | 0, A[50758] = (0 | I) <= 169 ? I : 0)), 1 & M[g + 20 | 0] && (Q = a[g + 4 >> 1], E = A[36444], A[36444] = E + 1, (0 | ((0 | (I = A[50757] - A[50758] | 0)) <= 0 ? I + 170 : I)) < 6 || (y = A[36445], D = A[47355], I = 216192 + (A[50758] << 4) | 0, A[I >> 2] = 266, A[I + 8 >> 2] = E + D, A[I + 4 >> 2] = 16777215 & y | (63488 & Q) << 13, I = A[50758] + 1 | 0, A[50758] = (0 | I) <= 169 ? I : 0))), (0 | (I = A[36441])) > 0 && (Q = 216192 + (A[36425] << 4) | 0, A[Q + 4 >> 2] || (A[Q + 4 >> 2] = I), A[36441] = 0), I = o + 1 << 5, Q = o - 1 << 5, !(E = G[g + 18 | 0]) | 2 & G[A[g + 8 >> 2] + 7 | 0] || zC(E, 1), D = I + 145840 | 0, U = Q + 145840 | 0, y = 1;
            Q: {
              B: {
                if (A[47198] && (J = A[g + 8 >> 2], G[J + 10 | 0] != 15)) {
                  E: if (G[g + 17 | 0] == 2) switch (G[U + 17 | 0] - 3 | 0) {
                    case 0:
                    case 5:
                      break B;
                    default:
                      break E;
                  }
                  y = 0, nQ(C + 704 | 0, J, g, n, 0), (0 | ((0 | (I = A[50757] - A[50758] | 0)) <= 0 ? I + 170 : I)) < 6 || (Q = A[36445], I = 216192 + (A[50758] << 4) | 0, A[I >> 2] = 1802, A[I + 4 >> 2] = 16777215 & Q, Q = A[C + 708 >> 2], A[I + 8 >> 2] = A[C + 704 >> 2], A[I + 12 >> 2] = Q, I = A[50758] + 1 | 0, A[50758] = (0 | I) <= 169 ? I : 0);
                }
                E: switch (G[g + 17 | 0]) {
                  case 0:
                    zC(A[g + 12 >> 2], 0), M[g + 23 | 0] = G[A[g + 8 >> 2] + 14 | 0];
                    break Q;
                  case 4:
                    Q = A[g + 8 >> 2], (0 | (I = G[D + 17 | 0])) == 2 | !G[D + 20 | 0] & (0 | I) == 3 || (L[g >> 1] = 8192 | a[g >> 1]), 2 & G[Q + 7 | 0] && (A[C + 88 >> 2] = 0, A[C + 92 >> 2] = 0, A[C + 80 >> 2] = 0, A[C + 84 >> 2] = 0, A[C + 72 >> 2] = 0, A[C + 76 >> 2] = 0, A[Y >> 2] = 0, A[Y + 4 >> 2] = 0, A[C + 56 >> 2] = 0, A[C + 60 >> 2] = 0, A[C + 48 >> 2] = 0, A[C + 52 >> 2] = 0, AC(0, 1, g, C + 552 | 0, 145784), A[C + 56 >> 2] = A[C + 620 >> 2], A[Y >> 2] = A[C + 640 >> 2], A[36424] < 0 && (E = G[D + 19 | 0], I = A[50758], A[36425] = I, A[36441] = 0, A[(I = 216192 + (I << 4) | 0) + 12 >> 2] = E, A[I + 8 >> 2] = 0, A[I >> 2] = 8, A[I + 4 >> 2] = 0, I = A[50758] + 1 | 0, A[50758] = (0 | I) <= 169 ? I : 0, y = G[D + 22 | 0], E = G[D + 21 | 0], D = A[129280 + (G[g + 16 | 0] << 2) >> 2], (0 | (I = A[36424])) < 0 | (0 | (J = A[36440])) <= 0 || A[(I = 216192 + (I << 4) | 0) + 4 >> 2] || (A[I + 4 >> 2] = J), I = A[50758], A[36424] = I, A[36440] = 0, A[(I = 216192 + (I << 4) | 0) >> 2] = 9, A[I + 4 >> 2] = 0, y |= E << 16, E = (0 | E) == 255, A[I + 12 >> 2] = E ? 3604556 : y, A[I + 8 >> 2] = E ? S : D, I = A[50758] + 1 | 0, A[50758] = (0 | I) <= 169 ? I : 0), EI(Q, 0, C + 48 | 0, g, 0)), AC(0, 0, g, C + 552 | 0, 145784), A[C + 552 >> 2] = 4 | A[C + 552 >> 2], (0 | (I = A[36440])) <= 0 || (0 | (Q = A[36424])) < 0 || (A[(Q = 216192 + (Q << 4) | 0) + 4 >> 2] || (A[Q + 4 >> 2] = I), A[36440] = 0), A[36426] = 0, A[36439] = -1, A[36455] = A[50758], aQ(), A[36427] = -1, A[36422] = 0, (I = A[C + 624 >> 2]) && (E = I, I = A[C + 644 >> 2], uI(E, 2, A[C + 596 >> 2] << 1, A[C + 552 >> 2], 0, I ? (I << 5) / 100 | 0 : 32)), A[36426] = 0;
                    break Q;
                  case 6:
                    AC(0, 0, g, C + 552 | 0, 145784), 8 & G[0 | g] && (I = A[g + 12 >> 2], (0 | (Q = A[36440])) <= 0 || (0 | (E = A[36424])) < 0 || (A[(E = 216192 + (E << 4) | 0) + 4 >> 2] || (A[E + 4 >> 2] = Q), A[36440] = 0), A[36426] = 0, A[36439] = -1, A[36455] = A[50758], aQ(), A[36427] = -1, A[36422] = 0, (Q = A[C + 624 >> 2]) && (E = I, I = A[C + 644 >> 2], uI(Q, 2, A[C + 596 >> 2] << 1, A[C + 552 >> 2], E, I ? (I << 5) / 100 | 0 : 32))), I = A[g + 12 >> 2], (0 | (Q = A[36440])) <= 0 || (0 | (E = A[36424])) < 0 || (A[(E = 216192 + (E << 4) | 0) + 4 >> 2] || (A[E + 4 >> 2] = Q), A[36440] = 0), A[36426] = 0, A[36439] = -1, A[36455] = A[50758], aQ(), A[36427] = -1, A[36422] = 0, (Q = A[C + 624 >> 2]) && (E = I, I = A[C + 644 >> 2], uI(Q, 2, A[C + 596 >> 2] << 1, A[C + 552 >> 2], E, I ? (I << 5) / 100 | 0 : 32)), A[36426] = 0;
                    break Q;
                  case 5:
                    E = A[g + 8 >> 2], A[V + 40 >> 2] = 0, A[(I = V) + 32 >> 2] = 0, A[I + 36 >> 2] = 0, A[I + 24 >> 2] = 0, A[I + 28 >> 2] = 0, A[I + 16 >> 2] = 0, A[I + 20 >> 2] = 0, A[I + 8 >> 2] = 0, A[I + 12 >> 2] = 0, A[I >> 2] = 0, A[I + 4 >> 2] = 0, A[C + 48 >> 2] = 4;
                    R: {
                      D: {
                        F: {
                          w: switch (G[D + 17 | 0] - 2 | 0) {
                            case 0:
                              Q = G[g + 19 | 0], I = A[50758], A[36425] = I, A[36441] = 0, A[(I = 216192 + (I << 4) | 0) + 12 >> 2] = Q, A[I + 8 >> 2] = 0, A[I >> 2] = 8, A[I + 4 >> 2] = 0, I = A[50758] + 1 | 0, A[50758] = (0 | I) <= 169 ? I : 0, Q = G[g + 22 | 0], J = G[g + 21 | 0], y = A[129280 + (G[g + 16 | 0] << 2) >> 2], (0 | (I = A[36424])) < 0 | (0 | (w = A[36440])) <= 0 || A[(I = 216192 + (I << 4) | 0) + 4 >> 2] || (A[I + 4 >> 2] = w), I = (w = !(255 & ~J)) ? S : y, y = 1;
                              break D;
                            case 1:
                              break w;
                            default:
                              break F;
                          }
                          if (!G[D + 20 | 0]) {
                            Q = G[D + 19 | 0], I = A[50758], A[36425] = I, A[36441] = 0, A[(I = 216192 + (I << 4) | 0) + 12 >> 2] = Q, A[I + 8 >> 2] = 0, A[I >> 2] = 8, A[I + 4 >> 2] = 0, I = A[50758] + 1 | 0, A[50758] = (0 | I) <= 169 ? I : 0, Q = G[D + 22 | 0], J = G[D + 21 | 0], y = A[129280 + (G[D + 16 | 0] << 2) >> 2], (0 | (I = A[36424])) < 0 | (0 | (w = A[36440])) <= 0 || A[(I = 216192 + (I << 4) | 0) + 4 >> 2] || (A[I + 4 >> 2] = w), I = (w = !(255 & ~J)) ? S : y, y = 1;
                            break D;
                          }
                        }
                        if (y = 0, A[36424] >= 0) break R;
                        Q = G[D + 19 | 0], I = A[50758], A[36425] = I, A[36441] = 0, A[(I = 216192 + (I << 4) | 0) + 12 >> 2] = Q, A[I + 8 >> 2] = 0, A[I >> 2] = 8, A[I + 4 >> 2] = 0, I = A[50758] + 1 | 0, A[50758] = (0 | I) <= 169 ? I : 0, Q = G[g + 22 | 0], J = G[g + 21 | 0], y = A[129280 + (G[g + 16 | 0] << 2) >> 2], (0 | (I = A[36424])) < 0 | (0 | (w = A[36440])) <= 0 || A[(I = 216192 + (I << 4) | 0) + 4 >> 2] || (A[I + 4 >> 2] = w), I = (w = !(255 & ~J)) ? S : y, y = 0;
                      }
                      c = A[50758], A[36424] = c, A[36440] = 0, A[(c = 216192 + (c << 4) | 0) >> 2] = 9, A[c + 4 >> 2] = 0, A[c + 12 >> 2] = w ? 3604556 : 255 & Q | (255 & J) << 16, A[c + 8 >> 2] = I, I = A[50758] + 1 | 0, A[50758] = (0 | I) <= 169 ? I : 0;
                    }
                    R: if (!(2 & G[E + 7 | 0]) & G[U + 17 | 0] != 2) 8 & G[0 | g] && zC(50, 0);
                    else {
                      if (AC(0, 1, g, C + 552 | 0, 145784), A[C + 56 >> 2] = A[C + 620 >> 2], A[C + 64 >> 2] = A[C + 640 >> 2], EI(E, 0, C + 48 | 0, g, 0), !(8 & G[0 | g])) break R;
                      zC(25, 1), EI(E, 0, C + 48 | 0, g, 0);
                    }
                    R: if (y) {
                      if (A[36455] != A[36454]) break R;
                      A[36455] = A[50758];
                    } else L[g >> 1] = 8192 | a[g >> 1];
                    if (AC(0, 0, g, C + 552 | 0, 145784), A[C + 56 >> 2] = A[C + 620 >> 2], A[C + 64 >> 2] = A[C + 640 >> 2], A[C + 76 >> 2] = A[C + 636 >> 2], A[C + 80 >> 2] = A[C + 656 >> 2], EI(E, 0, C + 48 | 0, g, 0), G[g + 20 | 0] | G[84 + (145840 + (o << 5) | 0) | 0] || ((0 | (I = G[D + 17 | 0])) == 7 && (zC(20, 0), I = G[D + 17 | 0]), (255 & I) != 6)) break Q;
                    zC(12, 0);
                    break Q;
                  case 7:
                    R: {
                      D: {
                        F: {
                          w: {
                            U: switch ((I = G[D + 17 | 0]) - 2 | 0) {
                              case 1:
                                break w;
                              case 0:
                                break U;
                              default:
                                break F;
                            }
                            Q = G[g + 19 | 0], I = A[50758], A[36425] = I, A[36441] = 0, A[(I = 216192 + (I << 4) | 0) + 12 >> 2] = Q, A[I + 8 >> 2] = 0, A[I >> 2] = 8, A[I + 4 >> 2] = 0, I = A[50758] + 1 | 0, A[50758] = (0 | I) <= 169 ? I : 0, y = G[g + 22 | 0], I = G[g + 21 | 0], E = A[129280 + (G[g + 16 | 0] << 2) >> 2], (0 | (Q = A[36424])) < 0 | (0 | (J = A[36440])) <= 0 || A[(Q = 216192 + (Q << 4) | 0) + 4 >> 2] || (A[Q + 4 >> 2] = J), Q = (J = !(255 & ~I)) ? S : E;
                            break D;
                          }
                          Q = G[D + 19 | 0], I = A[50758], A[36425] = I, A[36441] = 0, A[(I = 216192 + (I << 4) | 0) + 12 >> 2] = Q, A[I + 8 >> 2] = 0, A[I >> 2] = 8, A[I + 4 >> 2] = 0, I = A[50758] + 1 | 0, A[50758] = (0 | I) <= 169 ? I : 0, y = G[D + 22 | 0], I = G[D + 21 | 0], E = A[129280 + (G[D + 16 | 0] << 2) >> 2], (0 | (Q = A[36424])) < 0 | (0 | (J = A[36440])) <= 0 || A[(Q = 216192 + (Q << 4) | 0) + 4 >> 2] || (A[Q + 4 >> 2] = J), Q = (J = !(255 & ~I)) ? S : E;
                          break D;
                        }
                        if (A[36424] >= 0) break R;
                        Q = G[g + 19 | 0], I = A[50758], A[36425] = I, A[36441] = 0, A[(I = 216192 + (I << 4) | 0) + 12 >> 2] = Q, A[I + 8 >> 2] = 0, A[I >> 2] = 8, A[I + 4 >> 2] = 0, I = A[50758] + 1 | 0, A[50758] = (0 | I) <= 169 ? I : 0, y = G[g + 22 | 0], I = G[g + 21 | 0], E = A[129280 + (G[g + 16 | 0] << 2) >> 2], (0 | (Q = A[36424])) < 0 | (0 | (J = A[36440])) <= 0 || A[(Q = 216192 + (Q << 4) | 0) + 4 >> 2] || (A[Q + 4 >> 2] = J), Q = (J = !(255 & ~I)) ? S : E;
                      }
                      E = A[50758], A[36424] = E, A[36440] = 0, A[(E = 216192 + (E << 4) | 0) >> 2] = 9, A[E + 4 >> 2] = 0, A[E + 12 >> 2] = J ? 3604556 : (255 & I) << 16 | y, A[E + 8 >> 2] = Q, I = A[50758] + 1 | 0, A[50758] = (0 | I) <= 169 ? I : 0, I = G[D + 17 | 0];
                    }
                    R: {
                      D: {
                        F: switch ((255 & I) - 2 | 0) {
                          case 1:
                            if (G[D + 20 | 0]) break D;
                            break;
                          case 0:
                            break F;
                          default:
                            break D;
                        }
                        if (A[36455] != A[36454]) break R;
                        A[36455] = A[50758];
                        break R;
                      }
                      L[g >> 1] = 8192 | a[g >> 1];
                    }
                    AC(0, 0, g, C + 552 | 0, 145784), A[C + 56 >> 2] = 0, A[C + 60 >> 2] = 0, A[Y >> 2] = 0, A[Y + 4 >> 2] = 0, A[C + 80 >> 2] = 0, A[C + 84 >> 2] = 0, A[C + 72 >> 2] = 0, A[C + 76 >> 2] = 0, A[C + 88 >> 2] = 0, A[C + 56 >> 2] = A[C + 620 >> 2], A[Y >> 2] = A[C + 640 >> 2], A[C + 80 >> 2] = A[C + 656 >> 2], A[C + 48 >> 2] = 0, A[C + 52 >> 2] = 0, A[C + 76 >> 2] = A[C + 636 >> 2], A[C + 92 >> 2] = A[C + 596 >> 2] << 1, 8 & G[0 | g] && EI(A[g + 8 >> 2], 0, C + 48 | 0, g, 0), EI(A[g + 8 >> 2], 0, C + 48 | 0, g, 0);
                    break Q;
                  case 8:
                    if (A[C + 88 >> 2] = 0, A[C + 92 >> 2] = 0, A[C + 80 >> 2] = 0, A[C + 84 >> 2] = 0, A[C + 72 >> 2] = 0, A[C + 76 >> 2] = 0, A[Y >> 2] = 0, A[Y + 4 >> 2] = 0, A[C + 56 >> 2] = 0, A[C + 60 >> 2] = 0, A[C + 48 >> 2] = 0, A[C + 52 >> 2] = 0, 1 & M[0 | g] || (Q = G[g + 19 | 0], I = A[50758], A[36425] = I, A[36441] = 0, A[(I = 216192 + (I << 4) | 0) + 12 >> 2] = Q, A[I + 8 >> 2] = 0, A[I >> 2] = 8, A[I + 4 >> 2] = 0, I = A[50758] + 1 | 0, A[50758] = (0 | I) <= 169 ? I : 0, E = G[g + 22 | 0], Q = G[g + 21 | 0], y = A[129280 + (G[g + 16 | 0] << 2) >> 2], (0 | (I = A[36424])) < 0 | (0 | (J = A[36440])) <= 0 || A[(I = 216192 + (I << 4) | 0) + 4 >> 2] || (A[I + 4 >> 2] = J), I = A[50758], A[36424] = I, A[36440] = 0, A[(I = 216192 + (I << 4) | 0) >> 2] = 9, A[I + 4 >> 2] = 0, E |= Q << 16, Q = (0 | Q) == 255, A[I + 12 >> 2] = Q ? 3604556 : E, A[I + 8 >> 2] = Q ? S : y, I = A[50758] + 1 | 0, A[50758] = (0 | I) <= 169 ? I : 0), G[U + 17 | 0] == 8 && (A[36426] = 0), AC(0, 0, g, C + 552 | 0, 145784), A[C + 56 >> 2] = A[C + 620 >> 2], A[C + 64 >> 2] = A[C + 640 >> 2], A[C + 92 >> 2] = A[C + 596 >> 2] << 1, G[D + 17 | 0] == 2) {
                      A[36455] == A[36454] && (A[36455] = A[50758]), EI(A[g + 8 >> 2], 0, C + 48 | 0, g, 0);
                      break Q;
                    }
                    if (!(!(1 & M[0 | g]) | G[U + 17 | 0] != 2)) {
                      EI(A[g + 8 >> 2], 0, C + 48 | 0, g, 0);
                      break Q;
                    }
                    A[36426] = 0, EI(A[g + 8 >> 2], 0, C + 48 | 0, g, 0), A[36426] = 0;
                    break Q;
                  case 3:
                    A[C + 88 >> 2] = 0, A[C + 92 >> 2] = 0, A[C + 80 >> 2] = 0, A[C + 84 >> 2] = 0, A[C + 72 >> 2] = 0, A[C + 76 >> 2] = 0, A[Y >> 2] = 0, A[Y + 4 >> 2] = 0, A[C + 56 >> 2] = 0, A[C + 60 >> 2] = 0, A[C + 48 >> 2] = 0, A[C + 52 >> 2] = 0, E = A[A[g + 8 >> 2] + 4 >> 2], 1 & M[0 | g] || (Q = G[g + 19 | 0], I = A[50758], A[36425] = I, A[36441] = 0, A[(I = 216192 + (I << 4) | 0) + 12 >> 2] = Q, A[I + 8 >> 2] = 0, A[I >> 2] = 8, A[I + 4 >> 2] = 0, I = A[50758] + 1 | 0, A[50758] = (0 | I) <= 169 ? I : 0, y = G[g + 22 | 0], Q = G[g + 21 | 0], J = A[129280 + (G[g + 16 | 0] << 2) >> 2], (0 | (I = A[36424])) < 0 | (0 | (w = A[36440])) <= 0 || A[(I = 216192 + (I << 4) | 0) + 4 >> 2] || (A[I + 4 >> 2] = w), I = A[50758], A[36424] = I, A[36440] = 0, A[(I = 216192 + (I << 4) | 0) >> 2] = 9, A[I + 4 >> 2] = 0, y |= Q << 16, Q = (0 | Q) == 255, A[I + 12 >> 2] = Q ? 3604556 : y, A[I + 8 >> 2] = Q ? S : J, I = A[50758] + 1 | 0, A[50758] = (0 | I) <= 169 ? I : 0), G[U + 17 | 0] == 8 && (A[36426] = 0), G[D + 17 | 0] != 2 | A[36455] != A[36454] || (A[36455] = A[50758]), AC(0, 0, g, C + 552 | 0, 145784), (0 | (I = A[C + 584 >> 2] - G[g + 18 | 0] | 0)) > 0 && zC(I, 1), A[C + 56 >> 2] = A[C + 620 >> 2], A[C + 64 >> 2] = A[C + 640 >> 2], A[C + 76 >> 2] = A[C + 636 >> 2], A[C + 80 >> 2] = A[C + 656 >> 2], A[C + 92 >> 2] = A[C + 596 >> 2] << 1, EI(A[g + 8 >> 2], 0, C + 48 | 0, g, E << 24 >> 31 & 5);
                    break Q;
                  case 2:
                    break E;
                  default:
                    break Q;
                }
                J = A[g + 8 >> 2];
              }
              o = G[g + 3 | 0], A[C + 88 >> 2] = 0, A[C + 92 >> 2] = 0, A[C + 80 >> 2] = 0, A[C + 84 >> 2] = 0, A[C + 72 >> 2] = 0, A[C + 76 >> 2] = 0, A[Y >> 2] = 0, A[Y + 4 >> 2] = 0, A[C + 56 >> 2] = 0, A[C + 60 >> 2] = 0, A[C + 48 >> 2] = 0, A[C + 52 >> 2] = 0, AC(0, 0, g, C + 552 | 0, 145784), I = A[C + 628 >> 2], A[C + 56 >> 2] = I, A[C + 92 >> 2] = A[C + 596 >> 2] << 1;
              B: {
                if (!I || (w = 0, E = AA, Q = _, 2 & G[C + 552 | 0])) {
                  if (G[U + 17 | 0] ? (w = 0, AC(0, 0, U, C + 400 | 0, 0), I = A[C + 476 >> 2], A[C + 56 >> 2] = I, !I | !(2 & G[C + 400 | 0]) || (A[C + 72 >> 2] = A[C + 496 >> 2], w = 1), Q = A[C + 512 >> 2], A[C + 84 >> 2] = A[C + 508 >> 2], A[C + 88 >> 2] = Q) : w = 0, I) break B;
                  A[C + 48 >> 2] = 1, A[C + 52 >> 2] = 1, E = BA, Q = CA;
                }
                A[Q >> 2] = A[E >> 2];
              }
              A[C + 64 >> 2] = A[C + 640 >> 2], Q = G[g + 16 | 0], I = 0, (E = G[g + 7 | 0]) ? (xA(E, C + 96 | 0), Q = XU(A[C + 220 >> 2]), (0 | (E = A[C + 224 >> 2])) <= 0 || (I = XU(E))) : Q = A[129280 + (Q << 2) >> 2], A[36455] == A[36454] && (A[36455] = A[50758]), E = (E = 15 & o) >>> 0 < 2 ? 1 : E >>> 0 > 6 ? 3 : 2;
              B: {
                E: switch (G[U + 17 | 0] - 3 | 0) {
                  case 2:
                  case 4:
                    w = G[g + 19 | 0], U = A[50758], A[36425] = U, A[36441] = 0, A[(U = 216192 + (U << 4) | 0) + 12 >> 2] = w, A[U + 8 >> 2] = I, A[U >> 2] = 8, A[U + 4 >> 2] = 0, I = A[50758] + 1 | 0, A[50758] = (0 | I) <= 169 ? I : 0, w = G[g + 22 | 0], U = G[g + 21 | 0], (0 | (I = A[36440])) <= 0 || (0 | (o = A[36424])) < 0 || A[(o = 216192 + (o << 4) | 0) + 4 >> 2] || (A[o + 4 >> 2] = I), I = A[50758], A[36424] = I, A[36440] = 0, A[(I = 216192 + (I << 4) | 0) >> 2] = 9, A[I + 4 >> 2] = 0, w |= U << 16, U = (0 | U) == 255, A[I + 12 >> 2] = U ? 3604556 : w, A[I + 8 >> 2] = U ? S : Q, I = A[50758] + 1 | 0, A[50758] = (0 | I) <= 169 ? I : 0, EI(J, 1, C + 48 | 0, g, E);
                    break B;
                  case 0:
                  case 5:
                    w = G[g + 19 | 0], U = A[50758], A[36425] = U, A[36441] = 0, A[(U = 216192 + (U << 4) | 0) + 12 >> 2] = w, A[U + 8 >> 2] = I, A[U >> 2] = 8, A[U + 4 >> 2] = 0, I = A[50758] + 1 | 0, A[50758] = (0 | I) <= 169 ? I : 0, EI(J, 1, C + 48 | 0, g, E), w = G[g + 22 | 0], U = G[g + 21 | 0], (0 | (I = A[36440])) <= 0 || (0 | (o = A[36424])) < 0 || A[(o = 216192 + (o << 4) | 0) + 4 >> 2] || (A[o + 4 >> 2] = I), I = A[50758], A[36424] = I, A[36440] = 0, A[(I = 216192 + (I << 4) | 0) >> 2] = 9, A[I + 4 >> 2] = 0, w |= U << 16, U = (0 | U) == 255, A[I + 12 >> 2] = U ? 3604556 : w, A[I + 8 >> 2] = U ? S : Q, I = A[50758] + 1 | 0, A[50758] = (0 | I) <= 169 ? I : 0;
                    break B;
                  default:
                    break E;
                }
                w ? (w = G[g + 22 | 0], (0 | (U = A[36440])) <= 0 || (0 | (o = A[36424])) < 0 || A[(o = 216192 + (o << 4) | 0) + 4 >> 2] || (A[o + 4 >> 2] = U), U = A[50758], A[36424] = U, A[36440] = 0, A[(U = 216192 + (U << 4) | 0) >> 2] = 9, A[U + 4 >> 2] = 0, A[U + 12 >> 2] = (w | w << 16) - 983040, A[U + 8 >> 2] = v, U = A[50758] + 1 | 0, A[50758] = (0 | U) <= 169 ? U : 0, w = G[g + 19 | 0], U = A[50758], A[36425] = U, A[36441] = 0, A[(U = 216192 + (U << 4) | 0) >> 2] = 8, A[U + 4 >> 2] = 0, A[U + 12 >> 2] = w - 1, A[U + 8 >> 2] = I, I = A[50758] + 1 | 0, A[50758] = (0 | I) <= 169 ? I : 0, EI(J, 1, C + 48 | 0, g, E), U = G[g + 21 | 0], w = G[g + 22 | 0], (0 | (I = A[36440])) <= 0 || (0 | (o = A[36424])) < 0 || A[(o = 216192 + (o << 4) | 0) + 4 >> 2] || (A[o + 4 >> 2] = I), I = A[50758], A[36424] = I, A[36440] = 0, A[(I = 216192 + (I << 4) | 0) >> 2] = 9, A[I + 4 >> 2] = 0, w |= U << 16, U = (0 | U) == 255, A[I + 12 >> 2] = U ? 3604556 : w, A[I + 8 >> 2] = U ? S : Q, I = A[50758] + 1 | 0, A[50758] = (0 | I) <= 169 ? I : 0) : (1 & M[0 | g] || (w = G[g + 19 | 0], U = A[50758], A[36425] = U, A[36441] = 0, A[(U = 216192 + (U << 4) | 0) + 12 >> 2] = w, A[U + 8 >> 2] = I, A[U >> 2] = 8, A[U + 4 >> 2] = 0, I = A[50758] + 1 | 0, A[50758] = (0 | I) <= 169 ? I : 0, w = G[g + 22 | 0], U = G[g + 21 | 0], (0 | (I = A[36440])) <= 0 || (0 | (o = A[36424])) < 0 || A[(o = 216192 + (o << 4) | 0) + 4 >> 2] || (A[o + 4 >> 2] = I), I = A[50758], A[36424] = I, A[36440] = 0, A[(I = 216192 + (I << 4) | 0) >> 2] = 9, A[I + 4 >> 2] = 0, w |= U << 16, U = (0 | U) == 255, A[I + 12 >> 2] = U ? 3604556 : w, A[I + 8 >> 2] = U ? S : Q, I = A[50758] + 1 | 0, A[50758] = (0 | I) <= 169 ? I : 0), EI(J, 1, C + 48 | 0, g, E));
              }
              !A[47198] | 1 ^ y || (nQ(C + 704 | 0, A[g + 8 >> 2], g, n, 0), (0 | ((0 | (I = A[50757] - A[50758] | 0)) <= 0 ? I + 170 : I)) < 6 || (Q = A[36445], I = 216192 + (A[50758] << 4) | 0, A[I >> 2] = 1802, A[I + 4 >> 2] = 16777215 & Q, Q = A[C + 708 >> 2], A[I + 8 >> 2] = A[C + 704 >> 2], A[I + 12 >> 2] = Q, I = A[50758] + 1 | 0, A[50758] = (0 | I) <= 169 ? I : 0)), A[C + 56 >> 2] = A[C + 620 >> 2], A[C + 84 >> 2] = 0, A[C + 88 >> 2] = 0, A[C + 64 >> 2] = A[C + 640 >> 2], Q = A[C + 632 >> 2], A[C + 68 >> 2] = Q, I = O;
              B: {
                if (!Q && (!G[D + 17 | 0] || (A[C + 72 >> 2] = 0, AC(0, 0, D, C + 248 | 0, 0), A[C + 52 >> 2] = 1, I = A[C + 368 >> 2], A[C + 84 >> 2] = A[C + 364 >> 2], A[C + 88 >> 2] = I, Q = A[C + 328 >> 2], A[C + 68 >> 2] = Q, I = x, !Q)))
                  break B;
                A[C + 72 >> 2] = A[I >> 2];
              }
              EI(J, 2, C + 48 | 0, g, E);
            }
            if (I = A[36442] + 1 | 0, A[36442] = I, (0 | I) > 997) break I;
            if (!(A[36423] > (0 | I))) break;
          }
          (0 | (I = A[36440])) <= 0 || (0 | (Q = A[36424])) < 0 || (A[(Q = 216192 + (Q << 4) | 0) + 4 >> 2] || (A[Q + 4 >> 2] = I), A[36440] = 0), A[36426] = 0, A[36439] = -1, A[36455] = A[50758], aQ(), A[36427] = -1, I = 0, A[36423] <= 0 || (Q = A[47568], E = A[33284], (0 | ((0 | (I = A[50757] - A[50758] | 0)) <= 0 ? I + 170 : I)) >= 6 && (I = 216192 + (A[50758] << 4) | 0, A[I >> 2] = 1290, A[I + 8 >> 2] = Q, A[I + 4 >> 2] = 16777215 & E, I = A[50758] + 1 | 0, A[50758] = (0 | I) <= 169 ? I : 0), A[36423] = 0, I = 0);
        }
        return t = C + 720 | 0, I;
      }
      function uC(I, C, Q, g) {
        var E, U = 0, w = 0, D = 0, J = 0, o = 0, y = 0, S = 0, Y = 0, c = 0, n = 0, V = 0, x = 0, O = 0, v = 0, _ = 0, AA = 0, CA = 0, BA = 0, EA = 0, wA = 0, yA = 0, NA = 0, kA = 0, nA = 0, WA = 0;
        t = E = t - 48 | 0;
        A: {
          if (Q >>> 0 <= 2) {
            for (yA = A[(Q <<= 2) + 124732 >> 2], NA = A[Q + 124720 >> 2]; (0 | (Q = A[C + 4 >> 2])) == A[C + 104 >> 2] ? Q = CI(C) : (A[C + 4 >> 2] = Q + 1, Q = G[0 | Q]), (0 | Q) == 32 | Q - 9 >>> 0 < 5; ) ;
            c = 1;
            I: {
              Q: switch (Q - 43 | 0) {
                case 0:
                case 2:
                  break Q;
                default:
                  break I;
              }
              c = (0 | Q) == 45 ? -1 : 1, (0 | (Q = A[C + 4 >> 2])) == A[C + 104 >> 2] ? Q = CI(C) : (A[C + 4 >> 2] = Q + 1, Q = G[0 | Q]);
            }
            I: {
              Q: {
                for (; ; ) {
                  if (M[D + 84056 | 0] == (32 | Q)) {
                    if (D >>> 0 > 6 || ((0 | (Q = A[C + 4 >> 2])) == A[C + 104 >> 2] ? Q = CI(C) : (A[C + 4 >> 2] = Q + 1, Q = G[0 | Q])), (0 | (D = D + 1 | 0)) != 8) continue;
                    break Q;
                  }
                  break;
                }
                if ((0 | D) != 3) {
                  if ((0 | D) == 8) break Q;
                  if (!g | D >>> 0 < 4) break I;
                  if ((0 | D) == 8) break Q;
                }
                if ((0 | (Q = A[C + 116 >> 2])) > 0 | (0 | Q) >= 0 && (A[C + 4 >> 2] = A[C + 4 >> 2] - 1), !(!g | D >>> 0 < 4)) for (Q = (0 | Q) < 0; Q || (A[C + 4 >> 2] = A[C + 4 >> 2] - 1), (D = D - 1 | 0) >>> 0 > 3; ) ;
              }
              t = S = t - 16 | 0, $(cA(cA(0 | c) * cA(1 / 0))), (C = 2147483647 & (J = d(2))) - 8388608 >>> 0 <= 2130706431 ? (Q = C, Q <<= 25, g = (C = C >>> 7 | 0) + 1065353216 | 0) : (Q = J << 25, g = J >>> 7 | 2147418112, C >>> 0 >= 2139095040 || (Q = 0, g = 0, C && (fI(S, Q = C, 0, 0, 0, (C = aA(C)) + 81 | 0), y = A[S >> 2], o = A[S + 4 >> 2], Q = A[S + 8 >> 2], g = 65536 ^ A[S + 12 >> 2] | 16265 - C << 16))), A[E >> 2] = y, A[E + 4 >> 2] = o, A[E + 8 >> 2] = Q, A[E + 12 >> 2] = -2147483648 & J | g, t = S + 16 | 0, y = A[E + 8 >> 2], o = A[E + 12 >> 2], J = A[E >> 2], Y = A[E + 4 >> 2];
              break A;
            }
            I: {
              Q: {
                B: if (!D) {
                  for (D = 0; ; ) {
                    if (M[D + 84473 | 0] != (32 | Q)) break B;
                    if (D >>> 0 > 1 || ((0 | (Q = A[C + 4 >> 2])) == A[C + 104 >> 2] ? Q = CI(C) : (A[C + 4 >> 2] = Q + 1, Q = G[0 | Q])), (0 | (D = D + 1 | 0)) == 3) break;
                  }
                  break Q;
                }
                B: switch (0 | D) {
                  case 0:
                    if ((0 | Q) == 48) {
                      if ((0 | (D = A[C + 4 >> 2])) == A[C + 104 >> 2] ? D = CI(C) : (A[C + 4 >> 2] = D + 1, D = G[0 | D]), (-33 & D) == 88) {
                        t = w = t - 432 | 0, (0 | (Q = A[C + 4 >> 2])) == A[C + 104 >> 2] ? D = CI(C) : (A[C + 4 >> 2] = Q + 1, D = G[0 | Q]);
                        E: {
                          R: {
                            for (; ; ) {
                              if ((0 | D) != 48) {
                                if ((0 | D) != 46) break E;
                                if ((0 | (Q = A[C + 4 >> 2])) != A[C + 104 >> 2]) {
                                  A[C + 4 >> 2] = Q + 1, D = G[0 | Q];
                                  break R;
                                }
                                break;
                              }
                              (0 | (Q = A[C + 4 >> 2])) != A[C + 104 >> 2] ? (wA = 1, A[C + 4 >> 2] = Q + 1, D = G[0 | Q]) : (wA = 1, D = CI(C));
                            }
                            D = CI(C);
                          }
                          if (x = 1, (0 | D) == 48) {
                            for (; O = (Q = O) - 1 | 0, v = v - !Q | 0, (0 | (Q = A[C + 4 >> 2])) == A[C + 104 >> 2] ? D = CI(C) : (A[C + 4 >> 2] = Q + 1, D = G[0 | Q]), (0 | D) == 48; ) ;
                            wA = 1;
                          }
                        }
                        for (Y = 1073676288; ; ) {
                          E: {
                            Q = 32 | D;
                            R: {
                              if (!((kA = D - 48 | 0) >>> 0 < 10)) {
                                if ((0 | D) != 46 & Q - 97 >>> 0 >= 6) break E;
                                if ((0 | D) == 46) {
                                  if (x) break E;
                                  x = 1, O = y, v = o;
                                  break R;
                                }
                              }
                              Q = (0 | D) > 57 ? Q - 87 | 0 : kA, (0 | o) <= 0 & y >>> 0 <= 7 | (0 | o) < 0 ? U = Q + (U << 4) | 0 : !o & y >>> 0 <= 28 ? (NC(w + 48 | 0, Q), DI(w + 32 | 0, BA, EA, J, Y, 0, 0, 0, 1073414144), BA = A[w + 32 >> 2], EA = A[w + 36 >> 2], J = A[w + 40 >> 2], Y = A[w + 44 >> 2], DI(w + 16 | 0, A[w + 48 >> 2], A[w + 52 >> 2], A[w + 56 >> 2], A[w + 60 >> 2], BA, EA, J, Y), WI(w, A[w + 16 >> 2], A[w + 20 >> 2], A[w + 24 >> 2], A[w + 28 >> 2], S, V, AA, CA), AA = A[w + 8 >> 2], CA = A[w + 12 >> 2], S = A[w >> 2], V = A[w + 4 >> 2]) : n | !Q || (DI(w + 80 | 0, BA, EA, J, Y, 0, 0, 0, 1073610752), WI(w - -64 | 0, A[w + 80 >> 2], A[w + 84 >> 2], A[w + 88 >> 2], A[w + 92 >> 2], S, V, AA, CA), AA = A[w + 72 >> 2], CA = A[w + 76 >> 2], n = 1, S = A[w + 64 >> 2], V = A[w + 68 >> 2]), o = (y = y + 1 | 0) ? o : o + 1 | 0, wA = 1;
                            }
                            (0 | (Q = A[C + 4 >> 2])) != A[C + 104 >> 2] ? (A[C + 4 >> 2] = Q + 1, D = G[0 | Q]) : D = CI(C);
                            continue;
                          }
                          break;
                        }
                        E: if (wA) {
                          if ((0 | o) <= 0 & y >>> 0 <= 7 | (0 | o) < 0) for (J = y, Y = o; U <<= 4, (0 | (J = J + 1 | 0)) != 8 | (Y = J ? Y : Y + 1 | 0); ) ;
                          R: {
                            D: {
                              F: {
                                if ((-33 & D) == 80) {
                                  if (J = pE(C, g), Y = Q = QA, J | (0 | Q) != -2147483648) break R;
                                  if (g) {
                                    if ((0 | (Q = A[C + 116 >> 2])) > 0 | (0 | Q) >= 0) break F;
                                    break D;
                                  }
                                  S = 0, V = 0, HC(C, 0, 0), Q = 0, C = 0;
                                  break E;
                                }
                                if (J = 0, Y = 0, A[C + 116 >> 2] < 0) break R;
                              }
                              A[C + 4 >> 2] = A[C + 4 >> 2] - 1;
                            }
                            J = 0, Y = 0;
                          }
                          if (U) if (Q = J + ((C = x ? O : y) << 2) | 0, C = (o = (x ? v : o) << 2 | C >>> 30) + Y | 0, (y = Q - 32 | 0) >>> 0 > 0 - yA >>> 0 & (0 | (C = o = (Q >>> 0 < J >>> 0 ? C + 1 | 0 : C) - (Q >>> 0 < 32) | 0)) >= 0 | (0 | C) > 0) A[56798] = 68, NC(w + 160 | 0, c), DI(w + 144 | 0, A[w + 160 >> 2], A[w + 164 >> 2], A[w + 168 >> 2], A[w + 172 >> 2], -1, -1, -1, 2147418111), DI(w + 128 | 0, A[w + 144 >> 2], A[w + 148 >> 2], A[w + 152 >> 2], A[w + 156 >> 2], -1, -1, -1, 2147418111), S = A[w + 128 >> 2], V = A[w + 132 >> 2], Q = A[w + 140 >> 2], C = A[w + 136 >> 2];
                          else if ((0 | o) >= (0 | (Q = (C = yA - 226 | 0) >> 31)) & C >>> 0 <= y >>> 0 | (0 | Q) < (0 | o)) {
                            if ((0 | U) >= 0) for (; WI(w + 416 | 0, S, V, AA, CA, 0, 0, 0, -1073807360), WI(w + 400 | 0, S, V, AA, CA, (C = Q = (0 | (C = IU(S, V, AA, CA, 1073610752))) >= 0) ? A[w + 416 >> 2] : S, C ? A[w + 420 >> 2] : V, C ? A[w + 424 >> 2] : AA, C ? A[w + 428 >> 2] : CA), y = (C = y) - 1 | 0, o = o - !C | 0, AA = A[w + 408 >> 2], CA = A[w + 412 >> 2], S = A[w + 400 >> 2], V = A[w + 404 >> 2], (0 | (U = Q | U << 1)) >= 0; ) ;
                            C = o - ((yA >> 31) + (y >>> 0 < yA >>> 0) | 0) | 0, (0 | (Q = (Q = 32 + (y - yA | 0) | 0) >>> 0 < NA >>> 0 & (0 | (C = Q >>> 0 < 32 ? C + 1 | 0 : C)) <= 0 | (0 | C) < 0 ? (0 | Q) > 0 ? Q : 0 : NA)) >= 113 ? (NC(w + 384 | 0, c), O = A[w + 392 >> 2], v = A[w + 396 >> 2], BA = A[w + 384 >> 2], EA = A[w + 388 >> 2], J = 0, C = 0) : (bC(w + 352 | 0, jQ(1, 144 - Q | 0)), NC(w + 336 | 0, c), BA = A[w + 336 >> 2], EA = A[w + 340 >> 2], O = A[w + 344 >> 2], v = A[w + 348 >> 2], _w(w + 368 | 0, A[w + 352 >> 2], A[w + 356 >> 2], A[w + 360 >> 2], A[w + 364 >> 2], BA, EA, O, v), _ = A[w + 376 >> 2], nA = A[w + 380 >> 2], J = A[w + 372 >> 2], C = A[w + 368 >> 2]), _Q(w + 320 | 0, (g = !(1 & U) & !!(0 | XC(S, V, AA, CA, 0, 0, 0, 0)) & (0 | Q) < 32) + U | 0), DI(w + 304 | 0, BA, EA, O, v, A[w + 320 >> 2], A[w + 324 >> 2], A[w + 328 >> 2], A[w + 332 >> 2]), Q = C, WI(w + 272 | 0, A[w + 304 >> 2], A[w + 308 >> 2], A[w + 312 >> 2], A[w + 316 >> 2], C, J, _, nA), DI(w + 288 | 0, BA, EA, O, v, (C = g) ? 0 : S, C ? 0 : V, C ? 0 : AA, C ? 0 : CA), WI(w + 256 | 0, A[w + 288 >> 2], A[w + 292 >> 2], A[w + 296 >> 2], A[w + 300 >> 2], A[w + 272 >> 2], A[w + 276 >> 2], A[w + 280 >> 2], A[w + 284 >> 2]), JB(w + 240 | 0, A[w + 256 >> 2], A[w + 260 >> 2], A[w + 264 >> 2], A[w + 268 >> 2], Q, J, _, nA), XC(C = A[w + 240 >> 2], g = A[w + 244 >> 2], Q = A[w + 248 >> 2], J = A[w + 252 >> 2], 0, 0, 0, 0) || (A[56798] = 68), Jg(w + 224 | 0, C, g, Q, J, y), S = A[w + 224 >> 2], V = A[w + 228 >> 2], Q = A[w + 236 >> 2], C = A[w + 232 >> 2];
                          } else A[56798] = 68, NC(w + 208 | 0, c), DI(w + 192 | 0, A[w + 208 >> 2], A[w + 212 >> 2], A[w + 216 >> 2], A[w + 220 >> 2], 0, 0, 0, 65536), DI(w + 176 | 0, A[w + 192 >> 2], A[w + 196 >> 2], A[w + 200 >> 2], A[w + 204 >> 2], 0, 0, 0, 65536), S = A[w + 176 >> 2], V = A[w + 180 >> 2], Q = A[w + 188 >> 2], C = A[w + 184 >> 2];
                          else bC(w + 112 | 0, 0 * +(0 | c)), S = A[w + 112 >> 2], V = A[w + 116 >> 2], Q = A[w + 124 >> 2], C = A[w + 120 >> 2];
                        } else {
                          R: {
                            D: {
                              if ((0 | (Q = A[C + 116 >> 2])) > 0 | (0 | Q) >= 0) {
                                if (Q = A[C + 4 >> 2], A[C + 4 >> 2] = Q - 1, !g) break D;
                                if (A[C + 4 >> 2] = Q - 2, !x) break R;
                                A[C + 4 >> 2] = Q - 3;
                                break R;
                              }
                              if (g) break R;
                            }
                            HC(C, 0, 0);
                          }
                          bC(w + 96 | 0, 0 * +(0 | c)), S = A[w + 96 >> 2], V = A[w + 100 >> 2], Q = A[w + 108 >> 2], C = A[w + 104 >> 2];
                        }
                        A[E + 16 >> 2] = S, A[E + 20 >> 2] = V, A[E + 24 >> 2] = C, A[E + 28 >> 2] = Q, t = w + 432 | 0, y = A[E + 24 >> 2], o = A[E + 28 >> 2], J = A[E + 16 >> 2], Y = A[E + 20 >> 2];
                        break A;
                      }
                      A[C + 116 >> 2] < 0 || (A[C + 4 >> 2] = A[C + 4 >> 2] - 1);
                    }
                    D = C, _ = c, w = g, C = 0, c = 0, t = U = t - 8976 | 0, nA = (kA = 0 - yA | 0) - NA | 0;
                    E: {
                      R: {
                        for (; ; ) {
                          if ((0 | Q) != 48) {
                            if ((0 | Q) != 46) break E;
                            if ((0 | (Q = A[D + 4 >> 2])) != A[D + 104 >> 2]) {
                              A[D + 4 >> 2] = Q + 1, Q = G[0 | Q];
                              break R;
                            }
                            break;
                          }
                          (0 | (C = A[D + 4 >> 2])) != A[D + 104 >> 2] ? (A[D + 4 >> 2] = C + 1, Q = G[0 | C]) : Q = CI(D), C = 1;
                        }
                        Q = CI(D);
                      }
                      if (n = 1, (0 | Q) == 48) {
                        for (; y = (C = y) - 1 | 0, o = o - !C | 0, (0 | (C = A[D + 4 >> 2])) == A[D + 104 >> 2] ? Q = CI(D) : (A[D + 4 >> 2] = C + 1, Q = G[0 | C]), (0 | Q) == 48; ) ;
                        C = 1;
                      }
                    }
                    A[U + 784 >> 2] = 0;
                    E: {
                      R: {
                        D: {
                          F: {
                            w: {
                              if ((g = (0 | Q) == 46) | (S = Q - 48 | 0) >>> 0 <= 9) for (; ; ) {
                                U: {
                                  if (1 & g) {
                                    if (!n) {
                                      y = J, o = Y, n = 1;
                                      break U;
                                    }
                                    g = !C;
                                    break w;
                                  }
                                  Y = (J = J + 1 | 0) ? Y : Y + 1 | 0, (0 | c) <= 2044 ? (wA = (0 | Q) == 48 ? wA : J, C = (U + 784 | 0) + (c << 2) | 0, x && (S = (T(A[C >> 2], 10) + Q | 0) - 48 | 0), A[C >> 2] = S, C = 1, x = (Q = (0 | (g = x + 1 | 0)) == 9) ? 0 : g, c = Q + c | 0) : (0 | Q) != 48 && (A[U + 8960 >> 2] = 1 | A[U + 8960 >> 2], wA = 18396);
                                }
                                if ((0 | (Q = A[D + 4 >> 2])) == A[D + 104 >> 2] ? Q = CI(D) : (A[D + 4 >> 2] = Q + 1, Q = G[0 | Q]), !((g = (0 | Q) == 46) | (S = Q - 48 | 0) >>> 0 < 10)) break;
                              }
                              if (y = n ? y : J, o = n ? o : Y, !(!C | (-33 & Q) != 69)) {
                                if (S = pE(D, w), V = C = QA, !(S | (0 | C) != -2147483648)) {
                                  if (!w) break D;
                                  S = 0, V = 0, A[D + 116 >> 2] < 0 || (A[D + 4 >> 2] = A[D + 4 >> 2] - 1);
                                }
                                o = o + V | 0, o = (y = y + S | 0) >>> 0 < S >>> 0 ? o + 1 | 0 : o;
                                break R;
                              }
                              if (g = !C, (0 | Q) < 0) break F;
                            }
                            A[D + 116 >> 2] < 0 || (A[D + 4 >> 2] = A[D + 4 >> 2] - 1);
                          }
                          if (!g) break R;
                          A[56798] = 28;
                        }
                        J = 0, Y = 0, HC(D, 0, 0), Q = 0, C = 0;
                        break E;
                      }
                      if (C = A[U + 784 >> 2]) if (J >>> 0 > 9 & (0 | Y) >= 0 | (0 | Y) > 0 | (0 | J) != (0 | y) | (0 | o) != (0 | Y) | (C >>> NA | 0 ? (0 | NA) <= 30 : 0)) if (y >>> 0 > kA >>> 1 >>> 0 & (0 | o) >= 0 | (0 | o) > 0) A[56798] = 68, NC(U + 96 | 0, _), DI(U + 80 | 0, A[U + 96 >> 2], A[U + 100 >> 2], A[U + 104 >> 2], A[U + 108 >> 2], -1, -1, -1, 2147418111), DI(U - -64 | 0, A[U + 80 >> 2], A[U + 84 >> 2], A[U + 88 >> 2], A[U + 92 >> 2], -1, -1, -1, 2147418111), J = A[U + 64 >> 2], Y = A[U + 68 >> 2], Q = A[U + 76 >> 2], C = A[U + 72 >> 2];
                      else if ((Q = y >>> 0 < (C = yA - 226 | 0) >>> 0) & (0 | o) <= (0 | (C >>= 31)) | (0 | C) > (0 | o)) A[56798] = 68, NC(U + 144 | 0, _), DI(U + 128 | 0, A[U + 144 >> 2], A[U + 148 >> 2], A[U + 152 >> 2], A[U + 156 >> 2], 0, 0, 0, 65536), DI(U + 112 | 0, A[U + 128 >> 2], A[U + 132 >> 2], A[U + 136 >> 2], A[U + 140 >> 2], 0, 0, 0, 65536), J = A[U + 112 >> 2], Y = A[U + 116 >> 2], Q = A[U + 124 >> 2], C = A[U + 120 >> 2];
                      else {
                        if (x) {
                          if ((0 | x) <= 8) {
                            for (D = A[(C = (U + 784 | 0) + (c << 2) | 0) >> 2]; D = T(D, 10), (0 | (x = x + 1 | 0)) != 9; ) ;
                            A[C >> 2] = D;
                          }
                          c = c + 1 | 0;
                        }
                        if (n = y, !((0 | wA) > (0 | y) | (0 | wA) >= 9 | (0 | y) > 17)) {
                          if ((0 | n) == 9) {
                            NC(U + 192 | 0, _), _Q(U + 176 | 0, A[U + 784 >> 2]), DI(U + 160 | 0, A[U + 192 >> 2], A[U + 196 >> 2], A[U + 200 >> 2], A[U + 204 >> 2], A[U + 176 >> 2], A[U + 180 >> 2], A[U + 184 >> 2], A[U + 188 >> 2]), J = A[U + 160 >> 2], Y = A[U + 164 >> 2], Q = A[U + 172 >> 2], C = A[U + 168 >> 2];
                            break E;
                          }
                          if ((0 | n) <= 8) {
                            NC(U + 272 | 0, _), _Q(U + 256 | 0, A[U + 784 >> 2]), DI(U + 240 | 0, A[U + 272 >> 2], A[U + 276 >> 2], A[U + 280 >> 2], A[U + 284 >> 2], A[U + 256 >> 2], A[U + 260 >> 2], A[U + 264 >> 2], A[U + 268 >> 2]), NC(U + 224 | 0, A[124720 + (0 - n << 2) >> 2]), JQ(U + 208 | 0, A[U + 240 >> 2], A[U + 244 >> 2], A[U + 248 >> 2], A[U + 252 >> 2], A[U + 224 >> 2], A[U + 228 >> 2], A[U + 232 >> 2], A[U + 236 >> 2]), J = A[U + 208 >> 2], Y = A[U + 212 >> 2], Q = A[U + 220 >> 2], C = A[U + 216 >> 2];
                            break E;
                          }
                          if (C = 27 + (T(n, -3) + NA | 0) | 0, !((Q = A[U + 784 >> 2]) >>> C | 0 && (0 | C) <= 30)) {
                            NC(U + 352 | 0, _), _Q(U + 336 | 0, Q), DI(U + 320 | 0, A[U + 352 >> 2], A[U + 356 >> 2], A[U + 360 >> 2], A[U + 364 >> 2], A[U + 336 >> 2], A[U + 340 >> 2], A[U + 344 >> 2], A[U + 348 >> 2]), NC(U + 304 | 0, A[124648 + (n << 2) >> 2]), DI(U + 288 | 0, A[U + 320 >> 2], A[U + 324 >> 2], A[U + 328 >> 2], A[U + 332 >> 2], A[U + 304 >> 2], A[U + 308 >> 2], A[U + 312 >> 2], A[U + 316 >> 2]), J = A[U + 288 >> 2], Y = A[U + 292 >> 2], Q = A[U + 300 >> 2], C = A[U + 296 >> 2];
                            break E;
                          }
                        }
                        for (; !A[(U + 784 | 0) + ((c = (Q = c) - 1 | 0) << 2) >> 2]; ) ;
                        if (x = 0, C = (0 | n) % 9 | 0) {
                          if (g = 0, C = (0 | n) < 0 ? C + 9 | 0 : C, Q) {
                            for (o = 1e9 / (0 | (y = A[124720 + (0 - C << 2) >> 2])) | 0, S = 0, D = 0; J = (J = S) + (c = ((Y = A[(S = (U + 784 | 0) + (D << 2) | 0) >> 2]) >>> 0) / (y >>> 0) | 0) | 0, A[S >> 2] = J, g = (J = !J & (0 | g) == (0 | D)) ? g + 1 & 2047 : g, n = J ? n - 9 | 0 : n, S = T(o, Y - T(y, c) | 0), (0 | (D = D + 1 | 0)) != (0 | Q); ) ;
                            S && (A[(U + 784 | 0) + (Q << 2) >> 2] = S, Q = Q + 1 | 0);
                          } else Q = 0;
                          n = 9 + (n - C | 0) | 0;
                        } else g = 0;
                        for (; ; ) {
                          D = (U + 784 | 0) + (g << 2) | 0;
                          R: {
                            for (; ; ) {
                              if (((0 | n) != 36 | UA[D >> 2] >= 10384593) & (0 | n) >= 36) break R;
                              for (c = Q + 2047 | 0, S = 0, C = Q; Q = C, y = S, S = (C = A[(c = (U + 784 | 0) + ((J = 2047 & c) << 2) | 0) >> 2]) << 29, C = Y = C >>> 3 | 0, !(o = (y = y + S | 0) >>> 0 < S >>> 0 ? C + 1 | 0 : C) & y >>> 0 < 1000000001 ? S = 0 : y = (C = y) - tA(S = _U(C, o, 1e9), QA, 1e9, 0) | 0, A[c >> 2] = y, C = (0 | J) != (Q - 1 & 2047) || (0 | g) == (0 | J) || y ? Q : J, c = J - 1 | 0, (0 | g) != (0 | J); ) ;
                              if (x = x - 29 | 0, S) break;
                            }
                            (0 | (g = g - 1 & 2047)) == (0 | C) && (D = Q = (y = U + 784 | 0) + ((C + 2046 & 2047) << 2) | 0, o = A[Q >> 2], Q = C - 1 & 2047, A[D >> 2] = o | A[y + (Q << 2) >> 2]), n = n + 9 | 0, A[(U + 784 | 0) + (g << 2) >> 2] = S;
                            continue;
                          }
                          break;
                        }
                        R: {
                          D: for (; ; ) {
                            for (y = Q + 1 & 2047, S = (U + 784 | 0) + ((Q - 1 & 2047) << 2) | 0; ; ) {
                              J = (0 | n) > 45 ? 9 : 1;
                              F: {
                                for (; ; ) {
                                  C = g, D = 0;
                                  w: {
                                    for (; ; ) {
                                      if ((0 | (g = C + D & 2047)) != (0 | Q) && !((g = A[(U + 784 | 0) + (g << 2) >> 2]) >>> 0 < (o = A[124672 + (D << 2) >> 2]) >>> 0)) {
                                        if (g >>> 0 > o >>> 0) break w;
                                        if ((0 | (D = D + 1 | 0)) != 4) continue;
                                      }
                                      break;
                                    }
                                    if ((0 | n) == 36) {
                                      for (y = 0, o = 0, D = 0, J = 0, Y = 0; (0 | (g = C + D & 2047)) == (0 | Q) && (A[780 + (U + ((Q = Q + 1 & 2047) << 2) | 0) >> 2] = 0), _Q(U + 768 | 0, A[(U + 784 | 0) + (g << 2) >> 2]), DI(U + 752 | 0, y, o, J, Y, 0, 0, 1342177280, 1075633366), WI(U + 736 | 0, A[U + 752 >> 2], A[U + 756 >> 2], A[U + 760 >> 2], A[U + 764 >> 2], A[U + 768 >> 2], A[U + 772 >> 2], A[U + 776 >> 2], A[U + 780 >> 2]), J = A[U + 744 >> 2], Y = A[U + 748 >> 2], y = A[U + 736 >> 2], o = A[U + 740 >> 2], (0 | (D = D + 1 | 0)) != 4; ) ;
                                      if (NC(U + 720 | 0, _), DI(U + 704 | 0, y, o, J, Y, A[U + 720 >> 2], A[U + 724 >> 2], A[U + 728 >> 2], A[U + 732 >> 2]), J = A[U + 712 >> 2], Y = A[U + 716 >> 2], y = 0, o = 0, S = A[U + 704 >> 2], V = A[U + 708 >> 2], (0 | (g = (c = (0 | (D = (w = x + 113 | 0) - yA | 0)) < (0 | NA)) ? (0 | D) > 0 ? D : 0 : NA)) <= 112) break F;
                                      break R;
                                    }
                                  }
                                  if (x = J + x | 0, g = Q, (0 | C) != (0 | Q)) break;
                                }
                                for (Y = 1e9 >>> J | 0, c = ~(-1 << J), D = 0, g = C; o = (o = D) + ((w = A[(D = (U + 784 | 0) + (C << 2) | 0) >> 2]) >>> J | 0) | 0, A[D >> 2] = o, g = (o = !o & (0 | C) == (0 | g)) ? g + 1 & 2047 : g, n = o ? n - 9 | 0 : n, D = T(Y, w & c), (0 | Q) != (0 | (C = C + 1 & 2047)); ) ;
                                if (!D) continue;
                                if ((0 | g) != (0 | y)) {
                                  A[(U + 784 | 0) + (Q << 2) >> 2] = D, Q = y;
                                  continue D;
                                }
                                A[S >> 2] = 1 | A[S >> 2];
                                continue;
                              }
                              break;
                            }
                            break;
                          }
                          bC(U + 656 | 0, jQ(1, 225 - g | 0)), _w(U + 688 | 0, A[U + 656 >> 2], A[U + 660 >> 2], A[U + 664 >> 2], A[U + 668 >> 2], S, V, J, Y), BA = A[U + 696 >> 2], EA = A[U + 700 >> 2], AA = A[U + 688 >> 2], CA = A[U + 692 >> 2], bC(U + 640 | 0, jQ(1, 113 - g | 0)), tB(U + 672 | 0, S, V, J, Y, A[U + 640 >> 2], A[U + 644 >> 2], A[U + 648 >> 2], A[U + 652 >> 2]), JB(U + 624 | 0, S, V, J, Y, y = A[U + 672 >> 2], o = A[U + 676 >> 2], O = A[U + 680 >> 2], v = A[U + 684 >> 2]), WI(U + 608 | 0, AA, CA, BA, EA, A[U + 624 >> 2], A[U + 628 >> 2], A[U + 632 >> 2], A[U + 636 >> 2]), J = A[U + 616 >> 2], Y = A[U + 620 >> 2], S = A[U + 608 >> 2], V = A[U + 612 >> 2];
                        }
                        if ((0 | (n = C + 4 & 2047)) != (0 | Q)) {
                          R: if ((n = A[(U + 784 | 0) + (n << 2) >> 2]) >>> 0 <= 499999999) {
                            if (!n & (C + 5 & 2047) == (0 | Q)) break R;
                            bC(U + 496 | 0, 0.25 * +(0 | _)), WI(U + 480 | 0, y, o, O, v, A[U + 496 >> 2], A[U + 500 >> 2], A[U + 504 >> 2], A[U + 508 >> 2]), O = A[U + 488 >> 2], v = A[U + 492 >> 2], y = A[U + 480 >> 2], o = A[U + 484 >> 2];
                          } else (0 | n) == 5e8 ? (WA = +(0 | _), (C + 5 & 2047) != (0 | Q) ? (bC(U + 560 | 0, 0.75 * WA), WI(U + 544 | 0, y, o, O, v, A[U + 560 >> 2], A[U + 564 >> 2], A[U + 568 >> 2], A[U + 572 >> 2]), O = A[U + 552 >> 2], v = A[U + 556 >> 2], y = A[U + 544 >> 2], o = A[U + 548 >> 2]) : (bC(U + 528 | 0, 0.5 * WA), WI(U + 512 | 0, y, o, O, v, A[U + 528 >> 2], A[U + 532 >> 2], A[U + 536 >> 2], A[U + 540 >> 2]), O = A[U + 520 >> 2], v = A[U + 524 >> 2], y = A[U + 512 >> 2], o = A[U + 516 >> 2])) : (bC(U + 592 | 0, 0.75 * +(0 | _)), WI(U + 576 | 0, y, o, O, v, A[U + 592 >> 2], A[U + 596 >> 2], A[U + 600 >> 2], A[U + 604 >> 2]), O = A[U + 584 >> 2], v = A[U + 588 >> 2], y = A[U + 576 >> 2], o = A[U + 580 >> 2]);
                          (0 | g) > 111 || (tB(U + 464 | 0, y, o, O, v, 0, 0, 0, 1073676288), XC(A[U + 464 >> 2], A[U + 468 >> 2], A[U + 472 >> 2], A[U + 476 >> 2], 0, 0, 0, 0) || (WI(U + 448 | 0, y, o, O, v, 0, 0, 0, 1073676288), O = A[U + 456 >> 2], v = A[U + 460 >> 2], y = A[U + 448 >> 2], o = A[U + 452 >> 2]));
                        }
                        WI(U + 432 | 0, S, V, J, Y, y, o, O, v), JB(U + 416 | 0, A[U + 432 >> 2], A[U + 436 >> 2], A[U + 440 >> 2], A[U + 444 >> 2], AA, CA, BA, EA), J = A[U + 424 >> 2], Y = A[U + 428 >> 2], S = A[U + 416 >> 2], V = A[U + 420 >> 2], (nA - 2 | 0) >= (2147483647 & w) || (A[U + 408 >> 2] = J, A[U + 412 >> 2] = 2147483647 & Y, A[U + 400 >> 2] = S, A[U + 404 >> 2] = V, DI(U + 384 | 0, S, V, J, Y, 0, 0, 0, 1073610752), J = (C = (0 | (C = IU(A[U + 400 >> 2], A[U + 404 >> 2], A[U + 408 >> 2], A[U + 412 >> 2], 1081081856))) >= 0) ? A[U + 392 >> 2] : J, Y = C ? A[U + 396 >> 2] : Y, S = C ? A[U + 384 >> 2] : S, V = C ? A[U + 388 >> 2] : V, x = C + x | 0, !(!!(0 | XC(y, o, O, v, 0, 0, 0, 0)) & (C ? c & (0 | g) != (0 | D) : c)) & (x + 110 | 0) <= (0 | nA) || (A[56798] = 68)), Jg(U + 368 | 0, S, V, J, Y, x), J = A[U + 368 >> 2], Y = A[U + 372 >> 2], Q = A[U + 380 >> 2], C = A[U + 376 >> 2];
                      }
                      else NC(U + 48 | 0, _), _Q(U + 32 | 0, C), DI(U + 16 | 0, A[U + 48 >> 2], A[U + 52 >> 2], A[U + 56 >> 2], A[U + 60 >> 2], A[U + 32 >> 2], A[U + 36 >> 2], A[U + 40 >> 2], A[U + 44 >> 2]), J = A[U + 16 >> 2], Y = A[U + 20 >> 2], Q = A[U + 28 >> 2], C = A[U + 24 >> 2];
                      else bC(U, 0 * +(0 | _)), J = A[U >> 2], Y = A[U + 4 >> 2], Q = A[U + 12 >> 2], C = A[U + 8 >> 2];
                    }
                    A[E + 40 >> 2] = C, A[E + 44 >> 2] = Q, A[E + 32 >> 2] = J, A[E + 36 >> 2] = Y, t = U + 8976 | 0, y = A[E + 40 >> 2], o = A[E + 44 >> 2], J = A[E + 32 >> 2], Y = A[E + 36 >> 2];
                    break A;
                  case 3:
                    break Q;
                  default:
                    break B;
                }
                (0 | (Q = A[C + 116 >> 2])) > 0 | (0 | Q) >= 0 && (A[C + 4 >> 2] = A[C + 4 >> 2] - 1);
                break I;
              }
              if ((0 | (Q = A[C + 4 >> 2])) == A[C + 104 >> 2] ? Q = CI(C) : (A[C + 4 >> 2] = Q + 1, Q = G[0 | Q]), (0 | Q) != 40) {
                if (o = 2147450880, A[C + 116 >> 2] < 0) break A;
                A[C + 4 >> 2] = A[C + 4 >> 2] - 1;
                break A;
              }
              for (D = 1; (0 | (Q = A[C + 4 >> 2])) == A[C + 104 >> 2] ? Q = CI(C) : (A[C + 4 >> 2] = Q + 1, Q = G[0 | Q]), Q - 48 >>> 0 < 10 | Q - 65 >>> 0 < 26 | (0 | Q) == 95 || !(Q - 97 >>> 0 >= 26); ) D = D + 1 | 0;
              if (o = 2147450880, (0 | Q) == 41) break A;
              (0 | (Q = A[C + 116 >> 2])) > 0 | (0 | Q) >= 0 && (A[C + 4 >> 2] = A[C + 4 >> 2] - 1);
              Q: {
                if (g) {
                  if (D) break Q;
                  break A;
                }
                break I;
              }
              for (; D = D - 1 | 0, (0 | Q) > 0 | (0 | Q) >= 0 && (A[C + 4 >> 2] = A[C + 4 >> 2] - 1), D; ) ;
              break A;
            }
            A[56798] = 28, HC(C, 0, 0);
          }
          o = 0;
        }
        A[I >> 2] = J, A[I + 4 >> 2] = Y, A[I + 8 >> 2] = y, A[I + 12 >> 2] = o, t = E + 48 | 0;
      }
      function EI(I, C, Q, g, E) {
        var U, w = 0, D = 0, J = 0, o = 0, y = 0, S = 0, Y = 0, c = 0, n = 0, V = 0, x = 0, O = 0, v = 0, _ = 0, AA = 0, CA = 0, BA = 0, EA = 0, wA = 0, yA = 0, NA = 0;
        if (t = U = t - 112 | 0, A[Q + 8 >> 2]) {
          yA = A[50754] / 70 | 0, V = (S = A[g + 12 >> 2]) || 256;
          A: if ((0 | C) != 2) {
            if ((0 | C) == 1) {
              I: if (G[I + 11 | 0] != 3) switch (G[g - 15 | 0] - 3 | 0) {
                case 0:
                case 5:
                  break I;
                default:
                  break A;
              }
              V = (0 | (S = A[A[47192] + 44 >> 2])) < (0 | V) ? V : S;
            }
          } else {
            if ((0 | (S = A[A[47192] + 80 >> 2])) <= 0 | !(8 & G[0 | g] | S >>> 0 <= G[I + 14 | 0] | 32 & G[I + 6 | 0])) break A;
            yA <<= 1;
          }
          if (A[36436] = 0, v = I, NA = C, y = g, t = n = t - 16 | 0, I = A[34460] + A[Q + 8 >> 2] | 0, C = (C = G[I + 2 | 0]) >>> 0 >= 24 ? 24 : C, A[n + 12 >> 2] = C, D = A[Q + 12 >> 2] + A[Q + 24 >> 2] | 0, A[36422] = D, C) {
            for (S = I + 4 | 0, w = 1 & L[I + 4 >> 1]; I = 145488 + (o << 3) | 0, g = S + (w ? o << 6 : T(o, 44)) | 0, A[I + 4 >> 2] = g, c = a[g >> 1], L[I + 2 >> 1] = c, L[I >> 1] = G[g + 16 | 0], J = 2 & c ? o : J, (0 | (o = o + 1 | 0)) != (0 | C); ) ;
            S = 145488, (0 | J) <= 0 || ((0 | NA) != 1 ? (C = C - J | 0, A[n + 12 >> 2] = C, S = 145488 + (J << 3) | 0) : (C = J + 1 | 0, A[n + 12 >> 2] = C, S = 145488));
          } else C = 0, S = 145488;
          if (!(!A[Q + 4 >> 2] | A[Q + 20 >> 2] | G[v + 11 | 0] != 2)) {
            if (w = A[Q + 36 >> 2], g = A[Q + 40 >> 2], I = 0, (0 | (C = A[n + 12 >> 2])) >= 2) {
              J = w >>> 12 | 0, c = g >>> 26 & 7, _ = g >>> 18 & 248, x = T(O = 63 & g, 50), CA = 63 & (BA = w >>> 6 | 0), o = w << 1 & 126, EA = T(g >>> 16 & 31, 50) - 750 | 0, wA = T(g >>> 11 & 31, 50) - 750 | 0, AA = T(g >>> 6 & 31, 50) - 750 | 0;
              A: {
                I: if ((0 | NA) != 1) {
                  if (!(J | O)) break A;
                  if (8 & J ? (C = A[4 + (S + ((D = C - 1 | 0) << 3) | 0) >> 2], L[C >> 1] < 0 ? I = C : (I = (0 | (I = A[44469] + 1 | 0)) <= 169 ? I : 0, A[44469] = I, D = a[C + 20 >> 1] | a[C + 22 >> 1] << 16, I = 177888 + (I << 6) | 0, w = a[C + 16 >> 1] | a[C + 18 >> 1] << 16, L[I + 16 >> 1] = w, L[I + 18 >> 1] = w >>> 16, L[I + 20 >> 1] = D, L[I + 22 >> 1] = D >>> 16, D = a[C + 4 >> 1] | a[C + 6 >> 1] << 16, w = a[C >> 1] | a[C + 2 >> 1] << 16, L[I >> 1] = w, L[I + 2 >> 1] = w >>> 16, L[I + 4 >> 1] = D, L[I + 6 >> 1] = D >>> 16, D = a[C + 12 >> 1] | a[C + 14 >> 1] << 16, w = a[C + 8 >> 1] | a[C + 10 >> 1] << 16, L[I + 8 >> 1] = w, L[I + 10 >> 1] = w >>> 16, L[I + 12 >> 1] = D, L[I + 14 >> 1] = D >>> 16, D = a[C + 28 >> 1] | a[C + 30 >> 1] << 16, w = a[C + 24 >> 1] | a[C + 26 >> 1] << 16, L[I + 24 >> 1] = w, L[I + 26 >> 1] = w >>> 16, L[I + 28 >> 1] = D, L[I + 30 >> 1] = D >>> 16, D = a[C + 36 >> 1] | a[C + 38 >> 1] << 16, w = a[C + 32 >> 1] | a[C + 34 >> 1] << 16, L[I + 32 >> 1] = w, L[I + 34 >> 1] = w >>> 16, L[I + 36 >> 1] = D, L[I + 38 >> 1] = D >>> 16, D = a[C + 44 >> 1] | a[C + 46 >> 1] << 16, w = a[C + 40 >> 1] | a[C + 42 >> 1] << 16, L[I + 40 >> 1] = w, L[I + 42 >> 1] = w >>> 16, L[I + 44 >> 1] = D, L[I + 46 >> 1] = D >>> 16, D = a[C + 52 >> 1] | a[C + 54 >> 1] << 16, w = a[C + 48 >> 1] | a[C + 50 >> 1] << 16, L[I + 48 >> 1] = w, L[I + 50 >> 1] = w >>> 16, L[I + 52 >> 1] = D, L[I + 54 >> 1] = D >>> 16, D = a[C + 60 >> 1] | a[C + 62 >> 1] << 16, C = a[C + 56 >> 1] | a[C + 58 >> 1] << 16, L[I + 56 >> 1] = C, L[I + 58 >> 1] = C >>> 16, L[I + 60 >> 1] = D, L[I + 62 >> 1] = D >>> 16, M[I + 16 | 0] = 0, L[I >> 1] = 32768 | a[I >> 1], D = A[n + 12 >> 2] - 1 | 0), A[4 + (S + (D << 3) | 0) >> 2] = I, C = 1792, (0 | (D = L[I + 4 >> 1])) < 300 || (C = 1536, D >>> 0 < 400 || (C = D >>> 0 < 500 ? 1280 : 1024)), A[36436] = C, w = 35) : (A[n + 12 >> 2] = C + 1, L[(I = (D = S + (C << 3) | 0) - 8 | 0) >> 1] = o, C = A[I + 4 >> 2], I = (0 | (I = A[44469] + 1 | 0)) <= 169 ? I : 0, A[44469] = I, (I = (BA = I << 6) + 177888 | 0) && (w = a[C + 4 >> 1] | a[C + 6 >> 1] << 16, Y = a[C >> 1] | a[C + 2 >> 1] << 16, L[I >> 1] = Y, L[I + 2 >> 1] = Y >>> 16, L[I + 4 >> 1] = w, L[I + 6 >> 1] = w >>> 16, w = a[C + 60 >> 1] | a[C + 62 >> 1] << 16, Y = a[C + 56 >> 1] | a[C + 58 >> 1] << 16, L[I + 56 >> 1] = Y, L[I + 58 >> 1] = Y >>> 16, L[I + 60 >> 1] = w, L[I + 62 >> 1] = w >>> 16, w = a[C + 52 >> 1] | a[C + 54 >> 1] << 16, Y = a[C + 48 >> 1] | a[C + 50 >> 1] << 16, L[I + 48 >> 1] = Y, L[I + 50 >> 1] = Y >>> 16, L[I + 52 >> 1] = w, L[I + 54 >> 1] = w >>> 16, w = a[C + 44 >> 1] | a[C + 46 >> 1] << 16, Y = a[C + 40 >> 1] | a[C + 42 >> 1] << 16, L[I + 40 >> 1] = Y, L[I + 42 >> 1] = Y >>> 16, L[I + 44 >> 1] = w, L[I + 46 >> 1] = w >>> 16, w = a[C + 36 >> 1] | a[C + 38 >> 1] << 16, Y = a[C + 32 >> 1] | a[C + 34 >> 1] << 16, L[I + 32 >> 1] = Y, L[I + 34 >> 1] = Y >>> 16, L[I + 36 >> 1] = w, L[I + 38 >> 1] = w >>> 16, w = a[C + 28 >> 1] | a[C + 30 >> 1] << 16, Y = a[C + 24 >> 1] | a[C + 26 >> 1] << 16, L[I + 24 >> 1] = Y, L[I + 26 >> 1] = Y >>> 16, L[I + 28 >> 1] = w, L[I + 30 >> 1] = w >>> 16, w = a[C + 20 >> 1] | a[C + 22 >> 1] << 16, Y = a[C + 16 >> 1] | a[C + 18 >> 1] << 16, L[I + 16 >> 1] = Y, L[I + 18 >> 1] = Y >>> 16, L[I + 20 >> 1] = w, L[I + 22 >> 1] = w >>> 16, w = a[C + 12 >> 1] | a[C + 14 >> 1] << 16, C = a[C + 8 >> 1] | a[C + 10 >> 1] << 16, L[I + 8 >> 1] = C, L[I + 10 >> 1] = C >>> 16, L[I + 12 >> 1] = w, L[I + 14 >> 1] = w >>> 16, M[BA + 177904 | 0] = 0, L[I >> 1] = 32768 | a[I >> 1]), L[D >> 1] = 0, A[D + 4 >> 2] = I, o >>> 0 >= 37 && (A[36422] = (o + A[36422] | 0) - 36), w = CA << 1, O && rB(I, x, AA, wA, c, EA, _, J)), A[A[32972] + 132 >> 2] || (C = G[I + 17 | 0]) && (C = L[102896 + (((0 | (C = (w << 6 >>> 0) / (C >>> 0) | 0)) >= 199 ? 199 : C) << 1) >> 1], M[I + 18 | 0] = (0 | T(C, G[I + 18 | 0])) / 512, M[I + 19 | 0] = (0 | T(C, G[I + 19 | 0])) / 512, M[I + 20 | 0] = (0 | T(C, G[I + 20 | 0])) / 512, M[I + 21 | 0] = (0 | T(C, G[I + 21 | 0])) / 512, M[I + 22 | 0] = (0 | T(C, G[I + 22 | 0])) / 512, M[I + 23 | 0] = (0 | T(C, G[I + 23 | 0])) / 512, M[I + 24 | 0] = (0 | T(C, G[I + 24 | 0])) / 512, M[I + 25 | 0] = (0 | T(C, G[I + 25 | 0])) / 512), g - 536870912 >>> 0 <= 1073741823) {
                    if (c = A[44469], (0 | (D = A[n + 12 >> 2])) > 0) for (I = T(g >>> 29 | 0, 10) + 102854 | 0, _ = L[I + 4 >> 1], O = L[I + 2 >> 1], x = L[I >> 1], EA = L[I + 6 >> 1], wA = L[I + 8 >> 1], w = 0; C = A[(AA = S + (w << 3) | 0) + 4 >> 2], L[C >> 1] < 0 ? I = C : (I = (CA = (c = (0 | (I = c + 1 | 0)) <= 169 ? I : 0) << 6) + 177888 | 0) ? (g = a[C + 4 >> 1] | a[C + 6 >> 1] << 16, D = a[C >> 1] | a[C + 2 >> 1] << 16, L[I >> 1] = D, L[I + 2 >> 1] = D >>> 16, L[I + 4 >> 1] = g, L[I + 6 >> 1] = g >>> 16, g = a[C + 60 >> 1] | a[C + 62 >> 1] << 16, D = a[C + 56 >> 1] | a[C + 58 >> 1] << 16, L[I + 56 >> 1] = D, L[I + 58 >> 1] = D >>> 16, L[I + 60 >> 1] = g, L[I + 62 >> 1] = g >>> 16, g = a[C + 52 >> 1] | a[C + 54 >> 1] << 16, D = a[C + 48 >> 1] | a[C + 50 >> 1] << 16, L[I + 48 >> 1] = D, L[I + 50 >> 1] = D >>> 16, L[I + 52 >> 1] = g, L[I + 54 >> 1] = g >>> 16, g = a[C + 44 >> 1] | a[C + 46 >> 1] << 16, D = a[C + 40 >> 1] | a[C + 42 >> 1] << 16, L[I + 40 >> 1] = D, L[I + 42 >> 1] = D >>> 16, L[I + 44 >> 1] = g, L[I + 46 >> 1] = g >>> 16, g = a[C + 36 >> 1] | a[C + 38 >> 1] << 16, D = a[C + 32 >> 1] | a[C + 34 >> 1] << 16, L[I + 32 >> 1] = D, L[I + 34 >> 1] = D >>> 16, L[I + 36 >> 1] = g, L[I + 38 >> 1] = g >>> 16, g = a[C + 28 >> 1] | a[C + 30 >> 1] << 16, D = a[C + 24 >> 1] | a[C + 26 >> 1] << 16, L[I + 24 >> 1] = D, L[I + 26 >> 1] = D >>> 16, L[I + 28 >> 1] = g, L[I + 30 >> 1] = g >>> 16, g = a[C + 20 >> 1] | a[C + 22 >> 1] << 16, D = a[C + 16 >> 1] | a[C + 18 >> 1] << 16, L[I + 16 >> 1] = D, L[I + 18 >> 1] = D >>> 16, L[I + 20 >> 1] = g, L[I + 22 >> 1] = g >>> 16, g = a[C + 12 >> 1] | a[C + 14 >> 1] << 16, C = a[C + 8 >> 1] | a[C + 10 >> 1] << 16, L[I + 8 >> 1] = C, L[I + 10 >> 1] = C >>> 16, L[I + 12 >> 1] = g, L[I + 14 >> 1] = g >>> 16, M[CA + 177904 | 0] = 0, L[I >> 1] = 32768 | a[I >> 1], D = A[n + 12 >> 2]) : I = 0, A[AA + 4 >> 2] = I, L[I + 8 >> 1] = (0 | T(_, L[I + 8 >> 1])) / 256, L[I + 6 >> 1] = (0 | T(O, L[I + 6 >> 1])) / 256, L[I + 4 >> 1] = (0 | T(x, L[I + 4 >> 1])) / 256, L[I + 12 >> 1] = (0 | T(wA, L[I + 12 >> 1])) / 256, L[I + 10 >> 1] = (0 | T(EA, L[I + 10 >> 1])) / 256, (0 | D) > (0 | (w = w + 1 | 0)); ) ;
                    A[44469] = c;
                  }
                  if (!I) break A;
                } else {
                  C = A[S + 4 >> 2], (0 | (D = L[C >> 1])) < 0 ? I = C : (g = (0 | (g = A[44469] + 1 | 0)) <= 169 ? g : 0, A[44469] = g, (g = (D = g << 6) + 177888 | 0) && (I = a[C + 4 >> 1] | a[C + 6 >> 1] << 16, Y = a[C >> 1] | a[C + 2 >> 1] << 16, L[g >> 1] = Y, L[g + 2 >> 1] = Y >>> 16, L[g + 4 >> 1] = I, L[g + 6 >> 1] = I >>> 16, I = a[C + 60 >> 1] | a[C + 62 >> 1] << 16, Y = a[C + 56 >> 1] | a[C + 58 >> 1] << 16, L[g + 56 >> 1] = Y, L[g + 58 >> 1] = Y >>> 16, L[g + 60 >> 1] = I, L[g + 62 >> 1] = I >>> 16, I = a[C + 52 >> 1] | a[C + 54 >> 1] << 16, Y = a[C + 48 >> 1] | a[C + 50 >> 1] << 16, L[g + 48 >> 1] = Y, L[g + 50 >> 1] = Y >>> 16, L[g + 52 >> 1] = I, L[g + 54 >> 1] = I >>> 16, I = a[C + 44 >> 1] | a[C + 46 >> 1] << 16, Y = a[C + 40 >> 1] | a[C + 42 >> 1] << 16, L[g + 40 >> 1] = Y, L[g + 42 >> 1] = Y >>> 16, L[g + 44 >> 1] = I, L[g + 46 >> 1] = I >>> 16, I = a[C + 36 >> 1] | a[C + 38 >> 1] << 16, Y = a[C + 32 >> 1] | a[C + 34 >> 1] << 16, L[g + 32 >> 1] = Y, L[g + 34 >> 1] = Y >>> 16, L[g + 36 >> 1] = I, L[g + 38 >> 1] = I >>> 16, I = a[C + 28 >> 1] | a[C + 30 >> 1] << 16, Y = a[C + 24 >> 1] | a[C + 26 >> 1] << 16, L[g + 24 >> 1] = Y, L[g + 26 >> 1] = Y >>> 16, L[g + 28 >> 1] = I, L[g + 30 >> 1] = I >>> 16, I = a[C + 20 >> 1] | a[C + 22 >> 1] << 16, Y = a[C + 16 >> 1] | a[C + 18 >> 1] << 16, L[g + 16 >> 1] = Y, L[g + 18 >> 1] = Y >>> 16, L[g + 20 >> 1] = I, L[g + 22 >> 1] = I >>> 16, I = a[C + 12 >> 1] | a[C + 14 >> 1] << 16, C = a[C + 8 >> 1] | a[C + 10 >> 1] << 16, L[g + 8 >> 1] = C, L[g + 10 >> 1] = C >>> 16, L[g + 12 >> 1] = I, L[g + 14 >> 1] = I >>> 16, M[D + 177904 | 0] = 0, D = -32768 | a[g >> 1], L[g >> 1] = D, I = g)), A[S + 4 >> 2] = I, L[S >> 1] = o || 50, L[S + 2 >> 1] = 16384 | a[S + 2 >> 1], L[I >> 1] = 16384 | D, D = A[S + 12 >> 2], C = G[D + 17 | 0], g = A[32972], A[g + 132 >> 2] && (M[I + 39 | 0] = G[D + 39 | 0] - 4);
                  Q: if (O) {
                    if (2048 & w) {
                      C = (T(C, 31 & BA) >>> 0) / 30 | 0, A[g + 132 >> 2] || (g = G[I + 17 | 0]) && (C = L[102896 + (((0 | (C = (C << 6 >>> 0) / (g >>> 0) | 0)) >= 199 ? 199 : C) << 1) >> 1], M[I + 18 | 0] = (0 | T(C, G[I + 18 | 0])) / 512, M[I + 19 | 0] = (0 | T(C, G[I + 19 | 0])) / 512, M[I + 20 | 0] = (0 | T(C, G[I + 20 | 0])) / 512, M[I + 21 | 0] = (0 | T(C, G[I + 21 | 0])) / 512, M[I + 22 | 0] = (0 | T(C, G[I + 22 | 0])) / 512, M[I + 23 | 0] = (0 | T(C, G[I + 23 | 0])) / 512, M[I + 24 | 0] = (0 | T(C, G[I + 24 | 0])) / 512, M[I + 25 | 0] = (0 | T(C, G[I + 25 | 0])) / 512), rB(I, x, AA, wA, c, EA, _, J);
                      break Q;
                    }
                    if (rB(I, x, AA, wA, c, EA, _, J), A[A[32972] + 132 >> 2] || !(C = G[I + 17 | 0])) break Q;
                    C = L[102896 + (((0 | (C = (CA << 7 >>> 0) / (C >>> 0) | 0)) >= 199 ? 199 : C) << 1) >> 1], M[I + 18 | 0] = (0 | T(C, G[I + 18 | 0])) / 512, M[I + 19 | 0] = (0 | T(C, G[I + 19 | 0])) / 512, M[I + 20 | 0] = (0 | T(C, G[I + 20 | 0])) / 512, M[I + 21 | 0] = (0 | T(C, G[I + 21 | 0])) / 512, M[I + 22 | 0] = (0 | T(C, G[I + 22 | 0])) / 512, M[I + 23 | 0] = (0 | T(C, G[I + 23 | 0])) / 512, M[I + 24 | 0] = (0 | T(C, G[I + 24 | 0])) / 512, M[I + 25 | 0] = (0 | T(C, G[I + 25 | 0])) / 512;
                  } else if (g = A[g + 132 >> 2], 8 & J) {
                    if (g || !(g = G[I + 17 | 0])) break Q;
                    C = ((16320 & T(C, 48)) >>> 0) / (g >>> 0) | 0, C = L[102896 + ((C >>> 0 >= 199 ? 199 : C) << 1) >> 1], M[I + 18 | 0] = (0 | T(C, G[I + 18 | 0])) / 512, M[I + 19 | 0] = (0 | T(C, G[I + 19 | 0])) / 512, M[I + 20 | 0] = (0 | T(C, G[I + 20 | 0])) / 512, M[I + 21 | 0] = (0 | T(C, G[I + 21 | 0])) / 512, M[I + 22 | 0] = (0 | T(C, G[I + 22 | 0])) / 512, M[I + 23 | 0] = (0 | T(C, G[I + 23 | 0])) / 512, M[I + 24 | 0] = (0 | T(C, G[I + 24 | 0])) / 512, M[I + 25 | 0] = (0 | T(C, G[I + 25 | 0])) / 512;
                  } else g || (C = G[I + 17 | 0]) && (C = L[102896 + (((C = 1792 / (C >>> 0) | 0) >>> 0 >= 199 ? 199 : C) << 1) >> 1], M[I + 18 | 0] = (0 | T(C, G[I + 18 | 0])) / 512, M[I + 19 | 0] = (0 | T(C, G[I + 19 | 0])) / 512, M[I + 20 | 0] = (0 | T(C, G[I + 20 | 0])) / 512, M[I + 21 | 0] = (0 | T(C, G[I + 21 | 0])) / 512, M[I + 22 | 0] = (0 | T(C, G[I + 22 | 0])) / 512, M[I + 23 | 0] = (0 | T(C, G[I + 23 | 0])) / 512, M[I + 24 | 0] = (0 | T(C, G[I + 24 | 0])) / 512, M[I + 25 | 0] = (0 | T(C, G[I + 25 | 0])) / 512);
                  if (!(8 & J)) break I;
                  C = 2816, (0 | (g = L[I + 4 >> 1])) < 300 || (C = 2560, g >>> 0 < 400 || (C = g >>> 0 < 500 ? 2304 : 2048)), A[36436] = C;
                }
                4 & J && (L[I >> 1] = 32 | a[I >> 1]), 2 & J && (L[I >> 1] = 16 | a[I >> 1]);
              }
              64 & J && zC(20, 0), I = o & J << 27 >> 31;
            } else I = 0;
            D = I + A[36422] | 0, A[36422] = D, C = A[n + 12 >> 2];
          }
          if ((0 | (g = C - 1 | 0)) <= 0) w = 0;
          else {
            if (I = 0, o = 0, w = 0, C - 2 >>> 0 >= 3) for (_ = -4 & g, c = 0; w = (((L[(J = o << 3) + S >> 1] + w | 0) + L[S + (8 | J) >> 1] | 0) + L[S + (16 | J) >> 1] | 0) + L[S + (24 | J) >> 1] | 0, o = o + 4 | 0, (0 | _) != (0 | (c = c + 4 | 0)); ) ;
            if (J = 3 & g) for (; w = L[S + (o << 3) >> 1] + w | 0, o = o + 1 | 0, (0 | J) != (0 | (I = I + 1 | 0)); ) ;
          }
          if (I = C, (J = A[Q + 20 >> 2]) && (I = g, o = J + A[34460] | 0, (c = G[o + 2 | 0]) && (O = a[o + 4 >> 1], L[S + (g << 3) >> 1] = G[o + 20 | 0], J = 1, I = C, (0 | c) != 1))) {
            if (_ = o + 4 | 0, O &= 1, EA = 1 & (o = c - 1 | 0), (0 | c) != 2) for (wA = -2 & o, c = 0; AA = _ + (J << 6) | 0, CA = _ + T(J, 44) | 0, BA = G[(x = O ? AA : CA) + 16 | 0], A[(o = S + (I << 3) | 0) + 4 >> 2] = x, L[o >> 1] = BA, L[o + 2 >> 1] = a[x >> 1], AA = G[(x = O ? AA - -64 | 0 : CA + 44 | 0) + 16 | 0], A[o + 12 >> 2] = x, L[o + 8 >> 1] = AA, L[o + 10 >> 1] = a[x >> 1], J = J + 2 | 0, I = I + 2 | 0, (0 | wA) != (0 | (c = c + 2 | 0)); ) ;
            EA && (J = _ + (O ? J << 6 : T(J, 44)) | 0, c = G[J + 16 | 0], A[(o = S + (I << 3) | 0) + 4 >> 2] = J, L[o >> 1] = c, L[o + 2 >> 1] = a[J >> 1], I = I + 1 | 0);
          }
          A: if (!((0 | w) <= 0)) {
            I: {
              Q: switch (NA - 1 | 0) {
                case 1:
                  if (J = (0 | (J = (A[Q + 44 >> 2] + D | 0) - 45 | 0)) <= 10 ? 10 : J, 8 & G[0 | y] && (J = J + (G[A[36128] + 14 | 0] << 1) | 0), (0 | g) <= 0) break A;
                  if (y = (J << 8) / (0 | w) | 0, o = 0, (0 | C) != 2) for (C = -2 & g, J = 0; L[(w = (D = o << 3) + S | 0) >> 1] = (0 | T(y, L[w >> 1])) / 256, L[(D = S + (8 | D) | 0) >> 1] = (0 | T(y, L[D >> 1])) / 256, o = o + 2 | 0, (0 | C) != (0 | (J = J + 2 | 0)); ) ;
                  if (!(1 & g)) break A;
                  L[(C = S + (o << 3) | 0) >> 1] = (0 | T(y, L[C >> 1])) / 256;
                  break A;
                case 0:
                  if (A[Q >> 2] != 1 || (0 | (J = A[Q + 44 >> 2])) > 129) break I;
                  L[S >> 1] = (0 | T(J, L[S >> 1])) / 130;
                  break I;
                default:
                  break Q;
              }
              (0 | (J = A[Q + 44 >> 2])) <= 0 || (D = (J - w | 0) + D | 0, A[36422] = D);
            }
            if (!(!D | (0 | g) <= 0)) {
              if (y = (w + D << 8) / (0 | w) | 0, o = 0, (0 | C) != 2) for (C = -2 & g, J = 0; L[(w = (D = o << 3) + S | 0) >> 1] = (0 | T(y, L[w >> 1])) / 256, L[(D = S + (8 | D) | 0) >> 1] = (0 | T(y, L[D >> 1])) / 256, o = o + 2 | 0, (0 | C) != (0 | (J = J + 2 | 0)); ) ;
              1 & g && (L[(C = S + (o << 3) | 0) >> 1] = (0 | T(y, L[C >> 1])) / 256);
            }
          }
          if (A[U + 108 >> 2] = I, t = n + 16 | 0, S) {
            if ((0 | (I = A[Q + 16 >> 2])) != A[36438] && (A[36438] = I, C = 216192 + (A[50758] << 4) | 0, A[C >> 2] = 14, A[C + 4 >> 2] = I, I = A[50758] + 1 | 0, A[50758] = (0 | I) <= 169 ? I : 0), o = (I = A[A[32972] + 132 >> 2]) ? 1 : 3, C = A[S + 4 >> 2], A[Q + 28 >> 2] | !G[145748] || (M[145748] = 0, o = I ? 2 : 4), (g = A[36426]) && (!((2 & (I = a[g >> 1])) >>> 1 | G[g + 16 | 0] < 2) | 16 & I || (D = 216192 + (A[36439] << 4) | 0, A[D + 12 >> 2] = C, 8 & I && (I = (0 | (I = A[44469] + 1 | 0)) <= 169 ? I : 0, A[44469] = I, (I = (J = I << 6) + 177888 | 0) && (y = a[C + 4 >> 1] | a[C + 6 >> 1] << 16, w = a[C >> 1] | a[C + 2 >> 1] << 16, L[I >> 1] = w, L[I + 2 >> 1] = w >>> 16, L[I + 4 >> 1] = y, L[I + 6 >> 1] = y >>> 16, y = a[C + 60 >> 1] | a[C + 62 >> 1] << 16, w = a[C + 56 >> 1] | a[C + 58 >> 1] << 16, L[I + 56 >> 1] = w, L[I + 58 >> 1] = w >>> 16, L[I + 60 >> 1] = y, L[I + 62 >> 1] = y >>> 16, y = a[C + 52 >> 1] | a[C + 54 >> 1] << 16, w = a[C + 48 >> 1] | a[C + 50 >> 1] << 16, L[I + 48 >> 1] = w, L[I + 50 >> 1] = w >>> 16, L[I + 52 >> 1] = y, L[I + 54 >> 1] = y >>> 16, y = a[C + 44 >> 1] | a[C + 46 >> 1] << 16, w = a[C + 40 >> 1] | a[C + 42 >> 1] << 16, L[I + 40 >> 1] = w, L[I + 42 >> 1] = w >>> 16, L[I + 44 >> 1] = y, L[I + 46 >> 1] = y >>> 16, y = a[C + 36 >> 1] | a[C + 38 >> 1] << 16, w = a[C + 32 >> 1] | a[C + 34 >> 1] << 16, L[I + 32 >> 1] = w, L[I + 34 >> 1] = w >>> 16, L[I + 36 >> 1] = y, L[I + 38 >> 1] = y >>> 16, y = a[C + 28 >> 1] | a[C + 30 >> 1] << 16, w = a[C + 24 >> 1] | a[C + 26 >> 1] << 16, L[I + 24 >> 1] = w, L[I + 26 >> 1] = w >>> 16, L[I + 28 >> 1] = y, L[I + 30 >> 1] = y >>> 16, y = a[C + 20 >> 1] | a[C + 22 >> 1] << 16, w = a[C + 16 >> 1] | a[C + 18 >> 1] << 16, L[I + 16 >> 1] = w, L[I + 18 >> 1] = w >>> 16, L[I + 20 >> 1] = y, L[I + 22 >> 1] = y >>> 16, y = a[C + 12 >> 1] | a[C + 14 >> 1] << 16, w = a[C + 8 >> 1] | a[C + 10 >> 1] << 16, L[I + 8 >> 1] = w, L[I + 10 >> 1] = w >>> 16, L[I + 12 >> 1] = y, L[I + 14 >> 1] = y >>> 16, M[J + 177904 | 0] = 0, L[I >> 1] = 32768 | a[I >> 1]), L[(J = J + 177888 | 0) + 8 >> 1] = a[g + 8 >> 1], M[J + 21 | 0] = G[g + 21 | 0], L[J + 10 >> 1] = a[g + 10 >> 1], M[J + 22 | 0] = G[g + 22 | 0], L[J + 12 >> 1] = a[g + 12 >> 1], M[J + 23 | 0] = G[g + 23 | 0], L[J + 14 >> 1] = a[g + 14 >> 1], M[J + 24 | 0] = G[g + 24 | 0], M[J + 25 | 0] = G[g + 25 | 0], A[D + 12 >> 2] = I))), (0 | NA) != 2 | G[v + 11 | 0] != 2 || (aQ(), A[36427] = A[50758]), !((0 | (v = A[U + 108 >> 2])) < 2)) {
              for (I = A[36433], y = (T(256 - I | 0, V) + (I << 8) | 0) / 256 | 0, I = A[36432], D = (T(256 - I | 0, V) + (I << 8) | 0) / 256 | 0, w = A[50754], I = 0, g = 1; J = a[(n = (S + (g << 3) | 0) - 8 | 0) + 2 >> 1], J = (0 | T((0 | T(w, L[n >> 1])) / 1e3 | 0, 4 & J ? D : 16384 & J ? y : V)) / 256 | 0, A[(g << 2) + U >> 2] = J, I = I + J | 0, (0 | v) != (0 | (g = g + 1 | 0)); ) ;
              if (!((0 | I) <= 0 | (0 | I) >= (0 | yA) | (0 | v) < 2)) {
                if (g = 1, y = 1 & (J = v - 1 | 0), (0 | v) != 2) for (D = -2 & J, V = 0; A[(J = (g << 2) + U | 0) >> 2] = (0 | T(A[J >> 2], yA)) / (0 | I), A[J + 4 >> 2] = (0 | T(A[J + 4 >> 2], yA)) / (0 | I), g = g + 2 | 0, (0 | D) != (0 | (V = V + 2 | 0)); ) ;
                y && (A[(g = (g << 2) + U | 0) >> 2] = (0 | T(A[g >> 2], yA)) / (0 | I));
              }
              if (V = 0, !((0 | v) < 2)) for (v = NA + 256 | 0, g = 1; I = A[4 + (S + (g << 3) | 0) >> 2], !(J = A[Q + 28 >> 2]) | 128 & G[0 | C] || (A[36422] = 0, uI(J, v, 0, w = A[Q >> 2], 0, y = (y = A[Q + 32 >> 2]) ? (y << 5) / 100 | 0 : 32), M[145748] = 1, A[Q + 28 >> 2] = 0), (0 | E) < 0 || (E = 64 & G[0 | C] ? 6 : E, (A[U + 108 >> 2] - 1 | 0) == (0 | g) && (E = (J = E) | (3840 & (E = A[36436]) ? E : 0))), J = A[(g << 2) + U >> 2], A[36440] = J + A[36440], A[36441] = J + A[36441], J ? (y = A[50758], A[36439] = y, (0 | E) >= 0 && (A[(y = 216192 + (y << 4) | 0) >> 2] = o, A[y + 12 >> 2] = I, A[y + 8 >> 2] = C, A[y + 4 >> 2] = J + (E << 16), C = A[50758] + 1 | 0, A[50758] = (0 | C) <= 169 ? C : 0), A[36426] = I, V = J + V | 0) : A[36426] = 0, C = I, (0 | (g = g + 1 | 0)) < A[U + 108 >> 2]; ) ;
            }
            !A[36438] | (0 | NA) == 1 || (A[36438] = 0, I = 216192 + (A[50758] << 4) | 0, A[I >> 2] = 14, A[I + 4 >> 2] = 0, I = A[50758] + 1 | 0, A[50758] = (0 | I) <= 169 ? I : 0);
          }
        }
        t = U + 112 | 0;
      }
      function _C(I, C, Q, g) {
        var E, U = 0, w = 0, D = 0, J = 0, o = 0, y = 0, S = 0, Y = 0, c = 0, n = 0, V = 0, x = 0, O = 0, v = 0, _ = 0, AA = 0, CA = 0, BA = 0, EA = 0, wA = 0, yA = 0, NA = 0;
        t = E = t - 1856 | 0, A[E + 164 >> 2] = 0, Q ? Y = A[Q >> 2] : pA(Q = E - -64 | 0, 0, 96), A[33264] = 0, A[E + 1824 >> 2] = 0, A[E + 1828 >> 2] = 0, A[E + 1832 >> 2] = 0, A[E + 1836 >> 2] = 0, M[E + 1616 | 0] = 0, M[E + 992 | 0] = 0, M[E + 1200 | 0] = 0, M[E + 784 | 0] = 0;
        A: if (A[I + 688 >> 2]) {
          for (A[E + 1840 >> 2] = C, G[0 | (U = C)] == 32 && (U = C + 1 | 0, A[E + 1840 >> 2] = U), c = E + 416 | 1, BA = E + 1844 | 1, wA = E + 1848 | 1, yA = E + 1852 | 1, A[E + 1820 >> 2] = U, mA(E + 168 | 0, U), U = A[E + 1820 >> 2]; (32 | G[0 | U]) != 32; ) U = mA(E + 164 | 0, U) + A[E + 1820 >> 2] | 0, A[E + 1820 >> 2] = U, x = x + 1 | 0;
          bA(E + 256 | 0, C, EA = (0 | (D = U - C | 0)) >= 159 ? 159 : D), !(AA = 4194304 & Y) | (0 | x) != 1 ? (v = ((0 | (U = A[47202])) == 36) << 2, (0 | x) == 1 | (0 | U) != 36 || (U = A[E + 1840 >> 2] - 1 | 0, A[E + 1840 >> 2] = U, M[0 | U] = 95, v = 0, w = !!(0 | XI(I, E + 1840 | 0, E + 1616 | 0, E + 1832 | 0, 0, Q)), U = A[47202])) : (w = 1, mA(E + 172 | 0, U + 1 | 0), MI(A[E + 172 >> 2]) && (0 | Mg(A[E + 164 >> 2])) == (0 | Mg(A[E + 172 >> 2])) && (w = 0), v = (0 | (U = A[47202])) == 36 ? 4 : w, w = 0);
          I: {
            Q: {
              B: {
                E: {
                  R: if (16 & U) n = 15 & U, v = 0;
                  else {
                    if (O = 1, w || (O = !!(0 | XI(I, E + 1840 | 0, E + 1616 | 0, E + 1832 | 0, 2, Q))), 50331648 & (U = A[E + 1832 >> 2]) && (D = A[E + 1820 >> 2], G[D + 1 | 0] == 46 && (M[D + 1 | 0] = 32, U = A[E + 1832 >> 2])), 536870912 & U) {
                      if (!g) break A;
                      YA(g, A[E + 1840 >> 2]);
                      break A;
                    }
                    if (8192 & U | !(128 & U) | O) g = A[33264];
                    else if (U = A[E + 1840 >> 2], A[E + 1820 >> 2] = U, !((0 | (g = A[33264])) <= 0)) for (w = 0; G[0 | U] == 32 && (M[0 | U] = 45, w = w + 1 | 0, U = A[E + 1820 >> 2], g = A[33264]), U = U + 1 | 0, A[E + 1820 >> 2] = U, (0 | g) > (0 | w); ) ;
                    D: if (!(g | (0 | x) != 1) && (D = mA(E + 576 | 0, S = A[E + 1840 >> 2]), G[D + S | 0] == 32)) {
                      w = E + 1408 | 0, g = S;
                      F: {
                        w: {
                          U: {
                            for (; ; ) {
                              i: if (MI(A[E + 576 >> 2])) {
                                N: {
                                  if (G[(J = g + D | 0) + 1 | 0] == 46) {
                                    n = 0;
                                    o: switch (G[(U = D + 2 | 0) + g | 0] - 32 | 0) {
                                      case 0:
                                        break N;
                                      case 7:
                                        break o;
                                      default:
                                        break i;
                                    }
                                    if (n = 1, D = U, G[J + 3 | 0] == 115) break N;
                                    break i;
                                  }
                                  if (n = 1, (0 | y) <= 0) break U;
                                }
                                if (!((0 | D) <= 0)) {
                                  if (V = 3 & D, o = 0, D >>> 0 < 4) U = 0;
                                  else for (_ = -4 & D, U = 0, J = 0; M[0 | w] = G[g + U | 0], M[w + 1 | 0] = G[(1 | U) + g | 0], M[w + 2 | 0] = G[(2 | U) + g | 0], M[w + 3 | 0] = G[(3 | U) + g | 0], U = U + 4 | 0, w = w + 4 | 0, (0 | _) != (0 | (J = J + 4 | 0)); ) ;
                                  if (V) for (; M[0 | w] = G[g + U | 0], U = U + 1 | 0, w = w + 1 | 0, (0 | V) != (0 | (o = o + 1 | 0)); ) ;
                                }
                                if (y = y + 1 | 0, n) g = g + D | 0;
                                else if (D = mA(E + 576 | 0, g = 3 + (g + D | 0) | 0), G[g + D | 0] == 32) continue;
                              }
                              break;
                            }
                            if (!((0 | y) < 2)) {
                              (D = (D = w - (U = E + 1408 | 0) | 0) + (U = bA(S, U, D)) | 0) >>> 0 < g >>> 0 && pA(D, 32, (E + 1408 | 0) + g - (U + w) | 0), A[33264] = (y << 1) - 2, A[E + 1836 >> 2] = 0;
                              break w;
                            }
                          }
                          if (!y) break D;
                          if (A[E + 1832 >> 2] = 0, A[E + 1836 >> 2] = 0, !A[33264]) break F;
                        }
                        A[E + 1832 >> 2] = 128;
                      }
                      v = 1;
                    }
                    if (G[E + 1616 | 0] == 21) {
                      YA(189088, E + 1616 | 0), U = 0;
                      break A;
                    }
                    if (NA = G[E + 1833 | 0], w = 1, !O) {
                      if (A[E + 168 >> 2] - 48 >>> 0 < 10) {
                        if (KA(I, 84174, 189088), U = 0, G[189088] == 21) break A;
                        if (!(!(128 & G[I + 109 | 0]) | 32 & G[Q + 2 | 0])) {
                          M[189088] = 21, M[189089] = 0;
                          break A;
                        }
                        w = !!(0 | VB(I, A[E + 1840 >> 2], E + 1616 | 0, E + 1832 | 0, Q, 0));
                      } else w = 0;
                      if (!(w | (3 & Y) == 2) && (16777216 & (g = A[I + 104 >> 2]) || (w = 0, !(!(33554432 & g) | !(1 & Y)))) && (16 & Y || (w = 0, !(1 & M[Q + 13 | 0])))) {
                        _ = A[E + 1840 >> 2], U = 0, y = 0, J = 0, t = V = t - 224 | 0, M[0 | (o = E + 1616 | 0)] = 0, A[V + 216 >> 2] = 0, A[V + 220 >> 2] = 0;
                        D: if (!(M[_ - 2 | 0] - 48 >>> 0 < 10 | (1 & M[0 | Q] ? 0 : 2 & G[I + 107 | 0]) || (g = G[0 | (D = _ + 1 | 0)], (!(2561 & a[I + 106 >> 1]) | !(1 & M[Q + 2 | 0])) & (0 | g) == 32))) {
                          if ((0 | (y = G[0 | _])) != 32) {
                            for (n = 32767, g = 0; ; ) {
                              if (!(U = eQ(101868, y << 24 >> 24, 8))) {
                                y = 0;
                                break D;
                              }
                              if (S = 0, (0 | (U = A[(U << 2) - 305584 >> 2])) == (0 | g) && !((0 | (S = J + 1 | 0)) <= 2)) {
                                y = 0;
                                break D;
                              }
                              F: {
                                w: {
                                  U: {
                                    i: {
                                      if (!((0 | g) < 2)) {
                                        if ((0 | g) == 10 | (0 | g) == 100) break i;
                                        if (!((0 | g) > (0 | U))) {
                                          y = 0;
                                          break D;
                                        }
                                      }
                                      if (!g) break w;
                                      if ((0 | g) < (0 | U)) break U;
                                      break w;
                                    }
                                    if ((0 | g) >= (0 | U)) break w;
                                  }
                                  if (y = 0, (0 | CA) % 10 | (0 | T(g, 10)) < (0 | U)) break D;
                                  U = U - g | 0, n = g;
                                  break F;
                                }
                                if ((0 | U) >= (0 | n)) {
                                  y = 0;
                                  break D;
                                }
                                CA = g + CA | 0;
                              }
                              if (y = G[0 | D], D = w = D + 1 | 0, g = U, J = S, (0 | y) == 32) break;
                            }
                            g = G[0 | w];
                          } else w = D;
                          if ((g << 24 >> 24) - 48 >>> 0 < 10) y = 0;
                          else if ((0 | (g = U + CA | 0)) < A[I + 120 >> 2]) y = 0;
                          else if ((0 | g) > A[I + 116 >> 2]) y = 0;
                          else if (KA(I, 85600, V + 176 | 0), U = o, 4 & G[I + 107 | 0] || (U = YA(o, U = V + 176 | 0) + SA(U) | 0), A[V + 4 >> 2] = A[I + 140 >> 2], A[V >> 2] = g, iA(V + 16 | 0, 85839, V), y = 0, G[0 | w] != 46) {
                            ig(I, _, w, Q, 1) && (A[Q >> 2] = 32768 | A[Q >> 2]), D = 0;
                            F: if (8 & G[I + 107 | 0]) {
                              if (J = A[Q >> 2], A[I + 212 >> 2] == 26741) {
                                if (32768 & J) break F;
                                if (!(16384 & J)) break D;
                                D = 1, J = 0;
                                w: {
                                  U: switch (G[0 | w] - 97 | 0) {
                                    case 0:
                                    case 4:
                                      break U;
                                    default:
                                      break w;
                                  }
                                  U: {
                                    i: {
                                      N: {
                                        o: switch ((n = G[w + 1 | 0]) - 116 | 0) {
                                          case 6:
                                            break w;
                                          case 1:
                                          case 2:
                                          case 3:
                                          case 4:
                                          case 5:
                                            break i;
                                          case 0:
                                            break o;
                                          default:
                                            break N;
                                        }
                                        if (G[w + 2 | 0] != 116) break U;
                                        break w;
                                      }
                                      if ((0 | n) == 32) break w;
                                    }
                                    if (!((0 | g) % 1e3 | 0) && (0 | n) == 108) break w;
                                  }
                                  J = 1;
                                }
                                if (J) break F;
                                break D;
                              }
                              A[Q >> 2] = 32768 | J;
                            }
                            A[(g = I + 8232 | 0) >> 2] = 0, A[g + 4 >> 2] = 0, VB(I, V + 16 | 2, U, V + 216 | 0, Q, D), y = 1, 4 & G[I + 107 | 0] && UC(o, V + 176 | 0);
                          }
                        }
                        t = V + 224 | 0, y ? (A[E + 1832 >> 2] = 8192 | A[E + 1832 >> 2], w = 1) : w = 0;
                      }
                    }
                    if (n = O ? v : 32 & NA ? 1 : v, v = 0, !(!(1 & Y) | (0 | x) < 2) && gA(A[E + 168 >> 2])) {
                      D: {
                        if (1 & M[188785]) {
                          if (!(!(g = 8192 & (U = A[E + 1832 >> 2])) | w)) break D;
                          v = g >>> 2 ^ 2048;
                          break R;
                        }
                        if (w) break E;
                        U = A[E + 1832 >> 2];
                      }
                      if (!(128 & U | x >>> 0 > 3) && !((0 | (U = A[I + 8220 >> 2])) < 4) && (g = 1, (0 | U) >= A[I + 8216 >> 2])) break I;
                    }
                  }
                  if (o = 0, (0 | n) <= 0) break B;
                  g = n;
                  break I;
                }
                if ((0 | (g = n)) > 0) break I;
                o = 0, S = 0, J = 0, y = 0;
                break Q;
              }
              if (w) S = 0, J = 0, y = 0;
              else {
                g = A[E + 1840 >> 2], A[E + 1820 >> 2] = g, U = 999, y = 0, S = 0, c = 0;
                B: {
                  E: {
                    R: {
                      for (; ; ) {
                        D: {
                          F: {
                            w: {
                              if (U - 1 >>> 0 >= 2) {
                                if ((0 | x) < 2 || (mA(E + 1408 | 0, g), (0 | (U = A[E + 1408 >> 2])) < 577 & A[I + 600 >> 2] > 0) || (U = Mg(U), (A[U + 4 >> 2] != A[I + 600 >> 2] ? U : 0) | A[I + 40 >> 2] == 1)) break w;
                                U = G[0 | g], A[E + 1408 >> 2] = U << 24 >> 24;
                                U: switch (U - 32 | 0) {
                                  default:
                                    if (!U) break w;
                                    break;
                                  case 0:
                                  case 7:
                                    break w;
                                  case 1:
                                  case 2:
                                  case 3:
                                  case 4:
                                  case 5:
                                  case 6:
                                    break U;
                                }
                                o = mA(E + 1408 | 0, g), O = 9;
                                U: {
                                  i: {
                                    N: {
                                      o: if (-33 & (U = A[E + 1408 >> 2])) {
                                        for (w = 0, J = 0; ; ) {
                                          s: {
                                            y: {
                                              if ((0 | U) == 39) {
                                                if ((0 | S) > 0 | (0 | w) > 1) break o;
                                                if (J = w ? J : 39, A[I + 40 >> 2] != 3) break y;
                                                break s;
                                              }
                                              J = w ? J : U;
                                            }
                                            w = w + 1 | 0;
                                          }
                                          if (!QE(I, U)) {
                                            if ((0 | (U = A[E + 1408 >> 2])) != 39 && !gA(U)) break w;
                                            if (o = mA(E + 1408 | 0, g + o | 0) + o | 0, -33 & (U = A[E + 1408 >> 2])) continue;
                                            break o;
                                          }
                                          break;
                                        }
                                        if ((0 | w) <= 2) break N;
                                        O = w;
                                      } else J = 0;
                                      if ((0 | (U = A[I + 40 >> 2])) != 2) break i;
                                      t = U = t - 208 | 0, M[0 | U] = 0, w = G[0 | (D = g - 1 | 0)], M[0 | D] = 32, g = iC(I, g, U, 200, 0, -2147483648, 0), M[0 | D] = w, t = U + 208 | 0, g = !g | (32768 & g) >>> 15;
                                      break U;
                                    }
                                    U = A[I + 40 >> 2], O = w;
                                  }
                                  g = (M[I + 168 | 0] + 1 | 0) < (O - ((0 | U) == (0 | J)) | 0);
                                }
                                if (!g) break w;
                                g = A[E + 1820 >> 2];
                              }
                              if (G[0 | g] != 39) break F;
                              y = 67108864, v = 0;
                            }
                            if (o = 0, vE(I, E + 992 | 0, 0, S), g = A[E + 1820 >> 2], (0 | (U = G[0 | g])) != 32) break D;
                            S = 0, J = 0;
                            break Q;
                          }
                          if (v = 0, g = qI(I, g, E + 992 | 0, 1 & (c |= (0 | S) > 0)) + A[E + 1820 >> 2] | 0, A[E + 1820 >> 2] = g, G[E + 992 | 0] == 21) break R;
                          for (S = S + 1 | 0, w = 0; w = (U = w) + 1 | 0, G[g + U | 0] != 32; ) ;
                          y = 67108864;
                          continue;
                        }
                        break;
                      }
                      if (!G[E + 992 | 0] | (0 | U) == 39 || (M[g - 1 | 0] = 32, g = A[E + 1820 >> 2]), D = iC(I, g, E + 1616 | 0, 200, E + 784 | 0, Y, E + 1832 | 0), (0 | (g = G[E + 1616 | 0])) == 21) {
                        YA(189088, E + 1616 | 0), U = 0;
                        break A;
                      }
                      if (!(g | G[E + 784 | 0]) && (mA(E + 1408 | 0, A[E + 1820 >> 2]), (0 | x) == 1 && (MI(A[E + 1408 >> 2]) || TC(A[E + 1408 >> 2])))) {
                        CE(I, A[E + 1820 >> 2], E + 1616 | 0, n) && YA(189088, E + 1616 | 0), U = 0;
                        break A;
                      }
                      A[E + 172 >> 2] = M[A[E + 1820 >> 2] - 1 | 0];
                      D: if (1024 & D) for (_ = E + 176 | 1, n = 0, U = 1, c = 0, S = 0; ; ) {
                        if ((O = 131072 & D) | !(1 & U) || (M[E + 1408 | 0] = 0, !(g = iC(I, A[E + 1820 >> 2], E + 1408 | 0, 200, E + 576 | 0, 805306368 | Y, E + 1832 | 0)))) {
                          2048 & D && (A[I + 8184 >> 2] = 1), M[A[E + 1820 >> 2] - 1 | 0] = A[E + 172 >> 2];
                          F: {
                            w: {
                              U: {
                                i: if (O) {
                                  if (M[E + 176 | 0] = 0, U = A[E + 1820 >> 2], g = 1, J = 63 & D) {
                                    if (V = 1 & D, S = J - 1 | 0, w = 0, (0 | J) != 1) for (CA = J - V | 0, J = 0; o = U, A[E + 1820 >> 2] = U + 1, M[0 | (AA = (E + 176 | 0) + g | 0)] = (0 | w) != (0 | S) ? G[0 | U] : 0, U = U + 2 | 0, A[E + 1820 >> 2] = U, M[AA + 1 | 0] = (0 | S) != (1 | w) ? G[o + 1 | 0] : 0, w = w + 2 | 0, g = g + 2 | 0, (0 | CA) != (0 | (J = J + 2 | 0)); ) ;
                                    V && (J = U + 1 | 0, A[E + 1820 >> 2] = J, M[(E + 176 | 0) + g | 0] = (0 | w) != (0 | S) ? G[0 | U] : 0, g = g + 1 | 0, U = J);
                                  }
                                  M[(E + 176 | 0) + g | 0] = 0;
                                } else {
                                  if (U = A[E + 1820 >> 2], !(J = 15 & D)) break U;
                                  if (g = 0, w = J, o = 3 & D) for (; U = U + 1 | 0, A[E + 1820 >> 2] = U, (192 & G[0 | U]) == 128 || (w = w - 1 | 0, (0 | o) != (0 | (g = g + 1 | 0))); ) ;
                                  if (J >>> 0 < 4) break i;
                                  for (; ; ) if (U = U + 1 | 0, A[E + 1820 >> 2] = U, (192 & G[0 | U]) != 128) {
                                    for (; U = U + 1 | 0, A[E + 1820 >> 2] = U, (192 & G[0 | U]) == 128; ) ;
                                    for (; U = U + 1 | 0, A[E + 1820 >> 2] = U, (192 & G[0 | U]) == 128; ) ;
                                    for (; U = U + 1 | 0, A[E + 1820 >> 2] = U, (192 & G[0 | U]) == 128; ) ;
                                    if (g = (0 | w) > 4, w = w - 4 | 0, !g) break;
                                  }
                                }
                                if (g = U - 1 | 0, A[E + 172 >> 2] = M[0 | g], M[0 | g] = 32, g = Y |= 8388608, !O) break w;
                                if (sI(E + 576 | 0, E + 784 | 0, 12), A[E + 1852 >> 2] = _, g = YA(E + 1200 | 0, U = E + 1616 | 0), XI(I, E + 1852 | 0, U, E + 1832 | 0, 0, Q) && YA(g, E + 1616 | 0), !(32 & G[E + 1833 | 0])) break F;
                                M[0 | g] = 0, CE(I, A[E + 1852 >> 2], g, 1);
                                break F;
                              }
                              g = U - 1 | 0, A[E + 172 >> 2] = M[0 | g], M[0 | g] = 32, g = 8388608 | Y;
                            }
                            Y = g, UC(E + 1200 | 0, E + 784 | 0);
                          }
                          if (M[E + 784 | 0] = 0, J = 1, g = XI(I, E + 1820 | 0, E + 1616 | 0, E + 1824 | 0, 1024, Q), A[E + 1832 >> 2] || (U = A[E + 1828 >> 2], A[E + 1832 >> 2] = A[E + 1824 >> 2], A[E + 1836 >> 2] = U, J = c), g) {
                            o = 0, S = D;
                            break B;
                          }
                          if (o = iC(I, A[E + 1820 >> 2], E + 1616 | 0, 200, E + 784 | 0, 8404992 & Y, E + 1832 | 0), U = 1, S = D, c = J, G[E + 1616 | 0] == 21) {
                            M[A[E + 1820 >> 2] - 1 | 0] = A[E + 172 >> 2], YA(189088, E + 1616 | 0), U = 0;
                            break A;
                          }
                        } else U = E + 416 | 0, mg(I, A[E + 1820 >> 2], g, U), o = iC(I, A[E + 1820 >> 2], E + 1616 | 0, 200, E + 784 | 0, 268435456 | Y, E + 1832 | 0), bA(A[E + 1820 >> 2], U, SA(U)), 1024 & o || (YA(E + 1616 | 0, E + 1408 | 0), U = YA(E + 784 | 0, E + 576 | 0), 8 & G[188788] && (FC(J = U, U = E + 576 | 0), D = A[47195], A[E + 48 >> 2] = U, lI(D, 85205, E + 48 | 0)), o = g), U = 0;
                        if (g = (w = 1024 & o) >>> 10 | 0, n >>> 0 > 48) break D;
                        if (n = n + 1 | 0, D = o, !w) break;
                      }
                      else o = D, S = 0, c = 0, g = 0;
                      if (g | !o) break E;
                      for (D = YA(E + 1408 | 0, E + 1616 | 0), w = mg(I, A[E + 1820 >> 2], o, E + 416 | 0), J = c, U = o; ; ) {
                        D: {
                          if (M[E + 1616 | 0] = 0, G[E + 1200 | 0]) {
                            if (M[A[E + 1820 >> 2] - 1 | 0] = A[E + 172 >> 2], g = XI(I, E + 1840 | 0, E + 1616 | 0, E + 1824 | 0, w, Q), M[A[E + 1820 >> 2] - 1 | 0] = 32, G[E + 1616 | 0] == 21) {
                              I = E + 416 | 0, bA(A[E + 1820 >> 2], I, SA(I)), YA(189088, E + 1616 | 0), U = 0;
                              break A;
                            }
                            if (A[E + 1832 >> 2] || (c = A[E + 1828 >> 2], A[E + 1832 >> 2] = A[E + 1824 >> 2], A[E + 1836 >> 2] = c), g) {
                              M[E + 1200 | 0] = 0;
                              break D;
                            }
                            J = A[E + 1824 >> 2] ? 1 : J;
                          }
                          if (g = XI(I, E + 1820 | 0, E + 1616 | 0, E + 1824 | 0, w, Q), G[E + 1616 | 0] == 21) {
                            I = E + 416 | 0, bA(A[E + 1820 >> 2], I, SA(I)), YA(189088, E + 1616 | 0), U = 0;
                            break A;
                          }
                          if (A[E + 1832 >> 2] || (c = A[E + 1828 >> 2], A[E + 1832 >> 2] = A[E + 1824 >> 2], A[E + 1836 >> 2] = c), !g) if (16384 & U) YA(E + 1616 | 0, D);
                          else {
                            Y |= w << 11 & 8192 | U << 9 & 134217728;
                            F: if (524288 & U) {
                              if (c = YA(E + 576 | 0, g = E + 784 | 0), U = iC(I, A[E + 1820 >> 2], E + 1616 | 0, 200, g, Y, E + 1832 | 0), UC(g, c), g = 0, !U) {
                                U = 0;
                                break F;
                              }
                              if (1024 & U) break F;
                              g = 1, w = mg(I, A[E + 1820 >> 2], U, 0);
                            } else U = 0, iC(I, A[E + 1820 >> 2], E + 1616 | 0, 200, 0, Y, E + 1832 | 0), g = 0;
                            if (G[E + 1616 | 0] == 21) {
                              YA(189088, E + 1616 | 0), I = E + 416 | 0, bA(A[E + 1820 >> 2], I, SA(I)), M[A[E + 1820 >> 2] - 1 | 0] = A[E + 172 >> 2], U = 0;
                              break A;
                            }
                            if (g) continue;
                          }
                        }
                        break;
                      }
                      65536 & o || (uB(I, E + 1616 | 0, 200, E + 784 | 0), M[E + 784 | 0] = 0), g = E + 416 | 0, bA(A[E + 1820 >> 2], g, SA(g));
                      break B;
                    }
                    YA(189088, I = E + 992 | 0), U = !IC(1 | I, 84744, 3) << 12;
                    break A;
                  }
                  o = 0, J = c;
                }
                M[A[E + 1820 >> 2] - 1 | 0] = A[E + 172 >> 2];
              }
            }
            if (g = A[E + 164 >> 2], A[E + 1852 >> 2] = 8026656, A[E + 1848 >> 2] = 8022304, A[E + 1844 >> 2] = 7566112, 4 & Y) {
              Q: {
                if ((U = 255 & g) && ((0 | U) == 102 || (BA = wA, BD(g << 24 >> 24))))
                  break Q;
                BA = yA;
              }
              iC(I, BA, 189088, 200, 0, 0, 0);
            }
            for (g = 0, U = E + 1200 | 0, c = G[E + 784 | 0]; ; ) {
              Q: {
                B: {
                  E: switch (0 | (D = G[0 | U])) {
                    case 0:
                      break Q;
                    case 6:
                    case 7:
                      break E;
                    default:
                      break B;
                  }
                  g = D;
                }
                U = U + 1 | 0;
                continue;
              }
              break;
            }
            Q: if (g | J) {
              if (A[I + 32 >> 2] | 65536 & S) {
                for (w = 0, kC(I, E + 1616 | 0, E + 1832 | 0, 3, 0), U = E + 1200 | 0; ; ) {
                  B: switch (G[0 | U]) {
                    case 6:
                      w && (M[0 | U] = 5), w = 1;
                    default:
                      U = U + 1 | 0;
                      continue;
                    case 0:
                      break B;
                  }
                  break;
                }
                A[E + 24 >> 2] = E + 1616, A[E + 20 >> 2] = E + 1200, A[E + 16 >> 2] = E + 992, oC(189088, 200, 85233, E + 16 | 0), M[189287] = 0, kC(I, 189088, E + 1832 | 0, -1, 0);
                break Q;
              }
              A[E + 8 >> 2] = E + 1616, A[E + 4 >> 2] = E + 1200, A[E >> 2] = E + 992, oC(189088, 200, 85233, E), M[189287] = 0, kC(I, 189088, E + 1832 | 0, -1, 0);
            } else kC(I, g = E + 1616 | 0, E + 1832 | 0, -1, !!(0 | c) << 1), A[E + 40 >> 2] = g, A[E + 36 >> 2] = E + 1200, A[E + 32 >> 2] = E + 992, oC(189088, 200, 85233, E + 32 | 0), M[189287] = 0;
            G[E + 784 | 0] && (g = SA(189088), M[983 + (E - g | 0) | 0] = 0, YA(g + 189088 | 0, E + 784 | 0)), 16 & (g = Y | v) && (A[E + 1832 >> 2] = -268435457 & A[E + 1832 >> 2]);
            Q: if (!(128 & g) | !(16 & G[I + 14 | 0])) if (3072 & g) {
              if (_g(I, 6), !(2048 & g)) break Q;
              A[E + 1832 >> 2] = 268435456 | A[E + 1832 >> 2];
            } else 16 & G[T(A[33264], 12) + Q | 0] && (1536 & (Q = A[E + 1832 >> 2]) ? _g(I, 4) : 2048 & Q && _g(I, 3));
            else _g(I, 3);
            8192 & o && (A[I + 8192 >> 2] = 2, A[I + 8184 >> 2] = 2);
            Q: {
              if (8 & (Q = A[E + 1836 >> 2])) A[I + 8184 >> 2] = 0, A[I + 8188 >> 2] = 3, g = I + 8196 | 0;
              else if (1 & Q) A[I + 8192 >> 2] = 0, A[I + 8184 >> 2] = 2, g = I + 8196 | 0;
              else if (2 & Q) A[I + 8192 >> 2] = 2, A[I + 8184 >> 2] = 0, A[I + 8188 >> 2] = 0, g = I + 8196 | 0;
              else {
                if (!(4 & Q)) break Q;
                A[I + 8184 >> 2] = 0, A[I + 8192 >> 2] = 0, A[I + 8196 >> 2] = 2, g = I + 8188 | 0;
              }
              A[g >> 2] = 0;
            }
            !G[A[E + 1820 >> 2]] | 256 & Q || ((0 | (Q = A[I + 8184 >> 2])) > 0 && (A[I + 8184 >> 2] = Q - 1), (0 | (Q = A[I + 8192 >> 2])) > 0 && (A[I + 8192 >> 2] = Q - 1), (0 | (Q = A[I + 8196 >> 2])) > 0 && (A[I + 8196 >> 2] = Q - 1), (0 | (Q = A[I + 8188 >> 2])) <= 0 || (A[I + 8188 >> 2] = Q - 1)), (0 | x) != 1 | A[I + 212 >> 2] != 25966 || !gA(A[E + 168 >> 2]) | A[E + 168 >> 2] == 105 || (A[E + 1832 >> 2] = 16777216 | A[E + 1832 >> 2]);
            Q: if (2 & G[I + 68 | 0] && 98304 & (g = A[E + 1832 >> 2]) && !((0 | (Q = SA(189088) - 1 | 0)) <= 0)) for (U = 0; ; ) {
              if (I = U + 1 | 0, G[U + 189088 | 0] == 6) {
                Q = M[0 | (I = I + 189088 | 0)];
                B: {
                  if (65536 & g) {
                    if ((0 | EC(69)) == (0 | Q) ? (x = EC(101), M[0 | I] = x) : x = G[0 | I], w = 111, (0 | EC(79)) == x << 24 >> 24) break B;
                    break Q;
                  }
                  if ((0 | EC(101)) == (0 | Q) ? (x = EC(69), M[0 | I] = x) : x = G[0 | I], w = 79, (0 | EC(111)) != x << 24 >> 24) break Q;
                }
                M[0 | I] = EC(w);
                break Q;
              }
              if ((0 | Q) == (0 | (U = I))) break;
            }
            I = A[E + 1832 >> 2], bA(C, E + 256 | 0, EA), U = I | y;
            break A;
          }
          if (U = 0, M[E + 1616 | 0] = 0, CE(I, A[E + 1840 >> 2], E + 1616 | 0, g)) {
            if (D = YA(189088, E + 1616 | 0), !AA) {
              if (g = A[E + 164 >> 2], A[E + 1408 >> 2] = 8026656, A[E + 576 >> 2] = 8022304, A[E + 416 >> 2] = 7566112, 4 & Y) {
                C = E + 576 | 1, Q = E + 1408 | 1;
                I: {
                  if ((U = 255 & g) && ((0 | U) == 102 || (c = C, BD(g << 24 >> 24))))
                    break I;
                  c = Q;
                }
                iC(I, c, D, 200, 0, 0, 0);
              }
              U = 128 & A[E + 1832 >> 2];
            }
          } else U = ((0 | x) > 1) << 12;
        } else M[189088] = 0;
        return t = E + 1856 | 0, U;
      }
      function OQ(I, C, Q, g, E, U, w, D) {
        var J, o, y = 0, S = 0, Y = 0, c = 0, n = 0, V = 0, x = 0, O = 0, v = 0, _ = 0, AA = 0, CA = 0, BA = 0, EA = 0, wA = 0, yA = 0, NA = 0, kA = 0, nA = 0, WA = 0, gI = 0, FI = 0, oI = 0, kI = 0, ZI = 0, VI = 0, bI = 0, vI = 0, _I = 0, RC = 0, JC = 0, sC = 0, KC = 0, hQ = 0, LQ = 0, YQ = 0, sB = 0, GE = 0, jB = 0, JE = 0, iE = 0;
        t = J = t - 384 | 0, o = A[C >> 2];
        A: {
          I: {
            Q: {
              B: {
                if (E) {
                  if (G[0 | E] != 7) break B;
                  A[C >> 2] = (g || 1) + o;
                  break Q;
                }
                A[U >> 2] = 0, A[C >> 2] = o + 1;
                break A;
              }
              gI = 86135, _I = 268435456 & w, RC = 134217728 & w, JC = 8388608 & w, sC = 16384 & w, KC = 8192 & w, kI = Q - 1 | 0, ZI = g - Q | 0, hQ = 2 & w, LQ = 128 & w, YQ = w >>> 31 | 0, sB = -2147483648 & w, VI = J + 96 | 1;
              B: for (; ; ) for (A[J + 268 >> 2] = 0, x = (Y = A[C >> 2]) + g | 0, wA = -2, BA = -6, Q = E, yA = sB, kA = 0, FI = 0, EA = 1, y = 0, NA = 0, WA = 0; ; ) {
                c = Y, O = y;
                E: {
                  R: {
                    D: {
                      F: {
                        w: {
                          U: {
                            i: {
                              N: {
                                o: {
                                  s: {
                                    y: {
                                      l: {
                                        j: {
                                          k: {
                                            P: {
                                              f: {
                                                for (; _ = Q, Q = Q + 1 | 0, !((S = G[0 | _]) >>> 0 > 9); ) {
                                                  n = Q;
                                                  r: switch (0 | S) {
                                                    case 0:
                                                      if (!(Q = bI)) {
                                                        bI = 0, Q = 86135;
                                                        break P;
                                                      }
                                                      for (; ; ) {
                                                        S = 1;
                                                        c: {
                                                          Y: switch (0 | (y = G[0 | Q])) {
                                                            case 0:
                                                            case 3:
                                                              break f;
                                                            case 5:
                                                              break Y;
                                                            default:
                                                              break c;
                                                          }
                                                          S = 2;
                                                        }
                                                        Q = (Q + S | 0) + (((0 | y) == 9) << 1) | 0;
                                                      }
                                                    case 1:
                                                      if (WA = 1, !YQ) continue;
                                                      break w;
                                                    case 2:
                                                      WA = 2;
                                                      continue;
                                                    case 4:
                                                      bI = Q;
                                                      continue;
                                                    case 5:
                                                      Q = _ + 2 | 0, y = A[I + 320 >> 2];
                                                      c: {
                                                        if ((Y = G[_ + 1 | 0]) >>> 0 >= 32) {
                                                          if (!(y >>> Y - 32 & 1)) break c;
                                                          break w;
                                                        }
                                                        if (!(y >>> Y & 1)) break w;
                                                      }
                                                      EA = EA + 1 | 0;
                                                      continue;
                                                    case 9:
                                                      Q = _ + 3 | 0;
                                                      continue;
                                                    case 8:
                                                      WA = 1, FI = 1, yA = 0;
                                                      break;
                                                    case 3:
                                                      break k;
                                                    default:
                                                      break r;
                                                  }
                                                }
                                                n = 0, y = O, Y = c;
                                                r: switch (0 | WA) {
                                                  case 0:
                                                    c: {
                                                      Y: {
                                                        if ((0 | (y = G[0 | x])) != (0 | S)) {
                                                          if ((0 | y) != 69) break w;
                                                          if ((0 | S) == 101) break Y;
                                                          break w;
                                                        }
                                                        if (n = 0, (192 & S) == 128) break c;
                                                      }
                                                      n = 21;
                                                    }
                                                    x = x + 1 | 0, kA = kA + 1 | 0;
                                                    break E;
                                                  case 1:
                                                    break j;
                                                  case 2:
                                                    break r;
                                                  default:
                                                    break s;
                                                }
                                                if (A[J + 264 >> 2] = A[J + 268 >> 2], !G[x - 1 | 0]) break w;
                                                BA = (0 | (y = BA + 6 | 0)) >= 19 ? 19 : y, CA = x + 1 | 0, AA = mA(J + 268 | 0, x), v = G[0 | x], n = 20, y = O;
                                                r: {
                                                  c: switch (S - 11 | 0) {
                                                    case 6:
                                                      Q = _ + 2 | 0, y = A[J + 268 >> 2], Y = M[_ + 1 | 0];
                                                      Y: if (S = A[604 + (((Y = ((0 | Y) < 65 ? 191 : -65) + Y | 0) << 2) + I | 0) >> 2]) y = !!(0 | eA(S, y));
                                                      else {
                                                        if ((0 | Y) > 7) break w;
                                                        d: {
                                                          if ((0 | (S = A[I + 600 >> 2])) > 0) {
                                                            if ((y = y - S | 0) - 1 >>> 0 < 255) break d;
                                                            break w;
                                                          }
                                                          if ((S = y - 192 | 0) >>> 0 <= 413) {
                                                            y = G[344 + (G[S + 94240 | 0] + I | 0) | 0] & 1 << Y;
                                                            break Y;
                                                          }
                                                          if (y >>> 0 > 255) break w;
                                                        }
                                                        y = G[344 + (I + y | 0) | 0] & 1 << Y;
                                                      }
                                                      if (!y) break w;
                                                      x = x + AA | 0, n = ((0 | Y) == 2 ? 19 : 20) - BA | 0;
                                                      break E;
                                                    case 7:
                                                      if (Q = _ + 2 | 0, y = M[_ + 1 | 0], !(y = A[4788 + ((((0 | y) < 65 ? 191 : -65) + y << 2) + I | 0) >> 2])) break w;
                                                      Y: for (; ; ) {
                                                        if ((0 | (n = G[0 | y])) == 7) break w;
                                                        if ((0 | n) == 126) {
                                                          n = 20 - BA | 0;
                                                          break E;
                                                        }
                                                        d: if (v) {
                                                          if (V = x, S = y, (0 | n) == (0 | v)) for (; ; ) {
                                                            if ((0 | (n = G[0 | (S = S + 1 | 0)])) != (0 | (y = G[0 | (V = V + 1 | 0)]))) break d;
                                                            if (!y) break;
                                                          }
                                                        } else S = y, V = x;
                                                        if (n) {
                                                          for (; ; ) if (Y = G[0 | S], S = y = S + 1 | 0, !Y) continue Y;
                                                        }
                                                        break;
                                                      }
                                                      if ((0 | (y = V - x | 0)) < 0) break w;
                                                      x = y + x | 0, n = 20 - BA | 0;
                                                      break E;
                                                    case 14:
                                                      S = A[J + 268 >> 2];
                                                      Y: {
                                                        d: if (y = A[I + 604 >> 2]) y = !!(0 | eA(y, S));
                                                        else {
                                                          q: {
                                                            if ((0 | (y = A[I + 600 >> 2])) > 0) {
                                                              if ((V = S - y | 0) - 1 >>> 0 < 255) break q;
                                                              break Y;
                                                            }
                                                            if ((y = S - 192 | 0) >>> 0 <= 413) {
                                                              y = 1 & M[344 + (G[y + 94240 | 0] + I | 0) | 0];
                                                              break d;
                                                            }
                                                            if (V = S, S >>> 0 > 255) break R;
                                                          }
                                                          y = 1 & M[344 + (I + V | 0) | 0];
                                                        }
                                                        if (y) break w;
                                                        S = A[J + 268 >> 2];
                                                      }
                                                      if (!RC) break R;
                                                      if ((0 | S) == 32) break w;
                                                      break R;
                                                    case 4:
                                                      if ((y = A[J + 268 >> 2]) - 48 >>> 0 < 10 | y - 2406 >>> 0 < 10) break R;
                                                      if (!G[I + 170 | 0]) break w;
                                                      n = 20 - BA | 0;
                                                      break E;
                                                    case 5:
                                                      if (FU(A[J + 268 >> 2])) break w;
                                                      break D;
                                                    case 0:
                                                      if (A[J + 268 >> 2] == A[J + 264 >> 2]) break D;
                                                      break w;
                                                    case 17:
                                                      Q = _ + 2 | 0, y = 32768, n = 0;
                                                      Y: {
                                                        d: switch ((S = G[_ + 1 | 0]) - 1 | 0) {
                                                          case 0:
                                                            break s;
                                                          case 1:
                                                            break d;
                                                          default:
                                                            break Y;
                                                        }
                                                        if (n = 1, y = O, !JC) break s;
                                                        break w;
                                                      }
                                                      if ((0 | (y = 240 & S)) == 16) {
                                                        if (n = 23, y = O, D >>> (15 & S) & 16384) break s;
                                                        break w;
                                                      }
                                                      if ((0 | S) != 3 & (0 | y) != 32 || (bA(y = J + 96 | 0, kI, Y = 1 + (A[C >> 2] + (kA + ZI | 0) | 0) | 0), M[0 | (y = y + Y | 0)] = 32, M[y + 1 | 0] = 0, A[33265] = 0, A[33266] = 0, A[J + 16 >> 2] = VI, XI(I, J + 16 | 0, J + 272 | 0, 133060, 0, 0), n = 23, !((0 | S) != 3 | (0 | (V = A[33265])) >= 0 | 16384 & A[33266]))) break E;
                                                      if (y = O, Y = c, V >>> (15 & S) & 16384) break s;
                                                      break w;
                                                    case 34:
                                                      Y: {
                                                        if (y = v - 32 | 0) {
                                                          if ((0 | y) == 13) break Y;
                                                          break w;
                                                        }
                                                        if (!sC) break w;
                                                      }
                                                      V = 22 - BA | 0;
                                                      break F;
                                                    case 10:
                                                      if (y = 1, G[0 | Q] == 21) break r;
                                                      break U;
                                                    case 18:
                                                      if ((0 | (V = A[J + 268 >> 2])) != 32) for (S = x + AA | 0; ; ) {
                                                        Y: {
                                                          d: if (y = A[I + 632 >> 2]) y = !!(0 | eA(y, V));
                                                          else {
                                                            q: {
                                                              if ((0 | (y = A[I + 600 >> 2])) > 0) {
                                                                if ((V = V - y | 0) - 1 >>> 0 < 255) break q;
                                                                break Y;
                                                              }
                                                              if ((y = V - 192 | 0) >>> 0 <= 413) {
                                                                y = 128 & G[344 + (G[y + 94240 | 0] + I | 0) | 0];
                                                                break d;
                                                              }
                                                              if (V >>> 0 > 255) break Y;
                                                            }
                                                            y = 128 & G[344 + (I + V | 0) | 0];
                                                          }
                                                          if (y) break w;
                                                        }
                                                        if (S = mA(J + 268 | 0, S) + S | 0, (0 | (V = A[J + 268 >> 2])) == 32) break;
                                                      }
                                                      V = 19 - BA | 0;
                                                      break F;
                                                    case 49:
                                                      break i;
                                                    case 2:
                                                      break N;
                                                    case 3:
                                                      break o;
                                                    case 1:
                                                      break s;
                                                    case 13:
                                                      break y;
                                                    case 12:
                                                      break c;
                                                    default:
                                                      break l;
                                                  }
                                                  mA(J + 272 | 0, Q), AA = -1;
                                                  c: if ((0 | (y = A[J + 272 >> 2])) != (0 | (S = A[J + 268 >> 2]))) if (-33 & S) for (; ; ) {
                                                    v = x, AA = -1;
                                                    Y: if ((0 | y) == 18 && (y = M[_ + 2 | 0], n = A[4788 + ((((0 | y) < 65 ? 191 : -65) + y << 2) + I | 0) >> 2])) {
                                                      for (; ; ) {
                                                        if ((0 | (Y = G[0 | n])) == 7) break Y;
                                                        if ((0 | Y) == 126) {
                                                          AA = 0;
                                                          break Y;
                                                        }
                                                        d: if ((0 | (x = G[0 | v])) == (0 | Y)) {
                                                          if (y = v, S = n, x) for (; ; ) {
                                                            if ((0 | (Y = G[0 | (S = S + 1 | 0)])) != (0 | (n = G[0 | (y = y + 1 | 0)]))) break d;
                                                            if (!n) break;
                                                          }
                                                        } else S = n, y = v;
                                                        if (!Y) {
                                                          y = y - v | 0;
                                                          break;
                                                        }
                                                        for (; y = G[0 | S], S = n = S + 1 | 0, y; ) ;
                                                      }
                                                      AA = y;
                                                    }
                                                    if (Y = mA(J + 268 | 0, v), (0 | (y = A[J + 272 >> 2])) == (0 | (S = A[J + 268 >> 2])) | !(-33 & S)) break c;
                                                    if (x = Y + v | 0, (0 | AA) != -1) break;
                                                  }
                                                  else v = x;
                                                  else v = x;
                                                  x = (0 | y) == (0 | S) || (0 | AA) >= 0 ? v : CA, n = 0;
                                                  break E;
                                                }
                                                for (; y = y + 1 | 0, G[0 | (Q = Q + 1 | 0)] == 21; ) ;
                                                break U;
                                              }
                                              Q = Q + 1 | 0;
                                            }
                                            n = _;
                                          }
                                          if (!(G[c - 1 | 0] != 32 & FI | yA || ((0 | (S = FI ? EA + 4 | 0 : EA)) >= (0 | oI) && (GE = NA, jB = O, oI = S, JE = kA, gI = Q), !(8 & A[47197]) | _I | (0 | S) <= 0))) {
                                            for (FC(Q, _ = J + 272 | 0), CA = A[47195], Y = J + 16 | 0, Q = 0, v = 0, yA = 0, NA = 0, t = x = t - 496 | 0, M[x + 80 | 0] = 0, (0 | g) > 0 ? (bA(x + 288 | 0, o, g), O = g) : O = 0, M[O + (y = x + 288 | 0) | 0] = 0, c = SA(y) + y | 0, AA = (0 | w) < 0; ; ) {
                                              if (V = G[0 | E], O = E, E = E + 1 | 0, V >>> 0 > 9) for (; ; ) {
                                                k: {
                                                  P: {
                                                    f: {
                                                      r: {
                                                        c: {
                                                          Y: switch ((y = 255 & V) - 14 | 0) {
                                                            case 4:
                                                              break f;
                                                            case 3:
                                                              break r;
                                                            case 0:
                                                              break c;
                                                            case 14:
                                                              break Y;
                                                            default:
                                                              break P;
                                                          }
                                                          if (O = O + 2 | 0, V = 32, !AA & (0 | (E = G[0 | E])) == 1) break k;
                                                          M[0 | c] = 36, YA(y = c + 1 | 0, E = Qg(128960, E)), c = SA(E) + y | 0;
                                                          break k;
                                                        }
                                                        y = G[O + 2 | 0], V = G[0 | E], A[x + 36 >> 2] = 127 & G[O + 3 | 0], A[x + 32 >> 2] = 4 & y ? 80 : 83, iA(x + 48 | 0, 85131, x + 32 | 0), 1 & y && (E = SA(E = x + 48 | 0) + E | 0, M[0 | E] = 101, M[E + 1 | 0] = 0), 2 & (E = 127 & y) && (y = SA(y = x + 48 | 0) + y | 0, M[0 | y] = 105, M[y + 1 | 0] = 0), 4 & E && (y = SA(y = x + 48 | 0) + y | 0, M[0 | y] = 112, M[y + 1 | 0] = 0), 8 & E && (y = SA(y = x + 48 | 0) + y | 0, M[0 | y] = 118, M[y + 1 | 0] = 0), 16 & E && (y = SA(y = x + 48 | 0) + y | 0, M[0 | y] = 100, M[y + 1 | 0] = 0), 32 & E && (y = SA(y = x + 48 | 0) + y | 0, M[0 | y] = 102, M[y + 1 | 0] = 0), E >>> 0 >= 64 && (E = SA(E = x + 48 | 0) + E | 0, M[0 | E] = 113, M[E + 1 | 0] = 0), 1 & V && (E = SA(E = x + 48 | 0) + E | 0, M[0 | E] = 116, M[E + 1 | 0] = 0), O = O + 4 | 0, c = YA(c, E = x + 48 | 0) + SA(E) | 0, V = 32;
                                                        break k;
                                                      }
                                                      O = O + 2 | 0, V = G[M[0 | E] + 93871 | 0];
                                                      break k;
                                                    }
                                                    E = M[0 | E], M[0 | c] = 76, y = ((E = E + ((0 | E) < 65 ? 191 : -65) | 0) >>> 0) / 10 | 0, M[c + 1 | 0] = y + 48, V = E - T(y, 10) | 48, (0 | NA) == 1 && (M[0 | c] = V, V = 76), O = O + 2 | 0, c = c + 2 | 0;
                                                    break k;
                                                  }
                                                  V = y >>> 0 <= 31 ? G[y + 93904 | 0] : (0 | y) == 32 ? 95 : V, O = E;
                                                }
                                                if (M[0 | c] = V, E = O + 1 | 0, c = c + 1 | 0, !((V = G[0 | O]) >>> 0 >= 10)) break;
                                              }
                                              y = 1;
                                              k: switch (0 | V) {
                                                case 1:
                                                  y = Q;
                                                case 8:
                                                  M[0 | c] = 0, c = x + 80 | 0, Q = y, NA = 1;
                                                  continue;
                                                case 2:
                                                  M[0 | c] = 0, O = SA(y = x + 288 | 0) + y | 0, c = G[84899] | G[84900] << 8, M[0 | O] = c, M[O + 1 | 0] = c >>> 8, NA = 2, M[O + 2 | 0] = G[84901], c = SA(y) + y | 0;
                                                  continue;
                                                case 5:
                                                  v = M[0 | E], E = O + 2 | 0;
                                                  continue;
                                                case 9:
                                                  yA = (G[0 | E] + T(G[O + 2 | 0], 255) | 0) - 256 | 0, E = O + 3 | 0;
                                                  continue;
                                                case 0:
                                                case 3:
                                                  break k;
                                                default:
                                                  continue;
                                              }
                                              break;
                                            }
                                            if (M[0 | c] = 0, c = Y, (0 | yA) > 0 && (A[x + 16 >> 2] = yA, iA(Y, 85581, x + 16 | 0), c = Y + 7 | 0), (0 | v) > 0 && (A[x >> 2] = v, iA(c, 85694, x), c = SA(c) + c | 0), 1 & ((0 | (E = SA(x + 80 | 0))) > 0 | Q)) {
                                              1 & Q && (M[0 | c] = 95, c = c + 1 | 0);
                                              k: if (!((0 | (O = E - 1 | 0)) < 0 | c >>> 0 >= Y >>> 0)) for (; ; ) {
                                                if (M[0 | c] = G[(x + 80 | 0) + O | 0], c = c + 1 | 0, (0 | O) <= 0) break k;
                                                if (O = O - 1 | 0, !(c >>> 0 < Y >>> 0)) break;
                                              }
                                              M[0 | c] = 41, M[c + 1 | 0] = 32, c = c + 2 | 0;
                                            }
                                            M[0 | c] = 0, M[(Q = x + 288 | 0) + ((Y + 3 | 0) - c | 0) | 0] = 0, UC(c, Q), (0 | (Q = SA(Y))) <= 7 && (pA(Q + Y | 0, 32, 8 - Q | 0), Q = 8), M[Q + Y | 0] = 0, t = x + 496 | 0, A[J + 4 >> 2] = Y, A[J >> 2] = (0 | g) > 1 ? S + 35 | 0 : S, A[J + 8 >> 2] = _, lI(CA, 89088, J);
                                          }
                                          Q = n;
                                          break w;
                                        }
                                        if (!G[0 | c]) break w;
                                        wA = (0 | (y = wA + 2 | 0)) >= 19 ? 19 : y, mA(J + 264 | 0, c), y = qQ(J + 268 | 0, Y = c - 1 | 0), v = G[0 | Y], CA = Y;
                                        j: {
                                          k: {
                                            P: {
                                              f: {
                                                r: {
                                                  c: switch (S - 10 | 0) {
                                                    case 13:
                                                      if (y = (0 | (nA = G[0 | Q])) == (0 | (S = G[0 | c])), AA = -1, (0 | S) == 32 | (0 | S) == (0 | nA)) break f;
                                                      if (S) break r;
                                                      break P;
                                                    case 7:
                                                      Q = _ + 2 | 0, n = A[J + 268 >> 2], c = M[_ + 1 | 0];
                                                      Y: if (S = A[604 + (((c = ((0 | c) < 65 ? 191 : -65) + c | 0) << 2) + I | 0) >> 2]) S = !!(0 | eA(S, n));
                                                      else {
                                                        if ((0 | c) > 7) break w;
                                                        d: {
                                                          if ((0 | (S = A[I + 600 >> 2])) > 0) {
                                                            if ((n = n - S | 0) - 1 >>> 0 < 255) break d;
                                                            break w;
                                                          }
                                                          if ((S = n - 192 | 0) >>> 0 <= 413) {
                                                            S = G[344 + (G[S + 94240 | 0] + I | 0) | 0] & 1 << c;
                                                            break Y;
                                                          }
                                                          if (n >>> 0 > 255) break w;
                                                        }
                                                        S = G[344 + (I + n | 0) | 0] & 1 << c;
                                                      }
                                                      if (!S) break w;
                                                      Y = 1 + (Y - y | 0) | 0, n = ((0 | c) == 2 ? 19 : 20) - wA | 0;
                                                      break j;
                                                    case 8:
                                                      if (Q = _ + 2 | 0, y = M[_ + 1 | 0], !(y = A[4788 + ((((0 | y) < 65 ? 191 : -65) + y << 2) + I | 0) >> 2])) break w;
                                                      Y: {
                                                        for (; ; ) {
                                                          if ((0 | (v = G[0 | y])) == 7) break w;
                                                          if ((0 | v) == 126) {
                                                            AA = 0;
                                                            break Y;
                                                          }
                                                          S = Y;
                                                          d: {
                                                            q: {
                                                              if ((0 | (_ = (AA = SA(y)) - 1 | 0)) > 0) for (S = c - AA | 0, n = 0, V = Y; ; ) {
                                                                if (!G[0 | (V = V - 1 | 0)]) break q;
                                                                if ((0 | _) == (0 | (n = n + 1 | 0))) break;
                                                              }
                                                              IA: if (!((0 | (n = G[0 | S])) != (0 | v) | !n)) for (; ; ) {
                                                                if ((0 | (v = G[0 | (y = y + 1 | 0)])) != (0 | (n = G[0 | (S = S + 1 | 0)]))) break IA;
                                                                if (!n) break;
                                                              }
                                                              if (!v) break d;
                                                            }
                                                            for (S = y; n = G[0 | S], S = y = S + 1 | 0, n; ) ;
                                                            continue;
                                                          }
                                                          break;
                                                        }
                                                        if ((0 | AA) < 0) break w;
                                                      }
                                                      n = 20 - BA | 0, Y = 1 + (Y - AA | 0) | 0;
                                                      break j;
                                                    case 15:
                                                      S = A[J + 268 >> 2];
                                                      Y: {
                                                        d: if (c = A[I + 604 >> 2]) c = !!(0 | eA(c, S));
                                                        else {
                                                          q: {
                                                            if ((0 | (c = A[I + 600 >> 2])) > 0) {
                                                              if ((S = S - c | 0) - 1 >>> 0 < 255) break q;
                                                              break Y;
                                                            }
                                                            if ((c = S - 192 | 0) >>> 0 <= 413) {
                                                              c = 1 & M[344 + (G[c + 94240 | 0] + I | 0) | 0];
                                                              break d;
                                                            }
                                                            if (S >>> 0 > 255) break Y;
                                                          }
                                                          c = 1 & M[344 + (I + S | 0) | 0];
                                                        }
                                                        if (c) break w;
                                                      }
                                                      n = 20 - wA | 0, Y = 1 + (Y - y | 0) | 0;
                                                      break j;
                                                    case 1:
                                                      if (A[J + 268 >> 2] != A[J + 264 >> 2]) break w;
                                                      n = 21 - wA | 0, Y = 1 + (Y - y | 0) | 0;
                                                      break j;
                                                    case 5:
                                                      if (!((c = A[J + 268 >> 2]) - 48 >>> 0 < 10 | c - 2406 >>> 0 < 10)) break w;
                                                      n = 21 - wA | 0, Y = 1 + (Y - y | 0) | 0;
                                                      break j;
                                                    case 6:
                                                      if (FU(A[J + 268 >> 2])) break w;
                                                      n = 21 - BA | 0, Y = 1 + (Y - y | 0) | 0;
                                                      break j;
                                                    case 18:
                                                      if (Q = _ + 2 | 0, !((0 | (S = G[_ + 1 | 0])) == 3 | (240 & S) == 32) || (bA(y = J + 96 | 0, kI, Y = 1 + (A[C >> 2] + (kA + ZI | 0) | 0) | 0), M[0 | (y = y + Y | 0)] = 32, M[y + 1 | 0] = 0, A[33265] = 0, A[33266] = 0, A[J + 16 >> 2] = VI, XI(I, J + 16 | 0, J + 272 | 0, 133060, 0, 0), n = 23, !((0 | S) != 3 | (0 | (V = A[33265])) >= 0 | 16384 & A[33266]))) break E;
                                                      if (y = O, Y = c, V >>> (15 & S) & 16384) break s;
                                                      break w;
                                                    case 11:
                                                      if (S = 1, G[0 | Q] == 21) for (; S = S + 1 | 0, G[0 | (Q = Q + 1 | 0)] == 21; ) ;
                                                      if (A[I + 8208 >> 2] < (0 | S)) break w;
                                                      n = 18 + (S - wA | 0) | 0;
                                                      break j;
                                                    case 0:
                                                      if (n = 19, y = O, Y = c, A[I + 8212 >> 2] > 0) break s;
                                                      break w;
                                                    case 19:
                                                      if (n = 3, (0 | (V = A[J + 268 >> 2])) == 32) break j;
                                                      for (S = 1 + (Y - y | 0) | 0; ; ) {
                                                        Y: {
                                                          d: if (y = A[I + 632 >> 2]) y = !!(0 | eA(y, V));
                                                          else {
                                                            q: {
                                                              if ((0 | (y = A[I + 600 >> 2])) > 0) {
                                                                if ((V = V - y | 0) - 1 >>> 0 < 255) break q;
                                                                break Y;
                                                              }
                                                              if ((y = V - 192 | 0) >>> 0 <= 413) {
                                                                y = 128 & G[344 + (G[y + 94240 | 0] + I | 0) | 0];
                                                                break d;
                                                              }
                                                              if (V >>> 0 > 255) break Y;
                                                            }
                                                            y = 128 & G[344 + (I + V | 0) | 0];
                                                          }
                                                          if (y) break w;
                                                        }
                                                        if (S = S - qQ(J + 268 | 0, S - 1 | 0) | 0, (0 | (V = A[J + 268 >> 2])) == 32) break;
                                                      }
                                                      break j;
                                                    case 16:
                                                      if (n = 1, y = O, Y = c, A[I + 8184 >> 2]) break s;
                                                      break w;
                                                    case 9:
                                                      if (n = 1, y = O, Y = c, hQ) break s;
                                                      break w;
                                                    case 36:
                                                      for (; ; ) {
                                                        if (n = 50, y = O, !(c = (255 & v) - 32 | 0)) break w;
                                                        if ((0 | c) == 14) break s;
                                                        v = G[0 | (CA = CA - 1 | 0)];
                                                      }
                                                    case 35:
                                                      break c;
                                                    default:
                                                      break k;
                                                  }
                                                  c: {
                                                    if (y = v - 32 | 0) {
                                                      if ((0 | y) == 13) break c;
                                                      break w;
                                                    }
                                                    if (!LQ) break w;
                                                  }
                                                  n = 22 - BA | 0;
                                                  break j;
                                                }
                                                r: {
                                                  for (; ; ) {
                                                    AA = -1, V = c, c = c - 1 | 0;
                                                    c: if ((0 | nA) == 18 && (y = M[_ + 2 | 0], n = A[4788 + ((((0 | y) < 65 ? 191 : -65) + y << 2) + I | 0) >> 2])) for (iE = V + 1 | 0; ; ) {
                                                      if ((0 | (CA = G[0 | n])) == 7) {
                                                        AA = -1;
                                                        break c;
                                                      }
                                                      if ((0 | CA) == 126) {
                                                        AA = 0;
                                                        break c;
                                                      }
                                                      S = V;
                                                      Y: {
                                                        if ((0 | (vI = (AA = SA(n)) - 1 | 0)) > 0) for (S = iE - AA | 0, v = 0, y = V; ; ) {
                                                          if (!G[0 | (y = y - 1 | 0)]) break Y;
                                                          if ((0 | vI) == (0 | (v = v + 1 | 0))) break;
                                                        }
                                                        d: if (!((0 | (y = G[0 | S])) != (0 | CA) | !y)) for (; ; ) {
                                                          if ((0 | (CA = G[0 | (n = n + 1 | 0)])) != (0 | (y = G[0 | (S = S + 1 | 0)]))) break d;
                                                          if (!y) break;
                                                        }
                                                        if (!CA) break c;
                                                      }
                                                      for (S = n; y = G[0 | S], S = n = S + 1 | 0, y; ) ;
                                                    }
                                                    if (y = (0 | (S = G[0 | c])) == (0 | nA), (0 | S) == 32 | (0 | S) == (0 | nA)) break r;
                                                    if (!S) {
                                                      c = V;
                                                      break P;
                                                    }
                                                    if ((0 | AA) != -1) break;
                                                  }
                                                  c = V;
                                                  break P;
                                                }
                                                c = V;
                                              }
                                              Y = y ? c : Y;
                                            }
                                            n = 0, Y = (0 | AA) < 0 ? Y : c + 1 | 0;
                                            break j;
                                          }
                                          if ((0 | S) != (0 | v)) break w;
                                          n = 4, (0 | S) != 32 && (n = (192 & S) != 128 ? 21 - wA | 0 : 0);
                                        }
                                        y = O;
                                        break s;
                                      }
                                      if ((0 | S) != (0 | v)) break w;
                                      V = (192 & S) != 128 ? 21 - BA | 0 : 0;
                                      break F;
                                    }
                                    if (n = 1, KC) break w;
                                  }
                                  EA = n + EA | 0;
                                  continue;
                                }
                                if (y = M[_ + 1 | 0], O = G[_ + 3 | 0], Y = G[_ + 2 | 0], 1 & !(A[I + 8208 >> 2] | 4 & Y) & M[I + 84 | 0]) break w;
                                Q = _ + 4 | 0, V = 0, O = 127 & O | (127 & Y) << 8 | y << 16;
                                break F;
                              }
                              N: if (!(CA >>> 0 <= (S = A[C >> 2] + g | 0) >>> 0)) {
                                for (; ; ) {
                                  if (G[0 | S] != 101) {
                                    if (y = S >>> 0 < x >>> 0, S = S + 1 | 0, y) continue;
                                    break N;
                                  }
                                  break;
                                }
                                V = 0, NA = S;
                                break F;
                              }
                              V = 0;
                              break F;
                            }
                            n = -20;
                            break E;
                          }
                          if (v = 0, (0 | (S = A[J + 268 >> 2])) != 32) for (V = x + AA | 0, n = 0; ; ) {
                            if (!n) {
                              U: {
                                i: if (Y = A[I + 632 >> 2]) S = !!(0 | eA(Y, S));
                                else {
                                  N: {
                                    if ((0 | (Y = A[I + 600 >> 2])) > 0) {
                                      if ((S = S - Y | 0) - 1 >>> 0 < 255) break N;
                                      break U;
                                    }
                                    if ((Y = S - 192 | 0) >>> 0 <= 413) {
                                      S = 128 & G[344 + (G[Y + 94240 | 0] + I | 0) | 0];
                                      break i;
                                    }
                                    if (S >>> 0 > 255) break U;
                                  }
                                  S = 128 & G[344 + (I + S | 0) | 0];
                                }
                                S && (v = v + 1 | 0);
                              }
                              S = A[J + 268 >> 2];
                            }
                            U: if (Y = A[I + 632 >> 2]) n = !!(0 | eA(Y, S));
                            else {
                              i: {
                                if ((0 | (Y = A[I + 600 >> 2])) > 0) {
                                  if (n = 0, (S = S - Y | 0) - 1 >>> 0 < 255) break i;
                                  break U;
                                }
                                if ((Y = S - 192 | 0) >>> 0 <= 413) {
                                  n = 128 & G[344 + (G[Y + 94240 | 0] + I | 0) | 0];
                                  break U;
                                }
                                if (n = 0, S >>> 0 > 255) break U;
                              }
                              n = 128 & G[344 + (I + S | 0) | 0];
                            }
                            if (V = mA(J + 268 | 0, V) + V | 0, (0 | (S = A[J + 268 >> 2])) == 32) break;
                          }
                          if (!((0 | y) > (0 | v))) {
                            V = 18 + (y - BA | 0) | 0;
                            break F;
                          }
                        }
                        for (; y = G[0 | Q], Q = E = Q + 1 | 0, y; ) ;
                        if (G[0 | E] != 7) continue B;
                        if (I = g + JE | 0, A[C >> 2] = A[C >> 2] + (I || 1), oI) break I;
                        break Q;
                      }
                      y = O, x = CA, Y = c, EA = V + EA | 0;
                      continue;
                    }
                    x = x + AA | 0, n = 21 - BA | 0;
                    break E;
                  }
                  x = x + AA | 0, n = 20 - BA | 0;
                }
                y = O, Y = c, EA = n + EA | 0;
              }
            }
            gI = 86135;
          }
          A[U + 12 >> 2] = GE, A[U + 8 >> 2] = jB, A[U + 4 >> 2] = gI, A[U >> 2] = oI;
        }
        t = J + 384 | 0;
      }
      function $C(I, C) {
        var Q, g = 0, E = 0, U = 0, w = 0, D = 0, J = 0, o = 0, y = 0, S = 0, Y = 0, c = 0, n = 0, V = 0, x = 0, O = 0, v = 0, _ = 0, AA = 0, CA = 0, BA = 0, EA = 0, wA = 0, yA = 0, NA = 0, kA = 0, nA = 0, WA = 0, gI = 0, FI = 0, oI = 0;
        t = Q = t - 1168 | 0, A[Q + 928 >> 2] = 0, A[Q + 932 >> 2] = 0, A[Q + 920 >> 2] = 0, A[Q + 924 >> 2] = 0, A[Q + 912 >> 2] = 0, A[Q + 916 >> 2] = 0, A[Q + 904 >> 2] = 0, A[Q + 908 >> 2] = 0, A[Q + 896 >> 2] = 0, A[Q + 900 >> 2] = 0;
        A: {
          I: {
            if (I) {
              if (G[0 | I] | 8 & C) break I;
              break A;
            }
            if (!(8 & C)) break A;
          }
          if (sI(Q + 1088 | 0, I, 40), 16 & C) {
            if ((0 | rC(YA(Q + 704 | 0, I))) <= 0) break A;
            V = 8 & C;
          } else (V = 8 & C) | G[Q + 1088 | 0] || (L[Q + 1088 >> 1] = G[85055] | G[85056] << 8, M[Q + 1090 | 0] = G[85057]), A[Q + 496 >> 2] = 137584, A[Q + 500 >> 2] = 47, A[Q + 504 >> 2] = 47, iA(g = Q + 512 | 0, 85286, Q + 496 | 0), A[Q + 484 >> 2] = Q + 1088, A[Q + 480 >> 2] = g, iA(g = Q + 704 | 0, 85425, Q + 480 | 0), (0 | rC(g)) > 0 || (A[Q + 468 >> 2] = 47, A[Q + 472 >> 2] = 47, A[Q + 464 >> 2] = 137584, iA(g = Q + 512 | 0, 85648, Q + 464 | 0), A[Q + 452 >> 2] = Q + 1088, A[Q + 448 >> 2] = g, iA(Q + 704 | 0, 85425, Q + 448 | 0));
          if (E = V ? 86012 : 85055, !(x = yQ(Q + 704 | 0, 85712))) {
            if (g = 0, 3 & C) break A;
            E = (0 | jg(g = Q + 1088 | 0)) < 0 ? E : g;
          }
          if ((n = 2 & C) || (g = A[47192]) && (gD(g), A[47192] = 0), _ = YA(Q + 992 | 0, E), v = YA(Q + 944 | 0, E), n ? ((g = QQ(200992, 43)) && (M[0 | g] = 0), A[Q + 432 >> 2] = I + 3, iA(I = Q + 704 | 0, 86030, Q + 432 | 0), UC(200992, I)) : (A[32972] = 199592, sI(200992, I, 40), M[201088] = 0, M[201040] = 0, A[50299] = 200992, A[50298] = 201088, A[50297] = 201040), fB(n), x) {
            for (CA = A[30450], BA = Q + 548 | 0, EA = Q + 544 | 0, wA = Q + 540 | 0, yA = Q + 536 | 0, NA = Q + 532 | 0, kA = Q + 528 | 0, nA = 12 | (I = Q + 512 | 0), WA = 8 | I, gI = 4 | I; CB(Q + 704 | 0, 190, x); ) {
              I = Q + 704 | 0;
              I: {
                if (G[Q + 704 | 0] != 35) {
                  Q: if (!((0 | (I = SA(Q + 704 | 0) - 1 | 0)) <= 0)) for (; ; ) {
                    if (!((0 | (E = M[0 | (g = (Q + 704 | 0) + I | 0)])) == 32 | E - 9 >>> 0 < 5)) break Q;
                    if (M[0 | g] = 0, !((0 | (I = I - 1 | 0)) > 0)) break;
                  }
                  if (!(I = PB(Q + 704 | 0))) break I;
                }
                M[0 | I] = 0;
              }
              I = Q + 704 | 0;
              I: if (g = G[Q + 704 | 0]) for (; ; ) {
                if ((0 | (g = g << 24 >> 24)) == 32 | g - 9 >>> 0 < 5) break I;
                if (!(g = G[0 | (I = I + 1 | 0)])) break;
              }
              if (M[0 | I] = 0, G[Q + 704 | 0]) if (I = I + 1 | 0, g = OA(129744, Q + 704 | 0)) {
                U = 0, t = E = t - 416 | 0;
                I: if (w = A[47192]) {
                  Q: switch (g - 19 | 0) {
                    case 16:
                      if (A[E + 32 >> 2] = E + 412, (0 | QI(I, 84249, E + 32 | 0)) != 1) break I;
                      A[w + 324 >> 2] = A[E + 412 >> 2];
                      break I;
                    case 8:
                      _B(I, w + 320 | 0, 27);
                      break I;
                    case 2:
                      if (A[E + 48 >> 2] = 188784, QI(I, 84249, E + 48 | 0), !(I = G[188784])) break I;
                      A[w + 152 >> 2] = I;
                      break I;
                    case 11:
                      if (G[0 | I]) {
                        for (D = A[30450]; ; ) if (g = I, I = I + 1 | 0, !((0 | (U = M[0 | g])) == 32 | U - 9 >>> 0 < 5)) {
                          for (U = VQ(g), A[E + 412 >> 2] = U, (0 | U) > 0 && (U >>> 0 <= 31 ? A[w + 104 >> 2] = A[w + 104 >> 2] | 1 << U : U >>> 0 <= 63 ? A[w + 108 >> 2] = A[w + 108 >> 2] | 1 << U - 32 : (A[E + 64 >> 2] = U, lI(D, 84700, E - -64 | 0)), g = I); g = (I = g) + 1 | 0, (U = M[0 | I]) - 48 >>> 0 < 10 | (32 | U) - 97 >>> 0 < 26; ) ;
                          if (!U) break;
                        }
                      }
                      8 & (I = A[w + 104 >> 2]) && (A[w + 124 >> 2] = 46, A[w + 128 >> 2] = 44), 4 & I && (A[w + 124 >> 2] = 0);
                      break I;
                    default:
                      if ((65280 & g) != 256) break I;
                      A[E + 16 >> 2] = 24 + (w + ((255 & g) << 2) | 0), QI(I, 84249, E + 16 | 0);
                      break I;
                    case 1:
                      A[E + 144 >> 2] = w, A[E + 148 >> 2] = w + 4, QI(I, 85642, E + 144 | 0);
                      break I;
                    case 3:
                      if (g = 0, pA(U = E + 160 | 0, 0, 240), A[E + 132 >> 2] = E + 360, A[E + 128 >> 2] = E + 320, A[E + 124 >> 2] = E + 280, A[E + 120 >> 2] = E + 240, A[E + 116 >> 2] = E + 200, A[E + 112 >> 2] = U, U = QI(I, 85037, E + 112 | 0), A[E + 412 >> 2] = U, A[w + 152 >> 2] = 0, (0 | U) <= 0) break I;
                      for (y = A[30450]; ; ) {
                        B: if (aI(D = (E + 160 | 0) + T(g, 40) | 0, 85301)) {
                          E: {
                            if ((0 | (o = A[34454])) > 0) for (c = A[34455], I = 0; ; ) {
                              if (!aI(D, c + T(I, 68) | 0)) break E;
                              if ((0 | o) == (0 | (I = I + 1 | 0))) break;
                            }
                            A[E + 96 >> 2] = D, lI(y, 85562, E + 96 | 0), U = A[E + 412 >> 2];
                            break B;
                          }
                          M[156 + (g + w | 0) | 0] = I;
                        }
                        if (!((0 | U) > (0 | (g = g + 1 | 0)))) break;
                      }
                      break I;
                    case 9:
                      A[E + 88 >> 2] = w + 20, A[E + 84 >> 2] = w + 16, A[E + 80 >> 2] = w + 8, QI(I, 84778, E + 80 | 0);
                      break I;
                    case 10:
                      _B(I, w + 12 | 0, 29);
                      break I;
                    case 5:
                      if ((0 | (y = IE(I, E + 160 | 0))) <= 0) break I;
                      if (g = 0, I = 0, y >>> 0 >= 4) for (c = -4 & y, D = w + 304 | 0; o = E + 160 | 0, L[D + (I << 1) >> 1] = A[o + (I << 2) >> 2], L[D + ((J = 1 | I) << 1) >> 1] = A[o + (J << 2) >> 2], L[D + ((J = 2 | I) << 1) >> 1] = A[o + (J << 2) >> 2], L[D + ((J = 3 | I) << 1) >> 1] = A[o + (J << 2) >> 2], I = I + 4 | 0, (0 | c) != (0 | (U = U + 4 | 0)); ) ;
                      if (!(U = 3 & y)) break I;
                      for (; L[304 + (w + (I << 1) | 0) >> 1] = A[(E + 160 | 0) + (I << 2) >> 2], I = I + 1 | 0, (0 | U) != (0 | (g = g + 1 | 0)); ) ;
                      break I;
                    case 6:
                      if ((0 | (y = IE(I, E + 160 | 0))) <= 0) break I;
                      if (g = 0, I = 0, y >>> 0 >= 4) for (c = -4 & y, D = w + 296 | 0; o = E + 160 | 0, M[I + D | 0] = A[o + (I << 2) >> 2], M[(J = 1 | I) + D | 0] = A[o + (J << 2) >> 2], M[(J = 2 | I) + D | 0] = A[o + (J << 2) >> 2], M[(J = 3 | I) + D | 0] = A[o + (J << 2) >> 2], I = I + 4 | 0, (0 | c) != (0 | (U = U + 4 | 0)); ) ;
                      if (!(U = 3 & y)) break I;
                      for (; M[296 + (I + w | 0) | 0] = A[(E + 160 | 0) + (I << 2) >> 2], I = I + 1 | 0, (0 | U) != (0 | (g = g + 1 | 0)); ) ;
                      break I;
                    case 7:
                      if ((0 | (y = IE(I, E + 160 | 0))) <= 0) break I;
                      if (g = 0, I = 0, y >>> 0 >= 4) for (c = -4 & y, D = w + 304 | 0; J = o = D + (I << 1) | 0, S = a[o >> 1], o = E + 160 | 0, L[J >> 1] = S + a[o + (I << 2) >> 1], L[(S = D + ((J = 1 | I) << 1) | 0) >> 1] = a[S >> 1] + a[o + (J << 2) >> 1], L[(S = D + ((J = 2 | I) << 1) | 0) >> 1] = a[S >> 1] + a[o + (J << 2) >> 1], L[(S = D + ((J = 3 | I) << 1) | 0) >> 1] = a[S >> 1] + a[o + (J << 2) >> 1], I = I + 4 | 0, (0 | c) != (0 | (U = U + 4 | 0)); ) ;
                      if (!(U = 3 & y)) break I;
                      for (; L[(D = w + (I << 1) | 0) + 304 >> 1] = a[D + 304 >> 1] + a[(E + 160 | 0) + (I << 2) >> 1], I = I + 1 | 0, (0 | U) != (0 | (g = g + 1 | 0)); ) ;
                      break I;
                    case 4:
                      M[w + 169 | 0] = 1;
                      break I;
                    case 0:
                      break Q;
                  }
                  M[w + 208 | 0] = 1;
                } else A[E >> 2] = Qg(129568, g), lI(A[30450], 89101, E);
                t = E + 416 | 0;
              } else {
                I: switch (OA(131904, Q + 704 | 0) - 1 | 0) {
                  case 1:
                    if (n || (M[Q + 1040 | 0] = 0, A[Q + 512 >> 2] = 5, A[Q + 32 >> 2] = Q + 1040, A[Q + 36 >> 2] = Q + 512, QI(I, 86237, Q + 32 | 0), A[Q + 1040 >> 2] == 1769103734 & A[Q + 1044 >> 2] == 7630433)) continue;
                    if ((I = SA(Q + 1040 | 0) + 2 | 0) >>> 0 < 99 - O >>> 0 && (M[0 | (g = O + 201088 | 0)] = A[Q + 512 >> 2], YA(g + 1 | 0, Q + 1040 | 0), O = I + O | 0), !FI) {
                      if (I = 0, (g = D = Q + 1040 | 0) || (g = A[57150])) {
                        if (I = 86875, A[(E = t - 32 | 0) + 24 >> 2] = 0, A[E + 28 >> 2] = 0, A[E + 16 >> 2] = 0, A[E + 20 >> 2] = 0, A[E + 8 >> 2] = 0, A[E + 12 >> 2] = 0, A[E >> 2] = 0, A[E + 4 >> 2] = 0, w = 0, U = G[86875]) if (G[86876]) {
                          for (; A[(w = E + (U >>> 3 & 28) | 0) >> 2] = A[w >> 2] | 1 << U, U = G[I + 1 | 0], I = I + 1 | 0, U; ) ;
                          Q: if (U = G[0 | (I = g)]) for (; ; ) {
                            if (!(A[E + (U >>> 3 & 28) >> 2] >>> U & 1)) break Q;
                            if (U = G[I + 1 | 0], I = I + 1 | 0, !U) break;
                          }
                          w = I - g | 0;
                        } else {
                          for (I = g; E = I, I = I + 1 | 0, G[0 | E] == (0 | U); ) ;
                          w = E - g | 0;
                        }
                        if (G[0 | (I = w + g | 0)]) {
                          g = 86875, t = U = t - 32 | 0, E = M[86875];
                          Q: if (G[86876] && E) {
                            if (pA(U, 0, 32), E = G[86875]) for (; A[(w = U + (E >>> 3 & 28) | 0) >> 2] = A[w >> 2] | 1 << E, E = G[g + 1 | 0], g = g + 1 | 0, E; ) ;
                            if (g = I, E = G[0 | I]) for (; ; ) {
                              if (A[U + (E >>> 3 & 28) >> 2] >>> E & 1) break Q;
                              if (E = G[g + 1 | 0], g = g + 1 | 0, !E) break;
                            }
                          } else g = BB(I, E);
                          t = U + 32 | 0, G[0 | (g = (g - I | 0) + I | 0)] ? (A[57150] = g + 1, M[0 | g] = 0) : A[57150] = 0;
                        } else A[57150] = 0, I = 0;
                      }
                      g = YA(_, I), YA(v, I), jg(YA(Q + 896 | 0, I)), A[47192] = Wg(g), sI(A[32972] + 40 | 0, D, 20);
                    }
                    FI = 1;
                    continue;
                  case 0:
                    if (n) continue;
                    for (; g = I, I = I + 1 | 0, (0 | (E = M[0 | g])) == 32 | E - 9 >>> 0 < 5; ) ;
                    sI(201040, g, 40);
                    continue;
                  case 2:
                    A[Q + 1152 >> 2] = 0, g = Q + 512 | 0, A[Q + 48 >> 2] = g, A[Q + 52 >> 2] = Q + 1152, QI(I, 86237, Q + 48 | 0), M[201200] = OA(132112, g), M[201201] = A[Q + 1152 >> 2];
                    continue;
                  case 4:
                    A[Q + 64 >> 2] = v, QI(I, 86939, Q - -64 | 0);
                    continue;
                  case 3:
                    A[Q + 80 >> 2] = Q + 896, QI(I, 86939, Q + 80 | 0);
                    continue;
                  case 8:
                    if (A[Q + 1152 >> 2] = 100, A[Q + 1164 >> 2] = 100, A[Q + 1148 >> 2] = 100, A[Q + 112 >> 2] = Q + 1144, A[Q + 1144 >> 2] = 0, A[Q + 96 >> 2] = Q + 512, A[Q + 100 >> 2] = Q + 1152, A[Q + 104 >> 2] = Q + 1164, A[Q + 108 >> 2] = Q + 1148, (0 | QI(I, 91156, Q + 96 | 0)) < 2 || (I = A[Q + 512 >> 2]) >>> 0 > 8 || ((0 | (g = A[Q + 1152 >> 2])) >= 0 && (E = A[32972] + (I << 1) | 0, g = GA(Y = 2.56001 * +(0 | g)) < 2147483648 ? ~~Y : -2147483648, L[E + 236 >> 1] = g, L[E + 164 >> 1] = g), (0 | (g = A[Q + 1164 >> 2])) >= 0 && (E = A[32972] + (I << 1) | 0, g = GA(Y = 2.56001 * +(0 | g)) < 2147483648 ? ~~Y : -2147483648, L[E + 254 >> 1] = g, L[E + 182 >> 1] = g), (0 | (E = A[Q + 1148 >> 2])) < 0 ? g = A[32972] : (D = (g = A[32972]) + (I << 1) | 0, E = GA(Y = 2.56001 * +(0 | E)) < 2147483648 ? ~~Y : -2147483648, L[D + 200 >> 1] = E), L[218 + ((I << 1) + g | 0) >> 1] = A[Q + 1144 >> 2], I)) continue;
                    L[g + 200 >> 1] = (0 | T(L[g + 200 >> 1], 105)) / 100;
                    continue;
                  case 9:
                    if (A[Q + 132 >> 2] = Q + 696, A[Q + 128 >> 2] = Q + 700, (0 | QI(I, 87106, Q + 128 | 0)) != 2) continue;
                    if (I = A[32972], g = A[Q + 700 >> 2], A[I + 64 >> 2] = (g << 12) - 36864, A[I + 68 >> 2] = T(A[Q + 696 >> 2] - g | 0, 108), GA(Y = 256 * (+(g - 82 | 0) / 82 * 0.25 + 1)) < 2147483648) {
                      A[I + 116 >> 2] = ~~Y;
                      continue;
                    }
                    A[I + 116 >> 2] = -2147483648;
                    continue;
                  case 35:
                    oI || jg(Q + 896 | 0), A[Q + 1164 >> 2] = 0, M[Q + 1156 | 0] = G[91267], A[Q + 1152 >> 2] = G[91263] | G[91264] << 8 | G[91265] << 16 | G[91266] << 24, A[Q + 144 >> 2] = Q + 1164, A[Q + 148 >> 2] = Q + 512, A[Q + 152 >> 2] = Q + 1152, (0 | QI(I, 91302, Q + 144 | 0)) < 2 | A[49848] > 59 || (I = UU(Q + 512 | 0)) && (M[T(A[49848], 3) + 199408 | 0] = I, I = UU(Q + 1152 | 0), g = A[49848], E = T(g, 3) + 199408 | 0, M[E + 1 | 0] = I, A[49848] = g + 1, M[E + 2 | 0] = A[Q + 1164 >> 2]), oI = 1;
                    continue;
                  case 10:
                    A[Q + 1140 >> 2] = 0, g = A[32972], A[g + 100 >> 2] = 0, A[Q + 164 >> 2] = g + 100, A[Q + 160 >> 2] = g + 96, QI(I, 87106, Q + 160 | 0);
                    continue;
                  case 11:
                    if (A[Q + 176 >> 2] = Q + 1140, (0 | QI(I, 87268, Q + 176 | 0)) != 1) continue;
                    A[A[32972] + 88 >> 2] = A[Q + 1140 >> 2] << 5;
                    continue;
                  case 12:
                    if (A[Q + 192 >> 2] = Q + 1140, (0 | QI(I, 87268, Q + 192 | 0)) != 1) continue;
                    A[A[32972] + 92 >> 2] = A[Q + 1140 >> 2];
                    continue;
                  case 13:
                    if (A[Q + 208 >> 2] = Q + 1140, (0 | QI(I, 87268, Q + 208 | 0)) != 1) continue;
                    g = A[32972], (0 | (I = A[Q + 1140 >> 2])) >= 5 && (A[g + 108 >> 2] = 1, A[Q + 1140 >> 2] = 4, I = 4), A[g + 104 >> 2] = I + 1;
                    continue;
                  case 14:
                    for (A[Q + 552 >> 2] = -1, A[Q + 556 >> 2] = -1, A[Q + 544 >> 2] = -1, A[Q + 548 >> 2] = -1, A[Q + 536 >> 2] = -1, A[Q + 540 >> 2] = -1, A[Q + 528 >> 2] = -1, A[Q + 532 >> 2] = -1, A[Q + 240 >> 2] = kA, A[Q + 244 >> 2] = NA, A[Q + 248 >> 2] = yA, A[Q + 252 >> 2] = wA, A[Q + 256 >> 2] = EA, A[Q + 260 >> 2] = BA, A[Q + 520 >> 2] = -1, A[Q + 524 >> 2] = -1, A[Q + 512 >> 2] = -1, A[Q + 516 >> 2] = -1, A[Q + 228 >> 2] = gI, A[Q + 232 >> 2] = WA, A[Q + 236 >> 2] = nA, A[Q + 224 >> 2] = Q + 512, QI(I, 84222, Q + 224 | 0), c = A[32972], I = 0, U = A[Q + 516 >> 2], E = 0; ; ) {
                      if (g = E, w = U, D = I, (0 | (E = A[(U = (I <<= 2) + (Q + 512 | 0) | 0) >> 2])) == -1 && (E = 8e3, A[U >> 2] = 8e3, D && (A[(Q + 512 | 0) + (4 | I) >> 2] = A[508 + (I + Q | 0) >> 2])), U = A[(Q + 512 | 0) + (4 | I) >> 2], !((0 | g) >= (0 | (E = (0 | E) / 8 | 0)) || (0 | (o = E - g | 0)) <= 0 || (y = g + 1 | 0, I = g, 1 & o && (M[344 + (g + c | 0) | 0] = (0 | w) >= 255 ? 255 : w, I = y), (0 | E) == (0 | y)))) for (y = U - w | 0; S = c + 344 | 0, J = w + ((0 | T(y, I - g | 0)) / (0 | o) | 0) | 0, M[S + I | 0] = (0 | J) >= 255 ? 255 : J, J = w + ((0 | T(y, (AA = I + 1 | 0) - g | 0)) / (0 | o) | 0) | 0, M[S + AA | 0] = (0 | J) >= 255 ? 255 : J, (0 | E) != (0 | (I = I + 2 | 0)); ) ;
                      if (I = D + 2 | 0, !(D >>> 0 < 10)) break;
                    }
                    continue;
                  case 15:
                    if (A[Q + 272 >> 2] = Q + 1140, (0 | QI(I, 87268, Q + 272 | 0)) != 1) continue;
                    A[A[32972] + 112 >> 2] = (A[Q + 1140 >> 2] << 6) / 100;
                    continue;
                  case 16:
                    g = A[32972], A[(E = g + 300 | 0) >> 2] = 0, A[E + 4 >> 2] = 0, A[(U = g + 292 | 0) >> 2] = 0, A[U + 4 >> 2] = 0, A[(w = g + 284 | 0) >> 2] = 0, A[w + 4 >> 2] = 0, A[(D = g + 276 | 0) >> 2] = 0, A[D + 4 >> 2] = 0, A[Q + 316 >> 2] = g + 304, A[Q + 312 >> 2] = E, A[Q + 308 >> 2] = g + 296, A[Q + 304 >> 2] = U, A[Q + 300 >> 2] = g + 288, A[Q + 296 >> 2] = w, A[Q + 292 >> 2] = g + 280, A[Q + 288 >> 2] = D, g = QI(I, 84553, Q + 288 | 0), I = A[32972], A[I + 272 >> 2] = g, A[I + 276 >> 2] = 0 - A[I + 276 >> 2], A[I + 284 >> 2] = 0 - A[I + 284 >> 2], A[I + 292 >> 2] = 0 - A[I + 292 >> 2], A[I + 300 >> 2] = 0 - A[I + 300 >> 2];
                    continue;
                  case 17:
                    g = A[32972], A[(E = g + 336 | 0) >> 2] = 0, A[E + 4 >> 2] = 0, A[(U = g + 328 | 0) >> 2] = 0, A[U + 4 >> 2] = 0, A[(w = g + 320 | 0) >> 2] = 0, A[w + 4 >> 2] = 0, A[(D = g + 312 | 0) >> 2] = 0, A[D + 4 >> 2] = 0, A[Q + 348 >> 2] = g + 340, A[Q + 344 >> 2] = E, A[Q + 340 >> 2] = g + 332, A[Q + 336 >> 2] = U, A[Q + 332 >> 2] = g + 324, A[Q + 328 >> 2] = w, A[Q + 324 >> 2] = g + 316, A[Q + 320 >> 2] = D, I = QI(I, 84553, Q + 320 | 0), A[A[32972] + 308 >> 2] = I;
                    continue;
                  case 36:
                    g = A[32972], A[Q + 352 >> 2] = g + 120, A[Q + 356 >> 2] = g + 124, A[Q + 1140 >> 2] = QI(I, 87106, Q + 352 | 0);
                    continue;
                  case 33:
                    A[Q + 368 >> 2] = A[32972] + 84, QI(I, 87268, Q + 368 | 0), zQ(3);
                    continue;
                  case 31:
                    g = A[32972], A[(E = g + 156 | 0) >> 2] = 0, A[E + 4 >> 2] = 0, A[(U = g + 148 | 0) >> 2] = 0, A[U + 4 >> 2] = 0, A[(w = g + 140 | 0) >> 2] = 0, A[w + 4 >> 2] = 0, A[(D = g + 132 | 0) >> 2] = 0, A[D + 4 >> 2] = 0, A[Q + 412 >> 2] = g + 160, A[Q + 408 >> 2] = E, A[Q + 404 >> 2] = g + 152, A[Q + 400 >> 2] = U, A[Q + 396 >> 2] = g + 144, A[Q + 392 >> 2] = w, A[Q + 388 >> 2] = g + 136, A[Q + 384 >> 2] = D, QI(I, 84553, Q + 384 | 0), I = A[32972], A[I + 152 >> 2] = A[I + 152 >> 2] - 40;
                    continue;
                  case 32:
                    A[Q + 416 >> 2] = 145740, QI(I, 87268, Q + 416 | 0), zQ(3);
                    continue;
                  case 6:
                  case 7:
                    continue;
                  default:
                    break I;
                }
                A[Q + 16 >> 2] = Q + 704, lI(CA, 87359, Q + 16 | 0);
              }
            }
            mI(x);
          }
          I: {
            if ((I = A[47192]) | n) {
              if (n) break I;
            } else I = Wg(_), A[47192] = I;
            Q: {
              if (!V) {
                if ((0 | (I = jg(Q + 896 | 0))) < 0 && (A[Q >> 2] = Q + 896, lI(A[30450], 87567, Q), I = 0), A[A[32972] + 60 >> 2] = I, g = A[47192], A[g + 292 >> 2] = I, pB(g, v, 4 & C), G[132848]) break Q;
                gD(A[47192]), g = 0;
                break A;
              }
              A[A[32972] + 60 >> 2] = 0, A[I + 292 >> 2] = 0;
            }
            M[O + 201088 | 0] = 0;
          }
          g = A[32972];
        }
        return t = Q + 1168 | 0, g;
      }
      function QI(I, C, Q) {
        var g, E, U, w = 0, D = 0, J = 0, o = 0, y = 0, S = 0, Y = 0, c = 0, n = 0, V = 0, x = 0, O = 0, v = 0, _ = 0, AA = 0, CA = 0, BA = 0, EA = 0, wA = 0;
        t = U = t - 16 | 0, A[U + 12 >> 2] = Q, t = w = t - 144 | 0, g = pA(w, 0, 144), A[g + 76 >> 2] = -1, A[g + 44 >> 2] = I, A[g + 32 >> 2] = 18, A[g + 84 >> 2] = I, w = C, BA = Q, I = 0, t = E = t - 304 | 0;
        A: {
          I: {
            Q: if (A[g + 4 >> 2] || (hg(g), A[g + 4 >> 2])) {
              if (!(C = G[0 | w])) break A;
              B: {
                E: {
                  R: {
                    D: {
                      for (; ; ) {
                        F: {
                          w: if ((0 | (C &= 255)) == 32 | C - 9 >>> 0 < 5) {
                            for (; C = w, w = w + 1 | 0, (0 | (Q = G[C + 1 | 0])) == 32 | Q - 9 >>> 0 < 5; ) ;
                            for (HC(g, 0, 0); (0 | (Q = A[g + 4 >> 2])) == A[g + 104 >> 2] ? Q = CI(g) : (A[g + 4 >> 2] = Q + 1, Q = G[0 | Q]), (0 | Q) == 32 | Q - 9 >>> 0 < 5; ) ;
                            w = A[g + 4 >> 2], (0 | (Q = A[g + 116 >> 2])) > 0 | (0 | Q) >= 0 && (w = w - 1 | 0, A[g + 4 >> 2] = w), w = Q = w - A[g + 44 >> 2] | 0, y = O + A[g + 124 >> 2] | 0, y = (D = Q >> 31) + ((Q = n + A[g + 120 >> 2] | 0) >>> 0 < n >>> 0 ? y + 1 | 0 : y) | 0, O = (n = Q + w | 0) >>> 0 < Q >>> 0 ? y + 1 | 0 : y;
                          } else {
                            U: {
                              i: {
                                N: {
                                  if (G[0 | w] == 37) {
                                    if ((0 | (C = G[w + 1 | 0])) == 42) break N;
                                    if ((0 | C) != 37) break i;
                                  }
                                  if (HC(g, 0, 0), G[0 | w] != 37) (0 | (C = A[g + 4 >> 2])) == A[g + 104 >> 2] ? C = CI(g) : (A[g + 4 >> 2] = C + 1, C = G[0 | C]);
                                  else {
                                    for (; (0 | (C = A[g + 4 >> 2])) == A[g + 104 >> 2] ? C = CI(g) : (A[g + 4 >> 2] = C + 1, C = G[0 | C]), (0 | C) == 32 | C - 9 >>> 0 < 5; ) ;
                                    w = w + 1 | 0;
                                  }
                                  if (G[0 | w] != (0 | C)) {
                                    if ((0 | (Q = A[g + 116 >> 2])) > 0 | (0 | Q) >= 0 && (A[g + 4 >> 2] = A[g + 4 >> 2] - 1), (0 | C) >= 0 || (J = 0, EA)) break A;
                                    break Q;
                                  }
                                  o = (D = C = A[g + 4 >> 2] - A[g + 44 >> 2] | 0) >> 31, C = O + A[g + 124 >> 2] | 0, J = ((Q = n + A[g + 120 >> 2] | 0) >>> 0 < n >>> 0 ? C + 1 | 0 : C) + o | 0, O = (n = Q + D | 0) >>> 0 < Q >>> 0 ? J + 1 | 0 : J, C = w;
                                  break w;
                                }
                                S = 0, C = w + 2 | 0;
                                break U;
                              }
                              G[w + 2 | 0] != 36 | C - 48 >>> 0 >= 10 ? (S = A[BA >> 2], BA = BA + 4 | 0, C = w + 1 | 0) : (C = G[w + 1 | 0] - 48 | 0, A[(Q = t - 16 | 0) + 12 >> 2] = BA, C = (C >>> 0 > 1 ? (C << 2) - 4 | 0 : 0) + BA | 0, A[Q + 8 >> 2] = C + 4, S = A[C >> 2], C = w + 3 | 0);
                            }
                            if (Y = 0, w = 0, G[0 | C] - 48 >>> 0 < 10) for (; w = (G[0 | C] + T(w, 10) | 0) - 48 | 0, Q = G[C + 1 | 0], C = C + 1 | 0, Q - 48 >>> 0 < 10; ) ;
                            (0 | (V = G[0 | C])) == 109 && (c = 0, Y = !!(0 | S), V = G[C + 1 | 0], I = 0, C = C + 1 | 0), C = (Q = C) + 1 | 0, D = 3, J = Y;
                            U: {
                              i: switch (V - 65 | 0) {
                                case 39:
                                  D = Q + 2 | 0, C = (Q = G[Q + 1 | 0] == 104) ? D : C, D = Q ? -2 : -1;
                                  break U;
                                case 43:
                                  D = Q + 2 | 0, C = (Q = G[Q + 1 | 0] == 108) ? D : C, D = Q ? 3 : 1;
                                  break U;
                                case 51:
                                case 57:
                                  D = 1;
                                  break U;
                                case 11:
                                  D = 2;
                                  break U;
                                case 41:
                                  break U;
                                case 0:
                                case 2:
                                case 4:
                                case 5:
                                case 6:
                                case 18:
                                case 23:
                                case 26:
                                case 32:
                                case 34:
                                case 35:
                                case 36:
                                case 37:
                                case 38:
                                case 40:
                                case 45:
                                case 46:
                                case 47:
                                case 50:
                                case 52:
                                case 55:
                                  break i;
                                default:
                                  break B;
                              }
                              D = 0, C = Q;
                            }
                            J = D, AA = (D = (47 & (Q = G[0 | C])) == 3) ? 1 : J;
                            U: if ((0 | (_ = D ? 32 | Q : Q)) != 91) {
                              i: {
                                if ((0 | _) != 110) {
                                  if ((0 | _) != 99) break i;
                                  w = (0 | w) <= 1 ? 1 : w;
                                  break U;
                                }
                                GB(S, AA, n, O);
                                break w;
                              }
                              for (HC(g, 0, 0); (0 | (Q = A[g + 4 >> 2])) == A[g + 104 >> 2] ? Q = CI(g) : (A[g + 4 >> 2] = Q + 1, Q = G[0 | Q]), (0 | Q) == 32 | Q - 9 >>> 0 < 5; ) ;
                              Q = A[g + 4 >> 2], (0 | (D = A[g + 116 >> 2])) > 0 | (0 | D) >= 0 && (Q = Q - 1 | 0, A[g + 4 >> 2] = Q), D = Q = Q - A[g + 44 >> 2] | 0, y = O + A[g + 124 >> 2] | 0, O = (J = Q >> 31) + ((Q = n + A[g + 120 >> 2] | 0) >>> 0 < n >>> 0 ? y + 1 | 0 : y) | 0, O = (n = Q + D | 0) >>> 0 < Q >>> 0 ? O + 1 | 0 : O;
                            }
                            if (x = w, HC(g, w, v = w >> 31), (0 | (Q = A[g + 4 >> 2])) == A[g + 104 >> 2]) {
                              if ((0 | CI(g)) < 0) break E;
                            } else A[g + 4 >> 2] = Q + 1;
                            (0 | (Q = A[g + 116 >> 2])) > 0 | (0 | Q) >= 0 && (A[g + 4 >> 2] = A[g + 4 >> 2] - 1), Q = 16;
                            U: {
                              i: {
                                N: {
                                  o: {
                                    s: switch (_ - 88 | 0) {
                                      default:
                                        if ((Q = _ - 65 | 0) >>> 0 > 6 | !(1 << Q & 113)) break U;
                                      case 9:
                                      case 13:
                                      case 14:
                                      case 15:
                                        if (uC(E + 8 | 0, g, AA, 0), Q = A[g + 4 >> 2] - A[g + 44 >> 2] | 0, A[g + 120 >> 2] != (0 - Q | 0) | A[g + 124 >> 2] != (0 - ((Q >> 31) + !!(0 | Q) | 0) | 0)) break N;
                                        break R;
                                      case 3:
                                      case 11:
                                      case 27:
                                        if ((16 | _) == 115) {
                                          if (pA(E + 32 | 0, -1, 257), M[E + 32 | 0] = 0, (0 | _) != 115) break i;
                                          M[E + 65 | 0] = 0, M[E + 46 | 0] = 0, L[E + 42 >> 1] = 0, L[E + 44 >> 1] = 0;
                                          break i;
                                        }
                                        pA(E + 32 | 0, o = (0 | (D = G[C + 1 | 0])) == 94, 257), M[E + 32 | 0] = 0, Q = o ? C + 2 | 0 : C + 1 | 0;
                                        y: {
                                          l: {
                                            j: {
                                              if ((0 | (C = G[(o ? 2 : 1) + C | 0])) != 45) {
                                                if ((0 | C) == 93) break j;
                                                D = (0 | D) != 94, C = Q;
                                                break y;
                                              }
                                              D = (0 | D) != 94, M[E + 78 | 0] = D;
                                              break l;
                                            }
                                            D = (0 | D) != 94, M[E + 126 | 0] = D;
                                          }
                                          C = Q + 1 | 0;
                                        }
                                        for (; ; ) {
                                          if ((0 | (Q = G[0 | C])) == 45) {
                                            if (Q = 45, !(!(o = G[C + 1 | 0]) | (0 | o) == 93)) {
                                              if (J = C + 1 | 0, o >>> 0 <= (C = G[C - 1 | 0]) >>> 0) Q = o;
                                              else for (; M[(C = C + 1 | 0) + (E + 32 | 0) | 0] = D, (Q = G[0 | J]) >>> 0 > C >>> 0; ) ;
                                              C = J;
                                            }
                                          } else {
                                            if (!Q) break E;
                                            if ((0 | Q) == 93) break i;
                                          }
                                          M[33 + (Q + E | 0) | 0] = D, C = C + 1 | 0;
                                        }
                                      case 23:
                                        Q = 8;
                                        break o;
                                      case 12:
                                      case 29:
                                        Q = 10;
                                        break o;
                                      case 1:
                                      case 2:
                                      case 4:
                                      case 5:
                                      case 6:
                                      case 7:
                                      case 8:
                                      case 10:
                                      case 16:
                                      case 18:
                                      case 19:
                                      case 20:
                                      case 21:
                                      case 22:
                                      case 25:
                                      case 26:
                                      case 28:
                                      case 30:
                                      case 31:
                                        break U;
                                      case 0:
                                      case 24:
                                      case 32:
                                        break o;
                                      case 17:
                                        break s;
                                    }
                                    Q = 0;
                                  }
                                  o = 0, y = 0, D = 0, J = 0, V = 0, t = CA = t - 16 | 0;
                                  o: if ((0 | Q) != 1 & Q >>> 0 <= 36) {
                                    for (; (0 | (w = A[g + 4 >> 2])) == A[g + 104 >> 2] ? w = CI(g) : (A[g + 4 >> 2] = w + 1, w = G[0 | w]), (0 | w) == 32 | w - 9 >>> 0 < 5; ) ;
                                    s: {
                                      y: switch (w - 43 | 0) {
                                        case 0:
                                        case 2:
                                          break y;
                                        default:
                                          break s;
                                      }
                                      V = (0 | w) == 45 ? -1 : 0, (0 | (w = A[g + 4 >> 2])) == A[g + 104 >> 2] ? w = CI(g) : (A[g + 4 >> 2] = w + 1, w = G[0 | w]);
                                    }
                                    s: {
                                      y: {
                                        l: {
                                          j: {
                                            if (!(!!(0 | Q) & (0 | Q) != 16 | (0 | w) != 48)) {
                                              if ((0 | (w = A[g + 4 >> 2])) == A[g + 104 >> 2] ? w = CI(g) : (A[g + 4 >> 2] = w + 1, w = G[0 | w]), (-33 & w) == 88) {
                                                if (Q = 16, (0 | (w = A[g + 4 >> 2])) == A[g + 104 >> 2] ? w = CI(g) : (A[g + 4 >> 2] = w + 1, w = G[0 | w]), G[w + 121329 | 0] < 16) break l;
                                                (0 | (Q = A[g + 116 >> 2])) > 0 | (0 | Q) >= 0 && (A[g + 4 >> 2] = A[g + 4 >> 2] - 1), HC(g, 0, 0);
                                                break o;
                                              }
                                              if (Q) break j;
                                              Q = 8;
                                              break l;
                                            }
                                            if (!((Q = Q || 10) >>> 0 > G[w + 121329 | 0])) {
                                              (0 | (Q = A[g + 116 >> 2])) > 0 | (0 | Q) >= 0 && (A[g + 4 >> 2] = A[g + 4 >> 2] - 1), HC(g, 0, 0), A[56798] = 28;
                                              break o;
                                            }
                                          }
                                          if ((0 | Q) == 10) {
                                            if ((D = w - 48 | 0) >>> 0 <= 9) {
                                              for (Q = 0; J = (Q = T(Q, 10) + D | 0) >>> 0 < 429496729, (0 | (w = A[g + 4 >> 2])) == A[g + 104 >> 2] ? w = CI(g) : (A[g + 4 >> 2] = w + 1, w = G[0 | w]), J & (D = w - 48 | 0) >>> 0 <= 9; ) ;
                                              o = Q;
                                            }
                                            j: if (!(D >>> 0 > 9)) {
                                              for (Q = tA(o, 0, 10, 0), J = QA; ; ) {
                                                if (y = J, J = (0 | (y = (o = Q + D | 0) >>> 0 < D >>> 0 ? y + 1 | 0 : y)) == 429496729 & o >>> 0 >= 2576980378 | y >>> 0 > 429496729, (0 | (Q = A[g + 4 >> 2])) == A[g + 104 >> 2] ? w = CI(g) : (A[g + 4 >> 2] = Q + 1, w = G[0 | Q]), J | (D = w - 48 | 0) >>> 0 > 9) break j;
                                                if (Q = tA(o, y, 10, 0), !((0 | (J = QA)) == -1 & ~D >>> 0 >= Q >>> 0 | (0 | J) != -1)) break;
                                              }
                                              Q = 10;
                                              break y;
                                            }
                                            if (Q = 10, D >>> 0 <= 9) break y;
                                            break s;
                                          }
                                        }
                                        if (Q - 1 & Q) {
                                          if ((J = G[w + 121329 | 0]) >>> 0 < Q >>> 0) {
                                            for (; o = (D = T(Q, D) + J | 0) >>> 0 < 119304647, (0 | (w = A[g + 4 >> 2])) == A[g + 104 >> 2] ? w = CI(g) : (A[g + 4 >> 2] = w + 1, w = G[0 | w]), o & (J = G[w + 121329 | 0]) >>> 0 < Q >>> 0; ) ;
                                            o = D;
                                          }
                                          if (Q >>> 0 <= J >>> 0) break y;
                                          for (; ; ) {
                                            if (D = tA(o, y, Q, 0), (0 | (x = QA)) == -1 & ~(J &= 255) >>> 0 < D >>> 0 || (y = x, y = (o = D + J | 0) >>> 0 < J >>> 0 ? y + 1 | 0 : y, (0 | (w = A[g + 4 >> 2])) == A[g + 104 >> 2] ? w = CI(g) : (A[g + 4 >> 2] = w + 1, w = G[0 | w]), Q >>> 0 <= (J = G[w + 121329 | 0]) >>> 0)) break y;
                                            if (rI(CA, Q, 0, 0, 0, o, y, 0, 0), A[CA + 8 >> 2] | A[CA + 12 >> 2]) break;
                                          }
                                        } else {
                                          if (x = M[84400 + (T(Q, 23) >>> 5 & 7) | 0], (D = G[w + 121329 | 0]) >>> 0 < Q >>> 0) {
                                            for (; o = (J = J << x | D) >>> 0 < 134217728, (0 | (w = A[g + 4 >> 2])) == A[g + 104 >> 2] ? w = CI(g) : (A[g + 4 >> 2] = w + 1, w = G[0 | w]), o & (D = G[w + 121329 | 0]) >>> 0 < Q >>> 0; ) ;
                                            o = J;
                                          }
                                          if (!(Q >>> 0 <= D >>> 0 || (v = 31 & x, (63 & x) >>> 0 >= 32 ? (J = 0, v = -1 >>> v | 0) : v = (J = -1 >>> v | 0) | (1 << v) - 1 << 32 - v, !J & o >>> 0 > v >>> 0))) for (; ; ) {
                                            if (wA = 255 & D, D = o, w = 31 & x, (63 & x) >>> 0 >= 32 ? (y = D << w, w = 0) : (y = (1 << w) - 1 & D >>> 32 - w | y << w, w = D << w), o = wA | w, (0 | (w = A[g + 4 >> 2])) == A[g + 104 >> 2] ? w = CI(g) : (A[g + 4 >> 2] = w + 1, w = G[0 | w]), Q >>> 0 <= (D = G[w + 121329 | 0]) >>> 0) break y;
                                            if (!((0 | J) == (0 | y) & o >>> 0 <= v >>> 0 | J >>> 0 > y >>> 0)) break;
                                          }
                                        }
                                      }
                                      if (!(G[w + 121329 | 0] >= Q >>> 0)) {
                                        for (; (0 | (w = A[g + 4 >> 2])) == A[g + 104 >> 2] ? w = CI(g) : (A[g + 4 >> 2] = w + 1, w = G[0 | w]), G[w + 121329 | 0] < Q >>> 0; ) ;
                                        A[56798] = 68, V = 0, o = -1, y = -1;
                                      }
                                    }
                                    (0 | (Q = A[g + 116 >> 2])) > 0 | (0 | Q) >= 0 && (A[g + 4 >> 2] = A[g + 4 >> 2] - 1), o = (Q = o ^ V) - V | 0, y = ((w = V >> 31) ^ y) - ((Q >>> 0 < V >>> 0) + w | 0) | 0;
                                  } else A[56798] = 28;
                                  if (t = CA + 16 | 0, Q = A[g + 4 >> 2] - A[g + 44 >> 2] | 0, A[g + 120 >> 2] == (0 - Q | 0) & A[g + 124 >> 2] == (0 - ((Q >> 31) + !!(0 | Q) | 0) | 0)) break R;
                                  if (!(!S | (0 | _) != 112)) {
                                    A[S >> 2] = o;
                                    break U;
                                  }
                                  GB(S, AA, o, y);
                                  break U;
                                }
                                if (!S) break U;
                                w = A[E + 16 >> 2], Q = A[E + 20 >> 2], D = A[E + 8 >> 2], Y = A[E + 12 >> 2];
                                N: switch (0 | AA) {
                                  case 0:
                                    t = y = t - 32 | 0;
                                    o: if (0 | (J = (o = 2147483647 & Q) - 1065418752 | 0) >>> 0 < (x = o - 1082064896 | 0) >>> 0) {
                                      if (o = (33554431 & Q) << 7 | w >>> 25, x = J = 0, !(!J & (0 | (w &= 33554431)) == 16777216 ? !(D | Y) : !J & w >>> 0 < 16777216)) {
                                        J = o + 1073741825 | 0;
                                        break o;
                                      }
                                      if (J = o + 1073741824 | 0, 16777216 ^ w | D | Y | x) break o;
                                      J = (1 & o) + J | 0;
                                    } else (!w & (0 | o) == 2147418112 ? !(D | Y) : o >>> 0 < 2147418112) ? (J = 2139095040, o >>> 0 > 1082064895 || (J = 0, (o = o >>> 16 | 0) >>> 0 < 16145 || (fI(y + 16 | 0, D, Y, w, J = 65535 & Q | 65536, o - 16129 | 0), oQ(y, D, Y, w, J, 16257 - o | 0), w = A[y + 8 >> 2], J = (33554431 & A[y + 12 >> 2]) << 7 | w >>> 25, o = A[y >> 2] | !!(A[y + 16 >> 2] | A[y + 24 >> 2] | A[y + 20 >> 2] | A[y + 28 >> 2]), Y = A[y + 4 >> 2], (!(D = 0) & (0 | (w &= 33554431)) == 16777216 ? !(o | Y) : !D & w >>> 0 < 16777216) ? 16777216 ^ w | o | D | Y || (J = (1 & J) + J | 0) : J = J + 1 | 0))) : J = 4194303 & ((33554431 & Q) << 7 | w >>> 25) | 2143289344;
                                    t = y + 32 | 0, A[S >> 2] = -2147483648 & Q | J;
                                    break U;
                                  case 1:
                                    H[S >> 3] = zB(D, Y, w, Q);
                                    break U;
                                  case 2:
                                    break N;
                                  default:
                                    break U;
                                }
                                A[S >> 2] = D, A[S + 4 >> 2] = Y, A[S + 8 >> 2] = w, A[S + 12 >> 2] = Q;
                                break U;
                              }
                              D = (CA = (0 | _) != 99) ? 31 : w + 1 | 0;
                              i: if ((0 | AA) != 1) {
                                if (Y) {
                                  if (w = 0, !(Q = KI(D))) break D;
                                  for (; ; ) {
                                    for (I = Q; ; ) {
                                      if ((0 | (Q = A[g + 4 >> 2])) == A[g + 104 >> 2] ? Q = CI(g) : (A[g + 4 >> 2] = Q + 1, Q = G[0 | Q]), !G[33 + (Q + E | 0) | 0]) {
                                        D = 0, c = I;
                                        break i;
                                      }
                                      if (M[I + w | 0] = Q, (0 | D) == (0 | (w = w + 1 | 0))) break;
                                    }
                                    if (J = 1, !(Q = gC(I, D = D << 1 | 1))) break;
                                  }
                                  c = I, I = 0;
                                  break B;
                                }
                                if (w = 0, S) for (; ; ) {
                                  if ((0 | (I = A[g + 4 >> 2])) == A[g + 104 >> 2] ? I = CI(g) : (A[g + 4 >> 2] = I + 1, I = G[0 | I]), !G[33 + (I + E | 0) | 0]) {
                                    D = 0, c = I = S;
                                    break i;
                                  }
                                  M[w + S | 0] = I, w = w + 1 | 0;
                                }
                                for (; (0 | (I = A[g + 4 >> 2])) == A[g + 104 >> 2] ? I = CI(g) : (A[g + 4 >> 2] = I + 1, I = G[0 | I]), G[33 + (I + E | 0) | 0]; ) ;
                                I = 0, c = 0, D = 0;
                              } else {
                                if (Q = S, Y && !(Q = KI(D << 2))) break D;
                                for (A[E + 296 >> 2] = 0, A[E + 300 >> 2] = 0, w = 0; ; ) {
                                  I = Q;
                                  N: {
                                    for (; ; ) {
                                      if ((0 | (Q = A[g + 4 >> 2])) == A[g + 104 >> 2] ? Q = CI(g) : (A[g + 4 >> 2] = Q + 1, Q = G[0 | Q]), !G[33 + (Q + E | 0) | 0]) break N;
                                      M[E + 27 | 0] = Q, o = E + 28 | 0, Q = A[(J = (Q = E + 296 | 0) || 228604) >> 2];
                                      o: {
                                        s: {
                                          y: {
                                            l: {
                                              if (!(c = E + 27 | 0)) {
                                                if (Q) break l;
                                                Q = 0;
                                                break o;
                                              }
                                              if (!Q) {
                                                if ((0 | (y = (Q = G[0 | c]) << 24 >> 24)) >= 0) {
                                                  o && (A[o >> 2] = Q), Q = !!(0 | y);
                                                  break o;
                                                }
                                                if (!A[A[56841] >> 2]) {
                                                  if (Q = 1, !o) break y;
                                                  A[o >> 2] = 57343 & y, Q = 1;
                                                  break o;
                                                }
                                                if ((Q = Q - 194 | 0) >>> 0 > 50) break l;
                                                Q = A[124752 + (Q << 2) >> 2];
                                                break s;
                                              }
                                              if (V = 1, !(((AA = (y = G[0 | c]) >>> 3 | 0) - 16 | (Q >> 26) + AA) >>> 0 > 7)) for (; ; ) {
                                                if (V = V - 1 | 0, (0 | (Q = y - 128 | Q << 6)) >= 0) {
                                                  A[J >> 2] = 0, o && (A[o >> 2] = Q), Q = 1 - V | 0;
                                                  break o;
                                                }
                                                if (!V) break s;
                                                if ((192 & (y = G[0 | (c = c + 1 | 0)])) != 128) break;
                                              }
                                            }
                                            A[J >> 2] = 0, A[56798] = 25, Q = -1;
                                          }
                                          break o;
                                        }
                                        A[J >> 2] = Q, Q = -2;
                                      }
                                      if ((0 | Q) != -2) {
                                        if (c = 0, (0 | Q) == -1) break E;
                                        if (I && (A[(w << 2) + I >> 2] = A[E + 28 >> 2], w = w + 1 | 0), !(!Y | (0 | w) != (0 | D))) break;
                                      }
                                    }
                                    if (J = 1, Q = gC(I, (D = D << 1 | 1) << 2)) continue;
                                    break B;
                                  }
                                  break;
                                }
                                if (c = 0, D = I, E + 296 | 0 && A[E + 296 >> 2]) break E;
                              }
                              if (Q = A[g + 4 >> 2], (0 | (o = A[g + 116 >> 2])) > 0 | (0 | o) >= 0 && (Q = Q - 1 | 0, A[g + 4 >> 2] = Q), Q = (o = Q - A[g + 44 >> 2] | 0) + A[g + 120 >> 2] | 0, y = A[g + 124 >> 2] + (o >> 31) | 0, !((y = Q >>> 0 < o >>> 0 ? y + 1 | 0 : y) | Q) | !(CA | (0 | Q) == (0 | x) & (0 | y) == (0 | v))) break F;
                              Y && (A[S >> 2] = I), (0 | _) != 99 && (D && (A[(w << 2) + D >> 2] = 0), c ? M[w + c | 0] = 0 : c = 0), I = D;
                            }
                            w = Q = A[g + 4 >> 2] - A[g + 44 >> 2] | 0, J = O + A[g + 124 >> 2] | 0, O = (D = Q >> 31) + ((Q = n + A[g + 120 >> 2] | 0) >>> 0 < n >>> 0 ? J + 1 | 0 : J) | 0, O = (n = Q + w | 0) >>> 0 < Q >>> 0 ? O + 1 | 0 : O, EA = !!(0 | S) + EA | 0;
                          }
                          if (w = C + 1 | 0, C = G[C + 1 | 0]) continue;
                          break A;
                        }
                        break;
                      }
                      I = D;
                      break R;
                    }
                    J = 1, c = 0, I = 0;
                    break B;
                  }
                  J = Y;
                  break I;
                }
                J = Y;
              }
              if (EA) break I;
            }
            EA = -1;
          }
          J && (_A(c), _A(I));
        }
        return t = E + 304 | 0, t = g + 144 | 0, t = U + 16 | 0, EA;
      }
      function KI(I) {
        var C, Q = 0, g = 0, E = 0, U = 0, w = 0, D = 0, J = 0, o = 0, y = 0, S = 0;
        t = C = t - 16 | 0;
        A: {
          I: {
            Q: {
              B: {
                E: {
                  R: {
                    D: {
                      F: {
                        w: {
                          if ((I |= 0) >>> 0 <= 244) {
                            if (3 & (Q = (D = A[57152]) >>> (g = (J = I >>> 0 < 11 ? 16 : I + 11 & -8) >>> 3 | 0) | 0)) {
                              Q = (I = (g = g + (1 & ~Q) | 0) << 3) + 228648 | 0, E = A[I + 228656 >> 2], (0 | Q) != (0 | (I = A[E + 8 >> 2])) ? (A[I + 12 >> 2] = Q, A[Q + 8 >> 2] = I) : A[57152] = MC(-2, g) & D, I = E + 8 | 0, Q = g << 3, A[E + 4 >> 2] = 3 | Q, A[(Q = Q + E | 0) + 4 >> 2] = 1 | A[Q + 4 >> 2];
                              break A;
                            }
                            if ((S = A[57154]) >>> 0 >= J >>> 0) break w;
                            if (Q) {
                              Q = (I = (E = GU(0 - (I = (0 - (I = 2 << g) | I) & Q << g) & I)) << 3) + 228648 | 0, U = A[I + 228656 >> 2], (0 | Q) != (0 | (I = A[U + 8 >> 2])) ? (A[I + 12 >> 2] = Q, A[Q + 8 >> 2] = I) : (D = MC(-2, E) & D, A[57152] = D), A[U + 4 >> 2] = 3 | J, E = (I = E << 3) - J | 0, A[(g = U + J | 0) + 4 >> 2] = 1 | E, A[I + U >> 2] = E, S && (Q = 228648 + (-8 & S) | 0, w = A[57157], (I = 1 << (S >>> 3)) & D ? I = A[Q + 8 >> 2] : (A[57152] = I | D, I = Q), A[Q + 8 >> 2] = w, A[I + 12 >> 2] = w, A[w + 12 >> 2] = Q, A[w + 8 >> 2] = I), I = U + 8 | 0, A[57157] = g, A[57154] = E;
                              break A;
                            }
                            if (!(y = A[57153])) break w;
                            for (g = A[228912 + (GU(0 - y & y) << 2) >> 2], w = (-8 & A[g + 4 >> 2]) - J | 0, Q = g; (I = A[Q + 16 >> 2]) || (I = A[Q + 20 >> 2]); ) w = (E = (Q = (-8 & A[I + 4 >> 2]) - J | 0) >>> 0 < w >>> 0) ? Q : w, g = E ? I : g, Q = I;
                            if (o = A[g + 24 >> 2], (0 | (E = A[g + 12 >> 2])) != (0 | g)) {
                              I = A[g + 8 >> 2], A[I + 12 >> 2] = E, A[E + 8 >> 2] = I;
                              break I;
                            }
                            if (!(I = A[(Q = g + 20 | 0) >> 2])) {
                              if (!(I = A[g + 16 >> 2])) break F;
                              Q = g + 16 | 0;
                            }
                            for (; U = Q, E = I, (I = A[(Q = I + 20 | 0) >> 2]) || (Q = E + 16 | 0, I = A[E + 16 >> 2]); ) ;
                            A[U >> 2] = 0;
                            break I;
                          }
                          if (J = -1, !(I >>> 0 > 4294967231) && (J = -8 & (I = I + 11 | 0), y = A[57153])) {
                            w = 0 - J | 0, D = 0, J >>> 0 < 256 || (D = 31, J >>> 0 > 16777215 || (D = 62 + ((J >>> 38 - (I = aA(I >>> 8 | 0)) & 1) - (I << 1) | 0) | 0));
                            U: {
                              i: {
                                if (Q = A[228912 + (D << 2) >> 2]) for (I = 0, g = J << ((0 | D) != 31 ? 25 - (D >>> 1 | 0) : 0); ; ) {
                                  if (!((U = (-8 & A[Q + 4 >> 2]) - J | 0) >>> 0 >= w >>> 0 || (E = Q, w = U, U))) {
                                    w = 0, I = Q;
                                    break i;
                                  }
                                  if (U = A[Q + 20 >> 2], Q = A[16 + ((g >>> 29 & 4) + Q | 0) >> 2], I = U ? (0 | U) == (0 | Q) ? I : U : I, g <<= 1, !Q) break;
                                }
                                else I = 0;
                                if (!(I | E)) {
                                  if (E = 0, !(I = (0 - (I = 2 << D) | I) & y)) break w;
                                  I = A[228912 + (GU(I & 0 - I) << 2) >> 2];
                                }
                                if (!I) break U;
                              }
                              for (; w = (g = (Q = (-8 & A[I + 4 >> 2]) - J | 0) >>> 0 < w >>> 0) ? Q : w, E = g ? I : E, I = (Q = A[I + 16 >> 2]) || A[I + 20 >> 2]; ) ;
                            }
                            if (!(!E | A[57154] - J >>> 0 <= w >>> 0)) {
                              if (D = A[E + 24 >> 2], (0 | E) != (0 | (g = A[E + 12 >> 2]))) {
                                I = A[E + 8 >> 2], A[I + 12 >> 2] = g, A[g + 8 >> 2] = I;
                                break Q;
                              }
                              if (!(I = A[(Q = E + 20 | 0) >> 2])) {
                                if (!(I = A[E + 16 >> 2])) break D;
                                Q = E + 16 | 0;
                              }
                              for (; U = Q, g = I, (I = A[(Q = I + 20 | 0) >> 2]) || (Q = g + 16 | 0, I = A[g + 16 >> 2]); ) ;
                              A[U >> 2] = 0;
                              break Q;
                            }
                          }
                        }
                        if ((I = A[57154]) >>> 0 >= J >>> 0) {
                          E = A[57157], (Q = I - J | 0) >>> 0 >= 16 ? (A[(g = E + J | 0) + 4 >> 2] = 1 | Q, A[I + E >> 2] = Q, A[E + 4 >> 2] = 3 | J) : (A[E + 4 >> 2] = 3 | I, A[(I = I + E | 0) + 4 >> 2] = 1 | A[I + 4 >> 2], g = 0, Q = 0), A[57154] = Q, A[57157] = g, I = E + 8 | 0;
                          break A;
                        }
                        if ((o = A[57155]) >>> 0 > J >>> 0) {
                          Q = o - J | 0, A[57155] = Q, I = (g = A[57158]) + J | 0, A[57158] = I, A[I + 4 >> 2] = 1 | Q, A[g + 4 >> 2] = 3 | J, I = g + 8 | 0;
                          break A;
                        }
                        if (I = 0, y = J + 47 | 0, A[57270] ? g = A[57272] : (A[57273] = -1, A[57274] = -1, A[57271] = 4096, A[57272] = 4096, A[57270] = C + 12 & -16 ^ 1431655768, A[57275] = 0, A[57263] = 0, g = 4096), (Q = (U = y + g | 0) & (w = 0 - g | 0)) >>> 0 <= J >>> 0 || (E = A[57262]) && E >>> 0 < (D = (g = A[57260]) + Q | 0) >>> 0 | g >>> 0 >= D >>> 0) break A;
                        w: {
                          if (!(4 & G[229052])) {
                            U: {
                              i: {
                                N: {
                                  o: {
                                    if (E = A[57158]) for (I = 229056; ; ) {
                                      if ((g = A[I >> 2]) >>> 0 <= E >>> 0 & E >>> 0 < g + A[I + 4 >> 2] >>> 0) break o;
                                      if (!(I = A[I + 8 >> 2])) break;
                                    }
                                    if ((0 | (g = bQ(0))) == -1 || (D = Q, (I = (E = A[57271]) - 1 | 0) & g && (D = (Q - g | 0) + (I + g & 0 - E) | 0), D >>> 0 <= J >>> 0) || (E = A[57262]) && E >>> 0 < (w = (I = A[57260]) + D | 0) >>> 0 | I >>> 0 >= w >>> 0) break U;
                                    if ((0 | g) != (0 | (I = bQ(D)))) break N;
                                    break w;
                                  }
                                  if ((0 | (g = bQ(D = w & U - o))) == (A[I >> 2] + A[I + 4 >> 2] | 0)) break i;
                                  I = g;
                                }
                                if ((0 | I) == -1) break U;
                                if (J + 48 >>> 0 <= D >>> 0) {
                                  g = I;
                                  break w;
                                }
                                if ((0 | bQ(g = (g = A[57272]) + (y - D | 0) & 0 - g)) == -1) break U;
                                D = g + D | 0, g = I;
                                break w;
                              }
                              if ((0 | g) != -1) break w;
                            }
                            A[57263] = 4 | A[57263];
                          }
                          if ((0 | (g = bQ(Q))) == -1 | (0 | (I = bQ(0))) == -1 | I >>> 0 <= g >>> 0 || (D = I - g | 0) >>> 0 <= J + 40 >>> 0) break B;
                        }
                        I = A[57260] + D | 0, A[57260] = I, I >>> 0 > UA[57261] && (A[57261] = I);
                        w: {
                          if (U = A[57158]) {
                            for (I = 229056; ; ) {
                              if (((E = A[I >> 2]) + (Q = A[I + 4 >> 2]) | 0) == (0 | g)) break w;
                              if (!(I = A[I + 8 >> 2])) break;
                            }
                            break R;
                          }
                          for ((I = A[57156]) >>> 0 <= g >>> 0 && I || (A[57156] = g), I = 0, A[57265] = D, A[57264] = g, A[57160] = -1, A[57161] = A[57270], A[57267] = 0; Q = (E = I << 3) + 228648 | 0, A[E + 228656 >> 2] = Q, A[E + 228660 >> 2] = Q, (0 | (I = I + 1 | 0)) != 32; ) ;
                          Q = (E = D - 40 | 0) - (I = g + 8 & 7 ? -8 - g & 7 : 0) | 0, A[57155] = Q, I = I + g | 0, A[57158] = I, A[I + 4 >> 2] = 1 | Q, A[4 + (g + E | 0) >> 2] = 40, A[57159] = A[57274];
                          break E;
                        }
                        if (8 & G[I + 12 | 0] | E >>> 0 > U >>> 0 | g >>> 0 <= U >>> 0) break R;
                        A[I + 4 >> 2] = Q + D, g = (I = U + 8 & 7 ? -8 - U & 7 : 0) + U | 0, A[57158] = g, I = (Q = A[57155] + D | 0) - I | 0, A[57155] = I, A[g + 4 >> 2] = 1 | I, A[4 + (Q + U | 0) >> 2] = 40, A[57159] = A[57274];
                        break E;
                      }
                      E = 0;
                      break I;
                    }
                    g = 0;
                    break Q;
                  }
                  UA[57156] > g >>> 0 && (A[57156] = g), Q = g + D | 0, I = 229056;
                  R: {
                    D: {
                      F: {
                        w: {
                          U: {
                            i: {
                              for (; ; ) {
                                if ((0 | Q) != A[I >> 2]) {
                                  if (I = A[I + 8 >> 2]) continue;
                                  break i;
                                }
                                break;
                              }
                              if (!(8 & G[I + 12 | 0])) break U;
                            }
                            for (I = 229056; ; ) {
                              if ((Q = A[I >> 2]) >>> 0 <= U >>> 0 && (w = Q + A[I + 4 >> 2] | 0) >>> 0 > U >>> 0) break w;
                              I = A[I + 8 >> 2];
                            }
                          }
                          if (A[I >> 2] = g, A[I + 4 >> 2] = A[I + 4 >> 2] + D, A[(y = (g + 8 & 7 ? -8 - g & 7 : 0) + g | 0) + 4 >> 2] = 3 | J, I = (D = Q + (Q + 8 & 7 ? -8 - Q & 7 : 0) | 0) - (o = J + y | 0) | 0, (0 | U) == (0 | D)) {
                            A[57158] = o, I = A[57155] + I | 0, A[57155] = I, A[o + 4 >> 2] = 1 | I;
                            break D;
                          }
                          if (A[57157] == (0 | D)) {
                            A[57157] = o, I = A[57154] + I | 0, A[57154] = I, A[o + 4 >> 2] = 1 | I, A[I + o >> 2] = I;
                            break D;
                          }
                          if ((3 & (w = A[D + 4 >> 2])) == 1) {
                            U = -8 & w;
                            U: if (w >>> 0 <= 255) {
                              if (E = A[D + 8 >> 2], Q = w >>> 3 | 0, (0 | (g = A[D + 12 >> 2])) == (0 | E)) {
                                A[57152] = A[57152] & MC(-2, Q);
                                break U;
                              }
                              A[E + 12 >> 2] = g, A[g + 8 >> 2] = E;
                            } else {
                              if (J = A[D + 24 >> 2], (0 | D) == (0 | (g = A[D + 12 >> 2]))) if ((Q = A[(w = D + 20 | 0) >> 2]) || (Q = A[(w = D + 16 | 0) >> 2])) {
                                for (; E = w, (Q = A[(w = (g = Q) + 20 | 0) >> 2]) || (w = g + 16 | 0, Q = A[g + 16 >> 2]); ) ;
                                A[E >> 2] = 0;
                              } else g = 0;
                              else Q = A[D + 8 >> 2], A[Q + 12 >> 2] = g, A[g + 8 >> 2] = Q;
                              if (J) {
                                E = A[D + 28 >> 2];
                                i: {
                                  if (A[(Q = 228912 + (E << 2) | 0) >> 2] == (0 | D)) {
                                    if (A[Q >> 2] = g, g) break i;
                                    A[57153] = A[57153] & MC(-2, E);
                                    break U;
                                  }
                                  if (A[J + (A[J + 16 >> 2] == (0 | D) ? 16 : 20) >> 2] = g, !g) break U;
                                }
                                A[g + 24 >> 2] = J, (Q = A[D + 16 >> 2]) && (A[g + 16 >> 2] = Q, A[Q + 24 >> 2] = g), (Q = A[D + 20 >> 2]) && (A[g + 20 >> 2] = Q, A[Q + 24 >> 2] = g);
                              }
                            }
                            w = A[(D = U + D | 0) + 4 >> 2], I = I + U | 0;
                          }
                          if (A[D + 4 >> 2] = -2 & w, A[o + 4 >> 2] = 1 | I, A[I + o >> 2] = I, I >>> 0 <= 255) {
                            Q = 228648 + (-8 & I) | 0, (g = A[57152]) & (I = 1 << (I >>> 3)) ? I = A[Q + 8 >> 2] : (A[57152] = I | g, I = Q), A[Q + 8 >> 2] = o, A[I + 12 >> 2] = o, A[o + 12 >> 2] = Q, A[o + 8 >> 2] = I;
                            break D;
                          }
                          if (w = 31, I >>> 0 <= 16777215 && (w = 62 + ((I >>> 38 - (Q = aA(I >>> 8 | 0)) & 1) - (Q << 1) | 0) | 0), A[o + 28 >> 2] = w, A[o + 16 >> 2] = 0, A[o + 20 >> 2] = 0, Q = 228912 + (w << 2) | 0, (E = A[57153]) & (g = 1 << w)) {
                            for (w = I << ((0 | w) != 31 ? 25 - (w >>> 1 | 0) : 0), g = A[Q >> 2]; ; ) {
                              if (Q = g, (-8 & A[g + 4 >> 2]) == (0 | I)) break F;
                              if (g = w >>> 29 | 0, w <<= 1, !(g = A[(E = (4 & g) + Q | 0) + 16 >> 2])) break;
                            }
                            A[E + 16 >> 2] = o;
                          } else A[57153] = g | E, A[Q >> 2] = o;
                          A[o + 24 >> 2] = Q, A[o + 12 >> 2] = o, A[o + 8 >> 2] = o;
                          break D;
                        }
                        for (Q = (E = D - 40 | 0) - (I = g + 8 & 7 ? -8 - g & 7 : 0) | 0, A[57155] = Q, I = I + g | 0, A[57158] = I, A[I + 4 >> 2] = 1 | Q, A[4 + (g + E | 0) >> 2] = 40, A[57159] = A[57274], A[(E = (I = (w + (w - 39 & 7 ? 39 - w & 7 : 0) | 0) - 47 | 0) >>> 0 < U + 16 >>> 0 ? U : I) + 4 >> 2] = 27, I = A[57267], A[E + 16 >> 2] = A[57266], A[E + 20 >> 2] = I, I = A[57265], A[E + 8 >> 2] = A[57264], A[E + 12 >> 2] = I, A[57266] = E + 8, A[57265] = D, A[57264] = g, A[57267] = 0, I = E + 24 | 0; A[I + 4 >> 2] = 7, Q = I + 8 | 0, I = I + 4 | 0, Q >>> 0 < w >>> 0; ) ;
                        if ((0 | E) == (0 | U)) break E;
                        if (A[E + 4 >> 2] = -2 & A[E + 4 >> 2], w = E - U | 0, A[U + 4 >> 2] = 1 | w, A[E >> 2] = w, w >>> 0 <= 255) {
                          Q = 228648 + (-8 & w) | 0, (g = A[57152]) & (I = 1 << (w >>> 3)) ? I = A[Q + 8 >> 2] : (A[57152] = I | g, I = Q), A[Q + 8 >> 2] = U, A[I + 12 >> 2] = U, A[U + 12 >> 2] = Q, A[U + 8 >> 2] = I;
                          break E;
                        }
                        if (I = 31, w >>> 0 <= 16777215 && (I = 62 + ((w >>> 38 - (I = aA(w >>> 8 | 0)) & 1) - (I << 1) | 0) | 0), A[U + 28 >> 2] = I, A[U + 16 >> 2] = 0, A[U + 20 >> 2] = 0, Q = 228912 + (I << 2) | 0, (E = A[57153]) & (g = 1 << I)) {
                          for (I = w << ((0 | I) != 31 ? 25 - (I >>> 1 | 0) : 0), E = A[Q >> 2]; ; ) {
                            if ((0 | w) == (-8 & A[(Q = E) + 4 >> 2])) break R;
                            if (g = I >>> 29 | 0, I <<= 1, !(E = A[(g = (4 & g) + Q | 0) + 16 >> 2])) break;
                          }
                          A[g + 16 >> 2] = U;
                        } else A[57153] = g | E, A[Q >> 2] = U;
                        A[U + 24 >> 2] = Q, A[U + 12 >> 2] = U, A[U + 8 >> 2] = U;
                        break E;
                      }
                      I = A[Q + 8 >> 2], A[I + 12 >> 2] = o, A[Q + 8 >> 2] = o, A[o + 24 >> 2] = 0, A[o + 12 >> 2] = Q, A[o + 8 >> 2] = I;
                    }
                    I = y + 8 | 0;
                    break A;
                  }
                  I = A[Q + 8 >> 2], A[I + 12 >> 2] = U, A[Q + 8 >> 2] = U, A[U + 24 >> 2] = 0, A[U + 12 >> 2] = Q, A[U + 8 >> 2] = I;
                }
                if (!((I = A[57155]) >>> 0 <= J >>> 0)) {
                  Q = I - J | 0, A[57155] = Q, I = (g = A[57158]) + J | 0, A[57158] = I, A[I + 4 >> 2] = 1 | Q, A[g + 4 >> 2] = 3 | J, I = g + 8 | 0;
                  break A;
                }
              }
              A[56798] = 48, I = 0;
              break A;
            }
            Q: if (D) {
              Q = A[E + 28 >> 2];
              B: {
                if (A[(I = 228912 + (Q << 2) | 0) >> 2] == (0 | E)) {
                  if (A[I >> 2] = g, g) break B;
                  y = MC(-2, Q) & y, A[57153] = y;
                  break Q;
                }
                if (A[D + (A[D + 16 >> 2] == (0 | E) ? 16 : 20) >> 2] = g, !g) break Q;
              }
              A[g + 24 >> 2] = D, (I = A[E + 16 >> 2]) && (A[g + 16 >> 2] = I, A[I + 24 >> 2] = g), (I = A[E + 20 >> 2]) && (A[g + 20 >> 2] = I, A[I + 24 >> 2] = g);
            }
            Q: if (w >>> 0 <= 15) I = w + J | 0, A[E + 4 >> 2] = 3 | I, A[(I = I + E | 0) + 4 >> 2] = 1 | A[I + 4 >> 2];
            else if (A[E + 4 >> 2] = 3 | J, A[(U = E + J | 0) + 4 >> 2] = 1 | w, A[U + w >> 2] = w, w >>> 0 <= 255) Q = 228648 + (-8 & w) | 0, (g = A[57152]) & (I = 1 << (w >>> 3)) ? I = A[Q + 8 >> 2] : (A[57152] = I | g, I = Q), A[Q + 8 >> 2] = U, A[I + 12 >> 2] = U, A[U + 12 >> 2] = Q, A[U + 8 >> 2] = I;
            else {
              I = 31, w >>> 0 <= 16777215 && (I = 62 + ((w >>> 38 - (I = aA(w >>> 8 | 0)) & 1) - (I << 1) | 0) | 0), A[U + 28 >> 2] = I, A[U + 16 >> 2] = 0, A[U + 20 >> 2] = 0, Q = 228912 + (I << 2) | 0;
              B: {
                if ((g = 1 << I) & y) {
                  for (I = w << ((0 | I) != 31 ? 25 - (I >>> 1 | 0) : 0), J = A[Q >> 2]; ; ) {
                    if ((-8 & A[(Q = J) + 4 >> 2]) == (0 | w)) break B;
                    if (g = I >>> 29 | 0, I <<= 1, !(J = A[(g = (4 & g) + Q | 0) + 16 >> 2])) break;
                  }
                  A[g + 16 >> 2] = U;
                } else A[57153] = g | y, A[Q >> 2] = U;
                A[U + 24 >> 2] = Q, A[U + 12 >> 2] = U, A[U + 8 >> 2] = U;
                break Q;
              }
              I = A[Q + 8 >> 2], A[I + 12 >> 2] = U, A[Q + 8 >> 2] = U, A[U + 24 >> 2] = 0, A[U + 12 >> 2] = Q, A[U + 8 >> 2] = I;
            }
            I = E + 8 | 0;
            break A;
          }
          I: if (o) {
            Q = A[g + 28 >> 2];
            Q: {
              if (A[(I = 228912 + (Q << 2) | 0) >> 2] == (0 | g)) {
                if (A[I >> 2] = E, E) break Q;
                A[57153] = MC(-2, Q) & y;
                break I;
              }
              if (A[o + (A[o + 16 >> 2] == (0 | g) ? 16 : 20) >> 2] = E, !E) break I;
            }
            A[E + 24 >> 2] = o, (I = A[g + 16 >> 2]) && (A[E + 16 >> 2] = I, A[I + 24 >> 2] = E), (I = A[g + 20 >> 2]) && (A[E + 20 >> 2] = I, A[I + 24 >> 2] = E);
          }
          w >>> 0 <= 15 ? (I = w + J | 0, A[g + 4 >> 2] = 3 | I, A[(I = I + g | 0) + 4 >> 2] = 1 | A[I + 4 >> 2]) : (A[g + 4 >> 2] = 3 | J, A[(E = g + J | 0) + 4 >> 2] = 1 | w, A[E + w >> 2] = w, S && (Q = 228648 + (-8 & S) | 0, U = A[57157], (I = 1 << (S >>> 3)) & D ? I = A[Q + 8 >> 2] : (A[57152] = I | D, I = Q), A[Q + 8 >> 2] = U, A[I + 12 >> 2] = U, A[U + 12 >> 2] = Q, A[U + 8 >> 2] = I), A[57157] = E, A[57154] = w), I = g + 8 | 0;
        }
        return t = C + 16 | 0, 0 | I;
      }
      function kC(I, C, Q, g, E) {
        var U, w = 0, D = 0, J = 0, o = 0, y = 0, S = 0, Y = 0, c = 0, n = 0, V = 0, x = 0, O = 0, v = 0, _ = 0, AA = 0, CA = 0, BA = 0;
        t = U = t - 544 | 0, pA(U + 320 | 0, 0, 100), pA(U + 208 | 0, 0, 100), o = Q ? A[Q >> 2] : o, n = A[I + 12 >> 2], y = A[36115];
        A: {
          I: {
            Q: {
              B: {
                for (; ; ) {
                  if (w = (0 | (w = G[C + D | 0])) >= (0 | y) ? 13 : w, M[U + D | 0] = w, !w) {
                    w = D;
                    break B;
                  }
                  if (J = (0 | y) <= (0 | (J = G[(w = 1 | D) + C | 0])) ? 13 : J, M[w + U | 0] = J, !J) break B;
                  if ((0 | (D = D + 2 | 0)) == 200) break;
                }
                D = 198, x = G[U + 199 | 0];
                break Q;
              }
              if (!w) break I;
              x = G[U + (D = w - 1 | 0) | 0], (0 | w) != 1 && (D = w - 2 | 0);
            }
            if (AA = 8 & o, A[U + 536 >> 2] = (AA >>> 3 | 0 ? 3 : 7) & o, o = G[U + D | 0], y = 1, Y = (0 | (S = WB(I, U, U + 432 | 0, U + 540 | 0, U + 536 | 0, 1))) >= 0 ? S : 0, v = G[0 | U]) for (D = U, w = v; w = A[144464 + ((255 & w) << 2) >> 2], G[w + 11 | 0] == 2 && (1048576 & (w = A[w + 4 >> 2]) || (J = (2097152 & w) >>> 21 | 0, J |= w = G[A[144464 + (G[0 | (c = D + 1 | 0)] << 2) >> 2] + 10 | 0] == 12, M[(U + 208 | 0) + y | 0] = J, V = A[144464 + (G[(w ? 2 : 1) + D | 0] << 2) >> 2], J = G[V + 11 | 0] - 10 >>> 0 < 4294967289 | !(32 & G[V + 6 | 0]) & G[A[144464 + (G[(w ? 3 : 2) + D | 0] << 2) >> 2] + 11 | 0] == 2 ? J : J ? 2 : 1, D = w ? c : D, M[(U + 320 | 0) + y | 0] = J, y = y + 1 | 0)), w = G[0 | (D = D + 1 | 0)]; ) ;
            D = Q = Q ? Y : S;
            Q: {
              B: {
                E: {
                  R: {
                    D: {
                      F: {
                        w: {
                          U: {
                            i: {
                              N: {
                                o: {
                                  s: switch (A[I + 8 >> 2] - 1 | 0) {
                                    case 11:
                                      if ((0 | (Q = A[U + 540 >> 2])) < 2) break i;
                                      if (D = 1, Y = 1 & (w = Q - 1 | 0), (0 | Q) != 2) break o;
                                      y = 0;
                                      break N;
                                    case 8:
                                      if ((0 | (w = A[U + 540 >> 2])) < 2) break B;
                                      if (y = 3 & (J = w - 1 | 0), D = 1, w - 2 >>> 0 >= 3) for (Y = -4 & J, J = 0; o = M[0 | (w = (U + 432 | 0) + D | 0)], M[0 | w] = (0 | o) < 0 ? 4 : o, o = M[w + 1 | 0], M[w + 1 | 0] = (0 | o) < 0 ? 4 : o, o = M[w + 2 | 0], M[w + 2 | 0] = (0 | o) < 0 ? 4 : o, o = w, w = M[w + 3 | 0], M[o + 3 | 0] = (0 | w) < 0 ? 4 : w, D = D + 4 | 0, (0 | Y) != (0 | (J = J + 4 | 0)); ) ;
                                      if (!y) break B;
                                      for (w = 0; J = M[0 | (o = (U + 432 | 0) + D | 0)], M[0 | o] = (0 | J) < 0 ? 4 : J, D = D + 1 | 0, (0 | y) != (0 | (w = w + 1 | 0)); ) ;
                                      break B;
                                    case 7:
                                      if (!G[U + 322 | 0] | M[U + 321 | 0] > 0) break B;
                                    case 0:
                                      if (A[U + 536 >> 2] | A[U + 540 >> 2] < 3) break B;
                                      if (A[U + 536 >> 2] = 2, D = 4, Q) break Q;
                                      M[U + 434 | 0] = 4;
                                      break Q;
                                    case 1:
                                      if (A[U + 536 >> 2]) break Q;
                                      y: {
                                        l: {
                                          if ((0 | (y = A[U + 540 >> 2])) >= 3) {
                                            Q = y - 2 | 0, A[U + 536 >> 2] = Q, D = Q;
                                            j: if (512 & n && (w = A[144464 + (x << 2) >> 2], (0 | (J = G[w + 11 | 0])) != 2)) {
                                              D = A[w >> 2], w = U;
                                              k: {
                                                P: {
                                                  if ((0 | (Y = A[I + 212 >> 2])) != 26977) {
                                                    if ((0 | Y) != 24942) break P;
                                                    f: switch (D - 110 | 0) {
                                                      case 0:
                                                      case 5:
                                                        if (D = Q, G[A[144464 + (o << 2) >> 2] + 11 | 0] == 2) break j;
                                                        break;
                                                      default:
                                                        break f;
                                                    }
                                                    D = y - 1 | 0;
                                                    break k;
                                                  }
                                                  if ((0 | D) == 115 && (D = Q, G[A[144464 + (o << 2) >> 2] + 11 | 0] == 2)) break j;
                                                  D = y - 1 | 0;
                                                  break k;
                                                }
                                                P: {
                                                  f: {
                                                    if ((0 | D) == 115) {
                                                      if (D = Q, (0 | (J = G[A[144464 + (o << 2) >> 2] + 11 | 0])) != 8) break f;
                                                      break j;
                                                    }
                                                    if ((0 | J) != 8) break P;
                                                    J = G[A[144464 + (o << 2) >> 2] + 11 | 0];
                                                  }
                                                  if (D = Q, (255 & J) == 2) break j;
                                                }
                                                D = y - 1 | 0;
                                              }
                                              A[w + 536 >> 2] = D;
                                            }
                                            if (524288 & n && (M[(w = y - 1 | 0) + (y = U + 208 | 0) | 0] <= M[Q + y | 0] || (A[U + 536 >> 2] = w, D = w)), G[(U + 432 | 0) + D | 0] > 1) {
                                              w = D;
                                              break y;
                                            }
                                            if (w = 2, Q = D - 1 | 0, D >>> 0 >= 2) break l;
                                            A[U + 536 >> 2] = D + 1;
                                            break y;
                                          }
                                          Q = 1;
                                        }
                                        w = Q, A[U + 536 >> 2] = w;
                                      }
                                      if (D = 4, M[0 | (Q = (U + 432 | 0) + w | 0)] >= 0 || M[(w = (U + 432 | 0) + w | 0) - 1 | 0] >= 4 & M[w + 1 | 0] > 3) break Q;
                                      M[0 | Q] = 4;
                                      break Q;
                                    case 2:
                                      if (A[U + 536 >> 2]) break Q;
                                      for (Q = (D = A[U + 540 >> 2]) - 1 | 0, Q &= Q >> 31; ; ) {
                                        if ((0 | (D = D - 1 | 0)) <= 0) break E;
                                        if (!(M[0 | (w = (U + 432 | 0) + D | 0)] >= 0)) break;
                                      }
                                      A[U + 536 >> 2] = D, D = 4, M[0 | w] = 4;
                                      break Q;
                                    case 3:
                                      if (A[U + 536 >> 2]) break B;
                                      if (w = (0 | (D = A[U + 540 >> 2] - 3 | 0)) <= 1 ? 1 : D, A[U + 536 >> 2] = w, D = 4, Q) break Q;
                                      M[w + (U + 432 | 0) | 0] = 4;
                                      break Q;
                                    case 4:
                                      if (A[U + 536 >> 2]) break Q;
                                      if (w = (Q = A[U + 540 >> 2]) - 3 | 0, A[U + 536 >> 2] = w, (0 | Q) <= 15) {
                                        y: {
                                          l: switch (G[A[144464 + (x << 2) >> 2] + 11 | 0] - 2 | 0) {
                                            case 0:
                                              w = M[Q + 94176 | 0];
                                              break y;
                                            case 2:
                                              w = M[Q + 94192 | 0];
                                              break y;
                                            default:
                                              break l;
                                          }
                                          w = M[Q + 94160 | 0];
                                        }
                                        A[U + 536 >> 2] = w;
                                      }
                                      D = 4, M[(U + 432 | 0) + w | 0] = 4;
                                      break Q;
                                    case 5:
                                      if (A[U + 536 >> 2]) break Q;
                                      if (y = -1, J = 0, !((0 | (Q = (w = A[U + 540 >> 2]) - 1 | 0)) < 2)) {
                                        if (D = 1, c = 1 & w, (0 | w) != 3) for (V = (-2 & w) - 4 | 0, w = 0; M[(U + 432 | 0) + D | 0] < 0 && (J = (o = (0 | (Y = M[(U + 320 | 0) + D | 0])) < (0 | y)) ? J : D, y = o ? y : Y), M[(o = D + 1 | 0) + (U + 432 | 0) | 0] < 0 && (J = (Y = (0 | (_ = M[o + (U + 320 | 0) | 0])) < (0 | y)) ? J : o, y = Y ? y : _), D = D + 2 | 0, o = (0 | w) != (0 | V), w = w + 2 | 0, o; ) ;
                                        !c | M[(U + 432 | 0) + D | 0] >= 0 || (y = (w = (0 | (o = M[(U + 320 | 0) + D | 0])) < (0 | y)) ? y : o, J = w ? J : D);
                                      }
                                      A[U + 536 >> 2] = J, G[Q + (U + 320 | 0) | 0] != 2 | (0 | y) > 1 ? (0 | y) > 0 || (J = 1, A[U + 536 >> 2] = 1) : (A[U + 536 >> 2] = Q, J = Q), D = 4, M[(U + 432 | 0) + J | 0] = 4;
                                      break Q;
                                    case 14:
                                      break R;
                                    case 12:
                                      break D;
                                    case 6:
                                      break s;
                                    default:
                                      break Q;
                                  }
                                  if (A[U + 536 >> 2]) break Q;
                                  y = (Q = A[U + 540 >> 2]) - 1 | 0, A[U + 536 >> 2] = y;
                                  s: if (!((0 | Q) < 2)) for (D = 1; ; ) {
                                    if (G[(U + 432 | 0) + D | 0] == 1) {
                                      y = D - 1 | 0, A[U + 536 >> 2] = y;
                                      break s;
                                    }
                                    if ((0 | Q) == (0 | (D = D + 1 | 0))) break;
                                  }
                                  D = 4, M[(U + 432 | 0) + y | 0] = 4;
                                  break Q;
                                }
                                for (c = -2 & w, y = 0, J = 0; w = G[0 | (V = (o = U + 432 | 0) + D | 0)], O = V, _ = M[(V = U + 208 | 0) + D | 0] > 0, M[0 | O] = _ || (0 | w) == 4 ? 3 : w, CA = (0 | (o = G[0 | (O = (w = D + 1 | 0) + o | 0)])) == 4 ? 3 : o, o = M[w + V | 0] > 0, M[0 | O] = o ? 3 : CA, y = o ? w : _ ? D : y, D = D + 2 | 0, (0 | c) != (0 | (J = J + 2 | 0)); ) ;
                              }
                              if (Y && (o = (0 | (w = G[0 | (J = (U + 432 | 0) + D | 0)])) == 4 ? 3 : w, w = M[(U + 208 | 0) + D | 0] > 0, M[0 | J] = w ? 3 : o, y = w ? D : y), w = A[U + 536 >> 2]) break F;
                              if ((0 | y) > 0) {
                                A[U + 536 >> 2] = y, w = y;
                                break F;
                              }
                              if ((0 | Q) < 6) break U;
                              w = Q - 3 | 0;
                              break w;
                            }
                            if (w = A[U + 536 >> 2]) break F;
                          }
                          w = Q - 1 | 0;
                        }
                        A[U + 536 >> 2] = w;
                      }
                      D = 4, M[(U + 432 | 0) + w | 0] = 4;
                      break Q;
                    }
                    if (A[U + 536 >> 2]) break Q;
                    w = 1, A[U + 536 >> 2] = 1, G[U + 209 | 0] | A[U + 540 >> 2] < 3 | M[U + 210 | 0] <= 0 || (w = 2, A[U + 536 >> 2] = 2), D = 4, M[U + 432 | w] = 4;
                    break Q;
                  }
                  if (A[U + 536 >> 2] || (0 | (w = A[U + 540 >> 2])) < 3) break B;
                  if (pA(U + 432 | 1, 0, w - 1 | 0), A[U + 536 >> 2] = 2, Q || (M[U + 434 | 0] = 4), D = 4, w >>> 0 < 4) break Q;
                  M[431 + (w + U | 0) | 0] = 3;
                  break Q;
                }
                A[U + 536 >> 2] = Q, D = 4;
                break Q;
              }
              D = Q;
            }
            !(256 & n) | 2 & E || (0 | (Q = A[U + 540 >> 2])) < 3 | (0 | S) > 2 || G[0 | (w = (Q = Q + (U + 432 | 0) | 0) - 1 | 0)] != 4 | G[A[144464 + (x << 2) >> 2] + 11 | 0] != 2 || (M[0 | w] = 1, M[Q - 2 | 0] = 4);
            Q: {
              B: {
                if (AA) S = A[U + 540 >> 2];
                else {
                  if (Q = M[U + 433 | 0], !(!(4096 & n) | (0 | (S = A[U + 540 >> 2])) != 3)) {
                    if ((0 | Q) == 4) {
                      M[U + 434 | 0] = 3;
                      break B;
                    }
                    if (G[U + 434 | 0] == 4) {
                      M[U + 433 | 0] = 3;
                      break B;
                    }
                  }
                  if (!(!(8192 & n) | (0 | Q) >= 0 | (0 | S) < 4 | M[U + 434 | 0] < 4)) {
                    M[U + 433 | 0] = 3;
                    break B;
                  }
                }
                if (J = 0, (0 | S) < 2) break Q;
              }
              for (y = (0 | D) < 4 ? 4 : 3, V = 128 & n, _ = 64 & n, O = 32 & n, Y = S - 1 | 0, CA = 16 & n, BA = !(32768 & n), x = 0, o = 0, D = 1; ; ) {
                B: {
                  E: if ((0 | (w = M[0 | (c = (U + 432 | 0) + D | 0)])) >= 0) J = y;
                  else {
                    J = 3;
                    R: {
                      D: if (!(!(!CA | (0 | y) > 3) & (0 | D) == (0 | Y))) {
                        if (!(1 & (x | BA))) break R;
                        if (!(M[431 + (U + D | 0) | 0] > 1)) {
                          if ((0 | (w = M[(Q = D + 1 | 0) + (U + 432 | 0) | 0])) >= 2) {
                            if ((0 | y) != 4 || (J = 4, w >>> 0 >= 3)) break D;
                          } else if (!(!O | (0 | y) != 3)) {
                            y = 3;
                            break B;
                          }
                          if (!_ | D >>> 0 < 2 || (J = G[(U + 320 | 0) + D | 0])) break R;
                          if ((0 | Y) > (0 | (w = D))) {
                            for (; ; ) {
                              if (M[(U + 320 | 0) + w | 0] > 0) break B;
                              if ((0 | Y) == (0 | (w = w + 1 | 0))) break;
                            }
                            if (J) break R;
                          }
                          if (M[Q + (U + 320 | 0) | 0] <= 0) break R;
                          break B;
                        }
                        J = y;
                      }
                      w = G[0 | c];
                      break E;
                    }
                    M[0 | c] = y, x = 1, J = 3, w = y;
                  }
                  E: {
                    if (w << 24 >> 24 >= 4) {
                      if (Q = o || D, !o | !V) break E;
                      M[0 | c] = 3;
                    }
                    y = J;
                    break B;
                  }
                  y = J, o = Q;
                }
                if (J = 1, (0 | S) == (0 | (D = D + 1 | 0))) break;
              }
            }
            if (g = !AA | (0 | g) >= 0 ? g : A[((0 | S) < 3 ? 16 : 20) + I >> 2], y = 0, w = 0, J) {
              if (x = 3 & (Q = S - 1 | 0), J = 0, S - 2 >>> 0 < 3) D = 1;
              else for (AA = -4 & Q, D = 1, o = 0; w = (Q = (0 | (w = (c = (0 | (w = (Y = (0 | (w = (S = (0 | (Y = M[(Q = U + 432 | 0) + D | 0])) < (0 | w)) ? w : Y)) > (0 | (c = M[(V = D + 1 | 0) + Q | 0]))) ? w : c)) > (0 | (O = M[(_ = D + 2 | 0) + Q | 0]))) ? w : O)) > (0 | (CA = M[(O = D + 3 | 0) + Q | 0]))) ? w : CA, y = Q ? c ? Y ? S ? y : D : V : _ : O, D = D + 4 | 0, (0 | AA) != (0 | (o = o + 4 | 0)); ) ;
              if (x) for (; w = (Q = (0 | (o = M[(U + 432 | 0) + D | 0])) < (0 | w)) ? w : o, y = Q ? y : D, D = D + 1 | 0, (0 | x) != (0 | (J = J + 1 | 0)); ) ;
            }
            if ((0 | g) < 0 ? g = w : (0 | g) <= (0 | w) & (0 | w) > 4 || (M[(U + 432 | 0) + y | 0] = g), x = C + 197 | 0, S = 1, !(1 & E) && (Q = A[144464 + (v << 2) >> 2])) {
              if (w = U, !((0 | (J = G[Q + 11 | 0])) != 1 & (0 | v) != 15)) for (; Q = G[0 | (w = w + 1 | 0)], (0 | (J = G[A[144464 + (Q << 2) >> 2] + 11 | 0])) == 1 | (0 | Q) == 15; ) ;
              !(48 & (Q = A[I + 4 >> 2])) | (0 | J) != 2 || (M[0 | C] = (32 & Q) >>> 5 | 0 && M[U + 433 | 0] > 3 ? 11 : 23, C = C + 1 | 0);
            }
            Q: if (!(C >>> 0 >= x >>> 0)) for (Y = 65536 & n, c = 2 & n, AA = 4 & n, D = U; ; ) {
              if (!(w = G[0 | D])) break Q;
              if (E = D, D = D + 1 | 0, Q = A[144464 + (w << 2) >> 2]) {
                B: {
                  E: {
                    R: switch (G[Q + 11 | 0]) {
                      case 0:
                        A[I + 8200 >> 2] = 0;
                        break B;
                      case 2:
                        if (!(16 & G[Q + 6 | 0])) break E;
                        break;
                      default:
                        break R;
                    }
                    if (G[0 | D] != 20) break B;
                  }
                  if ((0 | (v = A[U + 540 >> 2])) < (0 | S)) break A;
                  o = M[0 | (n = (U + 432 | 0) + S | 0)], A[I + 8200 >> 2] = o;
                  E: {
                    R: {
                      if (!((0 | (Q = o)) > 1)) {
                        if (J = v - 1 | 0, !(!AA | (0 | S) < 2 | (0 | g) < 2) && (Q = 0, (0 | J) == (0 | S))) break R;
                        if (Q = 1, !((0 | S) == 1 | c | (v - 2 | 0) == (0 | S) & M[J + (U + 432 | 0) | 0] < 2 | (0 | J) == (0 | S) || M[431 + (U + S | 0) | 0] >= 0 && (Q = o, Y))) {
                          Q = 0, M[0 | n] = 0;
                          break R;
                        }
                      }
                      if (Q && (0 | Q) < 2) break E;
                    }
                    M[0 | C] = G[Q + 94151 | 0], C = C + 1 | 0, o = M[0 | n];
                  }
                  J = (0 | g) > (0 | o), G[0 | D] == 12 && 1 & (v = A[I + 28 >> 2]) && (D = (16 & v ? (0 | y) != (0 | S) : (0 | Q) < 4) ? E + 2 | 0 : D), g = J ? g : o, S = S + 1 | 0;
                }
                if ((0 | w) != 1 && (M[0 | C] = w, C = C + 1 | 0), !(C >>> 0 < x >>> 0)) break;
              }
            }
            M[0 | C] = 0;
          }
          return void (t = U + 544 | 0);
        }
        LA(86136, 86634, 1353, 94208), r();
      }
      function JQ(I, C, Q, g, E, U, w, D, J) {
        var o, y = 0, S = 0, Y = 0, c = 0, n = 0, V = 0, x = 0, O = 0, v = 0, _ = 0, AA = 0, CA = 0, BA = 0, EA = 0, wA = 0, yA = 0, NA = 0, kA = 0, nA = 0, WA = 0, gI = 0, FI = 0, oI = 0, kI = 0, ZI = 0, VI = 0, bI = 0, vI = 0, _I = 0, RC = 0;
        t = o = t - 336 | 0, c = D, V = 65535 & J, n = g, Y = 65535 & E, AA = -2147483648 & (E ^ J);
        A: {
          if (!((v = J >>> 16 & 32767) - 32767 >>> 0 > 4294934529 & (x = E >>> 16 & 32767) - 32767 >>> 0 >= 4294934530)) {
            if (!(!g & (0 | (y = 2147483647 & E)) == 2147418112 ? !(C | Q) : y >>> 0 < 2147418112)) {
              O = g, AA = 32768 | E;
              break A;
            }
            if (!(!D & (0 | (E = 2147483647 & J)) == 2147418112 ? !(U | w) : E >>> 0 < 2147418112)) {
              O = D, AA = 32768 | J, C = U, Q = w;
              break A;
            }
            if (!(C | g | 2147418112 ^ y | Q)) {
              if (!(U | D | 2147418112 ^ E | w)) {
                C = 0, Q = 0, AA = 2147450880;
                break A;
              }
              AA |= 2147418112, C = 0, Q = 0;
              break A;
            }
            if (!(U | D | 2147418112 ^ E | w)) {
              C = 0, Q = 0;
              break A;
            }
            if (!(C | g | Q | y)) {
              O = (C = !(U | D | E | w)) ? 0 : O, AA = C ? 2147450880 : AA, C = 0, Q = 0;
              break A;
            }
            if (!(U | D | E | w)) {
              AA |= 2147418112, C = 0, Q = 0;
              break A;
            }
            (0 | y) == 65535 | y >>> 0 < 65535 && (J = g = !(Y | n), y = g ? C : n, D = g <<= 6, fI(o + 320 | 0, C, Q, n, Y, (g = g + ((0 | (J = aA(J ? Q : Y))) == 32 ? aA(y) + 32 | 0 : J) | 0) - 15 | 0), CA = 16 - g | 0, n = A[o + 328 >> 2], Y = A[o + 332 >> 2], Q = A[o + 324 >> 2], C = A[o + 320 >> 2]), E >>> 0 > 65535 || (D = g = !(c | V), J = g ? U : c, E = g <<= 6, fI(o + 304 | 0, U, w, c, V, (g = g + ((0 | (D = aA(D ? w : V))) == 32 ? aA(J) + 32 | 0 : D) | 0) - 15 | 0), CA = (g + CA | 0) - 16 | 0, c = A[o + 312 >> 2], V = A[o + 316 >> 2], U = A[o + 304 >> 2], w = A[o + 308 >> 2]);
          }
          if (NA = E = 65536 | V, kA = c, y = E << 15 | (g = c) >>> 17, rI(o + 288 | 0, g = E = g << 15 | w >>> 17, D = y, 0, 0, J = 0 - g | 0, y = 1963258675 - (y + !!(0 | g) | 0) | 0, 0, 0), rI(o + 272 | 0, 0 - (g = A[o + 296 >> 2]) | 0, 0 - (A[o + 300 >> 2] + !!(0 | g) | 0) | 0, 0, 0, J, y, 0, 0), rI(o + 256 | 0, J = (g = A[o + 280 >> 2]) << 1 | A[o + 276 >> 2] >>> 31, g = A[o + 284 >> 2] << 1 | g >>> 31, 0, 0, E, D, 0, 0), rI(o + 240 | 0, J, g, 0, 0, 0 - (y = A[o + 264 >> 2]) | 0, 0 - (A[o + 268 >> 2] + !!(0 | y) | 0) | 0, 0, 0), rI(o + 224 | 0, y = (J = A[o + 248 >> 2]) << 1 | A[o + 244 >> 2] >>> 31, g = A[o + 252 >> 2] << 1 | J >>> 31, 0, 0, E, D, 0, 0), rI(o + 208 | 0, y, g, 0, 0, 0 - (J = A[o + 232 >> 2]) | 0, 0 - (A[o + 236 >> 2] + !!(0 | J) | 0) | 0, 0, 0), rI(o + 192 | 0, J = (g = A[o + 216 >> 2]) << 1 | A[o + 212 >> 2] >>> 31, g = A[o + 220 >> 2] << 1 | g >>> 31, 0, 0, E, D, 0, 0), rI(o + 176 | 0, J, g, 0, 0, 0 - (y = A[o + 200 >> 2]) | 0, 0 - (A[o + 204 >> 2] + !!(0 | y) | 0) | 0, 0, 0), rI(o + 160 | 0, J = E, g = D, 0, 0, D = (c = (E = A[o + 184 >> 2]) << 1 | A[o + 180 >> 2] >>> 31) - 1 | 0, E = (A[o + 188 >> 2] << 1 | E >>> 31) - !c | 0, 0, 0), rI(o + 144 | 0, U << 15, w << 15 | U >>> 17, 0, 0, g = D, E, 0, 0), _ = o + 112 | 0, wA = A[o + 168 >> 2], D = A[o + 172 >> 2], S = (c = A[o + 160 >> 2]) + (J = A[o + 152 >> 2]) | 0, y = (V = A[o + 164 >> 2]) + A[o + 156 >> 2] | 0, J = y = J >>> 0 > S >>> 0 ? y + 1 | 0 : y, y = (y = (0 | V) == (0 | y) & S >>> 0 < c >>> 0 | y >>> 0 < V >>> 0) >>> 0 > (V = y + wA | 0) >>> 0 ? D + 1 | 0 : D, rI(_, g, E, 0, 0, 0 - (D = (c = !J & S >>> 0 > 1 | !!(0 | J)) + V | 0) | 0, 0 - (!!(0 | D) + (y = c >>> 0 > D >>> 0 ? y + 1 | 0 : y) | 0) | 0, 0, 0), rI(o + 128 | 0, 1 - S | 0, 0 - ((S >>> 0 > 1) + J | 0) | 0, 0, 0, g, E, 0, 0), kI = (x - v | 0) + CA | 0, _ = E = A[o + 116 >> 2], c = (g = A[o + 112 >> 2]) << 1, x = y = E << 1 | g >>> 31, g = y, yA = D = A[o + 140 >> 2], g = g + (y = D << 1 | (E = A[o + 136 >> 2]) >>> 31) | 0, E = g = (D = (J = E << 1 | A[o + 132 >> 2] >>> 31) + c | 0) >>> 0 < J >>> 0 ? g + 1 | 0 : g, EA = g = g - (D >>> 0 < 13927) | 0, wA = g, ZI = y = 65536 | Y, VI = n, vI = (g = n) << 1, _I = y = y << 1 | g >>> 31, WA = y, gI = g = tA(EA, S = 0, y, 0), BA = y = QA, CA = C << 1, v = g = Q << 1 | C >>> 31, V = y = 0, EA = (0 | E) == (0 | EA) & (J = D - 13927 | 0) >>> 0 < D >>> 0 | E >>> 0 > EA >>> 0, E = (0 | E) == (0 | x) & D >>> 0 < c >>> 0 | E >>> 0 < x >>> 0, g = A[o + 120 >> 2], y = D = A[o + 124 >> 2] << 1 | g >>> 31, y = (g = (S = yA >>> 31 | 0) + (g = g << 1 | _ >>> 31) | 0) >>> 0 < S >>> 0 ? y + 1 | 0 : y, S = (D = g) >>> 0 > (g = g + E | 0) >>> 0 ? y + 1 | 0 : y, S = (E = g) >>> 0 > (g = g + EA | 0) >>> 0 ? S + 1 | 0 : S, E = g - 1 | 0, y = tA(v, V, EA = S - !g | 0, x = 0), D = QA + BA | 0, _ = (0 | BA) == (0 | (D = (g = y + gI | 0) >>> 0 < y >>> 0 ? D + 1 | 0 : D)) & g >>> 0 < gI >>> 0 | D >>> 0 < BA >>> 0, yA = E, E = tA(E, y = 0, nA = (bI = Q >>> 31 | 0) | n << 1, BA = 0), y = QA + D | 0, S = 0, c = y = E >>> 0 > (n = E + g | 0) >>> 0 ? y + 1 | 0 : y, S = (E = g = (0 | y) == (0 | D) & g >>> 0 > n >>> 0 | D >>> 0 > y >>> 0) >>> 0 > (g = g + _ | 0) >>> 0 ? 1 : S, E = tA(WA, V, EA, x), y = QA + S | 0, _ = g = E + g | 0, g = g >>> 0 < E >>> 0 ? y + 1 | 0 : y, E = tA(WA, V, yA, BA), Y = QA, D = E, E = tA(nA, BA, EA, x), y = QA + Y | 0, E = y = E >>> 0 > (S = D + E | 0) >>> 0 ? y + 1 | 0 : y, g = g + (y = (0 | Y) == (0 | y) & D >>> 0 > S >>> 0 | y >>> 0 < Y >>> 0) | 0, _ = Y = _ + E | 0, Y = g = Y >>> 0 < E >>> 0 ? g + 1 | 0 : g, y = S + c | 0, E = y = (g = (E = 0) + n | 0) >>> 0 < E >>> 0 ? y + 1 | 0 : y, D = (0 | y) == (0 | c) & g >>> 0 < n >>> 0 | y >>> 0 < c >>> 0, y = Y, S = D, FI = D = D + _ | 0, S = y = S >>> 0 > D >>> 0 ? y + 1 | 0 : y, _ = g, Y = g, n = E, gI = J, g = tA(J, 0, nA, BA), D = QA, E = g, J = tA(wA, O, v, O), y = QA + D | 0, J = (0 | D) == (0 | (y = (g = g + J | 0) >>> 0 < J >>> 0 ? y + 1 | 0 : y)) & g >>> 0 < E >>> 0 | D >>> 0 > y >>> 0, D = y, E = tA(yA, BA, oI = -2 & CA, 0), y = QA + y | 0, E = y = E >>> 0 > (c = E + g | 0) >>> 0 ? y + 1 | 0 : y, g = (0 | y) == (0 | D) & g >>> 0 > c >>> 0 | D >>> 0 > y >>> 0, D = 0, g = ((J = g + J | 0) >>> 0 < g >>> 0 ? 1 : D) + n | 0, y = S, J = g = (Y = J + Y | 0) >>> 0 < J >>> 0 ? g + 1 | 0 : g, D = g = (0 | g) == (0 | n) & Y >>> 0 < _ >>> 0 | g >>> 0 < n >>> 0, RC = g = g + FI | 0, _ = y = D >>> 0 > g >>> 0 ? y + 1 | 0 : y, g = tA(WA, V, gI, O), FI = QA, WA = g, D = tA(EA, x, oI, O), y = QA + FI | 0, n = g = g + D | 0, S = g + (V = tA(wA, O, nA, BA)) | 0, g = (D = g >>> 0 < D >>> 0 ? y + 1 | 0 : y) + QA | 0, g = S >>> 0 < V >>> 0 ? g + 1 | 0 : g, x = S, V = S + (y = tA(v, O, yA, BA)) | 0, S = QA + g | 0, nA = (0 | g) == (0 | (S = y >>> 0 > V >>> 0 ? S + 1 | 0 : S)) & V >>> 0 < x >>> 0 | g >>> 0 > S >>> 0, y = ((g = (g = (g = (0 | g) == (0 | D) & n >>> 0 > x >>> 0 | g >>> 0 < D >>> 0) + (y = (0 | D) == (0 | FI) & n >>> 0 < WA >>> 0 | D >>> 0 < FI >>> 0) | 0) + nA | 0) | (yA = 0)) + J | 0, n = y = (D = S) >>> 0 > (x = D + Y | 0) >>> 0 ? y + 1 | 0 : y, g = (0 | J) == (0 | y) & Y >>> 0 > x >>> 0 | J >>> 0 > y >>> 0, y = _, D = g, yA = g = g + RC | 0, J = y = D >>> 0 > g >>> 0 ? y + 1 | 0 : y, g = tA(wA, O, oI, O), wA = QA, Y = g, D = tA(v, O, gI, O), y = QA + wA | 0, D = (0 | (y = (g = g + D | 0) >>> 0 < D >>> 0 ? y + 1 | 0 : y)) == (0 | wA) & g >>> 0 < Y >>> 0 | y >>> 0 < wA >>> 0, Y = y, g = y + c | 0, y = (D | (_ = 0)) + E | 0, Y = (0 | E) == (0 | (y = g >>> 0 < Y >>> 0 ? y + 1 | 0 : y)) & g >>> 0 < c >>> 0 | E >>> 0 > y >>> 0, S = (D = y) + (y = V) | 0, y = 0, y = ((E = g = (0 | D) == (0 | (S = (c = (V = 0) + g | 0) >>> 0 < V >>> 0 ? S + 1 | 0 : S)) & g >>> 0 > c >>> 0 | D >>> 0 > S >>> 0) >>> 0 > (g = g + Y | 0) >>> 0 ? 1 : y) + n | 0, S = J, E = y = (E = g) >>> 0 > (g = g + x | 0) >>> 0 ? y + 1 | 0 : y, J = S = (J = D = (0 | n) == (0 | y) & g >>> 0 < x >>> 0 | y >>> 0 < n >>> 0) >>> 0 > (D = D + yA | 0) >>> 0 ? S + 1 | 0 : S, (0 | S) == 131071 | S >>> 0 < 131071 ? (VI = vI | bI, ZI = BA | _I, rI(o + 80 | 0, g, E, D, J, U, w, kA, NA), V = S = A[o + 84 >> 2], y = C << 17, n = (Q = (c = 0) - (Y = A[o + 88 >> 2]) | 0) - (S = !!(S | (C = A[o + 80 >> 2]))) | 0, Y = (y - (A[o + 92 >> 2] + (Y >>> 0 > c >>> 0) | 0) | 0) - (Q >>> 0 < S >>> 0) | 0, c = 0 - C | 0, V = 0 - (!!(0 | C) + V | 0) | 0, C = kI + 16382 | 0) : (rI(o + 96 | 0, g = (1 & E) << 31 | g >>> 1, E = D << 31 | E >>> 1, D = (1 & J) << 31 | D >>> 1, J = J >>> 1 | 0, U, w, kA, NA), v = n = A[o + 100 >> 2], n = (c = 0 - (CA = A[o + 104 >> 2]) | 0) - (Y = !!(n | (S = A[o + 96 >> 2]))) | 0, Y = ((C << 16) - (A[o + 108 >> 2] + (V >>> 0 < CA >>> 0) | 0) | 0) - (Y >>> 0 > c >>> 0) | 0, c = 0 - S | 0, V = 0 - (!!(0 | S) + v | 0) | 0, CA = C, v = Q, C = kI + 16383 | 0), (0 | C) >= 32767) AA |= 2147418112, C = 0, Q = 0;
          else {
            if ((0 | C) > 0) S = Y << 1 | n >>> 31, n = n << 1 | V >>> 31, Y = S, CA = D, v = 65535 & J | C << 16, S = V << 1 | c >>> 31, J = c << 1;
            else {
              if ((0 | C) <= -113) {
                C = 0, Q = 0;
                break A;
              }
              oQ(o - -64 | 0, g, E, D, J, 1 - C | 0), fI(o + 48 | 0, CA, v, VI, ZI, C + 112 | 0), rI(o + 32 | 0, U, w, kA, NA, g = A[o + 64 >> 2], E = A[o + 68 >> 2], CA = A[o + 72 >> 2], v = A[o + 76 >> 2]), C = A[o + 40 >> 2], c = (Q = A[o + 56 >> 2]) - (n = C << 1 | (S = A[o + 36 >> 2]) >>> 31) | 0, Y = A[o + 60 >> 2] - ((A[o + 44 >> 2] << 1 | C >>> 31) + (Q >>> 0 < n >>> 0) | 0) | 0, y = (C = A[o + 32 >> 2]) << 1, n = c - (C = (0 | (D = S << 1 | C >>> 31)) == (0 | (J = A[o + 52 >> 2])) & y >>> 0 > (Q = A[o + 48 >> 2]) >>> 0 | D >>> 0 > J >>> 0) | 0, Y = Y - (C >>> 0 > c >>> 0) | 0, S = J - ((Q >>> 0 < y >>> 0) + D | 0) | 0, J = Q - y | 0;
            }
            C = J, rI(o + 16 | 0, U, w, kA, NA, 3, 0, 0, 0), rI(o, U, w, kA, NA, 5, 0, 0, 0), D = S + (Q = 0) | 0, D = J >>> 0 > (C = C + (y = 1 & g) | 0) >>> 0 ? D + 1 | 0 : D, J = C, w = (0 | w) == (0 | D) & C >>> 0 > U >>> 0 | w >>> 0 < D >>> 0, S = Y, C = (0 | Q) == (0 | D) & C >>> 0 < y >>> 0 | Q >>> 0 > D >>> 0, y = E, Q = y = (Q = C = (C = (0 | (S = C >>> 0 > (U = C + n | 0) >>> 0 ? S + 1 | 0 : S)) == (0 | NA)) & (0 | U) == (0 | kA) ? w : C & U >>> 0 > kA >>> 0 | S >>> 0 > NA >>> 0) >>> 0 > (C = C + g | 0) >>> 0 ? y + 1 | 0 : y, g = (0 | E) == (0 | y) & C >>> 0 < g >>> 0 | E >>> 0 > y >>> 0, y = v, y = (E = g) >>> 0 > (g = g + CA | 0) >>> 0 ? y + 1 | 0 : y, w = g, Y = (0 | (E = A[o + 20 >> 2])) == (0 | D) & UA[o + 16 >> 2] < J >>> 0 | E >>> 0 < D >>> 0, E = A[o + 28 >> 2], E = y >>> 0 < 2147418112 & ((0 | (g = A[o + 24 >> 2])) == (0 | U) & (0 | E) == (0 | S) ? Y : (0 | E) == (0 | S) & g >>> 0 < U >>> 0 | E >>> 0 < S >>> 0), g = Q, y = (Q = C = (0 | Q) == (0 | (g = (Y = E) >>> 0 > (E = C + E | 0) >>> 0 ? g + 1 | 0 : g)) & C >>> 0 > E >>> 0 | Q >>> 0 > g >>> 0) >>> 0 > (C = C + w | 0) >>> 0 ? y + 1 | 0 : y, w = C, D = (0 | (Q = A[o + 4 >> 2])) == (0 | D) & UA[o >> 2] < J >>> 0 | Q >>> 0 < D >>> 0, Q = A[o + 12 >> 2], Q = S = (Q = C = y >>> 0 < 2147418112 & ((0 | (C = A[o + 8 >> 2])) == (0 | U) & (0 | Q) == (0 | S) ? D : (0 | Q) == (0 | S) & C >>> 0 < U >>> 0 | Q >>> 0 < S >>> 0)) >>> 0 > (C = C + E | 0) >>> 0 ? g + 1 | 0 : g, E = (0 | g) == (0 | S) & C >>> 0 < E >>> 0 | g >>> 0 > S >>> 0, g = y, U = E, O |= E = E + w | 0, AA |= g = U >>> 0 > E >>> 0 ? g + 1 | 0 : g;
          }
        }
        A[I >> 2] = C, A[I + 4 >> 2] = Q, A[I + 8 >> 2] = O, A[I + 12 >> 2] = AA, t = o + 336 | 0;
      }
      function AC(I, C, Q, g, E) {
        var U, w, D, J = 0, o = 0, y = 0, S = 0, Y = 0, c = 0, n = 0, V = 0, x = 0, O = 0, v = 0, _ = 0, AA = 0, CA = 0, BA = 0, EA = 0, wA = 0, yA = 0, NA = 0, kA = 0, nA = 0;
        if (t = w = t - 80 | 0, D = A[Q + 8 >> 2], !E | !a[Q + 4 >> 1] || (A[E + 8 >> 2] = 0), U = pA(g, 0, 152), A[U + 44 >> 2] = G[D + 14 | 0], A[U + 40 >> 2] = G[D + 15 | 0], g = a[D + 8 >> 1]) {
          for (g = A[34459] + (g << 1) | 0, O = 256 & C, v = Q + 32 | 0, CA = Q - 32 | 0, BA = Q - -64 | 0, EA = Q + 96 | 0, wA = Q + -64 | 0, yA = Q - 28 | 0, NA = 1 & C, kA = Q - 24 | 0, _ = A[30450]; ; ) {
            J = 15 & (Y = (C = a[g >> 1]) >>> 8 | 0);
            A: {
              I: {
                Q: {
                  B: {
                    E: {
                      R: {
                        D: {
                          F: {
                            w: {
                              U: {
                                i: {
                                  N: switch (0 | (y = C >>> 12 | 0)) {
                                    case 10:
                                      break D;
                                    case 9:
                                      break F;
                                    case 6:
                                      break w;
                                    case 2:
                                    case 3:
                                      break U;
                                    case 1:
                                      break i;
                                    case 0:
                                      break N;
                                    case 11:
                                    case 12:
                                    case 13:
                                    case 14:
                                    case 15:
                                      break R;
                                    default:
                                      break E;
                                  }
                                  o = 255 & C;
                                  N: {
                                    o: {
                                      s: switch (0 | J) {
                                        case 13:
                                          if (o) break o;
                                          J = g, C = 0;
                                          break N;
                                        case 0:
                                          J = g;
                                          y: switch (o - 1 | 0) {
                                            case 1:
                                              break A;
                                            case 0:
                                              break I;
                                            default:
                                              break y;
                                          }
                                          A[w + 20 >> 2] = CD(w + 75 | 0, A[D >> 2]), A[w + 16 >> 2] = C, lI(_, 85851, w + 16 | 0);
                                          break A;
                                        case 5:
                                          if (G[A[144464 + (G[Q + 34 | 0] << 2) >> 2] + 11 | 0] != 2) break A;
                                          A[U + 20 >> 2] = o;
                                          break A;
                                        case 12:
                                          break s;
                                        default:
                                          break B;
                                      }
                                      A[U + 44 >> 2] = A[U + 44 >> 2] + (C << 24 >> 31 & -256 | o);
                                      break A;
                                    }
                                    M[U + 132 | 0] = G[g + 3 | 0], J = g + 2 | 0, M[U + 133 | 0] = G[0 | J], C = 2, o >>> 0 < 3 || (M[U + 134 | 0] = G[g + 5 | 0], J = g + 4 | 0, M[U + 135 | 0] = G[0 | J], C = 4, o >>> 0 < 5 || (M[U + 136 | 0] = G[g + 7 | 0], J = g + 6 | 0, M[U + 137 | 0] = G[0 | J], C = 6, o >>> 0 < 7 || (M[U + 138 | 0] = G[g + 9 | 0], J = g + 8 | 0, M[U + 139 | 0] = G[0 | J], C = 8, o >>> 0 < 9 || (M[U + 140 | 0] = G[g + 11 | 0], J = g + 10 | 0, M[U + 141 | 0] = G[0 | J], C = 10, o >>> 0 < 11 || (M[U + 142 | 0] = G[g + 13 | 0], J = g + 12 | 0, M[U + 143 | 0] = G[0 | J], C = 12, o >>> 0 < 13 || (M[U + 144 | 0] = G[g + 15 | 0], J = g + 14 | 0, M[U + 145 | 0] = G[0 | J], C = 14, o >>> 0 < 15 || (M[U + 146 | 0] = G[g + 17 | 0], J = g + 16 | 0, M[U + 147 | 0] = G[0 | J], C = 16)))))));
                                  }
                                  M[132 + (C + U | 0) | 0] = 0, o = n;
                                  break I;
                                }
                                if (!I | J >>> 0 > 7 || (y = Q, G[A[144464 + (G[Q + 2 | 0] << 2) >> 2] + 11 | 0] != 2 && (y = v, G[A[144464 + (G[Q + 34 | 0] << 2) >> 2] + 11 | 0] != 2)) || !(1 & (J = A[I + 56 >> 2])) && 16 & G[0 | Q]) break A;
                                o = 15 & G[y + 3 | 0], o = 2 & J && G[y + 6 | 0] <= o >>> 0 ? 4 : o;
                                i: {
                                  N: {
                                    o: {
                                      s: switch ((J = 7 & Y) - 3 | 0) {
                                        case 1:
                                          break N;
                                        case 0:
                                          break s;
                                        default:
                                          break o;
                                      }
                                      if (o >>> 0 > 3) break i;
                                      break A;
                                    }
                                    if (A[102832 + (J << 2) >> 2] > (0 | o)) break i;
                                    break A;
                                  }
                                  if (G[y + 6 | 0] > o >>> 0) break A;
                                }
                                A[U + 8 >> 2] = 255 & C, o = 1;
                                break Q;
                              }
                              if ((57344 & C) == 8192) {
                                for (nA = A[32972], Y = 1, AA = 0; ; ) {
                                  S = 255 & C, J = (c = 4095 & C) >>> 8 | 0;
                                  U: if (c >>> 0 <= 3583) {
                                    (0 | (o = (J >>> 0) % 7 | 0)) == 6 && (o = a[g + 2 >> 1]), x = 0, J = Q;
                                    i: {
                                      N: {
                                        o: switch (0 | o) {
                                          case 6:
                                            if (y = 0, a[Q + 36 >> 1] | a[Q + 68 >> 1]) break U;
                                          case 3:
                                            J = BA;
                                            break N;
                                          case 9:
                                            if (y = 0, a[Q + 36 >> 1] | a[Q + 68 >> 1]) break U;
                                            if (J = EA, !a[Q + 100 >> 1]) break i;
                                            break U;
                                          case 7:
                                            if (y = 0, a[Q + 36 >> 1]) break U;
                                            for (o = 1; ; ) {
                                              if (G[A[144464 + (G[(J = (o << 5) + Q | 0) + 2 | 0] << 2) >> 2] + 11 | 0] == 2) break N;
                                              if (a[4 + (((o = o + 1 | 0) << 5) + Q | 0) >> 1]) break;
                                            }
                                            break U;
                                          case 5:
                                            if (y = 0, a[Q + 4 >> 1]) break U;
                                          case 0:
                                            x = 1, J = CA;
                                            break N;
                                          case 4:
                                            if (y = 0, a[Q + 36 >> 1]) break U;
                                          case 2:
                                            J = v;
                                            break N;
                                          case 8:
                                            if (y = 0, !E) break U;
                                            if (x = 1, A[(J = E) + 8 >> 2]) break i;
                                            break U;
                                          case 10:
                                            break o;
                                          default:
                                            break N;
                                        }
                                        if (y = 0, a[Q + 4 >> 1] | a[yA >> 1]) break U;
                                        x = 1, J = wA;
                                        break i;
                                      }
                                      N: switch (0 | o) {
                                        case 0:
                                        case 5:
                                          break N;
                                        default:
                                          break i;
                                      }
                                      J = (G[J + 2 | 0] == 1 ? -32 : 0) + J | 0;
                                    }
                                    if (O ? (o = A[144464 + (G[J + 2 | 0] << 2) >> 2], A[J + 8 >> 2] = o) : o = A[J + 8 >> 2], c >>> 0 <= 1791) {
                                      if (y = 1, A[A[144464 + (S << 2) >> 2] >> 2] == A[o >> 2]) break U;
                                      if (!(!x | G[o + 11 | 0] != 2)) {
                                        y = (0 | S) == G[o + 13 | 0];
                                        break U;
                                      }
                                      y = (0 | S) == G[o + 12 | 0];
                                      break U;
                                    }
                                    S = 31 & c, y = 0;
                                    i: switch (c >>> 5 & 7) {
                                      case 0:
                                        y = (0 | S) == G[o + 11 | 0];
                                        break U;
                                      case 1:
                                        y = (0 | S) == (15 & a[o + 6 >> 1]);
                                        break U;
                                      case 2:
                                        y = A[o + 4 >> 2] >>> S & 1;
                                        break U;
                                      case 4:
                                        break i;
                                      default:
                                        break U;
                                    }
                                    i: switch (0 | S) {
                                      case 0:
                                      case 1:
                                      case 2:
                                      case 3:
                                      case 4:
                                        if (G[A[144464 + (G[J + 2 | 0] << 2) >> 2] + 11 | 0] != 2) {
                                          if (G[A[144464 + (G[J + 34 | 0] << 2) >> 2] + 11 | 0] != 2) break U;
                                          J = J + 32 | 0;
                                        }
                                        o = 15 & G[J + 3 | 0], o = !I | !(2 & G[I + 56 | 0]) ? o : G[J + 6 | 0] <= o >>> 0 ? 4 : o;
                                        N: {
                                          o: switch (S - 3 | 0) {
                                            case 1:
                                              y = G[J + 6 | 0] <= o >>> 0;
                                              break U;
                                            case 0:
                                              if (y = 1, o >>> 0 <= 3) break N;
                                              break U;
                                            default:
                                              break o;
                                          }
                                          if (y = 1, A[102832 + (S << 2) >> 2] > (0 | o)) break U;
                                        }
                                        y = 0;
                                        break U;
                                      case 17:
                                        if (!G[o + 11 | 0]) {
                                          y = 1;
                                          break U;
                                        }
                                        y = (32 & G[Q + 1 | 0]) >>> 5 | 0;
                                        break U;
                                      case 18:
                                        y = a[J + 4 >> 1] != 0;
                                        break U;
                                      case 19:
                                        if (y = 1, a[J + 36 >> 1]) break U;
                                        y = !G[A[J + 40 >> 2] + 11 | 0];
                                        break U;
                                      case 9:
                                        if (a[J + 4 >> 1]) break U;
                                        for (; ; ) {
                                          if (y = !!(0 | (o = 12 & G[J - 29 | 0])), o) break U;
                                          if (a[(J = J - 32 | 0) + 4 >> 1]) break;
                                        }
                                        break U;
                                      case 10:
                                        y = G[o + 11 | 0] != 2;
                                        break U;
                                      case 11:
                                        for (; ; ) {
                                          if (y = !!(0 | (o = a[J + 36 >> 1])), o) break U;
                                          if (o = J, J = J + 32 | 0, G[A[o + 40 >> 2] + 11 | 0] == 2) break;
                                        }
                                        break U;
                                      case 12:
                                        if (y = 1, (254 & G[o + 11 | 0]) == 2) break U;
                                        y = (16 & G[o + 4 | 0]) >>> 4 | 0;
                                        break U;
                                      case 13:
                                        for (; y = (G[A[J + 8 >> 2] + 11 | 0] == 2) + y | 0, o = a[J + 4 >> 1], J = J - 32 | 0, !o; ) ;
                                        y = (0 | y) == 1;
                                        break U;
                                      case 14:
                                        for (; y = (G[A[J + 8 >> 2] + 11 | 0] == 2) + y | 0, o = a[J + 4 >> 1], J = J - 32 | 0, !o; ) ;
                                        y = (0 | y) == 2;
                                        break U;
                                      case 16:
                                        break i;
                                      default:
                                        break U;
                                    }
                                    y = (16 & G[0 | J]) >>> 4 | 0;
                                  } else if (y = 0, (0 | J) == 15) {
                                    i: switch (S - 1 | 0) {
                                      case 0:
                                        y = NA;
                                        break U;
                                      case 1:
                                        break i;
                                      default:
                                        break U;
                                    }
                                    y = A[nA + 132 >> 2] != 0;
                                  }
                                  U: if (1970 >>> (J = (o = 65535 & C) >>> 12 | 0) & 1) J = M[J + 102848 | 0];
                                  else {
                                    i: switch (0 | J) {
                                      case 0:
                                        if (J = 1, (3840 & o) != 3328) break U;
                                        J = 1 + (1 + (255 & o) >>> 1 | 0) | 0;
                                        break U;
                                      case 6:
                                        J = (o >>> 9 & 7) - 5 >>> 0 < 2 ? 12 : 1;
                                        break U;
                                      case 2:
                                      case 3:
                                        J = (0 | (J = 3840 & o)) == 3328 || (0 | J) == 1536 ? 2 : 1;
                                        break U;
                                      default:
                                        break i;
                                    }
                                    J = 4, (o = a[g + 4 >> 1]) >>> 0 > 61439 || (J = (0 | o) == 2 ? 3 : 2);
                                  }
                                  if (g = ((J = a[(g = (J << 1) + g | 0) >> 1] == 3) << 1) + g | 0, J ^= y, Y = AA ? J | Y : J & Y, AA = 4096 & C, (57344 & (C = a[g >> 1])) != 8192) break;
                                }
                                if (!(1 & Y)) if ((63488 & C) != 26624) {
                                  U: if (1970 >>> (J = C >>> 12 | 0) & 1) J = M[J + 102848 | 0];
                                  else {
                                    i: switch (0 | J) {
                                      case 0:
                                        if (J = 1, (3840 & C) != 3328) break U;
                                        J = 1 + (1 + (255 & C) >>> 1 | 0) | 0;
                                        break U;
                                      case 6:
                                        J = (C >>> 9 & 7) - 5 >>> 0 < 2 ? 12 : 1;
                                        break U;
                                      case 2:
                                      case 3:
                                        J = (0 | (C &= 3840)) == 3328 || (0 | C) == 1536 ? 2 : 1;
                                        break U;
                                      default:
                                        break i;
                                    }
                                    J = 4, (C = a[g + 4 >> 1]) >>> 0 > 61439 || (J = (0 | C) == 2 ? 3 : 2);
                                  }
                                  g = (((65024 & a[(C = (J << 1) + g | 0) >> 1]) == 24576) << 1) + C | 0;
                                } else g = ((255 & C) << 1) + g | 0;
                              }
                              J = g - 2 | 0, o = n;
                              break I;
                            }
                            w: switch (J >>> 1 | 0) {
                              case 0:
                                g = (((255 & C) << 1) + g | 0) - 2 | 0;
                                break A;
                              case 5:
                                A[U >> 2] = 2 | A[U >> 2], ((C = G[A[Q + 40 >> 2] + 12 | 0]) - 28 & 255) >>> 0 <= 5 && (J = a[(C = ((C << 2) + g | 0) - 112 | 0) + 4 >> 1], C = a[C + 2 >> 1], A[U + 96 >> 2] = C >>> 4 << 24 >> 24, A[U + 76 >> 2] = (15 & C) << 18 | J << 2), g = g + 24 | 0;
                                break A;
                              case 6:
                                break w;
                              default:
                                break A;
                            }
                            ((C = G[A[kA >> 2] + 13 | 0]) - 28 & 255) >>> 0 <= 5 && (J = a[(C = ((C << 2) + g | 0) - 112 | 0) + 4 >> 1], C = a[C + 2 >> 1], A[U + 100 >> 2] = C >>> 4 << 24 >> 24, A[U + 80 >> 2] = (15 & C) << 18 | J << 2), g = g + 24 | 0;
                            break A;
                          }
                          C = a[(g = g + 2 | 0) >> 1] | C << 16 & 983040;
                          F: switch (J - 1 | 0) {
                            case 0:
                              if ((0 | V) > 9) break A;
                              A[(w + 32 | 0) + (V << 2) >> 2] = g, g = (A[34459] + (C << 1) | 0) - 2 | 0, V = V + 1 | 0;
                              break A;
                            case 1:
                              A[U + 124 >> 2] = C;
                              break A;
                            case 2:
                              break F;
                            default:
                              break A;
                          }
                          A[U + 128 >> 2] = C;
                          break A;
                        }
                        A[(J = (((0 | J) != 1) << 3) + U | 0) + 108 >> 2] = a[g + 2 >> 1] | (255 & C) << 16, C = a[g + 4 >> 1] << 16, g = g + 6 | 0, A[J + 112 >> 2] = C | a[g >> 1];
                        break A;
                      }
                      if (o = a[(J = g + 2 | 0) >> 1], c = C >>> 4 | 0, A[(Y = ((S = y - 11 | 0) << 2) + U | 0) + 88 >> 2] = 255 & c, A[Y + 68 >> 2] = C << 18 & 3932160 | o << 2, (0 | (g = a[g + 4 >> 1])) == 2) {
                        g = J;
                        break A;
                      }
                      if (o = C >>> 0 <= 53247 ? g >>> 0 > 61439 ? 2 : 1 : n - ((0 | S) == 4) | 0, y - 13 >>> 0 > 1) break I;
                      A[Y + 88 >> 2] = c << 24 >> 24;
                      break I;
                    }
                    A[w + 4 >> 2] = CD(w + 75 | 0, A[D >> 2]), A[w >> 2] = C, lI(_, 85851, w);
                    break A;
                  }
                  A[4 + ((J << 2) + U | 0) >> 2] = o, o = O && (0 | J) == 1 ? 1 : n;
                }
                J = g;
              }
              (0 | o) != 1 | (0 | V) <= 0 ? (g = J, n = o) : (g = A[(w + 32 | 0) + ((V = V - 1 | 0) << 2) >> 2], n = 0);
            }
            if (g = g + 2 | 0, (0 | n) == 1) break;
          }
          !E | G[Q + 17 | 0] != 2 || (I = A[Q + 4 >> 2], A[E >> 2] = A[Q >> 2], A[E + 4 >> 2] = I, I = A[Q + 28 >> 2], A[E + 24 >> 2] = A[Q + 24 >> 2], A[E + 28 >> 2] = I, I = A[Q + 20 >> 2], A[E + 16 >> 2] = A[Q + 16 >> 2], A[E + 20 >> 2] = I, I = A[Q + 12 >> 2], A[E + 8 >> 2] = A[Q + 8 >> 2], A[E + 12 >> 2] = I), M[Q + 23 | 0] = A[U + 44 >> 2], (I = A[U + 68 >> 2]) ? (A[Q + 24 >> 2] = I, I = U + 88 | 0) : (A[Q + 24 >> 2] = A[U + 72 >> 2], I = U + 92 | 0), A[Q + 28 >> 2] = A[I >> 2];
        }
        t = w + 80 | 0;
      }
      function VB(I, C, Q, g, E, U) {
        var w, D = 0, J = 0, o = 0, y = 0, S = 0, Y = 0, c = 0, n = 0, V = 0, x = 0, O = 0, v = 0, _ = 0, AA = 0, CA = 0, BA = 0, EA = 0, wA = 0;
        t = w = t - 848 | 0;
        A: if (!(!A[I + 104 >> 2] | 8 & G[E + 2 | 0] | A[47202] == 193)) {
          for (A[g >> 2] = 0, A[33272] = 0, A[33274] = U, M[w + 192 | 0] = 0, A[33273] = w + 192; y = (U = y) + 1 | 0, M[0 | (v = C + U | 0)] - 48 >>> 0 < 10; ) ;
          A[56798] = 0, BA = w + 188 | 0, Y = -2147483648, t = O = t - 16 | 0;
          I: if (D = G[0 | C]) {
            S = C;
            Q: {
              for (; ; ) {
                if (!((0 | (D = D << 24 >> 24)) == 32 | D - 9 >>> 0 < 5)) break Q;
                if (D = G[S + 1 | 0], S = S + 1 | 0, !D) break;
              }
              break I;
            }
            Q: switch ((D = G[0 | S]) - 43 | 0) {
              case 0:
              case 2:
                break Q;
              default:
                break I;
            }
            V = (0 | D) == 45 ? -1 : 0, S = S + 1 | 0;
          } else S = C;
          for (; D = -48, (((c = M[0 | S]) - 48 & 255) >>> 0 < 10 || (D = -87, (c - 97 & 255) >>> 0 < 26 || (D = -55, !((c - 65 & 255) >>> 0 > 25)))) && !((0 | (c = D + c | 0)) >= 10); ) rI(O, 10, 0, 0, 0, n, x, 0, 0), D = 1, A[O + 8 >> 2] | A[O + 12 >> 2] || (AA = tA(n, x, 10, 0), (0 | (CA = QA)) == -1 & ~c >>> 0 < AA >>> 0 || (D = CA, x = (n = c + AA | 0) >>> 0 < c >>> 0 ? D + 1 | 0 : D, _ = 1, D = o)), S = S + 1 | 0, o = D;
          BA && (A[BA >> 2] = _ ? S : C);
          I: {
            Q: {
              if (o) A[56798] = 68, n = -2147483648, x = 0;
              else if (!x & n >>> 0 < 2147483648) break Q;
              if (!V) {
                A[56798] = 68, Y = 2147483647;
                break I;
              }
              if (!(!x & n >>> 0 <= 2147483648)) {
                A[56798] = 68;
                break I;
              }
            }
            Y = (V ^ n) - V | 0;
          }
          if (t = O + 16 | 0, V = Y, !(A[56798] | A[w + 188 >> 2] == (0 | C))) {
            I: {
              Q: {
                B: {
                  if (!(!((0 | (c = 64 & G[I + 109 | 0] ? 4 : 3)) != (0 | U) | A[I + 124 >> 2] != M[C - 2 | 0]) & M[C - 3 | 0] - 48 >>> 0 < 10)) {
                    E: {
                      if (A[I + 124 >> 2] != 32) {
                        if (!(16 & G[I + 105 | 0])) break B;
                        if ((0 | U) == 3) break E;
                        break B;
                      }
                      if ((0 | U) != 3) break B;
                    }
                    if (4 & G[E + 2 | 0] | M[C - 2 | 0] - 48 >>> 0 >= 10) break B;
                  }
                  M[133104] = 0, M[w + 288 | 0] = 0, EA = 1;
                  break Q;
                }
                if (M[133104] = 0, A[33275] = 0, M[w + 288 | 0] = 0, wA = 1, _ = 0, G[0 | C] == 48) break I;
              }
              _ = ig(I, C, v, E, 0);
            }
            G[0 | v] != 46 | M[C + y | 0] - 48 >>> 0 < 10 | 1 & M[E + 13 | 0] | M[v + 2 | 0] - 48 >>> 0 < 10 || (M[0 | v] = 0);
            I: if (!_ || (AA = 1, A[I + 212 >> 2] == 26741)) {
              if (Y = w + 256 | 0, A[w + 844 >> 2] = Y, J = y, 64 & G[E + 1 | 0] && (M[w + 256 | 0] = 45, Y = w + 256 | 1, A[w + 844 >> 2] = Y, J = U + 2 | 0), S = G[C + J | 0]) {
                for (; !((255 & S) == 32 | (0 | J) > 28) && (D = A[w + 844 >> 2], A[w + 844 >> 2] = D + 1, M[0 | D] = S, S = G[(J = J + 1 | 0) + C | 0]); ) ;
                Y = A[w + 844 >> 2];
              }
              if (M[0 | Y] = 0, AA = 1, D = M[w + 256 | 0]) {
                if (!(o = A[I + 136 >> 2]) || aI(w + 256 | 0, o)) {
                  if (D - 48 >>> 0 < 10 || (A[w + 176 >> 2] = w + 256, iA(D = w + 800 | 0, 88653, w + 176 | 0), !KA(I, D, 133104))) break I;
                  A[g >> 2] = 128 | A[g >> 2], A[w + 160 >> 2] = w + 256, iA(D = w + 800 | 0, 88773, w + 160 | 0), KA(I, D, 133116), AA = 0;
                }
                _ = 2;
              }
            }
            BA = A[E >> 2], M[w + 352 | 0] = 0, M[w + 624 | 0] = 0;
            I: {
              Q: {
                B: if (!(!wA | G[0 | C] != 48 || (0 | (D = M[C + 1 | 0])) == 32 | (0 | D) == A[I + 128 >> 2])) {
                  E: {
                    if ((0 | U) == 2) {
                      if (G[C + 3 | 0] != 58 | M[C + 5 | 0] - 48 >>> 0 >= 10 || !((0 | (D = M[C + 7 | 0])) == 32 | D - 9 >>> 0 < 5)) break E;
                      break B;
                    }
                    if ((0 | U) > 3) break Q;
                  }
                  if (G[0 | C] == 48 && !((0 | (D = U - 1 | 0)) <= 0)) for (J = 0; ; ) {
                    if (KA(I, 88875, SA(o = w + 288 | 0) + o | 0), G[(J = J + 1 | 0) + C | 0] != 48) break B;
                    if (!((0 | D) > (0 | J))) break;
                  }
                }
                B: {
                  E: {
                    if (!((0 | (D = M[0 | v])) == 32 && 16 & G[I + 105 | 0])) {
                      if (CA = 2, n = U + 2 | 0, (0 | D) == A[I + 124 >> 2]) break E;
                      x = 1, Y = 0, D = 0;
                      break B;
                    }
                    CA = 1, n = U + 2 | 0;
                  }
                  if (4 & G[E + 14 | 0]) Y = 1, D = 0, x = 1;
                  else for (D = 0, S = 1, J = U, x = 1; ; ) {
                    o = D, D = S, S = (O = J + CA | 0) + C | 0, J = 0;
                    E: {
                      for (; ; ) {
                        if (Y = 1, !(M[J + S | 0] - 48 >>> 0 >= 10)) {
                          if ((0 | c) != (0 | (J = J + 1 | 0))) continue;
                          break E;
                        }
                        break;
                      }
                      D = o;
                      break B;
                    }
                    if (M[S + c | 0] - 48 >>> 0 < 10) {
                      D = o;
                      break B;
                    }
                    if (J = 0, M[S - 1 | 0] - 48 >>> 0 < 10) {
                      D = o;
                      break B;
                    }
                    E: {
                      for (; ; ) {
                        if (G[(J + O | 0) + C | 0] == 48) {
                          if ((0 | c) != (0 | (J = J + 1 | 0))) continue;
                          break E;
                        }
                        break;
                      }
                      x = 0;
                    }
                    if ((0 | (o = M[(J = c + O | 0) + C | 0])) != A[I + 124 >> 2] & (!(16 & G[I + 105 | 0]) | (0 | o) != 32)) break B;
                    if (n = J + 2 | 0, 4 & G[2 + (T(S = D + 1 | 0, 12) + E | 0) | 0]) break;
                  }
                }
                J = !V;
                B: if (!(!x | !(64 & G[1 + (T(D, 12) + E | 0) | 0]) | A[I + 212 >> 2] != 26741)) {
                  E: switch (G[0 | (o = C + n | 0)] - 97 | 0) {
                    case 0:
                    case 4:
                      break E;
                    default:
                      break B;
                  }
                  E: {
                    R: {
                      D: {
                        F: switch ((S = G[o + 1 | 0]) - 116 | 0) {
                          case 6:
                            break B;
                          case 1:
                          case 2:
                          case 3:
                          case 4:
                          case 5:
                            break R;
                          case 0:
                            break F;
                          default:
                            break D;
                        }
                        if (G[o + 2 | 0] != 116) break E;
                        break B;
                      }
                      if ((0 | S) == 32) break B;
                    }
                    if (!(!!((0 | V) % 1e3 | 0) & (0 | D) != 1) && (0 | S) == 108) break B;
                  }
                  A[33274] = 1 | A[33274];
                }
                n = 32768 & BA, J &= EA;
                B: if (A[I + 128 >> 2] != M[0 | v] | M[C + y | 0] - 48 >>> 0 >= 10) {
                  E: {
                    if (!J) {
                      if (J = 0, o = 1, !((0 | D) > 0 & Y)) break E;
                      V = (y = TB(I, V, D, x, w + 624 | 0)) ? 0 : V, J = !!(0 | y), S = 0;
                      break B;
                    }
                    J = 1, V = 0, A[33275] == 1 && (A[w + 144 >> 2] = D + 1, iA(y = w + 800 | 0, 89026, w + 144 | 0), KA(I, y, w + 688 | 0) || (A[w + 128 >> 2] = D, iA(y = w + 800 | 0, 89026, w + 128 | 0), KA(I, y, w + 624 | 0)));
                  }
                  o = 1, S = 0;
                } else KA(I, 88882, w + 624 | 0), o = 0, S = 256;
                Y = n ? 2 : _;
                B: {
                  if (D | G[w + 624 | 0] | G[0 | v] != 46) {
                    if (D) break B;
                  } else KA(I, 89192, w + 624 | 0);
                  if (A[w + 844 >> 2] = C, M[C + 1 | 0] - 48 >>> 0 < 10) for (; y = A[w + 844 >> 2], A[w + 844 >> 2] = y + 1, M[y + 2 | 0] - 48 >>> 0 < 10; ) ;
                  if (M[A[w + 844 >> 2] - 1 | 0] - 48 >>> 0 >= 10 || (A[w + 416 >> 2] = A[w + 844 >> 2] - 1, XI(I, w + 416 | 0, w + 192 | 0, g, 4, E) && (A[33272] = 2)), G[w + 192 | 0] | G[A[w + 844 >> 2]] == 48 || XI(I, w + 844 | 0, w + 192 | 0, g, 4, E) && (A[33272] = 1), wA) {
                    if (!Y & o && (A[w + 112 >> 2] = V, iA(E = w + 800 | 0, 89214, w + 112 | 0), KA(I, E, Q))) break I;
                    if (1 & M[I + 110 | 0]) {
                      for (y = C; (32 | G[0 | y]) != 32; ) y = y + 1 | 0;
                      A[w + 416 >> 2] = y, G[y + 1 | 0] == 37 && (KA(I, 89328, Q), E = SA(Q), M[A[w + 416 >> 2] + 1 | 0] = 32, Q = Q + E | 0);
                    }
                  }
                }
                Fg(I, V, w + 416 | 0, J, D, Y | S | EA), !(2 & G[I + 109 | 0]) | (0 | D) <= 0 ? (A[w + 60 >> 2] = 15, A[w - -64 >> 2] = w + 624, A[w + 56 >> 2] = w + 416, A[w + 52 >> 2] = w + 352, A[w + 48 >> 2] = w + 288, iA(Q, 89415, w + 48 | 0)) : (A[w + 88 >> 2] = 15, A[w + 96 >> 2] = w + 416, A[w + 92 >> 2] = w + 352, A[w + 84 >> 2] = w + 624, A[w + 80 >> 2] = w + 288, iA(Q, 89346, w + 80 | 0));
                B: if (!o) for (; ; ) {
                  for (U = U + 1 | 0, o = 0; o = (y = o) + 1 | 0, M[(D = U + y | 0) + C | 0] - 48 >>> 0 < 10; ) ;
                  E = 2;
                  E: {
                    R: {
                      D: {
                        F: {
                          w: {
                            U: switch ((o = 57344 & A[I + 104 >> 2]) + -8192 >>> 13 | 0) {
                              case 6:
                                break R;
                              case 2:
                                break D;
                              case 0:
                              case 4:
                              case 5:
                                break F;
                              case 1:
                                break w;
                              case 3:
                                break U;
                              default:
                                break E;
                            }
                            E = 5;
                          }
                          if ((0 | (o = G[0 | (J = C + U | 0)])) == 48) for (; KA(I, 88875, D = w + 688 | 0), UC(Q, D), y = y - 1 | 0, (0 | (o = G[0 | (J = (U = U + 1 | 0) + C | 0)])) == 48; ) ;
                          if ((0 | E) < (0 | y) | (o << 24 >> 24) - 48 >>> 0 >= 10) break E;
                          E = w + 688 | 0, Fg(I, VQ(J), E, 0, 0, 0), UC(Q, E), U = U + y | 0;
                          break E;
                        }
                        if (Fg(I, VQ(E = C + U | 0), w + 416 | 0, 0, 0, 0), !((0 | o) == 8192 & G[0 | E] != 48)) {
                          if (A[w + 16 >> 2] = y, iA(E = w + 800 | 0, 89508, w + 16 | 0), !KA(I, E, w + 688 | 0)) break E;
                          UC((0 | o) == 49152 ? Q : w + 416 | 0, w + 688 | 0);
                        }
                        UC(Q, w + 416 | 0), U = D;
                        break E;
                      }
                      if ((0 | y) > 4 || G[0 | (E = C + U | 0)] == 48) break E;
                      Fg(I, U = VQ(E), E = w + 688 | 0, 0, 0, 0), UC(Q, E), U = D;
                      break E;
                    }
                    if (!((0 | y) <= 1)) for (; ; ) {
                      if (A[w + 32 >> 2] = M[C + U | 0], iA(E = w + 800 | 0, 89575, w + 32 | 0), !KA(I, E, w + 688 | 0)) break E;
                      if (UC(Q, w + 688 | 0), U = U + 1 | 0, !((0 | (y = y - 1 | 0)) > 1)) break;
                    }
                  }
                  E: if (!((o = G[0 | (y = C + U | 0)]) - 48 >>> 0 >= 10 || SA(Q) >>> 0 >= 190)) for (; ; ) {
                    if (E = w + 688 | 0, Dg(I, M[0 | y] - 48 | 0, 0, 2, E), D = SA(Q), A[w >> 2] = 15, A[w + 4 >> 2] = E, iA(Q + D | 0, 89594, w), (o = G[0 | (y = (U = U + 1 | 0) + C | 0)]) - 48 >>> 0 >= 10) break E;
                    if (!(SA(Q) >>> 0 <= 189)) break;
                  }
                  if (KA(I, 89678, w + 688 | 0) && UC(Q, w + 688 | 0), A[I + 128 >> 2] != (0 | o) | M[1 + (C + U | 0) | 0] - 48 >>> 0 >= 10) break B;
                  KA(I, 88882, E = w + 688 | 0), UC(Q, E);
                }
                if (!(E = G[0 | Q]) | (0 | E) == 21 || (E = mA(w + 184 | 0, C = 1 + (C + U | 0) | 0), U = A[w + 184 >> 2], !(2 & G[I + 106 | 0]) | (0 | U) != 32 || (mA(w + 184 | 0, C + E | 0), U = A[w + 184 >> 2]), gA(U) | x || (I = SA(Q) + Q | 0, M[0 | I] = 11, M[I + 1 | 0] = 0)), A[g >> 2] = -2147483648 | A[g >> 2], A[33275] = A[33275] - 1, J = 1, AA) break A;
                A[33264] = 1;
                break A;
              }
              A[g >> 2] = -129 & A[g >> 2], J = 0;
              break A;
            }
            J = 1;
          }
        }
        return t = w + 848 | 0, J;
      }
      function zg(I, C, Q, g) {
        var E, U, w = 0, D = 0, J = 0, o = 0, y = 0, S = 0, Y = 0, c = 0, n = 0, V = 0, x = 0, O = 0, v = 0, _ = 0, AA = 0, CA = 0, BA = 0, EA = 0, wA = 0, yA = 0, NA = 0;
        if (t = E = t - 416 | 0, _ = a[Q + 8 >> 1], n = G[Q + 10 | 0], 64 & (U = A[Q >> 2])) {
          for (A[Q >> 2] = -65 & U, M[199388] = 1, J = A[47202], Y = A[49846], y = A[47352], S = A[47351], o = A[47350]; ; ) {
            w = (D = A[198304 + (S << 2) >> 2]) >> 8;
            A: {
              I: switch ((31 & D) - 9 | 0) {
                case 0:
                  J = w;
                  break A;
                case 4:
                  Y = w;
                  break A;
                case 3:
                  break I;
                default:
                  break A;
              }
              y = D >>> 0 >= 256 ? w + y | 0 : 0;
            }
            if (!(!(128 & D) & (0 | o) > (0 | (S = S + 1 | 0)))) break;
          }
          A[47352] = y, A[47351] = S, A[49846] = Y, A[47202] = J;
        }
        Y = 0;
        A: if (!((0 | (w = A[49572])) > 997)) {
          if (1048576 & U || !G[0 | C]) G[199388] && (A[49572] = w + 1, M[199388] = 0, A[(I = 190288 + (w << 3) | 0) >> 2] = 983042, A[I + 4 >> 2] = 0), M[189088] = 0;
          else if (!((0 | w) > 990)) {
            (0 | (w = A[I + 8224 >> 2])) > 0 && (A[I + 8224 >> 2] = w - 1), J = 512 & U ? g : g + 4 | 0, y = (240 & A[47202]) == 16, (O = 2 & U) && ((0 | (D = A[47200])) < 3 || (0 | (w = A[47350])) > 243 || (G[199388] && (A[(S = 198300 + (w << 2) | 0) >> 2] = -129 & A[S >> 2]), A[47350] = w + 1, M[199388] = 1, AA = (0 | D) == 3 ? 20 : D, A[198304 + (w << 2) >> 2] = AA << 8 | 193)), o = y ? J : g;
            I: {
              Q: {
                if (!(8 & U)) {
                  for (; g = G[(w = c) + C | 0], M[w + (E + 240 | 0) | 0] = g, 223 & g && (c = w + 1 | 0, w >>> 0 < 160); ) ;
                  if (M[E + 66 | 0] = 0, c = E - -64 | 2, Y = Gg(A[47192], C, Q, c), A[E + 412 >> 2] = Y, !(4096 & Y)) break Q;
                  bA(C, E + 240 | 0, w);
                  break A;
                }
                B: if (IC(C, 87276, 3)) WC(C, 189088, E + 240 | 0);
                else {
                  if (S = 0, 223 & (w = G[0 | (c = C + 3 | 0)])) for (; M[(E + 240 | 0) + S | 0] = xC(w << 24 >> 24), S = S + 1 | 0, 223 & (w = G[0 | (c = c + 1 | 0)]); ) ;
                  M[(g = E + 240 | 0) + S | 0] = 0, w = 0;
                  E: if (!((0 | (Q = A[34461])) <= 0)) {
                    for (; ; ) {
                      if (!aI(g, T(w, 44) + 137856 | 0)) {
                        A[34457] = w;
                        break E;
                      }
                      if ((0 | Q) == (0 | (w = w + 1 | 0))) break;
                    }
                    w = Q;
                  }
                  if ((0 | (Q = (0 | Q) == (0 | w) ? -1 : w)) <= 0) break B;
                  GC(Q), M[189090] = 0, M[189089] = Q, M[189088] = 21;
                }
                Y = -2147483648, A[E + 412 >> 2] = -2147483648, g = -1;
                break I;
              }
              if (!(!(8388608 & Y) | 8 & G[Q + 12 | 0])) {
                for (t = y = t - 208 | 0, S = A[I + 60 >> 2], D = C; g = D, D = D + 1 | 0, G[0 | g] != 32; ) ;
                mA(y + 204 | 0, D);
                Q: if (gA(A[y + 204 >> 2])) {
                  J = YA(y, 189088), D = (!(256 & S) | (x = _C(I, D, Q + 12 | 0, 0)) >>> 15) & !(67108864 & x) & G[189088] != 21;
                  B: {
                    E: {
                      if (512 & S) {
                        if (!(D & !(16 & G[Q + 12 | 0]))) break E;
                        break B;
                      }
                      if (D) break B;
                    }
                    YA(189088, J);
                    break Q;
                  }
                  if (M[0 | g] = 45, A[Q >> 2] = -2 & A[Q >> 2], Y = 0, D = 189088, V = _C(A[47192], C, Q, 0), A[E + 412 >> 2] = V, !((0 | S) <= 0) && (J = G[189088])) {
                    for (; Y = (G[A[144464 + (J << 2) >> 2] + 11 | 0] == 2) + Y | 0, J = G[0 | (D = D + 1 | 0)]; ) ;
                    if (!((31 & S) >= (0 | Y))) {
                      M[0 | g] = 32, A[E + 412 >> 2] = _C(A[47192], C, Q, 0);
                      break Q;
                    }
                  }
                  A[E + 412 >> 2] = 128 | (V || x), A[33264] = 1;
                }
                t = y + 208 | 0;
              }
              if (g = -1, G[189088] == 21) {
                if (S = YA(E + 16 | 0, 132848), y = A[E + 412 >> 2], D = bA(C, E + 240 | 0, w), J = E - -64 | 1, (0 | (g = wB(G[189089] ? 189089 : 87315, 188772, 189296))) < 0 || (A[Q >> 2] = 4194304 | A[Q >> 2], G[E + 66 | 0] ? (L[E + 64 >> 1] = 8192, y = _C(A[47193], J, Q, 0)) : y = Gg(A[47193], D, Q, c)), G[189088] == 21 && (w = bA(D, E + 240 | 0, w), (0 | (g = wB(G[189089] ? 189089 : 87315, 188772, 189296))) < 0 || (A[Q >> 2] = 4194304 | A[Q >> 2], G[E + 66 | 0] ? (L[E + 64 >> 1] = 8192, y = _C(A[47193], J, Q, 0)) : y = Gg(A[47193], w, Q, c)), Y = 4096, G[189088] == 21)) break A;
                A[E + 412 >> 2] = y, (0 | g) >= 0 || (M[189090] = 0, L[94544] = 3341, (0 | g) == -1 && (YA(132848, S), GC(A[A[32972] + 60 >> 2]), g = A[A[32972] + 60 >> 2]));
              }
              Y = A[E + 412 >> 2], 128 & U || (o = 268435456 & Y && (0 | o) <= 1 ? 1 : o, !(256 & Y) | 528 & U | A[I + 8224 >> 2] | 2 & G[Q - 11 | 0] || (A[I + 8224 >> 2] = 3, o = (0 | o) <= 4 ? 4 : o)), o = (0 | o) <= 0 && A[49846] > 2 ? 1 : o;
            }
            if (Q = G[199388], !((0 | o) <= 0 | (0 | (c = A[49572])) > 990)) {
              A[49572] = c + 1, D = 1 & Q, Q = 0, L[(w = 190288 + (c << 3) | 0) >> 1] = D ? 2 : 0, M[w + 7 | 0] = 0, M[w + 3 | 0] = 0, D = o >>> 0 > 1, M[w + 2 | 0] = D ? 9 : 11, L[w + 4 >> 1] = 0, A[I + 8236 >> 2] = 0;
              I: if (!(!(w = D ? o - 2 | 0 : 0) | (0 | (c = A[49572])) > 990)) for (J = I + 8236 | 0; ; ) {
                if (A[49572] = c + 1, L[(D = 190288 + (c << 3) | 0) >> 1] = 0, M[D + 7 | 0] = 0, M[D + 3 | 0] = 0, y = w >>> 0 > 1, M[D + 2 | 0] = y ? 9 : 11, L[D + 4 >> 1] = 0, A[J >> 2] = 0, c = A[49572], (0 | (w = y ? w - 2 | 0 : 0)) <= 0) break I;
                if (!((0 | c) < 991)) break;
              }
              A[I + 8228 >> 2] = 0, A[I + 8232 >> 2] = 0;
            }
            M[199388] = 1 & Q, !O | A[47200] != 1 || (A[49572] = c + 2, M[199388] = 0, L[(w = 190288 + (c << 3) | 0) >> 1] = 1 & Q ? 2 : 0, M[w + 7 | 0] = 0, L[w + 2 >> 1] = 10, L[w + 4 >> 1] = 0, L[w + 12 >> 1] = 0, A[w + 8 >> 2] = 1179648, M[w + 15 | 0] = 0, 1 & U && MI(M[C + 1 | 0]) && (Q = G[199388], M[199388] = 0, C = A[49572], A[49572] = C + 2, L[(C = 190288 + (C << 3) | 0) >> 1] = Q ? 2 : 0, M[C + 7 | 0] = 0, L[C + 2 >> 1] = 10, L[C + 4 >> 1] = 0, L[C + 12 >> 1] = 0, A[C + 8 >> 2] = 1179648, M[C + 15 | 0] = 0)), w = n >>> 0 < 31;
            I: if (!((0 | g) < 0)) if (C = A[49572], Q = G[190290 + ((o = C - 1 | 0) << 3) | 0], G[189088] != 9 | G[189089] != 21) (0 | Q) != 21 && (D = G[199388], M[199388] = 0, M[(Q = 190288 + (C << 3) | 0) + 7 | 0] = 0, L[Q + 2 >> 1] = 21, L[Q + 4 >> 1] = 0, L[Q >> 1] = D ? 2 : 0, o = C), A[49572] = o + 1, M[190295 + (o << 3) | 0] = g;
            else {
              if ((0 | Q) != 21) break I;
              A[49572] = o;
            }
            C = 2047 & _, Q = (w ? n : 31) << 11, y = (CA = 128 & U) ? G[A[144464 + (G[189088] << 2) >> 2] + 11 | 0] ? 189088 : 189089 : 189088, (o = G[0 | y]) | !(1 & M[199388]) || (o = 23, M[0 | y] = 23, M[y + 1 | 0] = 0), BA = C | Q, J = A[49572];
            I: if (o) if ((0 | J) > 994) C = 0;
            else for (yA = ((-1610612736 & Y) == -2147483648) << 4, _ = BA + 1 | 0, NA = I + 8233 | 0, C = 0, D = 1, x = 0, EA = 1, n = -1, O = -1, w = 0; ; ) {
              S = y + 1 | 0;
              Q: {
                if ((0 | (V = 255 & o)) != 255) {
                  if (Q = A[144464 + (V << 2) >> 2]) break Q;
                  A[E >> 2] = V, t = Q = t - 16 | 0, A[Q + 12 >> 2] = E, vU(132552, 87474, E), t = Q + 16 | 0, J = A[49572];
                }
                if (!(o = G[0 | S])) break I;
                if (y = S, (0 | J) < 995) continue;
                break I;
              }
              Q: if ((0 | (v = 255 & o)) != 21) if ((0 | (y = G[Q + 11 | 0])) != 1) {
                Q = _;
                B: switch (v - 12 | 0) {
                  case 8:
                    M[(Q = 190288 + ((n = J - 1 | 0) << 3) | 0) + 3 | 0] = D, L[Q >> 1] = 4 | a[Q >> 1], Q = w;
                    break Q;
                  case 0:
                    L[(Q = 190280 + (J << 3) | 0) >> 1] = 8 | a[Q >> 1], Q = w;
                    break Q;
                  case 10:
                    Y |= 16384, A[E + 412 >> 2] = Y, Q = w;
                    break Q;
                  case 3:
                    break Q;
                  default:
                    break B;
                }
                V = G[199388], M[199388] = 0, M[(Q = (v = J << 3) + 190288 | 0) + 7 | 0] = 0, M[Q + 2 | 0] = o, L[Q + 4 >> 1] = w, w = (V ? 2 : 0) | yA, L[Q >> 1] = w, (0 | y) == 2 ? ((0 | D) >= 4 && (M[189076] = 1), (0 | n) < 0 || (0 | (C = J - 1 | 0)) != (0 | n) && (M[190291 + (C << 3) | 0] = D), L[Q >> 1] = 4 | w, wA = (C = (0 | D) > (0 | O)) ? J : wA, O = C ? D : O, w = 1, x && (M[Q + 7 | 0] = x), n = J, x = 0, C = D) : (!EA | !(64 & G[0 | NA]) || (L[Q >> 1] = 8 | w), w = D), J = J + 1 | 0, A[49572] = J, M[v + 190291 | 0] = C, Q = 0, EA = 0, D = w;
              } else {
                if (!a[Q + 8 >> 1]) {
                  D = G[Q + 14 | 0], Q = w;
                  break Q;
                }
                if ((0 | n) < 0) {
                  Q = w, x = V;
                  break Q;
                }
                M[190295 + (n << 3) | 0] = o, Q = w;
              }
              else A[(Q = 190288 + (J << 3) | 0) >> 2] = 1376256, L[Q + 4 >> 1] = 0, M[Q + 7 | 0] = G[y + 1 | 0], A[49572] = J + 1, GC(G[y + 1 | 0]), S = y + 2 | 0, J = A[49572], Q = w;
              if (!(o = G[0 | S])) break I;
              if (y = S, w = Q, !((0 | J) < 995)) break;
            }
            else C = 0;
            131072 & U && (Q = J + 1 | 0, A[49572] = Q, D = G[199388], M[199388] = 0, M[(w = 190288 + (J << 3) | 0) + 7 | 0] = 0, L[w + 2 >> 1] = 27, L[w + 4 >> 1] = 0, L[w >> 1] = D ? 2 : 0, J = Q), CA || (L[190292 + (c << 3) >> 1] = BA), A[I + 8228 >> 2] = 0, G[A[144464 + (G[190282 + (J << 3) | 0] << 2) >> 2] + 11 | 0] != 2 | (0 | C) < 4 || (A[I + 8228 >> 2] = 1), (0 | g) >= 0 && (YA(132848, E + 16 | 0), GC(A[A[32972] + 60 >> 2]), Q = G[199388], M[199388] = 0, g = A[49572], L[(C = 190288 + (g << 3) | 0) >> 1] = Q ? 2 : 0, L[C + 2 >> 1] = 21, L[C + 4 >> 1] = 0, M[C + 7 | 0] = A[A[32972] + 60 >> 2], J = g + 1 | 0, A[49572] = J), (0 | AA) > 0 && (M[199388] = 0, A[49572] = J + 1, A[(C = 190288 + (J << 3) | 0) >> 2] = 655362, Q = A[47350], A[47350] = Q + 1, M[C + 7 | 0] = 0, L[C + 4 >> 1] = 0, A[198304 + (Q << 2) >> 2] = AA << 8 | 225), 1024 & Y && (L[(C = 190288 + (wA << 3) | 0) >> 1] = 64 | a[C >> 1]), A[I + 8232 >> 2] = Y;
          }
        }
        return t = E + 416 | 0, Y;
      }
      function Xg(I, C, Q, g, E) {
        var U = 0, w = 0, D = 0, J = 0, o = 0, y = 0, S = 0, Y = 0, c = 0, n = 0, V = 0, x = 0, O = 0, v = 0, _ = 0, AA = 0, CA = 0, BA = 0, EA = 0, wA = 0, yA = 0, NA = 0, kA = 0, nA = 0;
        A: if (C) {
          if (O = E << 4, w = (C = A[33268]) + Q | 0, !((0 | C) <= 0 || (U = G[0 | (J = O + 129360 | 0)], S = G[J + 1 | 0] - U << 8, S = (0 | C) != 1 ? (0 | S) / (0 | C) | 0 : S, (0 | Q) >= (0 | w)))) for (Y = S >>> 0 > 255, V = S >>> 8 | 0, U <<= 8, J = 0 - S >>> 8 | 0, AA = (0 | S) <= 0, C = Q; AA ? (o = (y = (y = (0 | (D = (0 | (D = A[101024 + (M[T(C, 6) + I | 0] << 2) >> 2])) < (0 | J) ? J : D)) >= 18 ? 18 : D) + (D = (0 | (D = (0 | (U = U + S | 0)) / 256 | 0)) > 0 ? D : 0) | 0) >>> 0 >= 254 ? 254 : y, D = D >>> 0 >= 254 ? 254 : D) : (D = T(C, 6) + I | 0, M[D + 2 | 0] = Y | G[D + 2 | 0], D = (y = (0 | (D = (0 | U) / 256 | 0)) > 0 ? D : 0) >>> 0 >= 254 ? 254 : y, o = (y = y + V | 0) >>> 0 >= 254 ? 254 : y, U = U + S | 0), y = T(C, 6) + I | 0, M[y + 5 | 0] = D, M[y + 4 | 0] = o, (0 | w) != (0 | (C = C + 1 | 0)); ) ;
          if (2 & G[188785] ? (J = A[33271], A[33270] = J) : J = A[33270], V = (Y = G[(U = (C = E << 4) + 129360 | 0) + 3 | 0]) - (D = G[U + 2 | 0]) << 8, AA = A[U + 4 >> 2], (0 | Q) > 0 ? (BA = 101056, v = 5, y = (0 | V) / (G[C + 129368 | 0] - 1 | 0) | 0) : (BA = A[(C = C + 129360 | 0) + 12 >> 2], v = G[C + 10 | 0], y = 0), (0 | w) < (0 | J)) {
            for (S = (0 | Q) <= 0, x = ((C = V >> 31) ^ V) - C | 0, c = 129360 + (E << 4) | 0, D <<= 8, CA = Y << 8, Y = 0; ; ) {
              I: {
                if (o = T(w, 6) + I | 0, !(!(1 & S) & (0 | (U = M[0 | o])) < 4)) {
                  Q = 0, C = w;
                  Q: if (1 & ((0 | U) == 5 | S)) {
                    for (; (0 | (y = M[T(C, 6) + I | 0])) <= 6 && (Q = ((0 | y) > 3) + Q | 0, (0 | J) != (0 | (C = C + 1 | 0))); ) ;
                    if (n = 0, (0 | (_ = (0 | (C = G[c + 8 | 0])) > (0 | Q) ? Q : C)) < 2) {
                      y = 0, Y = D;
                      break Q;
                    }
                    y = (0 | V) / (_ - 1 | 0) | 0, Y = D;
                  } else (0 | _) > 0 ? Y = y + Y | 0 : (Y = CA + (T(x, M[n + BA | 0]) >> 6) | 0, (0 | v) > (0 | (n = n + 1 | 0)) || (BA = A[c + 12 >> 2], n = 0));
                  if (_ = _ - 1 | 0, !((0 | U) < 4)) {
                    M[0 | o] = 6, Q = (C = (0 | (C = (0 | Y) / 256 | 0)) > 0 ? C : 0) + (((Q = (U = A[AA + (U << 2) >> 2]) >> 31) ^ U) - Q | 0) | 0;
                    break I;
                  }
                }
                (0 | U) != 3 ? (C = (0 | Y) / 256 | 0, (63 & G[o - 6 | 0]) >>> 0 >= 3 ? (Q = (U = A[AA + (U << 2) >> 2]) >> 31, Q = (C = (0 | (C = C - M[c + 9 | 0] | 0)) > 0 ? C : 0) + ((Q ^ U) - Q | 0) | 0) : Q = (C = (0 | C) > 0 ? C : 0) + (((Q = (U = A[AA + (U << 2) >> 2]) >> 31) ^ U) - Q | 0) | 0) : Q = (C = (0 | (C = (0 | Y) / 256 | 0)) > 0 ? C : 0) + (((Q = (U = A[AA + 12 >> 2]) >> 31) ^ U) - Q | 0) | 0;
              }
              if (M[o + 5 | 0] = C >>> 0 >= 254 ? 254 : C, S = 0, C = (0 | Q) > 0 ? Q : 0, M[o + 4 | 0] = C >>> 0 >= 254 ? 254 : C, M[o + 2 | 0] = G[o + 2 | 0] | U >>> 31, (0 | J) == (0 | (w = w + 1 | 0))) break;
            }
            w = J;
          }
          if (!(G[133068] || ((268435455 & E) == 3 && (C = T(w, 6) + I | 0, M[C + 2 | 0] = 2 | G[C + 2 | 0]), A[33269] ? (C = G[(U = 100768 + (E << 4) | 0) + 5 | 0], D = U + 3 | 0, Q = G[U + 4 | 0] - C | 0) : (C = G[(Q = 100768 + (E << 4) | 0) + 2 | 0], D = O + 100768 | 0, Q = G[Q + 1 | 0] - C | 0), U = T(w, 6) + I | 0, M[U + 5 | 0] = C >>> 0 >= 254 ? 254 : C, M[U + 2 | 0] = G[U + 2 | 0] | Q >>> 31, C = (y = C) + (((C = Q >> 31) ^ Q) - C | 0) | 0, M[U + 4 | 0] = C >>> 0 >= 254 ? 254 : C, Q = T(J, 6) + I | 0, M[Q + 1 | 0] = G[0 | D], C = w + 1 | 0, G[0 | Q] == 4 && (M[0 | Q] = 6), (0 | (Q = g - C | 0)) <= 0 || (E = G[(w = 100768 + (E << 4) | 0) + 12 | 0], w = G[w + 13 | 0] - E << 8, w = (0 | Q) != 1 ? (0 | w) / (0 | Q) | 0 : w, (0 | C) >= (0 | g))))) for (y = w >>> 0 > 255, S = w >>> 8 | 0, Q = E << 8, E = 0 - w >>> 8 | 0, Y = (0 | w) <= 0; Y ? (D = (J = (D = (0 | (U = (0 | E) > (0 | (U = A[101024 + (M[T(C, 6) + I | 0] << 2) >> 2])) ? E : U)) >= 18 ? 18 : U) + (U = (0 | (U = (0 | (Q = Q + w | 0)) / 256 | 0)) > 0 ? U : 0) | 0) >>> 0 >= 254 ? 254 : J, J = U >>> 0 >= 254 ? 254 : U) : (U = T(C, 6) + I | 0, M[U + 2 | 0] = y | G[U + 2 | 0], J = (U = (0 | (U = (0 | Q) / 256 | 0)) > 0 ? U : 0) >>> 0 >= 254 ? 254 : U, D = (U = U + S | 0) >>> 0 >= 254 ? 254 : U, Q = Q + w | 0), U = T(C, 6) + I | 0, M[U + 5 | 0] = J, M[U + 4 | 0] = D, (0 | g) != (0 | (C = C + 1 | 0)); ) ;
        } else {
          if (C = (v = A[34455]) + T(E, 68) | 0, w = G[C + 24 | 0], J = G[C + 25 | 0], U = (C = A[33268]) + Q | 0, !((0 | C) <= 0 || (o = J - w << 8, o = (0 | C) != 1 ? (0 | o) / (0 | C) | 0 : o, (0 | Q) >= (0 | U)))) for (y = o >>> 0 > 255, S = o >>> 8 | 0, C = w << 8, J = 0 - o >>> 8 | 0, Y = (0 | o) <= 0; Y ? (w = (w = (V = (0 | (w = (0 | (w = A[101024 + (M[T(Q, 6) + I | 0] << 2) >> 2])) < (0 | J) ? J : w)) >= 18 ? 18 : w) + (D = (0 | (w = (0 | (C = C + o | 0)) / 256 | 0)) > 0 ? w : 0) | 0) >>> 0 >= 254 ? 254 : w, D = D >>> 0 >= 254 ? 254 : D) : (w = T(Q, 6) + I | 0, M[w + 2 | 0] = y | G[w + 2 | 0], D = (w = (0 | (w = (0 | C) / 256 | 0)) > 0 ? w : 0) >>> 0 >= 254 ? 254 : w, w = (w = w + S | 0) >>> 0 >= 254 ? 254 : w, C = C + o | 0), V = T(Q, 6) + I | 0, M[V + 5 | 0] = D, M[V + 4 | 0] = w, (0 | U) != (0 | (Q = Q + 1 | 0)); ) ;
          2 & G[188785] ? (Q = A[33271], A[33270] = Q) : Q = A[33270], J = Q, C = v + T(E, 68) | 0;
          I: if ((0 | (S = G[C + 33 | 0])) != 255) for (; ; ) {
            if ((0 | (J = J - 1 | 0)) < (0 | U)) {
              J = Q;
              break I;
            }
            if (!(M[T(J, 6) + I | 0] < 4)) break;
          }
          if ((0 | Q) > (0 | U)) {
            for (NA = ((w = (wA = (Y = G[C + 32 | 0]) - (o = G[0 | (D = C + 31 | 0)]) << 8) >> 31) ^ wA) - w | 0, CA = (0 | (C = G[0 | (y = C + 30 | 0)])) == 255, V = S << 8, AA = o << 8, kA = Y << 8, O = v + T(E, 68) | 0, nA = (0 | C) != 255, Y = 0, S = 0, C = 1, o = 0; ; ) {
              I: {
                if (c = T(U, 6) + I | 0, !(!(1 & C) & (0 | (x = M[0 | c])) < 4)) {
                  Q: if (1 & ((0 | x) == 5 | C)) {
                    B: if (nA) {
                      if (EA = 1, C = 0, w = y, !((0 | J) <= (0 | (o = U + 1 | 0)))) {
                        for (; ; ) {
                          if (w = y, (0 | (S = M[T(o, 6) + I | 0])) > 6) break B;
                          if (C = ((0 | S) > 3) + C | 0, (0 | J) == (0 | (o = o + 1 | 0))) break;
                        }
                        w = y;
                      }
                    } else {
                      if (C = 0, o = U, w = D, (0 | J) <= (0 | U)) break B;
                      for (; ; ) {
                        if (w = D, (0 | (S = M[T(o, 6) + I | 0])) > 6) break B;
                        if (C = ((0 | S) > 3) + C | 0, (0 | J) == (0 | (o = o + 1 | 0))) break;
                      }
                      w = D;
                    }
                    if (S = G[0 | w] << 8, yA = 0, (0 | (o = (0 | C) < (0 | (w = G[O + 34 | 0])) ? C : w)) < 2) {
                      BA = 0;
                      break Q;
                    }
                    BA = (0 | wA) / (o - 1 | 0) | 0;
                  } else (0 | U) != (0 | J) ? EA ? (CA = 1, o = o + 1 | 0, EA = 0, S = AA) : (0 | o) > 0 ? (S = S + BA | 0, EA = 0) : (EA = 0, S = (T(M[16 + (O + yA | 0) | 0], NA) >> 6) + kA | 0, yA = (0 | (C = yA + 1 | 0)) < G[O + 35 | 0] ? C : 0) : (CA = 2, S = V);
                  if (o = o - 1 | 0, !((0 | x) < 4)) {
                    C = w = U + 1 | 0;
                    Q: if (!((0 | Q) <= (0 | U))) for (; ; ) {
                      if (M[T(C, 6) + I | 0] > 1) break Q;
                      if (!((0 | Q) >= (0 | (C = C + 1 | 0)))) break;
                    }
                    M[0 | c] = 6, M[c + 1 | 0] = G[O + 26 | 0], Y = 0, n = G[O + 27 | 0], U = (0 | (U = (0 | S) / 256 | 0)) > 0 ? U : 0, M[c + 5 | 0] = U >>> 0 >= 254 ? 254 : U, U = U + n | 0, M[c + 4 | 0] = U >>> 0 >= 254 ? 254 : U, _ = C - w | 0;
                    break I;
                  }
                }
                if ((0 | x) >= 2) {
                  C = w = U + 1 | 0;
                  Q: if (!((0 | Q) <= (0 | U))) for (; ; ) {
                    if (M[T(C, 6) + I | 0] > 1) break Q;
                    if (!((0 | Q) >= (0 | (C = C + 1 | 0)))) break;
                  }
                  Y = 0, U = (0 | (U = (0 | S) / 256 | 0)) > 0 ? U : 0, M[c + 5 | 0] = U >>> 0 >= 254 ? 254 : U, n = A[100976 + (x << 2) >> 2], M[c + 2 | 0] = G[c + 2 | 0] | n >>> 31, U = (0 | (U = (x = U) + (((U = n >> 31) ^ n) - U | 0) | 0)) > 0 ? U : 0, M[c + 4 | 0] = U >>> 0 >= 254 ? 254 : U, _ = C - w | 0;
                } else (0 | _) <= 1 ? (n = M[36 + (O + CA | 0) | 0], C = 0) : (n = M[(C = O + CA | 0) + 36 | 0], C = (M[C + 39 | 0] - n | 0) / (_ - 1 | 0) | 0), w = A[100976 + (x << 2) >> 2], M[c + 2 | 0] = G[c + 2 | 0] | w >>> 31, C = (0 | (C = (((0 | S) / 256 | 0) + n | 0) + T(C, Y) | 0)) > 0 ? C : 0, M[c + 5 | 0] = C >>> 0 >= 254 ? 254 : C, C = (0 | (C = C + (((x = w) ^ (w >>= 31)) - w | 0) | 0)) > 0 ? C : 0, M[c + 4 | 0] = C >>> 0 >= 254 ? 254 : C, Y = Y + 1 | 0, w = U + 1 | 0;
              }
              if (C = 0, (0 | Q) == (0 | (U = w))) break;
            }
            U = Q;
          }
          if (G[133068] || (w = T(U, 6) + I | 0, A[33269] ? (D = v + T(E, 68) | 0, C = G[D + 47 | 0], J = G[D + 46 | 0] - C | 0, D = D + 45 | 0) : (D = v + T(E, 68) | 0, C = G[D + 44 | 0], J = G[D + 43 | 0] - C | 0, D = D + 42 | 0), D = G[0 | D], y = (((y = J >> 31) ^ J) - y | 0) + C | 0, M[w + 4 | 0] = y >>> 0 >= 254 ? 254 : y, M[w + 5 | 0] = C >>> 0 >= 254 ? 254 : C, C = T(U, 6) + I | 0, M[C + 2 | 0] = G[C + 2 | 0] | J >>> 31, Q = T(Q, 6) + I | 0, M[Q + 1 | 0] = D, C = U + 1 | 0, G[0 | Q] == 4 && (M[0 | Q] = 6), (0 | (Q = g - C | 0)) <= 0) || (w = v + T(E, 68) | 0, E = G[w + 48 | 0], w = G[w + 49 | 0] - E << 8, w = (0 | Q) != 1 ? (0 | w) / (0 | Q) | 0 : w, (0 | C) >= (0 | g))) break A;
          for (y = w >>> 0 > 255, S = w >>> 8 | 0, Q = E << 8, E = 0 - w >>> 8 | 0, Y = (0 | w) <= 0; Y ? (D = (J = (D = (0 | (U = (0 | E) > (0 | (U = A[101024 + (M[T(C, 6) + I | 0] << 2) >> 2])) ? E : U)) >= 18 ? 18 : U) + (U = (0 | (U = (0 | (Q = Q + w | 0)) / 256 | 0)) > 0 ? U : 0) | 0) >>> 0 >= 254 ? 254 : J, J = U >>> 0 >= 254 ? 254 : U) : (U = T(C, 6) + I | 0, M[U + 2 | 0] = y | G[U + 2 | 0], J = (U = (0 | (U = (0 | Q) / 256 | 0)) > 0 ? U : 0) >>> 0 >= 254 ? 254 : U, D = (U = U + S | 0) >>> 0 >= 254 ? 254 : U, Q = Q + w | 0), U = T(C, 6) + I | 0, M[U + 5 | 0] = J, M[U + 4 | 0] = D, (0 | g) != (0 | (C = C + 1 | 0)); ) ;
        }
      }
      function aQ() {
        var I, C = 0, Q = 0, g = 0, E = 0, U = 0, w = 0, D = 0, J = 0, o = 0, y = 0, S = 0, Y = 0, c = 0, n = 0, V = 0;
        if ((0 | (I = A[36455])) != (0 | (J = A[36454]))) {
          A: if (!((0 | (c = A[36427])) < 0 | (0 | J) == (0 | c))) {
            Q = S = A[8 + (216192 + ((o = c) << 4) | 0) >> 2];
            I: {
              for (; ; ) {
                if ((g = A[(w = 216192 + ((o = (0 | (g = o - 1 | 0)) < 0 ? 169 : g) << 4) | 0) >> 2]) - 5 >>> 0 < 2) break I;
                Q: {
                  if ((0 | g) <= 4) {
                    if (A[w + 12 >> 2] != (0 | Q)) break I;
                    if (g = a[w + 4 >> 1], A[w + 12 >> 2] = S, Q = A[w + 8 >> 2], 16 & (C = a[Q >> 1])) break Q;
                    for (V = 32 & C ? (T(g, 12) >>> 0) / 10 | 0 : g, E = 0, g = Q, D = 0; ; ) {
                      C = a[Q >> 1];
                      B: if (!(D >>> 0 < 3 && 8 & C)) {
                        if (C = C << 16 >> 16, (0 | (n = (y = L[2 + ((Y = D << 1) + Q | 0) >> 1]) - (U = L[(Y = S + Y | 0) + 2 >> 1]) | 0)) > (0 | (y = (0 | T(V, (0 | T(A[200944 + (D << 2) >> 2], (0 | n) > 0 ? y + (U << 1) | 0 : (y << 1) + U | 0)) / 3e3 | 0)) / 256 | 0))) E || ((0 | C) < 0 ? g = Q : (g = 0, C = (0 | (C = A[44469] + 1 | 0)) <= 169 ? C : 0, A[44469] = C, (C = (E = C << 6) + 177888 | 0) && (g = a[Q + 4 >> 1] | a[Q + 6 >> 1] << 16, U = a[Q >> 1] | a[Q + 2 >> 1] << 16, L[C >> 1] = U, L[C + 2 >> 1] = U >>> 16, L[C + 4 >> 1] = g, L[C + 6 >> 1] = g >>> 16, g = a[Q + 60 >> 1] | a[Q + 62 >> 1] << 16, U = a[Q + 56 >> 1] | a[Q + 58 >> 1] << 16, L[C + 56 >> 1] = U, L[C + 58 >> 1] = U >>> 16, L[C + 60 >> 1] = g, L[C + 62 >> 1] = g >>> 16, g = a[Q + 52 >> 1] | a[Q + 54 >> 1] << 16, U = a[Q + 48 >> 1] | a[Q + 50 >> 1] << 16, L[C + 48 >> 1] = U, L[C + 50 >> 1] = U >>> 16, L[C + 52 >> 1] = g, L[C + 54 >> 1] = g >>> 16, g = a[Q + 44 >> 1] | a[Q + 46 >> 1] << 16, U = a[Q + 40 >> 1] | a[Q + 42 >> 1] << 16, L[C + 40 >> 1] = U, L[C + 42 >> 1] = U >>> 16, L[C + 44 >> 1] = g, L[C + 46 >> 1] = g >>> 16, g = a[Q + 36 >> 1] | a[Q + 38 >> 1] << 16, U = a[Q + 32 >> 1] | a[Q + 34 >> 1] << 16, L[C + 32 >> 1] = U, L[C + 34 >> 1] = U >>> 16, L[C + 36 >> 1] = g, L[C + 38 >> 1] = g >>> 16, g = a[Q + 28 >> 1] | a[Q + 30 >> 1] << 16, U = a[Q + 24 >> 1] | a[Q + 26 >> 1] << 16, L[C + 24 >> 1] = U, L[C + 26 >> 1] = U >>> 16, L[C + 28 >> 1] = g, L[C + 30 >> 1] = g >>> 16, g = a[Q + 20 >> 1] | a[Q + 22 >> 1] << 16, U = a[Q + 16 >> 1] | a[Q + 18 >> 1] << 16, L[C + 16 >> 1] = U, L[C + 18 >> 1] = U >>> 16, L[C + 20 >> 1] = g, L[C + 22 >> 1] = g >>> 16, g = a[Q + 12 >> 1] | a[Q + 14 >> 1] << 16, U = a[Q + 8 >> 1] | a[Q + 10 >> 1] << 16, L[C + 8 >> 1] = U, L[C + 10 >> 1] = U >>> 16, L[C + 12 >> 1] = g, L[C + 14 >> 1] = g >>> 16, M[E + 177904 | 0] = 0, L[C >> 1] = 32768 | a[C >> 1], g = C))), C = y + a[Y + 2 >> 1] | 0;
                        else {
                          if ((0 - y | 0) <= (0 | n)) break B;
                          E || ((0 | C) < 0 ? g = Q : (g = 0, C = (0 | (C = A[44469] + 1 | 0)) <= 169 ? C : 0, A[44469] = C, (C = (E = C << 6) + 177888 | 0) && (g = a[Q + 4 >> 1] | a[Q + 6 >> 1] << 16, U = a[Q >> 1] | a[Q + 2 >> 1] << 16, L[C >> 1] = U, L[C + 2 >> 1] = U >>> 16, L[C + 4 >> 1] = g, L[C + 6 >> 1] = g >>> 16, g = a[Q + 60 >> 1] | a[Q + 62 >> 1] << 16, U = a[Q + 56 >> 1] | a[Q + 58 >> 1] << 16, L[C + 56 >> 1] = U, L[C + 58 >> 1] = U >>> 16, L[C + 60 >> 1] = g, L[C + 62 >> 1] = g >>> 16, g = a[Q + 52 >> 1] | a[Q + 54 >> 1] << 16, U = a[Q + 48 >> 1] | a[Q + 50 >> 1] << 16, L[C + 48 >> 1] = U, L[C + 50 >> 1] = U >>> 16, L[C + 52 >> 1] = g, L[C + 54 >> 1] = g >>> 16, g = a[Q + 44 >> 1] | a[Q + 46 >> 1] << 16, U = a[Q + 40 >> 1] | a[Q + 42 >> 1] << 16, L[C + 40 >> 1] = U, L[C + 42 >> 1] = U >>> 16, L[C + 44 >> 1] = g, L[C + 46 >> 1] = g >>> 16, g = a[Q + 36 >> 1] | a[Q + 38 >> 1] << 16, U = a[Q + 32 >> 1] | a[Q + 34 >> 1] << 16, L[C + 32 >> 1] = U, L[C + 34 >> 1] = U >>> 16, L[C + 36 >> 1] = g, L[C + 38 >> 1] = g >>> 16, g = a[Q + 28 >> 1] | a[Q + 30 >> 1] << 16, U = a[Q + 24 >> 1] | a[Q + 26 >> 1] << 16, L[C + 24 >> 1] = U, L[C + 26 >> 1] = U >>> 16, L[C + 28 >> 1] = g, L[C + 30 >> 1] = g >>> 16, g = a[Q + 20 >> 1] | a[Q + 22 >> 1] << 16, U = a[Q + 16 >> 1] | a[Q + 18 >> 1] << 16, L[C + 16 >> 1] = U, L[C + 18 >> 1] = U >>> 16, L[C + 20 >> 1] = g, L[C + 22 >> 1] = g >>> 16, g = a[Q + 12 >> 1] | a[Q + 14 >> 1] << 16, U = a[Q + 8 >> 1] | a[Q + 10 >> 1] << 16, L[C + 8 >> 1] = U, L[C + 10 >> 1] = U >>> 16, L[C + 12 >> 1] = g, L[C + 14 >> 1] = g >>> 16, M[E + 177904 | 0] = 0, L[C >> 1] = 32768 | a[C >> 1], g = C))), C = a[Y + 2 >> 1] - y | 0;
                        }
                        E = 1, L[2 + ((D << 1) + g | 0) >> 1] = C, A[w + 8 >> 2] = g;
                      }
                      if ((0 | (D = D + 1 | 0)) == 6) break;
                    }
                    S = g;
                  }
                  if ((0 | J) != (0 | o)) continue;
                  break I;
                }
                break;
              }
              S = Q;
            }
            for (g = 0; ; ) {
              if ((Q = A[(o = 216192 + (c << 4) | 0) >> 2]) - 5 >>> 0 < 2) break A;
              if ((0 | Q) <= 4) {
                if (Q = A[o + 8 >> 2], C = a[o + 4 >> 1], g) {
                  if ((0 | Q) != (0 | g)) break A;
                  A[o + 8 >> 2] = S;
                } else S = Q;
                if (16 & (g = a[S >> 1])) break A;
                for (Y = 32 & g ? (T(C, 6) >>> 0) / 5 | 0 : C, E = 0, Q = g = A[o + 12 >> 2], D = 0; ; ) {
                  I: {
                    Q: if ((0 | (J = (w = L[2 + ((C = D << 1) + g | 0) >> 1]) - (C = L[(y = C + S | 0) + 2 >> 1]) | 0)) > (0 | (w = (0 | T(Y, (0 | T(A[200944 + (D << 2) >> 2], (0 | J) > 0 ? w + (C << 1) | 0 : (w << 1) + C | 0)) / 3e3 | 0)) / 256 | 0))) {
                      if (!E) {
                        if (L[g >> 1] < 0) {
                          Q = g, C = C + w | 0;
                          break Q;
                        }
                        Q = (0 | (Q = A[44469] + 1 | 0)) <= 169 ? Q : 0, A[44469] = Q, E = a[g + 20 >> 1] | a[g + 22 >> 1] << 16, C = (Q = 177888 + (Q << 6) | 0) + 16 | 0, J = a[g + 16 >> 1] | a[g + 18 >> 1] << 16, L[C >> 1] = J, L[C + 2 >> 1] = J >>> 16, L[C + 4 >> 1] = E, L[C + 6 >> 1] = E >>> 16, C = a[g + 4 >> 1] | a[g + 6 >> 1] << 16, E = a[g >> 1] | a[g + 2 >> 1] << 16, L[Q >> 1] = E, L[Q + 2 >> 1] = E >>> 16, L[Q + 4 >> 1] = C, L[Q + 6 >> 1] = C >>> 16, C = a[g + 12 >> 1] | a[g + 14 >> 1] << 16, E = a[g + 8 >> 1] | a[g + 10 >> 1] << 16, L[Q + 8 >> 1] = E, L[Q + 10 >> 1] = E >>> 16, L[Q + 12 >> 1] = C, L[Q + 14 >> 1] = C >>> 16, C = a[g + 28 >> 1] | a[g + 30 >> 1] << 16, E = a[g + 24 >> 1] | a[g + 26 >> 1] << 16, L[Q + 24 >> 1] = E, L[Q + 26 >> 1] = E >>> 16, L[Q + 28 >> 1] = C, L[Q + 30 >> 1] = C >>> 16, C = a[g + 36 >> 1] | a[g + 38 >> 1] << 16, E = a[g + 32 >> 1] | a[g + 34 >> 1] << 16, L[Q + 32 >> 1] = E, L[Q + 34 >> 1] = E >>> 16, L[Q + 36 >> 1] = C, L[Q + 38 >> 1] = C >>> 16, C = a[g + 44 >> 1] | a[g + 46 >> 1] << 16, E = a[g + 40 >> 1] | a[g + 42 >> 1] << 16, L[Q + 40 >> 1] = E, L[Q + 42 >> 1] = E >>> 16, L[Q + 44 >> 1] = C, L[Q + 46 >> 1] = C >>> 16, C = a[g + 52 >> 1] | a[g + 54 >> 1] << 16, E = a[g + 48 >> 1] | a[g + 50 >> 1] << 16, L[Q + 48 >> 1] = E, L[Q + 50 >> 1] = E >>> 16, L[Q + 52 >> 1] = C, L[Q + 54 >> 1] = C >>> 16, C = a[g + 60 >> 1] | a[g + 62 >> 1] << 16, E = a[g + 56 >> 1] | a[g + 58 >> 1] << 16, L[Q + 56 >> 1] = E, L[Q + 58 >> 1] = E >>> 16, L[Q + 60 >> 1] = C, L[Q + 62 >> 1] = C >>> 16, M[Q + 16 | 0] = 0, L[Q >> 1] = 32768 | a[Q >> 1], C = a[y + 2 >> 1];
                      }
                      C = C + w | 0;
                    } else {
                      if ((0 | J) >= (0 - w | 0)) break I;
                      E || (L[g >> 1] < 0 ? Q = g : (Q = (0 | (Q = A[44469] + 1 | 0)) <= 169 ? Q : 0, A[44469] = Q, E = a[g + 20 >> 1] | a[g + 22 >> 1] << 16, C = (Q = 177888 + (Q << 6) | 0) + 16 | 0, J = a[g + 16 >> 1] | a[g + 18 >> 1] << 16, L[C >> 1] = J, L[C + 2 >> 1] = J >>> 16, L[C + 4 >> 1] = E, L[C + 6 >> 1] = E >>> 16, C = a[g + 4 >> 1] | a[g + 6 >> 1] << 16, E = a[g >> 1] | a[g + 2 >> 1] << 16, L[Q >> 1] = E, L[Q + 2 >> 1] = E >>> 16, L[Q + 4 >> 1] = C, L[Q + 6 >> 1] = C >>> 16, C = a[g + 12 >> 1] | a[g + 14 >> 1] << 16, E = a[g + 8 >> 1] | a[g + 10 >> 1] << 16, L[Q + 8 >> 1] = E, L[Q + 10 >> 1] = E >>> 16, L[Q + 12 >> 1] = C, L[Q + 14 >> 1] = C >>> 16, C = a[g + 28 >> 1] | a[g + 30 >> 1] << 16, E = a[g + 24 >> 1] | a[g + 26 >> 1] << 16, L[Q + 24 >> 1] = E, L[Q + 26 >> 1] = E >>> 16, L[Q + 28 >> 1] = C, L[Q + 30 >> 1] = C >>> 16, C = a[g + 36 >> 1] | a[g + 38 >> 1] << 16, E = a[g + 32 >> 1] | a[g + 34 >> 1] << 16, L[Q + 32 >> 1] = E, L[Q + 34 >> 1] = E >>> 16, L[Q + 36 >> 1] = C, L[Q + 38 >> 1] = C >>> 16, C = a[g + 44 >> 1] | a[g + 46 >> 1] << 16, E = a[g + 40 >> 1] | a[g + 42 >> 1] << 16, L[Q + 40 >> 1] = E, L[Q + 42 >> 1] = E >>> 16, L[Q + 44 >> 1] = C, L[Q + 46 >> 1] = C >>> 16, C = a[g + 52 >> 1] | a[g + 54 >> 1] << 16, E = a[g + 48 >> 1] | a[g + 50 >> 1] << 16, L[Q + 48 >> 1] = E, L[Q + 50 >> 1] = E >>> 16, L[Q + 52 >> 1] = C, L[Q + 54 >> 1] = C >>> 16, C = a[g + 60 >> 1] | a[g + 62 >> 1] << 16, E = a[g + 56 >> 1] | a[g + 58 >> 1] << 16, L[Q + 56 >> 1] = E, L[Q + 58 >> 1] = E >>> 16, L[Q + 60 >> 1] = C, L[Q + 62 >> 1] = C >>> 16, M[Q + 16 | 0] = 0, L[Q >> 1] = 32768 | a[Q >> 1], C = a[y + 2 >> 1])), C = C - w | 0;
                    }
                    E = 1, L[2 + ((D << 1) + Q | 0) >> 1] = C, A[o + 12 >> 2] = Q;
                  }
                  if ((0 | (D = D + 1 | 0)) == 6) break;
                }
                S = Q;
              }
              if ((0 | I) == (0 | (c = (0 | (Q = c + 1 | 0)) <= 169 ? Q : 0))) break;
            }
          }
          A[36454] = I;
        }
      }
      function TE(I, C) {
        var Q, g, E = 0, U = 0, w = 0, D = 0, J = 0, o = 0, y = 0, S = 0, Y = 0, c = 0, n = 0, V = 0, x = 0, O = 0, v = 0, _ = 0, AA = 0, CA = 0, BA = 0, EA = 0, wA = 0, yA = 0, NA = 0;
        t = Q = t - 48 | 0, W(+I), U = 0 | d(1), E = 0 | d(0), g = U;
        A: {
          I: {
            Q: {
              if ((J = 2147483647 & U) >>> 0 <= 1074752122) {
                if ((1048575 & U) == 598523) break Q;
                if (J >>> 0 <= 1073928572) {
                  if ((0 | g) > 0 | (0 | g) >= 0) {
                    D = (I += -1.5707963267341256) + -6077100506506192e-26, H[C >> 3] = D, H[C + 8 >> 3] = I - D - 6077100506506192e-26, U = 1;
                    break A;
                  }
                  D = (I += 1.5707963267341256) + 6077100506506192e-26, H[C >> 3] = D, H[C + 8 >> 3] = I - D + 6077100506506192e-26, U = -1;
                  break A;
                }
                if ((0 | g) > 0 | (0 | g) >= 0) {
                  D = (I += -3.1415926534682512) + -12154201013012384e-26, H[C >> 3] = D, H[C + 8 >> 3] = I - D - 12154201013012384e-26, U = 2;
                  break A;
                }
                D = (I += 3.1415926534682512) + 12154201013012384e-26, H[C >> 3] = D, H[C + 8 >> 3] = I - D + 12154201013012384e-26, U = -2;
                break A;
              }
              if (J >>> 0 <= 1075594811) {
                if (J >>> 0 <= 1075183036) {
                  if ((0 | J) == 1074977148) break Q;
                  if ((0 | g) > 0 | (0 | g) >= 0) {
                    D = (I += -4.712388980202377) + -18231301519518578e-26, H[C >> 3] = D, H[C + 8 >> 3] = I - D - 18231301519518578e-26, U = 3;
                    break A;
                  }
                  D = (I += 4.712388980202377) + 18231301519518578e-26, H[C >> 3] = D, H[C + 8 >> 3] = I - D + 18231301519518578e-26, U = -3;
                  break A;
                }
                if ((0 | J) == 1075388923) break Q;
                if ((0 | g) > 0 | (0 | g) >= 0) {
                  D = (I += -6.2831853069365025) + -2430840202602477e-25, H[C >> 3] = D, H[C + 8 >> 3] = I - D - 2430840202602477e-25, U = 4;
                  break A;
                }
                D = (I += 6.2831853069365025) + 2430840202602477e-25, H[C >> 3] = D, H[C + 8 >> 3] = I - D + 2430840202602477e-25, U = -4;
                break A;
              }
              if (J >>> 0 > 1094263290) break I;
            }
            E = (AA = (D = I + -1.5707963267341256 * (S = 0.6366197723675814 * I + 6755399441055744 - 6755399441055744)) - (c = 6077100506506192e-26 * S)) < -0.7853981633974483, U = GA(S) < 2147483648 ? ~~S : -2147483648, E ? (U = U - 1 | 0, c = 6077100506506192e-26 * (S += -1), D = I + -1.5707963267341256 * S) : AA > 0.7853981633974483 && (U = U + 1 | 0, c = 6077100506506192e-26 * (S += 1), D = I + -1.5707963267341256 * S), I = D - c, H[C >> 3] = I, W(+I), E = 0 | d(1), d(0), ((w = J >>> 20 | 0) - (E >>> 20 & 2047) | 0) < 17 || (c = D, I = (D -= I = 6077100506303966e-26 * S) - (c = 20222662487959506e-37 * S - (c - D - I)), H[C >> 3] = I, W(+I), E = 0 | d(1), d(0), (w - (E >>> 20 & 2047) | 0) < 50 || (c = D, I = (D -= I = 20222662487111665e-37 * S) - (c = 84784276603689e-45 * S - (c - D - I)), H[C >> 3] = I)), H[C + 8 >> 3] = D - I - c;
            break A;
          }
          if (J >>> 0 >= 2146435072) I -= I, H[C >> 3] = I, H[C + 8 >> 3] = I, U = 0;
          else {
            for (b(0, 0 | E), b(1, 1048575 & g | 1096810496), I = +P(), U = 0, E = 1; w = (Q + 16 | 0) + (U << 3) | 0, D = +(0 | (U = GA(I) < 2147483648 ? ~~I : -2147483648)), H[w >> 3] = D, I = 16777216 * (I - D), U = 1, w = E, E = 0, w; ) ;
            for (H[Q + 32 >> 3] = I, U = 2; U = (E = U) - 1 | 0, H[(Q + 16 | 0) + (E << 3) >> 3] == 0; ) ;
            if (CA = Q + 16 | 0, w = 0, t = o = t - 560 | 0, J = T(_ = (0 | (J = ((U = (J >>> 20 | 0) - 1046 | 0) - 3 | 0) / 24 | 0)) > 0 ? J : 0, -24) + U | 0, ((n = A[28105]) + (y = (O = E + 1 | 0) - 1 | 0) | 0) >= 0) for (U = n + O | 0, E = _ - y | 0; H[(o + 320 | 0) + (w << 3) >> 3] = (0 | E) < 0 ? 0 : +A[112432 + (E << 2) >> 2], E = E + 1 | 0, (0 | U) != (0 | (w = w + 1 | 0)); ) ;
            for (x = J - 24 | 0, U = 0, w = (0 | n) > 0 ? n : 0, V = (0 | O) <= 0; ; ) {
              if (V) I = 0;
              else for (Y = U + y | 0, E = 0, I = 0; I = H[(E << 3) + CA >> 3] * H[(o + 320 | 0) + (Y - E << 3) >> 3] + I, (0 | O) != (0 | (E = E + 1 | 0)); ) ;
              if (H[(U << 3) + o >> 3] = I, E = (0 | U) == (0 | w), U = U + 1 | 0, E) break;
            }
            yA = 47 - J | 0, BA = 48 - J | 0, NA = J - 25 | 0, U = n;
            I: {
              for (; ; ) {
                if (I = H[(U << 3) + o >> 3], E = 0, w = U, !(Y = (0 | U) <= 0)) for (; V = (o + 480 | 0) + (E << 2) | 0, y = GA(D = 5960464477539063e-23 * I) < 2147483648 ? ~~D : -2147483648, y = GA(I = -16777216 * (D = +(0 | y)) + I) < 2147483648 ? ~~I : -2147483648, A[V >> 2] = y, I = H[((w = w - 1 | 0) << 3) + o >> 3] + D, (0 | U) != (0 | (E = E + 1 | 0)); ) ;
                I = jQ(I, x), I += -8 * lA(0.125 * I), I -= +(0 | (V = GA(I) < 2147483648 ? ~~I : -2147483648));
                Q: {
                  B: {
                    E: {
                      if (EA = (0 | x) <= 0) {
                        if (x) break E;
                        y = A[476 + ((U << 2) + o | 0) >> 2] >> 23;
                      } else v = w = (U << 2) + o | 0, w = (y = A[w + 476 >> 2]) - ((E = y >> BA) << BA) | 0, A[v + 476 >> 2] = w, V = E + V | 0, y = w >> yA;
                      if ((0 | y) <= 0) break Q;
                      break B;
                    }
                    if (y = 2, !(I >= 0.5)) {
                      y = 0;
                      break Q;
                    }
                  }
                  if (E = 0, w = 0, !Y) for (; wA = A[(v = (o + 480 | 0) + (E << 2) | 0) >> 2], Y = 16777215, w || (Y = 16777216, wA) ? (A[v >> 2] = Y - wA, w = 1) : w = 0, (0 | U) != (0 | (E = E + 1 | 0)); ) ;
                  B: if (!EA) {
                    E = 8388607;
                    E: switch (0 | NA) {
                      case 1:
                        E = 4194303;
                        break;
                      case 0:
                        break E;
                      default:
                        break B;
                    }
                    A[(Y = (U << 2) + o | 0) + 476 >> 2] = A[Y + 476 >> 2] & E;
                  }
                  V = V + 1 | 0, (0 | y) == 2 && (I = 1 - I, y = 2, w && (I -= jQ(1, x)));
                }
                if (I != 0) break;
                if (w = 0, !((0 | n) >= (0 | (E = U)))) {
                  for (; w = A[(o + 480 | 0) + ((E = E - 1 | 0) << 2) >> 2] | w, (0 | E) > (0 | n); ) ;
                  if (w) {
                    for (J = x; J = J - 24 | 0, !A[(o + 480 | 0) + ((U = U - 1 | 0) << 2) >> 2]; ) ;
                    break I;
                  }
                }
                for (E = 1; w = E, E = E + 1 | 0, !A[(o + 480 | 0) + (n - w << 2) >> 2]; ) ;
                for (w = U + w | 0; ; ) {
                  if (y = U + O | 0, U = U + 1 | 0, H[(o + 320 | 0) + (y << 3) >> 3] = A[112432 + (_ + U << 2) >> 2], E = 0, I = 0, (0 | O) > 0) for (; I = H[(E << 3) + CA >> 3] * H[(o + 320 | 0) + (y - E << 3) >> 3] + I, (0 | O) != (0 | (E = E + 1 | 0)); ) ;
                  if (H[(U << 3) + o >> 3] = I, !((0 | U) < (0 | w))) break;
                }
                U = w;
              }
              (I = jQ(I, 24 - J | 0)) >= 16777216 ? (x = (o + 480 | 0) + (U << 2) | 0, E = GA(D = 5960464477539063e-23 * I) < 2147483648 ? ~~D : -2147483648, w = GA(I = -16777216 * +(0 | E) + I) < 2147483648 ? ~~I : -2147483648, A[x >> 2] = w, U = U + 1 | 0) : (E = GA(I) < 2147483648 ? ~~I : -2147483648, J = x), A[(o + 480 | 0) + (U << 2) >> 2] = E;
            }
            if (I = jQ(1, J), !((0 | U) < 0)) {
              for (E = U; w = E, H[(E << 3) + o >> 3] = I * +A[(o + 480 | 0) + (E << 2) >> 2], E = E - 1 | 0, I *= 5960464477539063e-23, w; ) ;
              if (Y = 0, !((0 | U) < 0)) for (J = (0 | n) > 0 ? n : 0, w = U; ; ) {
                for (x = J >>> 0 < Y >>> 0 ? J : Y, n = U - w | 0, E = 0, I = 0; I = H[115200 + (E << 3) >> 3] * H[(E + w << 3) + o >> 3] + I, O = (0 | E) != (0 | x), E = E + 1 | 0, O; ) ;
                if (H[(o + 160 | 0) + (n << 3) >> 3] = I, w = w - 1 | 0, E = (0 | U) != (0 | Y), Y = Y + 1 | 0, !E) break;
              }
            }
            if (I = 0, (0 | U) >= 0) for (E = U; w = E, E = E - 1 | 0, I += H[(o + 160 | 0) + (w << 3) >> 3], w; ) ;
            if (H[Q >> 3] = y ? -I : I, I = H[o + 160 >> 3] - I, E = 1, (0 | U) > 0) for (; I += H[(o + 160 | 0) + (E << 3) >> 3], w = (0 | E) != (0 | U), E = E + 1 | 0, w; ) ;
            H[Q + 8 >> 3] = y ? -I : I, t = o + 560 | 0, U = 7 & V, I = H[Q >> 3], (0 | g) < 0 ? (H[C >> 3] = -I, H[C + 8 >> 3] = -H[Q + 8 >> 3], U = 0 - U | 0) : (H[C >> 3] = I, H[C + 8 >> 3] = H[Q + 8 >> 3]);
          }
        }
        return t = Q + 48 | 0, U;
      }
      function xE() {
        var I = 0, C = 0, Q = 0, g = 0, E = 0, U = 0, w = 0, D = 0, J = 0, o = 0, y = 0, S = 0, Y = 0, c = 0, n = 0, V = 0, x = 0, O = 0, v = 0, _ = 0, AA = 0, CA = 0, BA = 0, EA = 0, wA = 0, yA = 0, NA = 0, kA = 0, nA = 0, WA = 0, gI = 0, FI = 0, oI = 0, kI = 0, ZI = 0, VI = 0, bI = 0, vI = 0, _I = 0, RC = 0, JC = 0, sC = 0, KC = 0, hQ = 0, LQ = 0, YQ = 0;
        A[55925] = 0, I = A[56772], A[56772] = I + 1, Q = A[55961], Y = A[55922], n = UB(39.89822670059037 * (C = +(0 | I))), o = UB(22.30530784048753 * C), C = +(0 | Y) / 50 * (+(0 | Q) / 100) * (UB(14.765485471872028 * C) + (n + o)) * 10, I = GA(C) < 2147483648 ? ~~C : -2147483648, A[56607] = I + A[56607];
        A: if (!(A[55923] <= 0)) {
          for (; ; ) {
            for (Q = tA(A[33209], 0, 1103515245, 0), I = QA, I = eU(Q = Q + 12345 | 0, I = Q >>> 0 < 12345 ? I + 1 | 0 : I), A[33209] = I, I = 8191 + ((I >>> 0) % 16383 | 0) | 0, A[55929] = I, WA = +(0 | I), C = 0.75 * H[28387] + WA, H[28387] = C, gI = (0 | (I = A[55924])) > (0 | (BA = A[55928])) ? 0.5 * C : C, ZI = (E = 0.033 * +A[56652]) > 0 ? 1 - E : 1, Q = A[56650] << 2, yA = (0 | (wA = A[55921])) == 1 && (0 | Q) > 263 ? 263 : Q, VI = 111136 + ((FI = A[56651]) << 1) | 0, bI = 111136 + ((NA = A[56658]) << 1) | 0, vI = (0 | NA) > 0, oI = A[55918], _I = T(oI, 40), RC = A[55925], JC = H[27967], kI = A[56607], C = H[27979], x = H[27969], D = H[27970], kA = A[56780], _ = A[56654], S = H[27976], c = H[27972], O = H[28388], v = H[28389], Y = A[55927], g = H[28383], y = A[55926], AA = A[55956], sC = H[27975], o = H[28131], U = H[28130], w = H[28123], V = H[28121], J = H[28122], EA = H[28120], CA = H[28119], KC = H[28129], hQ = H[28128], LQ = H[28127], YQ = yC(0 * H[27968]), nA = 0; ; ) {
              n = U;
              I: {
                Q: switch (wA - 1 | 0) {
                  case 0:
                    O = 0, U = V * w, w = J, J = g = U + (CA * (O = (0 | I) <= 2 ? H[111312 + (I << 3) >> 3] : O) + EA * w);
                    break I;
                  case 1:
                    if (g = 0, (0 | I) >= (0 | Y)) {
                      v = 0;
                      break I;
                    }
                    U = H[27965] - H[27966], H[27965] = U, g = 0.028 * (v = U + v);
                    break I;
                  case 2:
                    if (!y) {
                      AA = 100, g = 0;
                      break I;
                    }
                    AA = 100, Q = GA(U = +(0 | I) / +(0 | y) * 100) < 2147483648 ? ~~U : -2147483648, g = +L[110928 + ((0 | Q) % 100 << 1) >> 1], g = C * ((+L[110928 + ((Q + 1 | 0) % 100 << 1) >> 1] - g) * (U - +(0 | Q)) + g);
                    break I;
                  case 3:
                    break Q;
                  default:
                    break I;
                }
                y ? (AA = 256, Q = GA(U = +(0 | I) / +(0 | y) * 256) < 2147483648 ? ~~U : -2147483648, g = +L[111344 + ((0 | Q) % 256 << 1) >> 1], g = C * ((+L[111344 + ((Q + 1 | 0) % 256 << 1) >> 1] - g) * (U - +(0 | Q)) + g)) : (AA = 256, g = 0);
              }
              if ((0 | I) >= (0 | y) && ((0 | kI) > 0 ? (I = (0 | _I) / (0 | kI) | 0, S = 0, c = 0, c = NA >>> 0 <= 87 ? 1e-3 * +L[bI >> 1] : c, S = FI >>> 0 <= 87 ? 1e-3 * +L[VI >> 1] * 0.1 : S, BA = I >> vI, Y = (0 | (Q = (y = (I - 1 | 0) <= (0 | yA)) ? I - 2 | 0 : yA)) <= 40 ? 40 : Q, U = +L[111776 + ((Y = y || (0 | Q) < 40 ? Y : yA) << 1) >> 1], H[27966] = U, V = U, U = +(0 | Y), H[27965] = V * U * 0.333, _ = (0 | (Q = I - Y | 0)) > (0 | _) ? _ : Q, kA = 0 - (Q = (0 | kA) < 0 ? 0 - _ | 0 : _) | 0, CA = (U *= 833e-5) * U, CA *= 1 - (EA = (V = (U = LC(JC * +((0 | oI) / (0 | Y) | 0))) * YQ) + V) - (V = U * -U), I = (0 | (y = I + Q | 0)) != 4) : (A[55930] = 0, A[55931] = 0, A[55932] = 0, A[55933] = 0, BA = 4, S = 0, c = 0, y = 4, I = 0), D = (I |= !RC) ? E : D, x = I ? ZI : x, I = 0), I = I + 1 | 0, U = g = KC * o + (LQ * g + hQ * n), o = n, (0 | (nA = nA + 1 | 0)) == 4) break;
            }
            if (A[55926] = y, A[55956] = AA, A[55924] = I, H[28383] = g, A[55927] = Y, H[28389] = v, H[28388] = O, H[27972] = c, H[27976] = S, A[55928] = BA, A[56654] = _, A[56780] = kA, H[27970] = D, H[27969] = x, H[28122] = J, H[28120] = EA, H[28119] = CA, H[28123] = w, H[28121] = V, H[28131] = o, H[28130] = g, (0 | wA) == 5 && (g = 6e3 * ((C = +(0 | I) / +(0 | y)) + C + -1), H[28383] = g), C = g * x + H[28384] * D, H[28383] = C, H[28384] = C, (0 | I) < (0 | Y) && (C = S * WA + C, H[28383] = C), D = gI * H[27974], n = C * H[27973] + D, o = 0, A[55916] != 2 && (o = H[27987], J = H[27986], H[27987] = J, C = D + C * c, H[27986] = C, D = H[28059], w = H[28058], H[28059] = w, C = D * H[28057] + (H[28055] * (o * H[27985] + (H[27983] * C + J * H[27984])) + w * H[28056]), H[28058] = C, o = H[28049], D = H[28051], J = H[28048], w = H[28047], E = H[28050], H[28051] = E, C = o * D + (w * C + J * E), H[28050] = C, o = H[28043], D = H[28041], J = H[28040], w = H[28039], E = H[28042], H[28043] = E, C = D * o + (w * C + J * E), H[28042] = C, o = H[28035], D = H[28033], J = H[28032], w = H[28031], E = H[28034], H[28035] = E, C = D * o + (w * C + J * E), H[28034] = C, o = H[28027], D = H[28025], J = H[28024], w = H[28023], E = H[28026], H[28027] = E, C = D * o + (w * C + J * E), H[28026] = C, o = H[28019], D = H[28017], J = H[28016], w = H[28015], E = H[28018], H[28019] = E, C = D * o + (w * C + J * E), H[28018] = C, o = H[28011], D = H[28009], J = H[28008], w = H[28007], E = H[28010], H[28011] = E, C = D * o + (w * C + J * E), H[28010] = C, o = H[28003], D = H[28001], J = H[28e3], w = H[27999], E = H[28002], H[28003] = E, C = D * o + (w * C + J * E), H[28002] = C, o = H[27995], D = H[27993], J = H[27992], w = H[27991], E = H[27994], H[27995] = E, o = D * o + (w * C + J * E), H[27994] = o), C = H[28385], H[28385] = n, D = H[28075], J = H[28074], H[28075] = J, w = H[28067], E = H[28066], H[28067] = E, D = D * H[28073] + (H[28071] * n + J * H[28072]), H[28074] = D, J = w * H[28065] + (H[28063] * n + E * H[28064]), H[28066] = J, w = H[28081], E = H[28083], U = H[28079], g = H[28080], S = H[28082], H[28083] = S, n = w * E + (U * (C = sC * gI + n - C) + g * S), H[28082] = n, w = H[28091], E = H[28089], U = H[28087], g = H[28088], S = H[28090], H[28091] = S, w = E * w + (U * C + g * S), H[28090] = w, E = H[28099], U = H[28097], g = H[28095], S = H[28096], c = H[28098], H[28099] = c, E = U * E + (g * C + S * c), H[28098] = E, U = H[28107], g = H[28105], S = H[28103], c = H[28104], x = H[28106], H[28107] = x, U = g * U + (S * C + c * x), H[28106] = U, g = H[28115], S = H[28113], c = H[28111], x = H[28112], O = H[28114], H[28115] = O, g = S * g + (c * C + x * O), H[28114] = g, S = H[28139], c = H[28137], x = H[28136], O = H[28135], v = H[27971], V = H[28138], H[28139] = V, C = c * S + (O * (C * v - (g - (U - (E - (w - (n - (o + D + J))))))) + x * V), H[28138] = C, C = H[27977] * (C * +A[50779]), g = +(0 | (I = GA(C) < 2147483648 ? ~~C : -2147483648)), (0 | (I = A[50776])) < A[50773] && (y = I + 1 | 0, Q = A[50772], (Y = A[50774]) ? (A[50776] = y, I = T(Y, M[I + Q | 0])) : (Y = G[I + Q | 0], Q = M[Q + y | 0], A[50776] = I + 2, I = Y | Q << 8), g += +((0 | T(A[50775], (0 | T(I, A[50780])) / 1024 | 0)) / 40 | 0)), (0 | (I = A[55962])) <= 63 && (A[55962] = I + 1, g = g * +(0 | I) * 0.015625), (0 | (I = A[55963])) <= 0 || (I = I - 1 | 0, A[55963] = I, g = g * +(0 | I) * 0.015625, I || (A[55962] = 0)), Q = (I = A[51293]) + 1 | 0, A[51293] = Q, y = T(L[205184 + (I << 1) >> 1], A[50755]) >> 8, I = GA(g) < 2147483648 ? ~~g : -2147483648, (0 | Q) >= 5500 && (A[51293] = 0), Q = A[51290], A[51290] = Q + 1, I = (0 | (I = (0 | (I = I + y | 0)) <= -32768 ? -32768 : I)) >= 32767 ? 32767 : I, M[0 | Q] = I, Q = A[51290], A[51290] = Q + 1, M[0 | Q] = I >>> 8, y = (Q = A[51292]) + 1 | 0, A[51292] = y, L[205184 + (Q << 1) >> 1] = I, (0 | y) >= 5500 && (A[51292] = 0), y = 1, A[56606] = A[56606] + 1, UA[54046] < A[51290] + 2 >>> 0) break A;
            if (I = A[55925] + 1 | 0, A[55925] = I, !((0 | I) < A[55923])) break;
          }
          y = 0;
        }
        return y;
      }
      function PE(I, C, Q, g, E, U, w) {
        var D, J, o, y = 0, S = 0, Y = 0, c = 0, n = 0, V = 0, x = 0, O = 0, v = 0, _ = 0, AA = 0, CA = 0, BA = 0, EA = 0, wA = 0, yA = 0, NA = 0;
        t = D = t - 80 | 0, A[D + 76 >> 2] = C, o = D + 55 | 0, J = D + 56 | 0;
        A: {
          I: {
            Q: {
              B: {
                E: for (; ; ) {
                  if (Y = C, (2147483647 ^ O) < (0 | y)) break B;
                  O = y + O | 0;
                  R: {
                    D: {
                      F: {
                        if (S = G[0 | (y = Y)]) for (; ; ) {
                          w: {
                            U: if (C = 255 & S) {
                              if ((0 | C) != 37) break w;
                              for (S = y; ; ) {
                                if (G[S + 1 | 0] != 37) {
                                  C = S;
                                  break U;
                                }
                                if (y = y + 1 | 0, n = G[S + 2 | 0], S = C = S + 2 | 0, (0 | n) != 37) break;
                              }
                            } else C = y;
                            if ((0 | (y = y - Y | 0)) > (0 | (wA = 2147483647 ^ O))) break B;
                            if (I && CC(I, Y, y), y) continue E;
                            A[D + 76 >> 2] = C, y = C + 1 | 0, v = -1, G[C + 2 | 0] != 36 | M[C + 1 | 0] - 48 >>> 0 >= 10 || (v = M[C + 1 | 0] - 48 | 0, CA = 1, y = C + 3 | 0), A[D + 76 >> 2] = y, V = 0;
                            U: if ((C = (S = M[0 | y]) - 32 | 0) >>> 0 > 31) x = y;
                            else if (x = y, 75913 & (C = 1 << C)) for (; ; ) {
                              if (x = y + 1 | 0, A[D + 76 >> 2] = x, V |= C, (C = (S = M[y + 1 | 0]) - 32 | 0) >>> 0 >= 32) break U;
                              if (y = x, !(75913 & (C = 1 << C))) break;
                            }
                            U: if ((0 | S) != 42) {
                              if ((0 | (_ = DU(D + 76 | 0))) < 0) break B;
                              S = A[D + 76 >> 2];
                            } else {
                              if (G[x + 2 | 0] != 36 | M[x + 1 | 0] - 48 >>> 0 >= 10) {
                                if (CA) break F;
                                if (S = x + 1 | 0, !I) {
                                  A[D + 76 >> 2] = S, CA = 0, _ = 0;
                                  break U;
                                }
                                C = A[Q >> 2], A[Q >> 2] = C + 4, CA = 0, C = A[C >> 2];
                              } else A[((M[x + 1 | 0] << 2) + E | 0) - 192 >> 2] = 10, S = x + 3 | 0, CA = 1, C = A[((M[x + 1 | 0] << 3) + g | 0) - 384 >> 2];
                              if (A[D + 76 >> 2] = S, _ = C, (0 | C) >= 0) break U;
                              _ = 0 - _ | 0, V |= 8192;
                            }
                            if (y = 0, c = -1, G[0 | S] == 46) if (G[S + 1 | 0] != 42) A[D + 76 >> 2] = S + 1, c = DU(D + 76 | 0), C = A[D + 76 >> 2], EA = 1;
                            else {
                              if (G[S + 3 | 0] != 36 | M[S + 2 | 0] - 48 >>> 0 >= 10) {
                                if (CA) break F;
                                C = S + 2 | 0, c = 0, I && (S = A[Q >> 2], A[Q >> 2] = S + 4, c = A[S >> 2]);
                              } else A[((M[S + 2 | 0] << 2) + E | 0) - 192 >> 2] = 10, C = S + 4 | 0, c = A[((M[S + 2 | 0] << 3) + g | 0) - 384 >> 2];
                              A[D + 76 >> 2] = C, EA = ~c >>> 31 | 0;
                            }
                            else C = S, EA = 0;
                            for (; ; ) {
                              if (AA = y, x = 28, n = C, (y = M[0 | C]) - 123 >>> 0 < 4294967238) break Q;
                              if (C = n + 1 | 0, !((y = G[123983 + (y + T(AA, 58) | 0) | 0]) - 1 >>> 0 < 8)) break;
                            }
                            A[D + 76 >> 2] = C;
                            U: {
                              i: {
                                if ((0 | y) != 27) {
                                  if (!y) break Q;
                                  if ((0 | v) >= 0) {
                                    A[(v << 2) + E >> 2] = y, y = A[(S = (v << 3) + g | 0) + 4 >> 2], A[D + 64 >> 2] = A[S >> 2], A[D + 68 >> 2] = y;
                                    break i;
                                  }
                                  if (!I) break R;
                                  AB(D - -64 | 0, y, Q, w);
                                  break U;
                                }
                                if ((0 | v) >= 0) break Q;
                              }
                              if (y = 0, !I) continue E;
                            }
                            S = -65537 & V, V = 8192 & V ? S : V, v = 0, BA = 84065, x = J;
                            U: {
                              i: {
                                N: {
                                  o: {
                                    s: {
                                      y: {
                                        l: {
                                          j: {
                                            k: {
                                              P: {
                                                f: {
                                                  r: {
                                                    c: {
                                                      Y: {
                                                        d: {
                                                          q: switch (y = M[0 | n], (y = AA && (15 & y) == 3 ? -33 & y : y) - 88 | 0) {
                                                            case 11:
                                                              break U;
                                                            case 9:
                                                            case 13:
                                                            case 14:
                                                            case 15:
                                                              break i;
                                                            case 27:
                                                              break l;
                                                            case 12:
                                                            case 17:
                                                              break P;
                                                            case 23:
                                                              break f;
                                                            case 0:
                                                            case 32:
                                                              break r;
                                                            case 24:
                                                              break c;
                                                            case 22:
                                                              break Y;
                                                            case 29:
                                                              break d;
                                                            case 1:
                                                            case 2:
                                                            case 3:
                                                            case 4:
                                                            case 5:
                                                            case 6:
                                                            case 7:
                                                            case 8:
                                                            case 10:
                                                            case 16:
                                                            case 18:
                                                            case 19:
                                                            case 20:
                                                            case 21:
                                                            case 25:
                                                            case 26:
                                                            case 28:
                                                            case 30:
                                                            case 31:
                                                              break D;
                                                            default:
                                                              break q;
                                                          }
                                                          q: switch (y - 65 | 0) {
                                                            case 0:
                                                            case 4:
                                                            case 5:
                                                            case 6:
                                                              break i;
                                                            case 2:
                                                              break s;
                                                            case 1:
                                                            case 3:
                                                              break D;
                                                            default:
                                                              break q;
                                                          }
                                                          if ((0 | y) == 83) break y;
                                                          break D;
                                                        }
                                                        S = A[D + 64 >> 2], n = A[D + 68 >> 2], BA = 84065;
                                                        break k;
                                                      }
                                                      y = 0;
                                                      Y: switch (255 & AA) {
                                                        case 0:
                                                        case 1:
                                                        case 6:
                                                          A[A[D + 64 >> 2] >> 2] = O;
                                                          continue E;
                                                        case 2:
                                                          Y = A[D + 64 >> 2], A[Y >> 2] = O, A[Y + 4 >> 2] = O >> 31;
                                                          continue E;
                                                        case 3:
                                                          L[A[D + 64 >> 2] >> 1] = O;
                                                          continue E;
                                                        case 4:
                                                          M[A[D + 64 >> 2]] = O;
                                                          continue E;
                                                        case 7:
                                                          break Y;
                                                        default:
                                                          continue E;
                                                      }
                                                      Y = A[D + 64 >> 2], A[Y >> 2] = O, A[Y + 4 >> 2] = O >> 31;
                                                      continue E;
                                                    }
                                                    c = c >>> 0 <= 8 ? 8 : c, V |= 8, y = 120;
                                                  }
                                                  if (Y = J, yA = 32 & y, (S = A[D + 64 >> 2]) | (n = A[D + 68 >> 2])) for (; M[0 | (Y = Y - 1 | 0)] = yA | G[124512 + (15 & S) | 0], NA = !n & S >>> 0 > 15 | !!(0 | n), AA = n, n = n >>> 4 | 0, S = (15 & AA) << 28 | S >>> 4, NA; ) ;
                                                  if (!(A[D + 64 >> 2] | A[D + 68 >> 2]) | !(8 & V)) break j;
                                                  BA = 84065 + (y >>> 4 | 0) | 0, v = 2;
                                                  break j;
                                                }
                                                if (y = J, n = Y = A[D + 68 >> 2], Y | (S = A[D + 64 >> 2])) for (; M[0 | (y = y - 1 | 0)] = 7 & S | 48, AA = !n & S >>> 0 > 7 | !!(0 | n), n = (Y = n) >>> 3 | 0, S = (7 & Y) << 29 | S >>> 3, AA; ) ;
                                                if (Y = y, !(8 & V)) break j;
                                                c = (0 | (y = J - Y | 0)) < (0 | c) ? c : y + 1 | 0;
                                                break j;
                                              }
                                              S = A[D + 64 >> 2], n = y = A[D + 68 >> 2], (0 | y) < 0 ? (n = Y = 0 - (n + !!(0 | S) | 0) | 0, S = 0 - S | 0, A[D + 64 >> 2] = S, A[D + 68 >> 2] = Y, v = 1, BA = 84065) : 2048 & V ? (v = 1, BA = 84066) : BA = (v = 1 & V) ? 84067 : 84065;
                                            }
                                            Y = Ig(S, n, J);
                                          }
                                          if ((0 | c) < 0 && EA) break B;
                                          if (V = EA ? -65537 & V : V, !(c | !!((y = A[D + 64 >> 2]) | (S = A[D + 68 >> 2])))) {
                                            Y = J, c = 0;
                                            break D;
                                          }
                                          c = (0 | (y = !(y | S) + (J - Y | 0) | 0)) < (0 | c) ? c : y;
                                          break D;
                                        }
                                        if (x = (y = (y = eQ(Y = (y = A[D + 64 >> 2]) || 84639, 0, n = c >>> 0 >= 2147483647 ? 2147483647 : c)) ? y - Y | 0 : n) + Y | 0, (0 | c) >= 0) {
                                          V = S, c = y;
                                          break D;
                                        }
                                        if (V = S, c = y, G[0 | x]) break B;
                                        break D;
                                      }
                                      if (c) {
                                        S = A[D + 64 >> 2];
                                        break o;
                                      }
                                      y = 0, OI(I, 32, _, 0, V);
                                      break N;
                                    }
                                    A[D + 12 >> 2] = 0, A[D + 8 >> 2] = A[D + 64 >> 2], S = D + 8 | 0, A[D + 64 >> 2] = S, c = -1;
                                  }
                                  y = 0;
                                  o: {
                                    for (; ; ) {
                                      if (!(Y = A[S >> 2])) break o;
                                      if (!((Y = (0 | (n = $E(D + 4 | 0, Y))) < 0) | n >>> 0 > c - y >>> 0)) {
                                        if (S = S + 4 | 0, c >>> 0 > (y = y + n | 0) >>> 0) continue;
                                        break o;
                                      }
                                      break;
                                    }
                                    if (Y) break I;
                                  }
                                  if (x = 61, (0 | y) < 0) break Q;
                                  if (OI(I, 32, _, y, V), y) for (x = 0, S = A[D + 64 >> 2]; ; ) {
                                    if (!(Y = A[S >> 2]) || (x = (Y = $E(D + 4 | 0, Y)) + x | 0) >>> 0 > y >>> 0) break N;
                                    if (CC(I, D + 4 | 0, Y), S = S + 4 | 0, !(y >>> 0 > x >>> 0)) break;
                                  }
                                  else y = 0;
                                }
                                OI(I, 32, _, y, 8192 ^ V), y = (0 | y) < (0 | _) ? _ : y;
                                continue E;
                              }
                              if ((0 | c) < 0 && EA) break B;
                              if (x = 61, (0 | (y = 0 | fA[0 | U](I, H[D + 64 >> 3], _, c, V, y))) >= 0) continue E;
                              break Q;
                            }
                            M[D + 55 | 0] = A[D + 64 >> 2], c = 1, Y = o, V = S;
                            break D;
                          }
                          S = G[y + 1 | 0], y = y + 1 | 0;
                        }
                        if (I) break A;
                        if (!CA) break R;
                        for (y = 1; ; ) {
                          if (I = A[(y << 2) + E >> 2]) {
                            if (AB((y << 3) + g | 0, I, Q, w), O = 1, (0 | (y = y + 1 | 0)) != 10) continue;
                            break A;
                          }
                          break;
                        }
                        if (O = 1, y >>> 0 >= 10) break A;
                        for (; ; ) {
                          if (A[(y << 2) + E >> 2]) break F;
                          if ((0 | (y = y + 1 | 0)) == 10) break;
                        }
                        break A;
                      }
                      x = 28;
                      break Q;
                    }
                    if ((0 | (S = (0 | c) > (0 | (n = x - Y | 0)) ? c : n)) > (2147483647 ^ v)) break B;
                    if (x = 61, (0 | wA) < (0 | (y = (0 | (c = S + v | 0)) < (0 | _) ? _ : c))) break Q;
                    OI(I, 32, y, c, V), CC(I, BA, v), OI(I, 48, y, c, 65536 ^ V), OI(I, 48, S, n, 0), CC(I, Y, n), OI(I, 32, y, c, 8192 ^ V);
                    continue;
                  }
                  break;
                }
                O = 0;
                break A;
              }
              x = 61;
            }
            A[56798] = x;
          }
          O = -1;
        }
        return t = D + 80 | 0, O;
      }
      function DI(I, C, Q, g, E, U, w, D, J) {
        var o, y, S, Y = 0, c = 0, n = 0, V = 0, x = 0, O = 0, v = 0, _ = 0, AA = 0, CA = 0, BA = 0, EA = 0, wA = 0, yA = 0, NA = 0, kA = 0, nA = 0, WA = 0, gI = 0, FI = 0, oI = 0, kI = 0, ZI = 0, VI = 0, bI = 0, vI = 0, _I = 0, RC = 0, JC = 0, sC = 0, KC = 0;
        t = o = t - 96 | 0, BA = 65535 & J, x = -2147483648 & (E ^ J), kA = v = 65535 & E;
        A: {
          if (!((y = J >>> 16 & 32767) - 32767 >>> 0 > 4294934529 & (S = E >>> 16 & 32767) - 32767 >>> 0 >= 4294934530)) {
            if (Y = g, !(!g & (0 | (_ = AA = 2147483647 & E)) == 2147418112 ? !(C | Q) : _ >>> 0 < 2147418112)) {
              n = g, x = 32768 | E;
              break A;
            }
            if (!(!(E = D) & (0 | (O = AA = 2147483647 & J)) == 2147418112 ? !(U | w) : O >>> 0 < 2147418112)) {
              n = D, x = 32768 | J, C = U, Q = w;
              break A;
            }
            if (!(C | Y | 2147418112 ^ _ | Q)) {
              if (!(E | U | w | O)) {
                x = 2147450880, C = 0, Q = 0;
                break A;
              }
              x |= 2147418112, C = 0, Q = 0;
              break A;
            }
            if (!(E | U | 2147418112 ^ O | w)) {
              if (E = C | Y, g = Q | _, C = 0, Q = 0, !(g | E)) {
                x = 2147450880;
                break A;
              }
              x |= 2147418112;
              break A;
            }
            if (!(C | Y | Q | _)) {
              C = 0, Q = 0;
              break A;
            }
            if (!(E | U | w | O)) {
              C = 0, Q = 0;
              break A;
            }
            (0 | _) == 65535 | _ >>> 0 < 65535 && (AA = (Y = !(g | v)) << 6, E = aA(J = Y ? C : g) + 32 | 0, fI(o + 80 | 0, C, Q, g, v, (J = AA + ((0 | (J = aA(Y ? Q : v))) == 32 ? E : J) | 0) - 15 | 0), CA = 16 - J | 0, g = A[o + 88 >> 2], kA = A[o + 92 >> 2], Q = A[o + 84 >> 2], C = A[o + 80 >> 2]), O >>> 0 > 65535 || (v = (J = !(D | BA)) << 6, Y = aA(E = J ? U : D) + 32 | 0, fI(o - -64 | 0, U, w, D, BA, (E = v + ((0 | (E = aA(J ? w : BA))) == 32 ? Y : E) | 0) - 15 | 0), CA = 16 + (CA - E | 0) | 0, D = A[o + 72 >> 2], BA = A[o + 76 >> 2], U = A[o + 64 >> 2], w = A[o + 68 >> 2]);
          }
          if (E = U, U = w << 15 | U >>> 17, vI = Q, AA = tA(EA = -32768 & (J = E << 15), E = 0, Q, 0), NA = E = QA, _I = U, _ = C, C = tA(U, 0, C, 0), U = QA + E | 0, Q = C >>> 0 > (J = C + AA | 0) >>> 0 ? U + 1 | 0 : U, Y = 0, C = tA(_, c, EA, c), E = (U = J) + QA | 0, v = E = C >>> 0 > (O = Y + C | 0) >>> 0 ? E + 1 | 0 : E, RC = (0 | U) == (0 | E) & Y >>> 0 > O >>> 0 | E >>> 0 < U >>> 0, JC = g, wA = tA(EA, c, g, 0), sC = QA, C = tA(vI, c, _I, c), Y = QA + sC | 0, Y = C >>> 0 > (yA = C + wA | 0) >>> 0 ? Y + 1 | 0 : Y, C = BA << 15 | D >>> 17, g = tA(nA = D << 15 | w >>> 17, 0, _, c), U = QA + Y | 0, gI = U = g >>> 0 > (WA = g + yA | 0) >>> 0 ? U + 1 | 0 : U, U = (g = (0 | Q) == (0 | NA) & J >>> 0 < AA >>> 0 | Q >>> 0 < NA >>> 0) + U | 0, BA = U = Q >>> 0 > (FI = Q + WA | 0) >>> 0 ? U + 1 | 0 : U, w = FI, Q = U, kA = tA(EA, c, oI = 65536 | kA, V), KC = QA, g = tA(JC, n, _I, c), E = QA + KC | 0, J = E = g >>> 0 > (kI = g + kA | 0) >>> 0 ? E + 1 | 0 : E, C = tA(ZI = -2147483648 | C, 0, _, c), U = QA + E | 0, U = C >>> 0 > (VI = C + kI | 0) >>> 0 ? U + 1 | 0 : U, C = tA(nA, n, vI, c), bI = U, U = U + QA | 0, AA = C >>> 0 > (NA = C + VI | 0) >>> 0 ? U + 1 | 0 : U, E = Q + NA | 0, U = EA = (C = 0) >>> 0 > (_ = C + w | 0) >>> 0 ? E + 1 | 0 : E, Q = (C = _ + RC | 0) >>> 0 < _ >>> 0 ? U + 1 | 0 : U, CA = ((S + y | 0) + CA | 0) - 16383 | 0, g = tA(ZI, n, vI, c), D = QA, E = tA(oI, n, _I, c), U = QA + D | 0, V = (0 | D) == (0 | (U = E >>> 0 > (w = E + g | 0) >>> 0 ? U + 1 | 0 : U)) & g >>> 0 > w >>> 0 | U >>> 0 < D >>> 0, D = U, E = tA(nA, n, JC, n), U = QA + U | 0, E = U = (g = E + w | 0) >>> 0 < E >>> 0 ? U + 1 | 0 : U, w = (0 | U) == (0 | D) & g >>> 0 < w >>> 0 | U >>> 0 < D >>> 0, U = 0, U = (D = w) >>> 0 > (w = w + V | 0) >>> 0 ? 1 : U, D = w, w = tA(ZI, n, oI, n), U = QA + U | 0, RC = D = D + w | 0, w = w >>> 0 > D >>> 0 ? U + 1 | 0 : U, D = g, c = E, E = (0 | Y) == (0 | sC) & wA >>> 0 > yA >>> 0 | Y >>> 0 < sC >>> 0, U = 0, E = ((V = Y = (0 | Y) == (0 | gI) & yA >>> 0 > WA >>> 0 | Y >>> 0 > gI >>> 0) >>> 0 > (Y = E + Y | 0) >>> 0 ? 1 : U) + c | 0, U = w, V = E = (g = g + Y | 0) >>> 0 < Y >>> 0 ? E + 1 | 0 : E, wA = g, E = g = (0 | E) == (0 | c) & g >>> 0 < D >>> 0 | E >>> 0 < c >>> 0, Y = g = g + RC | 0, w = U = E >>> 0 > g >>> 0 ? U + 1 | 0 : U, E = tA(nA, n, oI, n), c = QA, g = tA(ZI, n, JC, n), U = QA + c | 0, g = U = g >>> 0 > (D = g + E | 0) >>> 0 ? U + 1 | 0 : U, E = (U = (0 | c) == (0 | U) & E >>> 0 > D >>> 0 | U >>> 0 < c >>> 0) + w | 0, w = E = g >>> 0 > (yA = g + Y | 0) >>> 0 ? E + 1 | 0 : E, U = D + V | 0, E = U = (g = (E = 0) + wA | 0) >>> 0 < E >>> 0 ? U + 1 | 0 : U, D = (0 | V) == (0 | U) & g >>> 0 < wA >>> 0 | U >>> 0 < V >>> 0, U = w, U = (w = D + (c = yA) | 0) >>> 0 < D >>> 0 ? U + 1 | 0 : U, wA = w, D = g, Y = E, E = (g = (g = (g = (0 | J) == (0 | KC) & kA >>> 0 > kI >>> 0 | J >>> 0 < KC >>> 0) + (J = (0 | J) == (0 | bI) & kI >>> 0 > VI >>> 0 | J >>> 0 > bI >>> 0) | 0) + (E = (0 | AA) == (0 | bI) & NA >>> 0 < VI >>> 0 | AA >>> 0 < bI >>> 0) | 0) + Y | 0, U = w = U, Y = w = (D = (0 | (E = (g = J = (V = AA) + D | 0) >>> 0 < V >>> 0 ? E + 1 | 0 : E)) == (0 | Y) & D >>> 0 > g >>> 0 | E >>> 0 < Y >>> 0) + wA | 0, w = U = D >>> 0 > w >>> 0 ? U + 1 | 0 : U, D = g, U = 0, J = E, E = E + ((c = V = (0 | BA) == (0 | EA) & _ >>> 0 < FI >>> 0 | BA >>> 0 > EA >>> 0) >>> 0 > (V = V + ((0 | BA) == (0 | gI) & WA >>> 0 > FI >>> 0 | BA >>> 0 < gI >>> 0) | 0) >>> 0 ? 1 : U) | 0, U = w, J = U = (w = D = (0 | (E = (g = g + V | 0) >>> 0 < V >>> 0 ? E + 1 | 0 : E)) == (0 | J) & g >>> 0 < D >>> 0 | E >>> 0 < J >>> 0) >>> 0 > (D = D + Y | 0) >>> 0 ? U + 1 | 0 : U, 65536 & U ? CA = CA + 1 | 0 : (Y = v >>> 31 | 0, U = J << 1 | D >>> 31, D = D << 1 | E >>> 31, J = U, U = E << 1 | g >>> 31, g = g << 1 | Q >>> 31, E = U, U = v << 1 | O >>> 31, O <<= 1, v = U, U = Q << 1 | C >>> 31, C = C << 1 | Y, Q = U | (w = 0)), (0 | CA) >= 32767) x |= 2147418112, C = 0, Q = 0;
          else {
            I: {
              if ((0 | CA) <= 0) {
                if ((w = 1 - CA | 0) >>> 0 <= 127) {
                  fI(o + 48 | 0, O, v, C, Q, U = CA + 127 | 0), fI(o + 32 | 0, g, E, D, J, U), oQ(o + 16 | 0, O, v, C, Q, w), oQ(o, g, E, D, J, w), O = A[o + 32 >> 2] | A[o + 16 >> 2] | !!(A[o + 48 >> 2] | A[o + 56 >> 2] | A[o + 52 >> 2] | A[o + 60 >> 2]), v = A[o + 36 >> 2] | A[o + 20 >> 2], C = A[o + 40 >> 2] | A[o + 24 >> 2], Q = A[o + 44 >> 2] | A[o + 28 >> 2], g = A[o >> 2], E = A[o + 4 >> 2], w = A[o + 8 >> 2], U = A[o + 12 >> 2];
                  break I;
                }
                C = 0, Q = 0;
                break A;
              }
              w = D, U = 65535 & J | CA << 16;
            }
            n |= w, x |= U, (!C & (0 | Q) == -2147483648 ? !(O | v) : (0 | Q) > 0 | (0 | Q) >= 0) ? C | O | -2147483648 ^ Q | v ? (C = g, Q = E) : (Y = x, x = (g = (0 | (U = E)) == (0 | (Q = (Q = C = 1 & g) >>> 0 > (C = C + g | 0) >>> 0 ? U + 1 | 0 : U)) & C >>> 0 < g >>> 0 | Q >>> 0 < U >>> 0) >>> 0 > (n = g + n | 0) >>> 0 ? Y + 1 | 0 : Y) : (g = (0 | E) == (0 | (Q = (C = g + 1 | 0) ? E : E + 1 | 0)) & C >>> 0 < g >>> 0 | Q >>> 0 < E >>> 0, E = x, x = (n = g + n | 0) >>> 0 < g >>> 0 ? E + 1 | 0 : E);
          }
        }
        A[I >> 2] = C, A[I + 4 >> 2] = Q, A[I + 8 >> 2] = n, A[I + 12 >> 2] = x, t = o + 96 | 0;
      }
      function iC(I, C, Q, g, E, U, w) {
        var D, J = 0, o = 0, y = 0, S = 0, Y = 0, c = 0, n = 0, V = 0, x = 0, O = 0, v = 0, _ = 0, AA = 0, CA = 0, BA = 0;
        t = D = t - 480 | 0, A[D + 476 >> 2] = 0, A[D + 456 >> 2] = 0, A[D + 460 >> 2] = 0, A[D + 448 >> 2] = 0, A[D + 452 >> 2] = 0, A[D + 440 >> 2] = 0, A[D + 444 >> 2] = 0, A[D + 432 >> 2] = 0, A[D + 436 >> 2] = 0, J = 0;
        A: if (A[I + 684 >> 2]) {
          for (n = w ? A[w >> 2] : n; y = G[C + J | 0], M[(D + 112 | 0) + J | 0] = y, o = J + 1 | 0, y && (y = J >>> 0 < 158, J = o, y); ) ;
          if (M[o + (D + 112 | 0) | 0] = 0, !((O = 268435456 & U) | !(8 & A[47197]))) {
            o = 0;
            I: if (223 & (y = G[0 | C])) for (J = 0; ; ) {
              if (M[(D + 272 | 0) + J | 0] = y, !(223 & (y = G[(o = J + 1 | 0) + C | 0]))) break I;
              if (S = J >>> 0 < 118, J = o, !S) break;
            }
            M[(J = D + 272 | 0) + o | 0] = 0, A[D + 48 >> 2] = J, lI(A[47195], (0 | U) >= 0 ? 87019 : 86877, D + 48 | 0);
          }
          A[D + 464 >> 2] = C, A[I + 8208 >> 2] = 0, A[I + 8212 >> 2] = 0, E && (M[0 | E] = 0);
          I: {
            Q: if (223 & (J = G[0 | C])) for (v = 536870912 & U, _ = 4096 & U, AA = D + 105 | 0, o = C, y = 0; ; ) {
              S = mA(D + 476 | 0, o), x = !!(0 | MI(A[D + 476 >> 2])) + x | 0, c = G[(J = (Y = 255 & J) + I | 0) + 7668 | 0];
              B: if (!((V = A[D + 476 >> 2]) - 48 >>> 0 < 10 | V - 2406 >>> 0 < 10) | (x ? G[I + 170 | 0] : 0)) {
                E: if ((y = A[D + 476 >> 2] - A[I + 600 >> 2] | 0) >>> 0 > 127 || !(y = A[6192 + ((y << 2) + I | 0) >> 2])) {
                  if (c) {
                    for (V = 5168 + ((Y << 2) + I | 0) | 0, c = c + (J = G[J + 7924 | 0]) | 0, CA = Y | G[o + 1 | 0] << 8, y = 0; A[(o = (J << 2) + I | 0) + 7184 >> 2] == (0 | CA) && (A[D + 472 >> 2] = A[D + 464 >> 2], OQ(I, D + 472 | 0, C, 2, A[o + 6704 >> 2], D + 432 | 0, U, n), (0 | (o = A[D + 432 >> 2])) > 0 && (o = o + 35 | 0, A[D + 432 >> 2] = o), y = 1, OQ(I, D + 464 | 0, C, 1, A[V >> 2], D + 448 | 0, U, n), A[D + 448 >> 2] > (0 | o) || (o = A[D + 444 >> 2], A[D + 456 >> 2] = A[D + 440 >> 2], A[D + 460 >> 2] = o, o = A[D + 436 >> 2], A[D + 448 >> 2] = A[D + 432 >> 2], A[D + 452 >> 2] = o, A[D + 464 >> 2] = A[D + 472 >> 2])), c >>> 0 > (J = J + 1 | 0) >>> 0; ) ;
                    if (y) break E;
                  }
                  R: {
                    D: {
                      if (!(J = A[5168 + ((Y << 2) + I | 0) >> 2])) {
                        if (OQ(I, D + 464 | 0, C, 0, A[I + 5168 >> 2], D + 448 | 0, U, n), A[D + 448 >> 2]) break R;
                        if (16 & G[188808]) break D;
                        if (y = mA(D + 468 | 0, Y = (o = A[D + 464 >> 2]) - 1 | 0), J = A[D + 468 >> 2], !(A[I + 600 >> 2] <= 0 | (0 | J) > 577)) {
                          if (FU(J)) {
                            A[D + 32 >> 2] = 21, iA(Q, 87049, D + 32 | 0);
                            break I;
                          }
                          J = A[D + 468 >> 2];
                        }
                        if ((0 | J) == 57384 && ((0 | (c = A[I + 92 >> 2])) <= A[47352] || (A[47352] = c)), oB(J) && ((0 | (J = A[I + 72 >> 2])) <= A[47352] || (A[47352] = J)), !((c = (J = A[D + 468 >> 2]) - 192 | 0) >>> 0 > 413) && (c = G[c + 94240 | 0]) && (y = y - 1 | 0, !(G[o - 2 | 0] == 32 & G[y + o | 0] == 32))) {
                          for (A[D + 472 >> 2] = Y, M[0 | Y] = c; S = G[(J = o) + y | 0], M[0 | J] = S, o = J + 1 | 0, (0 | S) != 32; ) ;
                          if ((0 | y) > 0 && pA(J, 32, y), A[I + 24 >> 2] && !((0 | eI(94222, A[D + 468 >> 2])) <= 0)) {
                            A[D + 464 >> 2] = Y, y = 0;
                            break B;
                          }
                          y = 0, M[0 | Q] = 0, A[D + 464 >> 2] = C, A[I + 8208 >> 2] = 0, A[I + 8212 >> 2] = 0;
                          break B;
                        }
                        if (!(J = Mg(J)) || (0 | (o = A[J + 4 >> 2])) == A[I + 600 >> 2]) break D;
                        if ((0 | o) == A[I + 188 >> 2]) {
                          A[D + 4 >> 2] = Z(D - -64 | 0, A[I + 192 >> 2]), A[D >> 2] = 21, iA(Q, 87218, D);
                          break I;
                        }
                        if (!(4 & G[J + 16 | 0])) break D;
                        A[D + 20 >> 2] = Z(D - -64 | 0, A[J + 12 >> 2]), A[D + 16 >> 2] = 21, iA(Q, 87218, D + 16 | 0);
                        break I;
                      }
                      if (OQ(I, D + 464 | 0, C, 1, J, D + 448 | 0, U, n), A[D + 448 >> 2]) break R;
                    }
                    D: if (!((J = A[D + 476 >> 2]) - 768 >>> 0 < 112)) {
                      if (MI(J)) {
                        if (M[(S + A[D + 464 >> 2] | 0) - 1 | 0] < 33 & (0 | x) <= 1) break D;
                        if (M[0 | Q] = 0, !w) break Q;
                        A[w >> 2] = 4096 | A[w >> 2];
                        break Q;
                      }
                      AQ(I, A[D + 476 >> 2], -1, D + 272 | 0, 0), G[D + 272 | 0] && (A[D + 448 >> 2] = 1, A[D + 452 >> 2] = D + 272);
                    }
                    A[D + 464 >> 2] = (S + A[D + 464 >> 2] | 0) - 1;
                    break E;
                  }
                  A[I + 288 >> 2] = 0;
                } else OQ(I, D + 464 | 0, C, S, y, D + 448 | 0, U, n);
                if (o = (J = A[D + 452 >> 2]) || 86135, A[D + 452 >> 2] = o, y = 0, !(A[D + 448 >> 2] <= 0)) {
                  if (J = 1 | A[D + 456 >> 2], (0 | U) < 0) break A;
                  if (!(G[0 | o] != 21 | _)) {
                    YA(Q, o);
                    break I;
                  }
                  if (!(!(8 & A[47197]) | O)) E: if (J = A[47195], (0 | (S = A[J + 76 >> 2])) >= 0 & (!S | A[56823] != (-1073741825 & S))) Y = A[(S = J + 76 | 0) >> 2], A[S >> 2] = Y || 1073741823, A[J + 80 >> 2] == 10 || (0 | (Y = A[J + 20 >> 2])) == A[J + 16 >> 2] ? FB(J) : (A[J + 20 >> 2] = Y + 1, M[0 | Y] = 10), A[S >> 2] = 0;
                  else {
                    if (A[J + 80 >> 2] != 10 && (0 | (S = A[J + 20 >> 2])) != A[J + 16 >> 2]) {
                      A[J + 20 >> 2] = S + 1, M[0 | S] = 10;
                      break E;
                    }
                    FB(J);
                  }
                  if (S = -32769 & (J = A[D + 456 >> 2]), A[D + 456 >> 2] = S, !(!E | !S | (1024 & J ? v : 0))) {
                    I = A[D + 464 >> 2], YA(E, o), J = S | (BA = (Q = I) - bA(C, I = D + 112 | 0, SA(I)) | 0, (1151 & J) == 1024 ? BA : 0);
                    break A;
                  }
                  (J = A[D + 460 >> 2]) && (M[0 | J] = 69), uB(I, Q, g, o);
                }
              } else M[D + 104 | 0] = 95, bA(AA, o, S), J = 1, M[105 + (D + S | 0) | 0] = 0, KA(I, D + 104 | 0, D - -64 | 0), y - 1 >>> 0 <= 4294967293 && (J = SA(J = D - -64 | 0) + J | 0, M[0 | J] = 11, M[J + 1 | 0] = 0, J = 0), uB(I, Q, g, D - -64 | 0), A[D + 464 >> 2] = o + S, y = J;
              if (o = A[D + 464 >> 2], !(223 & (J = G[0 | o]))) break;
            }
            bA(C, I = D + 112 | 0, SA(I));
          }
          J = 0;
        }
        return t = D + 480 | 0, J;
      }
      function bB(I, C) {
        var Q, g = 0, E = 0, U = 0, w = 0, D = 0, J = 0, o = 0, y = 0, S = 0, Y = 0, c = 0, n = 0, V = 0, x = 0, O = 0, v = 0, _ = 0, AA = 0, CA = 0, BA = 0, EA = 0, wA = 0;
        t = Q = t - 2976 | 0, A[C >> 2] = 1, g = A[I + 20 >> 2], A[(D = Q + 2960 | 0) >> 2] = A[I + 16 >> 2], A[D + 4 >> 2] = g, g = A[I + 12 >> 2], A[(D = Q + 2952 | 0) >> 2] = A[I + 8 >> 2], A[D + 4 >> 2] = g, g = A[I + 4 >> 2], A[Q + 2944 >> 2] = A[I >> 2], A[Q + 2948 >> 2] = g, A[50303] || IB();
        A: if (I = A[Q + 2948 >> 2], G[0 | I] && I || ((I = A[Q + 2944 >> 2]) || (I = (I = A[Q + 2952 >> 2]) || 85055, A[Q + 2944 >> 2] = I), sI(g = Q + 80 | 0, I, 60), EB(g, 0), !(U = YC(201216, g)) || (A[Q + 2948 >> 2] = A[U + 4 >> 2] + 1, G[Q + 2958 | 0] | G[Q + 2956 | 0] | G[Q + 2957 | 0]))) {
          x = Q + 1536 | 0, t = n = t - 336 | 0;
          I: if (!(!(I = A[(V = Q + 2944 | 0) + 4 >> 2]) | !G[0 | I])) {
            if ((0 | (O = SA(I))) >= 0) {
              for (g = O >>> 0 >= 79 ? 79 : O, y = 1; I = xC(M[A[V + 4 >> 2] + E | 0]), M[(n + 256 | 0) + E | 0] = I, y = ((255 & I) == 45) + y | 0, I = (0 | g) != (0 | E), E = E + 1 | 0, I; ) ;
              if ((0 | y) != 1) break I;
            }
            y = 1;
          }
          if ((0 | (S = A[50303])) <= 0) A[x >> 2] = 0, I = 0;
          else {
            for (D = (0 | y) >= 0; ; ) {
              o = A[201216 + (AA << 2) >> 2];
              I: if (IC(A[o + 8 >> 2], 88032, 3)) {
                if ((I = A[V + 4 >> 2]) && IC(I, 91687, 3)) {
                  if (D) {
                    I = 100;
                    Q: if (y) {
                      if (g = 0, E = A[o + 4 >> 2], !(v = G[0 | E])) {
                        if (!IC(n + 256 | 0, 90013, 9)) break Q;
                        break I;
                      }
                      for (; ; ) {
                        for (CA = 1, J = E + 1 | 0, _ = 1, BA = 0, E = 0; (0 | E) < (0 | O) && (0 | (I = M[(n + 256 | 0) + E | 0])) != 45 || (I = 0), BA = ((Y = (0 | (c = G[E + J | 0])) == 45) & !!(0 | (_ = (Y ? 0 : c) << 24 >> 24 == (0 | I) ? _ : 0))) + BA | 0, E = E + 1 | 0, CA = Y + CA | 0, c; ) ;
                        if (E = E + J | 0, (Y = _ + BA | 0) && (g = (0 | (I = T((J = (0 | (I = y - Y | 0)) <= 0 ? 5 : 5 - I | 0) - ((0 | (I = CA - Y | 0)) > 0 ? I : 0) | 0, 100) - (v << 24 >> 24 << 1) | 0)) > (0 | g) ? I : g), !(v = G[0 | E])) break;
                      }
                      if (!(I = g)) break I;
                    }
                    (g = A[V >> 2]) && (I = aI(g, A[o >> 2]) ? aI(g, A[o + 8 >> 2]) ? I : I + 400 | 0 : I + 500 | 0), ((E = G[V + 12 | 0]) - 1 & 255) >>> 0 > 1 || ((g = G[o + 12 | 0]) - 1 & 255) >>> 0 > 1 || (I = (0 | g) != (0 | E) ? I - 50 | 0 : I + 50 | 0), E = G[V + 13 | 0], I = G[o + 12 | 0] != 2 | E >>> 0 > 12 ? I : G[o + 13 | 0] > 12 ? I + 5 | 0 : I, (g = G[o + 13 | 0]) && ((g = ((E ? T(E, 100) : 3e3) >>> 0) / (g >>> 0) | 0) >>> 0 <= 99 && (g = 1e4 / (g >>> 0) | 0), I = (J = I) + ((I = 5 - (((g - 100 & 65535) >>> 0) / 10 | 0) | 0) >> 31 & I) | 0, I = E ? I + 10 | 0 : I), I = (0 | I) <= 1 ? 1 : I;
                  } else {
                    if (IC(A[o + 8 >> 2], n + 256 | 0, O)) break I;
                    I = 100;
                  }
                  A[x + (w << 2) >> 2] = o, A[o + 16 >> 2] = I;
                } else A[x + (w << 2) >> 2] = o;
                w = w + 1 | 0;
              }
              if ((0 | S) == (0 | (AA = AA + 1 | 0))) break;
            }
            A[x + (w << 2) >> 2] = 0, I = 0, w && (tE(x, w, 8), I = w);
          }
          if (t = n + 336 | 0, y = I, I || (A[C >> 2] = 0, I = YC(201216, 85055), A[Q + 1536 >> 2] = I, y = !!(0 | I)), C = G[Q + 2957 | 0], D = 2, (0 | (I = G[Q + 2956 | 0])) != 2 && (D = 2, (C - 1 & 255) >>> 0 < 12 || (wA = (0 | I) != 1, D = (0 | I) == 1)), S = (w = A[132136 + (D << 2) >> 2]) + (c = C >>> 0 < 60) | 0, I = 0, (0 | y) > 0) for (g = 0; ; ) {
            U = A[(Q + 1536 | 0) + (EA << 2) >> 2];
            I: {
              Q: {
                B: {
                  if (wA) {
                    if (c || (C = 0, g)) break Q;
                  } else {
                    if (C = G[U + 12 | 0], g | c) break B;
                    C = (0 | C) != (0 | D);
                  }
                  if (E = 0, C | G[U + 13 | 0] < 60) break I;
                  break Q;
                }
                if ((0 | C) != (0 | D)) {
                  E = g;
                  break I;
                }
              }
              A[(Q + 80 | 0) + (g << 2) >> 2] = U, E = g + 1 | 0;
            }
            I: if (G[U + 15 | 0]) {
              if (Y = 0, C = I, g = E, !((0 | I) > 11)) for (; ; ) {
                if ((E = G[0 | S]) || (S = w, E = G[0 | w]), I = A[U + 12 >> 2], J = T(C, 24) + 202624 | 0, A[J + 8 >> 2] = A[U + 8 >> 2], A[J + 12 >> 2] = I, I = A[U + 4 >> 2], A[J >> 2] = A[U >> 2], A[J + 4 >> 2] = I, I = A[U + 20 >> 2], A[J + 16 >> 2] = A[U + 16 >> 2], A[J + 20 >> 2] = I, M[J + 14 | 0] = E, A[(Q + 80 | 0) + (g << 2) >> 2] = J, S = S + 1 | 0, g = g + 1 | 0, I = C + 1 | 0, (Y = Y + 1 | 0) >>> 0 >= G[U + 15 | 0]) break I;
                if (E = (0 | C) < 11, C = I, !E) break;
              }
            } else g = E;
            if ((0 | (EA = EA + 1 | 0)) == (0 | y)) break;
          }
          else {
            if (!U) break A;
            g = 0;
          }
          I: if (!(!(E = G[0 | S]) | (0 | I) >= 12)) for (; ; ) {
            if (C = A[U + 12 >> 2], w = T(I, 24) + 202624 | 0, A[w + 8 >> 2] = A[U + 8 >> 2], A[w + 12 >> 2] = C, C = A[U + 4 >> 2], A[w >> 2] = A[U >> 2], A[w + 4 >> 2] = C, C = A[U + 20 >> 2], A[w + 16 >> 2] = A[U + 16 >> 2], A[w + 20 >> 2] = C, M[w + 14 | 0] = E, A[(Q + 80 | 0) + (g << 2) >> 2] = w, g = g + 1 | 0, !(E = G[0 | (S = S + 1 | 0)])) break I;
            if (C = (0 | I) < 11, I = I + 1 | 0, !C) break;
          }
          g ? (I = A[(Q + 80 | 0) + (G[Q + 2958 | 0] % (0 | g) << 2) >> 2], (C = G[I + 14 | 0]) ? (M[202976] = 0, A[Q + 48 >> 2] = 47, iA(Q + 2971 | 0, 91351, Q + 48 | 0), M[Q + 2971 | 0] = 0, C >>> 0 <= 9 ? (A[Q + 20 >> 2] = C, A[Q + 16 >> 2] = Q + 2971, iA(202976, 91378, Q + 16 | 0)) : (A[Q + 36 >> 2] = C - 10, A[Q + 32 >> 2] = Q + 2971, iA(202976, 91503, Q + 32 | 0)), I = A[I + 8 >> 2], A[Q + 4 >> 2] = 202976, A[Q >> 2] = I, I = 202912, iA(202912, 87760, Q)) : I = A[I + 8 >> 2]) : I = 0;
        } else {
          if (I = A[U + 8 >> 2], !G[202976]) break A;
          A[Q + 64 >> 2] = I, A[Q + 68 >> 2] = 202976, I = 202912, iA(202912, 87760, Q - -64 | 0);
        }
        return t = Q + 2976 | 0, I;
      }
      function Dg(I, C, Q, g, E) {
        var U, w, D = 0, J = 0, o = 0, y = 0, S = 0, Y = 0, c = 0;
        t = U = t - 464 | 0, M[U + 432 | 0] = 0, M[U + 368 | 0] = 0, M[U + 304 | 0] = 0, M[U + 292 | 0] = 0, S = (0 | C) / 10 | 0, D = A[33273];
        A: {
          if (!(w = 2 & g) | A[33272] != 2) {
            c = 32 & g ? 113 : 111, y = 1 & g, Y = C - T(S, 10) | 0;
            I: {
              Q: {
                B: {
                  E: {
                    R: {
                      D: {
                        F: {
                          w: if (G[0 | D]) D = 0;
                          else {
                            U: {
                              if (8 & g) {
                                if (A[U + 288 >> 2] = C, iA(J = U + 452 | 0, 91198, U + 288 | 0), D = KA(I, J, U + 304 | 0)) {
                                  J = 0;
                                  break w;
                                }
                                A[U + 272 >> 2] = C, iA(J = U + 452 | 0, 91314, U + 272 | 0), D = KA(I, J, U + 304 | 0), J = 0;
                              } else {
                                if (!y) break U;
                                if (o = YA(U + 432 | 0, 133104), 4 & g) {
                                  if (A[U + 260 >> 2] = c, A[U + 256 >> 2] = C, iA(J = U + 452 | 0, 91324, U + 256 | 0), D = KA(I, J, U + 304 | 0), G[133116] && D) break F;
                                  if (J = D, D) break w;
                                }
                                A[U + 244 >> 2] = c, A[U + 240 >> 2] = C, iA(J = U + 452 | 0, 91384, U + 240 | 0), J = D = KA(I, J, U + 304 | 0);
                              }
                              if (D) break w;
                            }
                            U: {
                              if (w) {
                                if (!(1 & M[133096])) break U;
                                A[U + 208 >> 2] = C, iA(D = U + 452 | 0, 91498, U + 208 | 0), D = KA(I, D, U + 304 | 0);
                              } else o = A[I + 108 >> 2], A[U + 224 >> 2] = C, iA(D = U + 452 | 0, (0 | Q) >= 2 ? 91700 : (262144 & o) >>> 18 | 0 ? 91534 : 91700, U + 224 | 0), D = KA(I, D, U + 304 | 0);
                              if (D) break w;
                            }
                            !y | !(32 & G[I + 109 | 0]) ? (A[U + 192 >> 2] = C, iA(D = U + 452 | 0, 91766, U + 192 | 0), D = KA(I, D, U + 304 | 0)) : D = 0;
                          }
                          if (!(16 & g) | (0 | C) > 9) break R;
                          D = J;
                          break D;
                        }
                        if (YA(o, 133116), !(16 & g) | (0 | C) > 9) break E;
                      }
                      KA(I, 88875, U + 368 | 0);
                      break Q;
                    }
                    if (!D) break B;
                    D = J;
                  }
                  M[U + 368 | 0] = 0;
                  break Q;
                }
                B: if (y && (A[U + 180 >> 2] = c, A[U + 176 >> 2] = S, iA(D = U + 452 | 0, 91846, U + 176 | 0), KA(I, D, U + 368 | 0))) {
                  if (J = 1, !Y | !(16 & G[I + 109 | 0])) break B;
                  UC(U + 368 | 0, 133104);
                } else J || (A[U + 160 >> 2] = S, iA(J = U + 452 | 0, 512 & g ? 91936 : 92016, U + 160 | 0), KA(I, J, U + 368 | 0), J = 0);
                if (D = Y, G[U + 368 | 0] || (D = Y, 16 & G[I + 106 | 0] && (A[U + 144 >> 2] = 254 & S, iA(D = U + 452 | 0, 92016, U + 144 | 0), KA(I, D, U + 368 | 0), D = (0 | C) % 20 | 0)), M[U + 304 | 0] = 0, S = D, (0 | D) <= 0) D = J;
                else {
                  if (w && (D = A[33273], G[0 | D])) {
                    YA(U + 304 | 0, D), M[U + 432 | 0] = 0, o = y;
                    break I;
                  }
                  if (o = 0, 8 & g && (A[U + 128 >> 2] = S, iA(g = U + 452 | 0, 91314, U + 128 | 0), o = KA(I, g, U + 304 | 0)), !y | 16 & G[I + 104 | 0] || (A[U + 116 >> 2] = c, A[U + 112 >> 2] = S, iA(g = U + 452 | 0, 91384, U + 112 | 0), J = (o = KA(I, g, U + 304 | 0)) ? 1 : J), D = J, !o) {
                    B: {
                      if (!w | !(1 & A[33274])) {
                        if (!(16 & G[I + 104 | 0]) && w) break B;
                        J = A[I + 108 >> 2], A[U + 96 >> 2] = S, iA(g = U + 452 | 0, (0 | Q) >= 2 ? 91700 : (262144 & J) >>> 18 | 0 ? 91534 : 91700, U + 96 | 0), Q = KA(I, g, U + 304 | 0);
                      } else A[U + 80 >> 2] = S, iA(Q = U + 452 | 0, 91498, U + 80 | 0), Q = KA(I, Q, U + 304 | 0);
                      if (Q) break Q;
                    }
                    A[U + 64 >> 2] = S, iA(Q = U + 452 | 0, 91766, U - -64 | 0), KA(I, Q, U + 304 | 0);
                  }
                }
              }
              o = y, G[U + 432 | 0] | D | !y || ((0 | C) < 20 | (16 & G[I + 104 | 0] ? 0 : Y) || (KA(I, 92162, U + 432 | 0), o = 1, !G[U + 432 | 0])) && (KA(I, 92205, U + 432 | 0), o = 1);
            }
            if (!(!(Q = M[U + 304 | 0]) | !(48 & (C = A[I + 104 >> 2])) | !G[U + 368 | 0])) {
              if (KA(I, 90824, U + 292 | 0), !o | !(8 & G[I + 109 | 0]) || (M[U + 292 | 0] = 0), 16 & G[I + 104 | 0]) {
                A[U + 28 >> 2] = U + 432, A[U + 24 >> 2] = U + 368, A[U + 20 >> 2] = U + 292, A[U + 16 >> 2] = U + 304, iA(E, 91059, U + 16 | 0), g = 1;
                break A;
              }
              A[U + 12 >> 2] = U + 432, A[U + 8 >> 2] = U + 304, A[U + 4 >> 2] = U + 292, A[U >> 2] = U + 368, iA(E, 91059, U), g = 1;
              break A;
            }
            512 & C && (!Q | (0 | (C = SA(U + 368 | 0) - 1 | 0)) < 0 || (D = G[A[144464 + (M[0 | (C = C + (U + 368 | 0) | 0)] << 2) >> 2] + 11 | 0] != 2, (0 | (g = G[A[144464 + (Q << 2) >> 2] + 11 | 0])) == 1 && (g = G[A[144464 + (M[U + 305 | 0] << 2) >> 2] + 11 | 0]), D | (255 & g) != 2 || (M[0 | C] = 0))), !(8 & G[I + 110 | 0]) | !G[U + 432 | 0] ? (A[U + 56 >> 2] = U + 432, A[U + 52 >> 2] = U + 304, A[U + 48 >> 2] = U + 368, iA(E, 92282, U + 48 | 0)) : (A[U + 36 >> 2] = U + 304, A[U + 32 >> 2] = U + 368, (0 | (C = iA(E, 90368, U + 32 | 0))) > 0 && (C = G[A[144464 + (G[(Q = C - 1 | 0) + E | 0] << 2) >> 2] + 11 | 0] == 2 ? Q : C), YA(C + E | 0, U + 432 | 0));
          } else YA(E, D);
          g = 0;
        }
        A: if (268435456 & (I = A[I + 104 >> 2])) {
          if ((0 | SA(E)) <= 0) break A;
          for (C = 0, I = 0; G[0 | (Q = I + E | 0)] == 6 && (C && (M[0 | Q] = 5), C = 1), I = I + 1 | 0, (0 | SA(E)) > (0 | I); ) ;
        } else if (256 & I && (C = 0, !((0 | (I = (y = SA(E)) - 1 | 0)) < 0))) {
          if (I) for (Y = -2 & y, D = 0; G[0 | (J = I + E | 0)] == 6 ? (Q = 1, C && (M[0 | J] = 5)) : Q = C, G[0 | (J = J - 1 | 0)] == 6 ? (C = 1, Q && (M[0 | J] = 5)) : C = Q, I = I - 2 | 0, (0 | Y) != (0 | (D = D + 2 | 0)); ) ;
          1 & y && (!C | G[0 | (I = I + E | 0)] != 6 || (M[0 | I] = 5));
        }
        return t = U + 464 | 0, g;
      }
      function qI(I, C, Q, g) {
        var E, U, w = 0, D = 0, J = 0, o = 0, y = 0, S = 0, Y = 0;
        if (t = E = t - 352 | 0, M[E + 304 | 0] = 0, M[E + 224 | 0] = 0, M[E + 64 | 0] = 0, J = A[A[47192] + 292 >> 2], Y = mA(E + 348 | 0, C), (1048320 & (w = A[E + 348 >> 2])) == 57344 && (w &= 255, A[E + 348 >> 2] = w), 2 & g && mC(w) && KA(I, 85437, E + 304 | 0), w = DE(A[E + 348 >> 2], I), A[E + 348 >> 2] = w, S = 1 & g, AQ(I, w, M[0 | (U = C + Y | 0)], E + 224 | 0, S), !(C = G[E + 224 | 0])) {
          A: if ((C = TC(A[E + 348 >> 2])) && (A[E + 348 >> 2] = 16383 & C, 4 & g)) {
            I: switch (1073741823 & (C >>= 14)) {
              case 0:
              case 3:
                break A;
              default:
                break I;
            }
            KA(I, C = A[131232 + (C << 2) >> 2], E + 304 | 0), G[E + 304 | 0] || (M[E + 306 | 0] = FE(84744), y = C, C = E + 304 | 3, KA(A[47194], y, C), G[E + 307 | 0] && (L[E + 304 >> 1] = 5385, C = SA(C) + (E + 304 | 0) | 0, M[C + 5 | 0] = 0, M[C + 4 | 0] = J, M[C + 3 | 0] = 21));
          }
          AQ(I, A[E + 348 >> 2], M[0 | U], E + 224 | 0, S), C = G[E + 224 | 0];
        }
        A: {
          I: {
            if (C &= 255) {
              if ((0 | C) != 21) break I;
              YA(Q, E + 224 | 0), Y = 0;
              break A;
            }
            if (C = 1632, !((0 | (w = A[E + 348 >> 2])) < 1632)) {
              for (o = 103360; ; ) {
                if ((0 | w) >= (C + 10 | 0)) {
                  if (!(C = A[(o = o + 4 | 0) >> 2])) break I;
                  if ((0 | C) <= (0 | w)) continue;
                  break I;
                }
                break;
              }
              (0 | (C = 48 + (w - C | 0) | 0)) <= 0 || AQ(I, C, 0, E + 224 | 0, S);
            }
          }
          I: {
            Q: {
              B: {
                E: {
                  if (C = Mg(A[E + 348 >> 2])) {
                    if (w = A[C + 4 >> 2], !C | 1 & (o = A[C + 16 >> 2]) || (D = A[47192], A[D + 600 >> 2] == (0 | w) | A[D + 188 >> 2] == (0 | w) | A[D + 184 >> 2] == (0 | w) || (M[E + 144 | 0] = 0, KA(D, A[C >> 2], E - -64 | 0) ? (0 | (D = A[47192])) != (0 | I) && (J = A[I + 292 >> 2], YA(E + 144 | 0, E - -64 | 0), M[E + 66 | 0] = A[D + 292 >> 2]) : (M[E + 66 | 0] = FE(84744), KA(A[47194], A[C >> 2], E + 144 | 0)), G[E + 144 | 0] && (L[E + 64 >> 1] = 5385, YA(3 | (D = E - -64 | 0), y = E + 144 | 0), D = SA(y) + D | 0, M[D + 5 | 0] = 0, M[D + 4 | 0] = J, M[D + 3 | 0] = 21))), G[E + 224 | 0]) break I;
                    if (!w || (J = A[47192], A[J + 188 >> 2] != (0 | w))) break E;
                    C = A[J + 192 >> 2];
                    break Q;
                  }
                  if (G[E + 224 | 0]) break I;
                  o = 0, w = 0;
                  break B;
                }
                if ((C = A[C + 12 >> 2]) && !(2 & o)) break Q;
              }
              C = 25966;
            }
            if ((A[I + 212 >> 2] == (0 | C) & (0 | C) != 27503 || (M[E + 226 | 0] = FE(Z(E + 47 | 0, C)), (C = A[47194]) && ((0 | (J = A[E + 348 >> 2])) > 55215 || (0 | (D = J - 44032 | 0)) < 0 ? AQ(C, J, M[0 | U], E + 224 | 3, S) : (M[E + 52 | 0] = 32, C = y = E + 53 | 0, J - 50500 >>> 0 >= 588 && (C = HI(4352 + ((D >>> 0) / 588 | 0) | 0, y) + y | 0), HI(4449 + (((J = (D >>> 0) / 28 | 0) >>> 0) % 21 | 0) | 0, C), HI(4519 + (D - T(J, 28) | 0) | 0, C + 3 | 0), M[C + 6 | 0] = 32, M[C + 7 | 0] = 0, M[E + 227 | 0] = 0, C = E + 224 | 3, iC(A[47194], y, C, 77, 0, 0, 0), kC(A[47194], C, 0, -1, 0)), C = E + 224 | 3, G[E + 227 | 0] == 21 && (M[E + 226 | 0] = FE(E + 224 | 4), AQ(A[47194], A[E + 348 >> 2], M[0 | U], C, S)), GC(A[A[32972] + 60 >> 2]), G[E + 227 | 0] && (L[E + 224 >> 1] = 5385, C = SA(C) + (E + 224 | 0) | 0, M[C + 3 | 0] = 21, S = A[I + 292 >> 2], M[C + 5 | 0] = 0, M[C + 4 | 0] = S)), !G[E + 224 | 0])) && (16 & o || (gA(A[E + 348 >> 2]) && KA(A[47192], 85683, E + 224 | 0), G[E + 224 | 0] || (pI(A[E + 348 >> 2]) || KA(A[47192], 85778, E + 224 | 0), G[E + 224 | 0] || WC(85992, E + 224 | 0, 0))), !(8 & o) || 4 & g)) {
              if (C = A[E + 348 >> 2], (0 | w) != 10240 ? (A[E + 32 >> 2] = C, iA(E + 52 | 0, 86013, E + 32 | 0)) : (w = E + 52 | 0, 1 & C && (M[E + 52 | 0] = 49, w = E + 53 | 0), 2 & C && (M[0 | w] = 50, w = w + 1 | 0), 4 & C && (M[0 | w] = 51, w = w + 1 | 0, C = A[E + 348 >> 2]), 8 & C && (M[0 | w] = 52, w = w + 1 | 0, C = A[E + 348 >> 2]), 16 & C && (M[0 | w] = 53, w = w + 1 | 0, C = A[E + 348 >> 2]), 32 & C && (M[0 | w] = 54, w = w + 1 | 0, C = A[E + 348 >> 2]), 64 & C && (M[0 | w] = 55, w = w + 1 | 0, C = A[E + 348 >> 2]), 128 & C && (M[0 | w] = 56, w = w + 1 | 0), M[0 | w] = 0), C = E + 224 | 0, o = G[E + 52 | 0]) for (w = E + 52 | 0; C = SA(C) + C | 0, M[0 | C] = 23, C = C + 1 | 0, AQ(A[47192], o << 24 >> 24, 0, C, 1), (g = G[0 | C]) && (0 | g) != 21 || (0 | (g = M[0 | w])) < 97 || WC(A[130860 + ((255 & g) << 2) >> 2], C, 0), o = G[0 | (w = w + 1 | 0)]; ) ;
              C = SA(C) + C | 0, M[0 | C] = 9, M[C + 1 | 0] = 0;
            }
          }
          C = SA(Q), 2 & G[I + 144 | 0] ? (A[E + 16 >> 2] = 255, A[E + 28 >> 2] = E + 304, A[E + 24 >> 2] = E + 224, A[E + 20 >> 2] = E - -64, iA(E + 144 | 0, 86210, E + 16 | 0)) : (A[E >> 2] = 255, A[E + 12 >> 2] = E + 224, A[E + 8 >> 2] = E + 304, A[E + 4 >> 2] = E - -64, iA(E + 144 | 0, 86210, E)), SA(E + 144 | 0) + C >>> 0 > 199 || YA(C + Q | 0, E + 144 | 0);
        }
        return t = E + 352 | 0, Y;
      }
      function rg(I, C, Q, g, E, U, w) {
        var D, J = 0, o = 0, y = 0, S = 0, Y = 0, c = 0, n = 0, V = 0, x = 0, O = 0, v = 0, _ = 0, AA = 0, CA = 0, BA = 0, EA = 0, wA = 0, yA = 0, NA = 0, kA = 0, nA = 0, WA = 0;
        t = D = t - 528 | 0, O = w ? A[w >> 2] : 0, EA = A[E + 4 >> 2];
        A: {
          I: {
            if (A[I + 220 >> 2] > 0) {
              sI(o = D + 352 | 0, C, 160), t = c = t - 176 | 0, V = 1 - (n = A[I + 220 >> 2]) | 0, x = A[I + 224 >> 2], v = A[I + 216 >> 2], S = o;
              Q: {
                B: {
                  for (; ; ) {
                    if (_ = mA(c + 172 | 0, S), J = A[c + 172 >> 2]) {
                      if ((0 | J) < (0 | n) | (0 | J) > (0 | v)) break B;
                      if (x) {
                        if ((0 | (J = M[x + (J - n | 0) | 0])) <= 0) break B;
                      } else J = J + V | 0;
                      if (S = S + _ | 0, M[Y + c | 0] = J, J = 160, (0 | (Y = Y + 1 | 0)) != 160) continue;
                    } else J = Y;
                    break;
                  }
                  if (x = 0, M[J + c | 0] = 0, V = M[0 | c], A[c + 172 >> 2] = V, V) {
                    for (wA = 2 + (v - n | 0) | 0, n = J = c; ; ) {
                      v = J + 1 | 0;
                      E: {
                        if ((_ = A[I + 8180 >> 2]) && (Y = 0, !((0 | (S = L[_ >> 1])) > (0 | (CA = (M[0 | v] << 8) + V | 0))))) for (; ; ) {
                          if ((0 | S) == (0 | CA)) {
                            V = Y + wA | 0, A[c + 172 >> 2] = V, J = J + 2 | 0;
                            break E;
                          }
                          if (!((0 | CA) >= (0 | (S = L[_ + ((Y = Y + 1 | 0) << 1) >> 1])))) break;
                        }
                        J = v;
                      }
                      if (AA = 63 & V | AA << 6, (0 | (Y = x + 6 | 0)) < 8 ? x = Y : (x = x - 2 | 0, M[0 | n] = AA >> x, n = n + 1 | 0), V = M[0 | J], A[c + 172 >> 2] = V, !V) break;
                    }
                    (0 | x) <= 0 || (M[0 | n] = AA << 8 - x, n = n + 1 | 0);
                  } else n = c;
                  M[0 | n] = 0, bA(o, c, J = n - c | 0), n = 64 | J;
                  break Q;
                }
                n = SA(o);
              }
              t = c + 176 | 0, c = o;
            } else n = SA(C), c = C;
            if (o = G[0 | c]) {
              for (J = 0, Y = c; y = 1023 & (y = (y << 3) + o | 0) ^ y >>> 8, J = J + 1 | 0, o = G[0 | (Y = Y + 1 | 0)]; ) ;
              J = J + y & 1023;
            } else J = 0;
            if (y = A[692 + ((J << 2) + I | 0) >> 2]) {
              if (J = G[0 | y]) break I;
              J = 0;
              break A;
            }
            if (J = 0, !E) break A;
            A[E >> 2] = 0;
            break A;
          }
          for (_ = 1073741824 & EA, CA = 2048 & U, EA = 512 & O, wA = 65536 & O, yA = 1 & O, NA = 2 & O, O = 8 & U, kA = 1024 & U, v = 4 & U, nA = 63 & n, WA = I + 8233 | 0; ; ) {
            U = (255 & J) + y | 0;
            I: {
              Q: if ((127 & (J = G[y + 1 | 0])) == (0 | n) && !IC(c, y + 2 | 0, nA)) {
                y = 2 + ((63 & J) + y | 0) | 0;
                B: {
                  if (J << 24 >> 24 < 0) x = 0, M[0 | g] = 0;
                  else {
                    if ((0 | (x = SA(y))) >= 160) break B;
                    YA(g, y), y = 1 + (y + x | 0) | 0;
                  }
                  if (o = 0, U >>> 0 <= y >>> 0) J = Q, S = 0;
                  else {
                    Y = 0, S = 0;
                    E: {
                      for (; ; ) {
                        y = (J = y) + 1 | 0;
                        R: if ((J = G[0 | J]) >>> 0 >= 100) {
                          if (V = A[I + 320 >> 2], J >>> 0 >= 132) {
                            Y |= V >>> J - 132 & 1;
                            break R;
                          }
                          Y |= !(V >>> J - 100 & 1);
                        } else {
                          if (J >>> 0 >= 81) {
                            V = J - 80 | 0, AA = U - y | 0;
                            D: if (w) for (J = 0; ; ) {
                              if (BA = T(J, 12) + w | 0, !G[BA + 10 | 0]) break D;
                              if (Y = !!(12 & G[BA + 1 | 0]) | Y, BA = (0 | J) != (0 | V), J = J + 1 | 0, !BA) break;
                            }
                            if (Lg(Q, y, AA) | 1 & Y) break Q;
                            A[33264] = V, J = Q + AA | 0, S |= 128, y = U;
                            break E;
                          }
                          J >>> 0 >= 65 ? (S = 15 & J | -16 & S, S = 12 & ~J ? S : 512 | S) : J >>> 0 >= 32 ? o |= 1 << J - 32 : S |= 1 << J;
                        }
                        if (!(U >>> 0 > y >>> 0)) break;
                      }
                      if (J = Q, 1 & Y) break I;
                    }
                    if (65536 & o && !v || kA && 49152 & o) break I;
                  }
                  if (v && (16384 & o || !O && 32768 & o) || (NA ? 0 : 512 & o) | (yA ? 0 : 1024 & o) | (wA ? 0 : 33554432 & S) || !(!(131072 & o) | UA[A[47192] + 8204 >> 2] <= J >>> 0 | _) | (EA ? 0 : 262144 & o) | (8 & G[A[47192] + 8242 | 0] ? 0 : 8192 & o) || 16 & o && (!A[I + 8184 >> 2] & (!O | !A[I + 8192 >> 2]) || !(!O | A[I + 212 >> 2] != 25966) && 2097152 & A[I + 8232 >> 2]) || (A[I + 8188 >> 2] ? 0 : 64 & o) | (!A[I + 8196 >> 2] | CA ? 32 & o : 0) || !(!(65536 & S) | A[I + 212 >> 2] != 26741 | 128 & G[0 | WA]) | (A[47192] != (0 | I) ? 524288 & o : 0)) break I;
                  E: {
                    R: {
                      D: {
                        if (!E) {
                          if (!x) break D;
                          break E;
                        }
                        if (A[E + 4 >> 2] = o, A[E >> 2] = 1073741824 | S, x) break R;
                      }
                      if (J = 0, !(8 & G[188788])) break A;
                      BU(E, I = D + 272 | 0), A[D >> 2] = C, A[D + 4 >> 2] = I, lI(A[47195], 89330, D);
                      break A;
                    }
                    A[E >> 2] = -1073741824 | S;
                  }
                  if (8 & G[188788] && (FC(g, D - -64 | 0), G[A[47192] + 172 | 0] == (S >>> 29 & 1) && (!w | !(128 & S) ? (A[D + 48 >> 2] = C, lI(A[47195], 89426, D + 48 | 0)) : (bA(I = D + 352 | 0, g = Q, Q = J - Q | 0), M[351 + (Q + D | 0) | 0] = 0, A[D + 32 >> 2] = C, A[D + 36 >> 2] = I, lI(A[47195], 89397, D + 32 | 0)), BU(E, I = D + 272 | 0), C = A[47195], A[D + 16 >> 2] = D - -64, A[D + 20 >> 2] = I, lI(C, 89534, D + 16 | 0))), G[mA(D - -64 | 0, c) + c | 0] | !E || MI(A[D + 64 >> 2])) break A;
                  A[E >> 2] = 134217728 | A[E >> 2];
                  break A;
                }
                LA(89236, 86634, 2467, 94846), r();
              }
              y = U;
            }
            if (!(J = G[0 | y])) break;
          }
          J = 0;
        }
        return t = D + 528 | 0, J;
      }
      function TB(I, C, Q, g, E) {
        var U, w = 0, D = 0;
        t = U = t - 304 | 0, M[U + 278 | 0] = 0;
        A: {
          if ((0 | C) > 0 && (1 & g && (2 & g && (A[U + 164 >> 2] = Q, A[U + 160 >> 2] = C, iA(w = U + 290 | 0, 89701, U + 160 | 0), w = KA(I, w, U + 224 | 0)) || 1 & M[133096] && (A[U + 148 >> 2] = Q, A[U + 144 >> 2] = C, iA(w = U + 290 | 0, 89757, U + 144 | 0), w = KA(I, w, U + 224 | 0)) || (A[U + 132 >> 2] = Q, A[U + 128 >> 2] = C, iA(w = U + 290 | 0, 89894, U + 128 | 0), w = KA(I, w, U + 224 | 0))) || (A[U + 116 >> 2] = Q, A[U + 112 >> 2] = C, iA(w = U + 290 | 0, 89974, U + 112 | 0), w = KA(I, w, U + 224 | 0))))
            break A;
          if ((0 | (D = (0 | C) % 100 | 0)) >= 20 && KA(I, 90022, U + 278 | 0), 1 & g) {
            if (2 & g) {
              w = D - 11 | 0;
              I: {
                Q: {
                  B: switch ((448 & A[A[47192] + 108 >> 2]) - 64 >>> 6 | 0) {
                    case 0:
                      if (w >>> 0 < 9) break Q;
                      if (g = 90418, (0 | (w = (0 | C) % 10 | 0)) == 1) break I;
                      if (w - 2 >>> 0 >= 3) break Q;
                      g = 90453;
                      break I;
                    case 1:
                      if (C - 2 >>> 0 >= 3) break Q;
                      g = 90453;
                      break I;
                    case 2:
                      if (w >>> 0 < 9 | ((0 | C) % 10 | 0) - 2 >>> 0 >= 3) break Q;
                      g = 90453;
                      break I;
                    case 3:
                      if (g = 90508, w >>> 0 < 9) break I;
                      g = (g = (0 | C) % 10 | 0) ? (0 | g) == 1 ? 90453 : 90586 : 90508;
                      break I;
                    case 4:
                      break B;
                    default:
                      break Q;
                  }
                  if (!(w >>> 0 < 9)) {
                    if (g = 90537, (0 | (w = (0 | C) % 10 | 0)) == 1) break I;
                    if (!(w - 2 >>> 0 >= 3)) {
                      g = 90453;
                      break I;
                    }
                  }
                }
                g = 90586;
              }
              if (A[U + 100 >> 2] = Q, A[U + 96 >> 2] = g, iA(g = U + 290 | 0, 90058, U + 96 | 0), w = 0, KA(I, g, U + 224 | 0)) break A;
            }
            if (g = D - 11 | 0, 1 & M[133096]) {
              I: {
                Q: {
                  B: switch ((448 & A[A[47192] + 108 >> 2]) - 64 >>> 6 | 0) {
                    case 0:
                      if (g >>> 0 < 9) break Q;
                      if (w = 90418, (0 | (D = (0 | C) % 10 | 0)) == 1) break I;
                      if (D - 2 >>> 0 >= 3) break Q;
                      w = 90453;
                      break I;
                    case 1:
                      if (C - 2 >>> 0 >= 3) break Q;
                      w = 90453;
                      break I;
                    case 2:
                      if (g >>> 0 < 9 | ((0 | C) % 10 | 0) - 2 >>> 0 >= 3) break Q;
                      w = 90453;
                      break I;
                    case 3:
                      if (w = 90508, g >>> 0 < 9) break I;
                      w = (w = (0 | C) % 10 | 0) ? (0 | w) == 1 ? 90453 : 90586 : 90508;
                      break I;
                    case 4:
                      break B;
                    default:
                      break Q;
                  }
                  if (!(g >>> 0 < 9)) {
                    if (w = 90537, (0 | (D = (0 | C) % 10 | 0)) == 1) break I;
                    if (!(D - 2 >>> 0 >= 3)) {
                      w = 90453;
                      break I;
                    }
                  }
                }
                w = 90586;
              }
              if (A[U + 84 >> 2] = Q, A[U + 80 >> 2] = w, iA(D = U + 290 | 0, 90110, U + 80 | 0), w = 0, KA(I, D, U + 224 | 0)) break A;
            }
            I: {
              Q: {
                B: switch ((448 & A[A[47192] + 108 >> 2]) - 64 >>> 6 | 0) {
                  case 0:
                    if (g >>> 0 < 9) break Q;
                    if (w = 90418, (0 | (D = (0 | C) % 10 | 0)) == 1) break I;
                    if (D - 2 >>> 0 >= 3) break Q;
                    w = 90453;
                    break I;
                  case 1:
                    if (C - 2 >>> 0 >= 3) break Q;
                    w = 90453;
                    break I;
                  case 2:
                    if (g >>> 0 < 9 | ((0 | C) % 10 | 0) - 2 >>> 0 >= 3) break Q;
                    w = 90453;
                    break I;
                  case 3:
                    if (w = 90508, g >>> 0 < 9) break I;
                    w = (w = (0 | C) % 10 | 0) ? (0 | w) == 1 ? 90453 : 90586 : 90508;
                    break I;
                  case 4:
                    break B;
                  default:
                    break Q;
                }
                if (!(g >>> 0 < 9)) {
                  if (w = 90537, (0 | (D = (0 | C) % 10 | 0)) == 1) break I;
                  if (!(D - 2 >>> 0 >= 3)) {
                    w = 90453;
                    break I;
                  }
                }
              }
              w = 90586;
            }
            if (A[U + 68 >> 2] = Q, A[U + 64 >> 2] = w, iA(D = U + 290 | 0, 90139, U - -64 | 0), w = 0, KA(I, D, U + 224 | 0)) break A;
          } else g = D - 11 | 0;
          I: {
            Q: {
              B: switch ((448 & A[A[47192] + 108 >> 2]) - 64 >>> 6 | 0) {
                case 0:
                  if (g >>> 0 < 9) break Q;
                  if (w = 90418, (0 | (g = (0 | C) % 10 | 0)) == 1) break I;
                  if (g - 2 >>> 0 >= 3) break Q;
                  w = 90453;
                  break I;
                case 1:
                  if (C - 2 >>> 0 >= 3) break Q;
                  w = 90453;
                  break I;
                case 2:
                  if (g >>> 0 < 9 | ((0 | C) % 10 | 0) - 2 >>> 0 >= 3) break Q;
                  w = 90453;
                  break I;
                case 3:
                  if (w = 90508, g >>> 0 < 9) break I;
                  w = (g = (0 | C) % 10 | 0) ? (0 | g) == 1 ? 90453 : 90586 : 90508;
                  break I;
                case 4:
                  break B;
                default:
                  break Q;
              }
              if (!(g >>> 0 < 9)) {
                if (w = 90537, (0 | (g = (0 | C) % 10 | 0)) == 1) break I;
                if (!(g - 2 >>> 0 >= 3)) {
                  w = 90453;
                  break I;
                }
              }
            }
            w = 90586;
          }
          A[U + 52 >> 2] = Q, A[U + 48 >> 2] = w, iA(g = U + 290 | 0, 90218, U + 48 | 0), w = 0, KA(I, g, U + 224 | 0) || ((0 | Q) < 4 || (A[U + 32 >> 2] = Q - 1, iA(g = U + 290 | 0, 89026, U + 32 | 0), KA(I, g, U + 176 | 0) || (KA(I, 90273, U + 224 | 0), A[33275] = 3)), G[U + 224 | 0] || (A[U + 16 >> 2] = C, iA(g = U + 290 | 0, 90303, U + 16 | 0), (w = KA(I, g, U + 224 | 0)) || KA(I, 90347, U + 224 | 0), A[33275] = 2));
        }
        return A[U + 4 >> 2] = U + 224, A[U >> 2] = U + 278, iA(E, 90368, U), t = U + 304 | 0, !((0 | C) != 1 | (0 | Q) != 1) && (C = 1, 32 & G[I + 106 | 0]) || (C = w), C;
      }
      function mg(I, C, Q, g) {
        var E, U = 0, w = 0, D = 0, J = 0, o = 0, y = 0, S = 0;
        t = E = t + -64 | 0, L[E + 48 >> 1] = 0, A[E + 40 >> 2] = 0, A[E + 44 >> 2] = 0, A[E + 32 >> 2] = 0, A[E + 36 >> 2] = 0, A[E + 24 >> 2] = 0, A[E + 28 >> 2] = 0, A[E + 16 >> 2] = 0, A[E + 20 >> 2] = 0, A[E + 8 >> 2] = 0, A[E + 12 >> 2] = 0, A[E >> 2] = 0, A[E + 4 >> 2] = 0, U = C;
        A: {
          for (; ; ) {
            I: {
              Q: {
                if ((0 | (w = G[0 | U])) != 69) {
                  if ((0 | w) != 32) break Q;
                  if (g && (M[bA(w = g, C, g = (0 | (g = U - C | 0)) >= 159 ? 159 : g) + g | 0] = 0), g = 63 & Q) break I;
                  break A;
                }
                M[0 | U] = 101;
              }
              U = U + 1 | 0;
              continue;
            }
            break;
          }
          if (1 & Q) {
            I: if ((U = U - 1 | 0) >>> 0 < C >>> 0) w = g;
            else for (w = g; ; ) {
              if ((192 & G[0 | U]) != 128) break I;
              if (w = w + 1 | 0, !((U = U - 1 | 0) >>> 0 >= C >>> 0)) break;
            }
            D = g - 1 | 0;
          } else D = g, w = g;
          if ((0 | g) != 1) for (; ; ) {
            g = D;
            I: if (!((U = U - 1 | 0) >>> 0 < C >>> 0)) for (; ; ) {
              if ((192 & G[0 | U]) != 128) break I;
              if (w = w + 1 | 0, !((U = U - 1 | 0) >>> 0 >= C >>> 0)) break;
            }
            I: if (!((U = U - 1 | 0) >>> 0 < C >>> 0)) for (; ; ) {
              if ((192 & G[0 | U]) != 128) break I;
              if (w = w + 1 | 0, !((U = U - 1 | 0) >>> 0 >= C >>> 0)) break;
            }
            if (D = g - 2 | 0, !((0 | g) > 2)) break;
          }
          if ((0 | w) <= 0) D = 0;
          else {
            if (J = 3 & (D = (g = (C = w - 1 | 0) >>> 0 >= 48 ? 48 : C) + 1 | 0), C = 0, w = 0, g >>> 0 >= 3) for (S = -4 & D, g = 0; o = U + w | 0, M[w + E | 0] = G[0 | o], M[0 | o] = 32, o = (y = 1 | w) + U | 0, M[E + y | 0] = G[0 | o], M[0 | o] = 32, o = (y = 2 | w) + U | 0, M[E + y | 0] = G[0 | o], M[0 | o] = 32, o = (y = 3 | w) + U | 0, M[E + y | 0] = G[0 | o], M[0 | o] = 32, w = w + 4 | 0, (0 | S) != (0 | (g = g + 4 | 0)); ) ;
            if (J) for (; g = U + w | 0, M[w + E | 0] = G[0 | g], M[0 | g] = 32, w = w + 1 | 0, (0 | J) != (0 | (C = C + 1 | 0)); ) ;
          }
        }
        if (M[E + D | 0] = 0, J = 65520 & Q, !(512 & Q) | G[0 | (g = U - 1 | 0)] != 105 || (M[0 | g] = 121), w = 4 | J, 256 & Q) {
          A: {
            I: {
              Q: {
                if ((0 | (C = A[I + 212 >> 2])) != 25966) {
                  if ((0 | C) != 28268) break Q;
                  if (M[0 | g] < 0 || 128 & (C = M[0 | (D = U - 2 | 0)])) break A;
                  if (J = A[I + 632 >> 2]) C = !!(0 | eA(J, C));
                  else {
                    if ((0 | (J = A[I + 600 >> 2])) > 0 && (C = C - J | 0) - 1 >>> 0 > 254) break A;
                    C = 128 & G[344 + (I + C | 0) | 0];
                  }
                  if (!C) break A;
                  if (C = M[0 | g], J = A[I + 612 >> 2]) C = !!(0 | eA(J, C));
                  else {
                    B: {
                      if ((0 | (J = A[I + 600 >> 2])) > 0) {
                        if ((C = C - J | 0) - 1 >>> 0 < 255) break B;
                        break A;
                      }
                      if ((0 | C) < 0) break A;
                    }
                    C = 4 & G[344 + (I + C | 0) | 0];
                  }
                  if (!C) break A;
                  C = M[U - 3 | 0];
                  B: {
                    if (J = A[I + 632 >> 2]) C = !!(0 | eA(J, C));
                    else {
                      E: {
                        if ((0 | (J = A[I + 600 >> 2])) > 0) {
                          if ((C = C - J | 0) - 1 >>> 0 < 255) break E;
                          break B;
                        }
                        if ((0 | C) < 0) break B;
                      }
                      C = 128 & G[344 + (I + C | 0) | 0];
                    }
                    if (C) break A;
                  }
                  M[0 | U] = G[0 | g], M[0 | g] = G[0 | D], M[U + 1 | 0] = 32;
                  break A;
                }
                if (D = M[U - 2 | 0], C = A[I + 632 >> 2]) C = !!(0 | eA(C, D));
                else {
                  B: {
                    if ((0 | (C = A[I + 600 >> 2])) > 0) {
                      if ((D = D - C | 0) - 1 >>> 0 < 255) break B;
                      break I;
                    }
                    if ((0 | D) < 0) break I;
                  }
                  C = 128 & G[344 + (I + D | 0) | 0];
                }
                if (!C) break I;
                if (D = M[0 | g], C = A[I + 608 >> 2]) C = !!(0 | eA(C, D));
                else {
                  if ((0 | (C = A[I + 600 >> 2])) > 0) {
                    if ((D = D - C | 0) - 1 >>> 0 >= 255) break I;
                  } else if ((0 | D) < 0) break I;
                  C = 2 & G[344 + (I + D | 0) | 0];
                }
                if (!C) break I;
                w = IC(87771, U - 3 | 0, 3) ? 20 | J : w;
                break A;
              }
              w = A[I + 204 >> 2] ? 20 | J : w;
              break A;
            }
            (G[0 | g] == 99 || (D = G[(C = U - 2 | 0) + 1 | 0] << 8, (G[0 | C] | D) == 29554 | (D | G[0 | C]) == 29289 || (G[0 | (C = U - 2 | 0)] | G[C + 1 | 0] << 8) == 29301 || !IC(88115, U - 3 | 0, 3) || (G[0 | (C = U - 2 | 0)] | G[C + 1 | 0] << 8) == 29550 | G[0 | g] == 117 || !IC(88384, U - 5 | 0, 5) || (G[0 | (C = U - 4 | 0)] | G[C + 1 | 0] << 8 | G[C + 2 | 0] << 16 | G[C + 3 | 0] << 24) == 1735287154 || (G[0 | C] | G[C + 1 | 0] << 8 | G[C + 2 | 0] << 16 | G[C + 3 | 0] << 24) == 1735549292)) && (w = 20 | J);
          }
          16 & w && (HI(A[I + 204 >> 2], U), 8 & G[188788] && rU(88683, 6, A[47195]));
        }
        return A[I + 8184 >> 2] | !(2048 & Q) || (A[I + 8184 >> 2] = 1), a[E >> 1] != 115 && IC(E, 88850, 3) || (w |= 8), t = E - -64 | 0, G[0 | E] == 39 ? 65531 & w : w;
      }
      function WI(I, C, Q, g, E, U, w, D, J) {
        var o, y = 0, S = 0, Y = 0, c = 0, n = 0, V = 0, x = 0, O = 0, v = 0, _ = 0;
        t = o = t - 112 | 0, y = 2147483647 & J;
        A: {
          if (Y = !(C | Q), (g | (S = 2147483647 & E) ? S - 2147418112 >>> 0 < 2147549184 : Y) || !(!D & (0 | (n = y - 2147418112 | 0)) == -2147418112 ? U | w : (0 | n) == -2147418112 & !!(0 | D) | n >>> 0 > 2147549184)) {
            if (!(!g & (0 | S) == 2147418112 ? Y : S >>> 0 < 2147418112)) {
              D = g, J = 32768 | E, U = C, w = Q;
              break A;
            }
            if (!(!D & (0 | y) == 2147418112 ? !(U | w) : y >>> 0 < 2147418112)) {
              J |= 32768;
              break A;
            }
            if (!(C | g | 2147418112 ^ S | Q)) {
              c = g, D = (g = !(C ^ U | g ^ D | Q ^ w | E ^ J ^ -2147483648)) ? 0 : c, J = g ? 2147450880 : E, U = g ? 0 : C, w = g ? 0 : Q;
              break A;
            }
            if (!(U | D | 2147418112 ^ y | w)) break A;
            if (!(C | g | Q | S)) {
              if (U | D | w | y) break A;
              U &= C, w &= Q, D &= g, J &= E;
              break A;
            }
            if (!(U | D | w | y)) {
              U = C, w = Q, D = g, J = E;
              break A;
            }
          }
          S = (Y = O = (c = (0 | y) == (0 | S)) & (0 | g) == (0 | D) ? (0 | Q) == (0 | w) & C >>> 0 < U >>> 0 | Q >>> 0 < w >>> 0 : c & g >>> 0 < D >>> 0 | y >>> 0 > S >>> 0) ? U : C, n = Y ? w : Q, v = c = Y ? J : E, Y = Y ? D : g, x = 65535 & c, g = O ? g : D, _ = E = O ? E : J, c = E >>> 16 & 32767, (V = v >>> 16 & 32767) || (J = E = !(Y | x), y = E ? S : Y, D = E <<= 6, fI(o + 96 | 0, S, n, Y, x, (E = E + ((0 | (J = aA(J ? n : x))) == 32 ? aA(y) + 32 | 0 : J) | 0) - 15 | 0), Y = A[o + 104 >> 2], x = A[o + 108 >> 2], n = A[o + 100 >> 2], V = 16 - E | 0, S = A[o + 96 >> 2]), U = O ? C : U, w = O ? Q : w, D = g, J = 65535 & _, c || (E = C = !(D | J), y = C ? U : D, Q = C <<= 6, fI(o + 80 | 0, U, w, D, J, (C = C + ((0 | (E = aA(E ? w : J))) == 32 ? aA(y) + 32 | 0 : E) | 0) - 15 | 0), c = 16 - C | 0, D = A[o + 88 >> 2], J = A[o + 92 >> 2], w = A[o + 84 >> 2], U = A[o + 80 >> 2]), Q = J << 3 | D >>> 29, C = D << 3 | w >>> 29, Q |= 524288, D = Y << 3 | n >>> 29, J = x << 3 | Y >>> 29, O = v ^ _, E = w << 3 | U >>> 29, g = U << 3, (0 | c) != (0 | V) && ((U = V - c | 0) >>> 0 > 127 ? (C = 0, Q = 0, E = 0, g = 1) : (fI(o - -64 | 0, g, E, C, Q, 128 - U | 0), oQ(o + 48 | 0, g, E, C, Q, U), C = A[o + 56 >> 2], Q = A[o + 60 >> 2], E = A[o + 52 >> 2], g = A[o + 48 >> 2] | !!(A[o + 64 >> 2] | A[o + 72 >> 2] | A[o + 68 >> 2] | A[o + 76 >> 2]))), Y = g, y = E, c = D, x = 524288 | J, E = n << 3 | S >>> 29, n = S << 3, S = E;
          I: if ((0 | O) < 0) {
            if (U = 0, w = 0, D = 0, J = 0, !(Y ^ n | C ^ c | y ^ S | Q ^ x)) break A;
            if (g = n - Y | 0, E = S - ((Y >>> 0 > n >>> 0) + y | 0) | 0, D = (U = c - C | 0) - (w = (0 | y) == (0 | S) & Y >>> 0 > n >>> 0 | y >>> 0 > S >>> 0) | 0, J = C = (x - ((C >>> 0 > c >>> 0) + Q | 0) | 0) - (U >>> 0 < w >>> 0) | 0, C >>> 0 > 524287) break I;
            U = C = !(D | J), w = C ? g : D, Q = C <<= 6, fI(o + 32 | 0, g, E, D, J, C = (C = C + ((0 | (U = aA(U ? E : J))) == 32 ? aA(w) + 32 | 0 : U) | 0) - 12 | 0), V = V - C | 0, D = A[o + 40 >> 2], J = A[o + 44 >> 2], g = A[o + 32 >> 2], E = A[o + 36 >> 2];
          } else E = y + S | 0, U = (0 | y) == (0 | (E = (g = Y + n | 0) >>> 0 < n >>> 0 ? E + 1 | 0 : E)) & g >>> 0 < Y >>> 0 | E >>> 0 < y >>> 0, y = Q + x | 0, y = (C = C + c | 0) >>> 0 < c >>> 0 ? y + 1 | 0 : y, 1048576 & (J = (D = C + U | 0) >>> 0 < C >>> 0 ? y + 1 | 0 : y) && (g = 1 & Y | (1 & E) << 31 | g >>> 1, E = D << 31 | E >>> 1, V = V + 1 | 0, D = (1 & J) << 31 | D >>> 1, J = J >>> 1 | 0);
          if (Q = 0, S = -2147483648 & v, (0 | V) >= 32767) D = Q, J = 2147418112 | S, U = 0, w = 0;
          else if (c = 0, (0 | V) > 0 ? c = V : (fI(o + 16 | 0, g, E, D, J, V + 127 | 0), oQ(o, g, E, D, J, 1 - V | 0), g = A[o >> 2] | !!(A[o + 16 >> 2] | A[o + 24 >> 2] | A[o + 20 >> 2] | A[o + 28 >> 2]), E = A[o + 4 >> 2], D = A[o + 8 >> 2], J = A[o + 12 >> 2]), n = 7 & g, g = (0 | (C = D << 29 | E >>> 3)) == (0 | (w = (g = (7 & E) << 29 | g >>> 3) >>> 0 > (U = (n >>> 0 > 4) + g | 0) >>> 0 ? C + 1 | 0 : C)) & g >>> 0 > U >>> 0 | C >>> 0 > w >>> 0, C = Q | (7 & J) << 29 | D >>> 3, J = S | J >>> 3 & 65535 | c << 16, J = C >>> 0 > (D = g + C | 0) >>> 0 ? J + 1 | 0 : J, (0 | n) != 4) {
            if (!n) break A;
          } else y = w + (C = 0) | 0, J = (C = (0 | C) == (0 | (w = (g = U) >>> 0 > (U = U + (Q = 1 & U) | 0) >>> 0 ? y + 1 | 0 : y)) & Q >>> 0 > U >>> 0 | C >>> 0 > w >>> 0) >>> 0 > (D = C + D | 0) >>> 0 ? J + 1 | 0 : J;
        }
        A[I >> 2] = U, A[I + 4 >> 2] = w, A[I + 8 >> 2] = D, A[I + 12 >> 2] = J, t = o + 112 | 0;
      }
      function _A(I) {
        var C = 0, Q = 0, g = 0, E = 0, U = 0, w = 0, D = 0;
        A: if (I |= 0) {
          U = (g = I - 8 | 0) + (I = -8 & (C = A[I - 4 >> 2])) | 0;
          I: if (!(1 & C)) {
            if (!(3 & C) || (g = g - (C = A[g >> 2]) | 0) >>> 0 < UA[57156]) break A;
            if (I = I + C | 0, A[57157] == (0 | g)) {
              if (!(3 & ~(C = A[U + 4 >> 2]))) return A[57154] = I, A[U + 4 >> 2] = -2 & C, A[g + 4 >> 2] = 1 | I, void (A[I + g >> 2] = I);
            } else {
              if (C >>> 0 <= 255) {
                if (E = A[g + 8 >> 2], C = C >>> 3 | 0, (0 | (Q = A[g + 12 >> 2])) == (0 | E)) {
                  A[57152] = A[57152] & MC(-2, C);
                  break I;
                }
                A[E + 12 >> 2] = Q, A[Q + 8 >> 2] = E;
                break I;
              }
              if (D = A[g + 24 >> 2], (0 | g) == (0 | (C = A[g + 12 >> 2]))) if ((Q = A[(E = g + 20 | 0) >> 2]) || (Q = A[(E = g + 16 | 0) >> 2])) {
                for (; w = E, (Q = A[(E = (C = Q) + 20 | 0) >> 2]) || (E = C + 16 | 0, Q = A[C + 16 >> 2]); ) ;
                A[w >> 2] = 0;
              } else C = 0;
              else Q = A[g + 8 >> 2], A[Q + 12 >> 2] = C, A[C + 8 >> 2] = Q;
              if (!D) break I;
              E = A[g + 28 >> 2];
              Q: {
                if (A[(Q = 228912 + (E << 2) | 0) >> 2] == (0 | g)) {
                  if (A[Q >> 2] = C, C) break Q;
                  A[57153] = A[57153] & MC(-2, E);
                  break I;
                }
                if (A[D + (A[D + 16 >> 2] == (0 | g) ? 16 : 20) >> 2] = C, !C) break I;
              }
              if (A[C + 24 >> 2] = D, (Q = A[g + 16 >> 2]) && (A[C + 16 >> 2] = Q, A[Q + 24 >> 2] = C), !(Q = A[g + 20 >> 2])) break I;
              A[C + 20 >> 2] = Q, A[Q + 24 >> 2] = C;
            }
          }
          if (!(g >>> 0 >= U >>> 0) && 1 & (C = A[U + 4 >> 2])) {
            I: {
              if (!(2 & C)) {
                if (A[57158] == (0 | U)) {
                  if (A[57158] = g, I = A[57155] + I | 0, A[57155] = I, A[g + 4 >> 2] = 1 | I, A[57157] != (0 | g)) break A;
                  return A[57154] = 0, void (A[57157] = 0);
                }
                if (A[57157] == (0 | U)) return A[57157] = g, I = A[57154] + I | 0, A[57154] = I, A[g + 4 >> 2] = 1 | I, void (A[I + g >> 2] = I);
                I = (-8 & C) + I | 0;
                Q: if (C >>> 0 <= 255) {
                  if (E = A[U + 8 >> 2], C = C >>> 3 | 0, (0 | (Q = A[U + 12 >> 2])) == (0 | E)) {
                    A[57152] = A[57152] & MC(-2, C);
                    break Q;
                  }
                  A[E + 12 >> 2] = Q, A[Q + 8 >> 2] = E;
                } else {
                  if (D = A[U + 24 >> 2], (0 | U) == (0 | (C = A[U + 12 >> 2]))) if ((Q = A[(E = U + 20 | 0) >> 2]) || (Q = A[(E = U + 16 | 0) >> 2])) {
                    for (; w = E, (Q = A[(E = (C = Q) + 20 | 0) >> 2]) || (E = C + 16 | 0, Q = A[C + 16 >> 2]); ) ;
                    A[w >> 2] = 0;
                  } else C = 0;
                  else Q = A[U + 8 >> 2], A[Q + 12 >> 2] = C, A[C + 8 >> 2] = Q;
                  if (D) {
                    E = A[U + 28 >> 2];
                    B: {
                      if (A[(Q = 228912 + (E << 2) | 0) >> 2] == (0 | U)) {
                        if (A[Q >> 2] = C, C) break B;
                        A[57153] = A[57153] & MC(-2, E);
                        break Q;
                      }
                      if (A[D + (A[D + 16 >> 2] == (0 | U) ? 16 : 20) >> 2] = C, !C) break Q;
                    }
                    A[C + 24 >> 2] = D, (Q = A[U + 16 >> 2]) && (A[C + 16 >> 2] = Q, A[Q + 24 >> 2] = C), (Q = A[U + 20 >> 2]) && (A[C + 20 >> 2] = Q, A[Q + 24 >> 2] = C);
                  }
                }
                if (A[g + 4 >> 2] = 1 | I, A[I + g >> 2] = I, A[57157] != (0 | g)) break I;
                return void (A[57154] = I);
              }
              A[U + 4 >> 2] = -2 & C, A[g + 4 >> 2] = 1 | I, A[I + g >> 2] = I;
            }
            if (I >>> 0 <= 255) return C = 228648 + (-8 & I) | 0, (Q = A[57152]) & (I = 1 << (I >>> 3)) ? I = A[C + 8 >> 2] : (A[57152] = I | Q, I = C), A[C + 8 >> 2] = g, A[I + 12 >> 2] = g, A[g + 12 >> 2] = C, void (A[g + 8 >> 2] = I);
            E = 31, I >>> 0 <= 16777215 && (E = 62 + ((I >>> 38 - (C = aA(I >>> 8 | 0)) & 1) - (C << 1) | 0) | 0), A[g + 28 >> 2] = E, A[g + 16 >> 2] = 0, A[g + 20 >> 2] = 0, w = 228912 + (E << 2) | 0;
            I: {
              Q: {
                if ((Q = A[57153]) & (C = 1 << E)) {
                  for (E = I << ((0 | E) != 31 ? 25 - (E >>> 1 | 0) : 0), C = A[w >> 2]; ; ) {
                    if (Q = C, (-8 & A[C + 4 >> 2]) == (0 | I)) break Q;
                    if (C = E >>> 29 | 0, E <<= 1, !(C = A[(w = Q + (4 & C) | 0) + 16 >> 2])) break;
                  }
                  A[w + 16 >> 2] = g, A[g + 24 >> 2] = Q;
                } else A[57153] = C | Q, A[w >> 2] = g, A[g + 24 >> 2] = w;
                A[g + 12 >> 2] = g, A[g + 8 >> 2] = g;
                break I;
              }
              I = A[Q + 8 >> 2], A[I + 12 >> 2] = g, A[Q + 8 >> 2] = g, A[g + 24 >> 2] = 0, A[g + 12 >> 2] = Q, A[g + 8 >> 2] = I;
            }
            I = A[57160] - 1 | 0, A[57160] = I || -1;
          }
        }
      }
      function cC(I, C, Q) {
        var g, E = 0, U = 0, w = 0, D = 0, J = 0, o = 0, y = 0, S = 0, Y = 0, c = 0, n = 0, V = 0;
        t = g = t - 176 | 0;
        A: {
          if (32 & C) c = Q - ((0 | Q) > 1) | 0;
          else {
            U = PI(I, 93302);
            I: {
              Q: {
                B: {
                  if ((0 | C) != 2) {
                    if (U) break B;
                    C = 0;
                    break A;
                  }
                  if (c = Q + 1 | 0, S = (n = T(Q, 76) + 133152 | 0) + 56 | 0, Y = PI(I, 89360), w = PI(I, 93318), D = PI(I, 93426), J = PI(I, 93499), U) break Q;
                  break I;
                }
                c = Q + 1 | 0, S = (n = T(Q, 76) + 133152 | 0) + 56 | 0, J = 0;
              }
              for (I = 0, o = (0 | (E = A[U - 4 >> 2])) != 34 ? (0 | E) == 39 ? E : 0 : E, V = T(Q, 76) + 133208 | 0; ; ) {
                if (E = I, !(I = A[U >> 2])) break I;
                Q: {
                  if (!o) {
                    if ((0 | I) == 32 | I - 9 >>> 0 < 5) break I;
                    if ((0 | I) != 47) break Q;
                    break I;
                  }
                  if ((0 | E) != 92 && (0 | I) == (0 | o)) break I;
                }
                if (U = U + 4 | 0, !((0 | (y = HI(I, y + V | 0) + y | 0)) < 16)) break;
              }
            }
            o = 0, M[y + S | 0] = 0, y = T(Q, 76) + 133168 | 0, U = 0;
            I: if (Y) for (I = 0, S = (0 | (E = A[Y - 4 >> 2])) != 34 ? (0 | E) == 39 ? E : 0 : E; ; ) {
              if (E = I, !(I = A[Y >> 2])) break I;
              Q: {
                if (!S) {
                  if ((0 | I) == 32 | I - 9 >>> 0 < 5) break I;
                  if ((0 | I) != 47) break Q;
                  break I;
                }
                if ((0 | E) != 92 && (0 | I) == (0 | S)) break I;
              }
              if (Y = Y + 4 | 0, !((0 | (U = HI(I, U + y | 0) + U | 0)) < 36)) break;
            }
            if (M[U + y | 0] = 0, !(!w | A[w >> 2] - 48 >>> 0 >= 10)) {
              for (; o = (A[w >> 2] + T(o, 10) | 0) - 48 | 0, A[(w = w + 4 | 0) >> 2] - 48 >>> 0 < 10; ) ;
              (0 | o) <= 0 || (o = o - 1 | 0);
            }
            if (E = T(Q, 76) + 133152 | 0, A[E + 4 >> 2] = o, I = 0, U = 0, !(!D | A[D >> 2] - 48 >>> 0 >= 10)) for (; U = (A[D >> 2] + T(U, 10) | 0) - 48 | 0, A[(D = D + 4 | 0) >> 2] - 48 >>> 0 < 10; ) ;
            A[E + 12 >> 2] = U, U = T(Q, 76) + 133152 | 0;
            I: {
              Q: if (J) {
                for (; Q = M[I + 93099 | 0], (E = A[(I << 2) + J >> 2]) && (I = I + 1 | 0, (0 | Q) == (0 | E)); ) ;
                B: {
                  E: switch (E - 34 | 0) {
                    case 0:
                    case 5:
                      break E;
                    default:
                      break B;
                  }
                  if (!Q) {
                    I = 0;
                    break I;
                  }
                }
                for (I = 0; Q = M[I + 93116 | 0], (E = A[(I << 2) + J >> 2]) && (I = I + 1 | 0, (0 | Q) == (0 | E)); ) ;
                B: {
                  E: switch (E - 34 | 0) {
                    case 0:
                    case 5:
                      break E;
                    default:
                      break B;
                  }
                  if (!Q) {
                    I = 1;
                    break I;
                  }
                }
                for (I = 0; Q = M[I + 93197 | 0], (E = A[(I << 2) + J >> 2]) && (I = I + 1 | 0, (0 | Q) == (0 | E)); ) ;
                B: switch (E - 34 | 0) {
                  case 0:
                  case 5:
                    break B;
                  default:
                    break Q;
                }
                if (!Q) {
                  I = 2;
                  break I;
                }
              }
              I = 3;
            }
            A[U + 8 >> 2] = A[131156 + (I << 3) >> 2], A[n >> 2] = C;
          }
          if (YA(137776, 133168), Q = YA(g + 96 | 0, 133208), M[g + 157 | 0] = A[33291], M[g + 156 | 0] = A[33290], I = A[33289], A[g + 152 >> 2] = 0, M[g + 158 | 0] = I, (0 | c) > 0) for (w = 0; ; ) {
            if (D = 1, C = T(w, 76) + 133152 | 0, G[0 | (I = C + 16 | 0)] && YC(0, I) && (YA(137776, I), D = 0, M[0 | Q] = 0, M[g + 158 | 0] = 0, L[g + 156 >> 1] = 0), G[0 | (I = C + 56 | 0)]) {
              J = YA(Q, I), E = A[33679];
              I: if (G[0 | (I = E)]) for (; ; ) {
                if (!aI(I = I + 1 | 0, J)) {
                  YA(J, E + 1 | 0);
                  break I;
                }
                if (I = 1 + (SA(I) + I | 0) | 0, !G[0 | I]) break;
              }
              D && (M[137776] = 0);
            }
            if ((I = A[C + 8 >> 2]) && (M[g + 156 | 0] = I), (I = A[C + 12 >> 2]) && (M[g + 157 | 0] = I), (I = A[C + 4 >> 2]) && (M[g + 158 | 0] = I), (0 | c) == (0 | (w = w + 1 | 0))) break;
          }
          A[g + 148 >> 2] = Q, A[g + 144 >> 2] = 137776, (I = bB(g + 144 | 0, g + 172 | 0)) ? QQ(I, 43) || (C = G[g + 156 | 0], !G[134672] | ((0 | C) != G[134724] ? C : 0) || (A[g >> 2] = I, A[g + 4 >> 2] = 134672, iA(C = g + 16 | 0, 93533, g), I = 137776, sI(137776, C, 40))) : I = 92003, C = 0, aI(I, 134784) && (YA(134784, I), C = 131072);
        }
        return t = g + 176 | 0, C;
      }
      function xB(I, C) {
        var Q, g = 0, E = 0, U = 0, w = 0, D = 0;
        Q = I + C | 0;
        A: {
          I: if (!(1 & (g = A[I + 4 >> 2]))) {
            if (!(3 & g)) break A;
            C = (g = A[I >> 2]) + C | 0;
            Q: {
              if ((0 | (I = I - g | 0)) != A[57157]) {
                if (g >>> 0 <= 255) {
                  if (U = A[I + 8 >> 2], g = g >>> 3 | 0, (0 | (E = A[I + 12 >> 2])) != (0 | U)) break Q;
                  A[57152] = A[57152] & MC(-2, g);
                  break I;
                }
                if (D = A[I + 24 >> 2], (0 | (g = A[I + 12 >> 2])) == (0 | I)) if ((E = A[(U = I + 20 | 0) >> 2]) || (E = A[(U = I + 16 | 0) >> 2])) {
                  for (; w = U, (E = A[(U = (g = E) + 20 | 0) >> 2]) || (U = g + 16 | 0, E = A[g + 16 >> 2]); ) ;
                  A[w >> 2] = 0;
                } else g = 0;
                else E = A[I + 8 >> 2], A[E + 12 >> 2] = g, A[g + 8 >> 2] = E;
                if (!D) break I;
                U = A[I + 28 >> 2];
                B: {
                  if (A[(E = 228912 + (U << 2) | 0) >> 2] == (0 | I)) {
                    if (A[E >> 2] = g, g) break B;
                    A[57153] = A[57153] & MC(-2, U);
                    break I;
                  }
                  if (A[D + (A[D + 16 >> 2] == (0 | I) ? 16 : 20) >> 2] = g, !g) break I;
                }
                if (A[g + 24 >> 2] = D, (E = A[I + 16 >> 2]) && (A[g + 16 >> 2] = E, A[E + 24 >> 2] = g), !(E = A[I + 20 >> 2])) break I;
                A[g + 20 >> 2] = E, A[E + 24 >> 2] = g;
                break I;
              }
              if (3 & ~(g = A[Q + 4 >> 2])) break I;
              return A[57154] = C, A[Q + 4 >> 2] = -2 & g, A[I + 4 >> 2] = 1 | C, void (A[Q >> 2] = C);
            }
            A[U + 12 >> 2] = E, A[E + 8 >> 2] = U;
          }
          I: {
            if (!(2 & (g = A[Q + 4 >> 2]))) {
              if (A[57158] == (0 | Q)) {
                if (A[57158] = I, C = A[57155] + C | 0, A[57155] = C, A[I + 4 >> 2] = 1 | C, A[57157] != (0 | I)) break A;
                return A[57154] = 0, void (A[57157] = 0);
              }
              if (A[57157] == (0 | Q)) return A[57157] = I, C = A[57154] + C | 0, A[57154] = C, A[I + 4 >> 2] = 1 | C, void (A[I + C >> 2] = C);
              C = (-8 & g) + C | 0;
              Q: if (g >>> 0 <= 255) {
                if (U = A[Q + 8 >> 2], g = g >>> 3 | 0, (0 | (E = A[Q + 12 >> 2])) == (0 | U)) {
                  A[57152] = A[57152] & MC(-2, g);
                  break Q;
                }
                A[U + 12 >> 2] = E, A[E + 8 >> 2] = U;
              } else {
                if (D = A[Q + 24 >> 2], (0 | Q) == (0 | (g = A[Q + 12 >> 2]))) if ((U = A[(E = Q + 20 | 0) >> 2]) || (U = A[(E = Q + 16 | 0) >> 2])) {
                  for (; w = E, (U = A[(E = (g = U) + 20 | 0) >> 2]) || (E = g + 16 | 0, U = A[g + 16 >> 2]); ) ;
                  A[w >> 2] = 0;
                } else g = 0;
                else E = A[Q + 8 >> 2], A[E + 12 >> 2] = g, A[g + 8 >> 2] = E;
                if (D) {
                  U = A[Q + 28 >> 2];
                  B: {
                    if (A[(E = 228912 + (U << 2) | 0) >> 2] == (0 | Q)) {
                      if (A[E >> 2] = g, g) break B;
                      A[57153] = A[57153] & MC(-2, U);
                      break Q;
                    }
                    if (A[D + (A[D + 16 >> 2] == (0 | Q) ? 16 : 20) >> 2] = g, !g) break Q;
                  }
                  A[g + 24 >> 2] = D, (E = A[Q + 16 >> 2]) && (A[g + 16 >> 2] = E, A[E + 24 >> 2] = g), (E = A[Q + 20 >> 2]) && (A[g + 20 >> 2] = E, A[E + 24 >> 2] = g);
                }
              }
              if (A[I + 4 >> 2] = 1 | C, A[I + C >> 2] = C, A[57157] != (0 | I)) break I;
              return void (A[57154] = C);
            }
            A[Q + 4 >> 2] = -2 & g, A[I + 4 >> 2] = 1 | C, A[I + C >> 2] = C;
          }
          if (C >>> 0 <= 255) return g = 228648 + (-8 & C) | 0, (E = A[57152]) & (C = 1 << (C >>> 3)) ? C = A[g + 8 >> 2] : (A[57152] = C | E, C = g), A[g + 8 >> 2] = I, A[C + 12 >> 2] = I, A[I + 12 >> 2] = g, void (A[I + 8 >> 2] = C);
          U = 31, C >>> 0 <= 16777215 && (U = 62 + ((C >>> 38 - (g = aA(C >>> 8 | 0)) & 1) - (g << 1) | 0) | 0), A[I + 28 >> 2] = U, A[I + 16 >> 2] = 0, A[I + 20 >> 2] = 0, w = 228912 + (U << 2) | 0;
          I: {
            if ((E = A[57153]) & (g = 1 << U)) {
              for (U = C << ((0 | U) != 31 ? 25 - (U >>> 1 | 0) : 0), g = A[w >> 2]; ; ) {
                if (E = g, (-8 & A[g + 4 >> 2]) == (0 | C)) break I;
                if (g = U >>> 29 | 0, U <<= 1, !(g = A[(w = E + (4 & g) | 0) + 16 >> 2])) break;
              }
              A[w + 16 >> 2] = I, A[I + 24 >> 2] = E;
            } else A[57153] = g | E, A[w >> 2] = I, A[I + 24 >> 2] = w;
            return A[I + 12 >> 2] = I, void (A[I + 8 >> 2] = I);
          }
          C = A[E + 8 >> 2], A[C + 12 >> 2] = I, A[E + 8 >> 2] = I, A[I + 24 >> 2] = 0, A[I + 12 >> 2] = E, A[I + 8 >> 2] = C;
        }
      }
      function PB(I) {
        var C = 0, Q = 0, g = 0, E = 0, U = 0, w = 0, D = 0, J = 0, o = 0, y = 0, S = 0, Y = 0, c = 0;
        if (!(C = M[88105])) return I;
        if (I = QQ(I, C)) {
          if (!G[88106]) return I;
          if (G[I + 1 | 0]) {
            if (!G[88107]) {
              E = !!(0 | (Q = G[I + 1 | 0]));
              A: if (Q && (0 | (C = Q | G[0 | I] << 8)) != (0 | (D = G[88106] | G[88105] << 8))) for (Q = I + 1 | 0; ; ) {
                if (E = !!(0 | (g = G[(I = Q) + 1 | 0])), !g) break A;
                if (Q = I + 1 | 0, (0 | D) == (0 | (C = g | C << 8 & 65280))) break;
              }
              return E ? I : 0;
            }
            if (G[I + 2 | 0]) {
              if (!G[88108]) {
                Q = I + 2 | 0, E = !!(0 | (C = G[I + 2 | 0]));
                A: if (C && (0 | (C = G[I + 1 | 0] << 16 | G[0 | I] << 24 | C << 8)) != (0 | (D = G[88106] << 16 | G[88105] << 24 | G[88107] << 8))) for (; ; ) {
                  if (I = Q + 1 | 0, E = !!(0 | (g = G[Q + 1 | 0])), !g) break A;
                  if (Q = I, (0 | D) == (0 | (C = (C | g) << 8))) break;
                }
                else I = Q;
                return E ? I - 2 | 0 : 0;
              }
              if (G[I + 3 | 0]) {
                if (!G[88109]) {
                  Q = I + 3 | 0, E = !!(0 | (C = G[I + 3 | 0]));
                  A: if (C && (0 | (C = C | G[I + 1 | 0] << 16 | G[0 | I] << 24 | G[I + 2 | 0] << 8)) != (0 | (D = (I = G[88105] | G[88106] << 8 | G[88107] << 16 | G[88108] << 24) << 24 | (65280 & I) << 8 | I >>> 8 & 65280 | I >>> 24))) for (; ; ) {
                    if (I = Q + 1 | 0, E = !!(0 | (g = G[Q + 1 | 0])), !g) break A;
                    if (Q = I, (0 | D) == (0 | (C = g | C << 8))) break;
                  }
                  else I = Q;
                  return E ? I - 3 | 0 : 0;
                }
                D = I, t = J = t - 1056 | 0, A[(I = J + 1048 | 0) >> 2] = 0, A[I + 4 >> 2] = 0, A[(I = J + 1040 | 0) >> 2] = 0, A[I + 4 >> 2] = 0, A[J + 1032 >> 2] = 0, A[J + 1036 >> 2] = 0, A[J + 1024 >> 2] = 0, A[J + 1028 >> 2] = 0;
                A: {
                  I: {
                    Q: {
                      B: {
                        if (C = G[88105]) {
                          for (; ; ) {
                            if (!G[U + D | 0]) break I;
                            if (U = U + 1 | 0, A[((255 & C) << 2) + J >> 2] = U, A[(I = (J + 1024 | 0) + (C >>> 3 & 28) | 0) >> 2] = A[I >> 2] | 1 << C, !(C = G[U + 88105 | 0])) break;
                          }
                          if (I = 1, o = -1, U >>> 0 > 1) break B;
                        } else o = -1, I = 1;
                        w = -1, Q = 1;
                        break Q;
                      }
                      for (g = 1, C = 1; ; ) {
                        B: if ((0 | (w = G[88105 + (C + o | 0) | 0])) != (0 | (E = G[I + 88105 | 0]))) E >>> 0 < w >>> 0 ? (g = I - o | 0, Q = I, C = 1) : (o = Q, Q = Q + 1 | 0, g = 1, C = 1);
                        else {
                          if ((0 | C) == (0 | g)) {
                            Q = Q + g | 0, C = 1;
                            break B;
                          }
                          C = C + 1 | 0;
                        }
                        if (!(U >>> 0 > (I = Q + C | 0) >>> 0)) break;
                      }
                      if (Q = 1, w = -1, U >>> 0 <= 1) I = g;
                      else {
                        for (I = 0, E = 1, C = 1; ; ) {
                          B: if ((0 | (S = G[88105 + (C + w | 0) | 0])) != (0 | (y = G[Q + 88105 | 0]))) y >>> 0 > S >>> 0 ? (E = Q - w | 0, I = Q, C = 1) : (w = I, I = I + 1 | 0, E = 1, C = 1);
                          else {
                            if ((0 | C) == (0 | E)) {
                              I = I + E | 0, C = 1;
                              break B;
                            }
                            C = C + 1 | 0;
                          }
                          if (!(U >>> 0 > (Q = I + C | 0) >>> 0)) break;
                        }
                        I = g, Q = E;
                      }
                    }
                    for (C = I, IC(88105, (g = (I = w + 1 >>> 0 > o + 1 >>> 0) ? Q : C) + 88105 | 0, S = (y = I ? w : o) + 1 | 0) ? (g = ((I = ~y + U | 0) >>> 0 < y >>> 0 ? y : I) + 1 | 0, E = 0) : E = U - g | 0, c = U - 1 | 0, Y = 63 | U, w = 0, I = D; ; ) {
                      if (!(D - I >>> 0 >= U >>> 0)) if (Q = eQ(D, 0, Y)) {
                        if (D = Q, Q - I >>> 0 < U >>> 0) break I;
                      } else D = D + Y | 0;
                      Q = G[I + c | 0], C = U;
                      Q: {
                        if (A[(J + 1024 | 0) + (Q >>> 3 & 28) >> 2] >>> Q & 1) if ((0 | (Q = A[(Q << 2) + J >> 2])) == (0 | U)) {
                          B: {
                            if (o = G[(Q = (C = S) >>> 0 > w >>> 0 ? C : w) + 88105 | 0]) for (; ; ) {
                              if (G[I + Q | 0] != (255 & o)) break B;
                              if (!(o = G[(Q = Q + 1 | 0) + 88105 | 0])) break;
                            }
                            for (; ; ) {
                              if (C >>> 0 <= w >>> 0) break A;
                              if (G[(C = C - 1 | 0) + 88105 | 0] != G[I + C | 0]) break;
                            }
                            C = g, w = E;
                            break Q;
                          }
                          C = Q - y | 0;
                        } else C = (Q = U - Q | 0) >>> 0 > w >>> 0 ? Q : w;
                        w = 0;
                      }
                      I = I + C | 0;
                    }
                  }
                  I = 0;
                }
                t = J + 1056 | 0, Q = I;
              }
            }
          }
        }
        return Q;
      }
      function Fg(I, C, Q, g, E, U) {
        var w, D, J, o, y = 0, S = 0, Y = 0;
        if (t = w = t - 560 | 0, M[w + 448 | 0] = 0, M[w + 144 | 0] = 0, M[w + 120 | 0] = 0, J = 34 & U, D = C - T(S = (0 | C) / 100 | 0, 100) | 0, 1 & (o = 64 & G[I + 106 | 0] ? (0 | C) > 999 | U : 0) | (0 | C) > 99) {
          A: {
            I: {
              Q: {
                if (!(!J | D)) {
                  if (!KA(I, 90606, w + 304 | 0)) break Q;
                  break A;
                }
                if (D) break I;
              }
              if (KA(I, 90691, w + 304 | 0)) break A;
            }
            KA(I, 90725, w + 304 | 0);
          }
          y = U, (0 | C) < 1e3 || (y = U, !(8 & G[I + 105 | 0]) | C - 2e3 >>> 0 < 4294967196 && (M[w + 208 | 0] = 0, TB(I, y = (S >>> 0) / 10 | 0, g = 16384 & A[I + 108 >> 2] ? 0 : E + 1 | 0, !((C >>> 0) % 1e3 | 0) | J, w + 272 | 0) || Dg(I, y, E, A[I + 212 >> 2] == 28012 ? 520 : (0 | g) < 4 ? (A[I + 108 >> 2] >>> g & 1) << 3 : 0, w + 208 | 0), 2 & G[I + 109 | 0] ? (A[w + 108 >> 2] = 15, A[w + 100 >> 2] = 15, A[w + 104 >> 2] = w + 208, A[w + 96 >> 2] = w + 272, iA(w + 144 | 0, 90761, w + 96 | 0)) : (A[w + 92 >> 2] = 15, A[w + 84 >> 2] = 15, A[w + 88 >> 2] = w + 272, A[w + 80 >> 2] = w + 208, iA(w + 144 | 0, 90761, w + 80 | 0)), g = 1, 1 & (!!(0 | (S = S - T(y, 10) | 0)) | o) || (M[w + 304 | 0] = 0), y = 1 | U)), M[w + 208 | 0] = 0;
          A: if (!(~o & (0 | S) <= 0)) if (!(4 & G[I + 106 | 0]) | !(1 & y | G[w + 144 | 0]) || KA(I, 90824, w + 120 | 0), !J | (16 & G[I + 109 | 0] ? 0 : D) || (A[w + 64 >> 2] = S, iA(g = w + 548 | 0, 90875, w - -64 | 0), Y = KA(I, g, w + 208 | 0), !(4096 & A[I + 108 >> 2]) | (0 | D) <= 0 || UC(w + 208 | 0, 133104)), g = 1, 1 & (~o | !!(0 | S))) {
            I: {
              Q: {
                B: {
                  E: {
                    if (!(131072 & A[I + 108 >> 2]) || 1 & y | (0 | S) != 1) {
                      if (D | Y || (A[w + 48 >> 2] = S, iA(g = w + 548 | 0, 90985, w + 48 | 0), Y = KA(I, g, w + 208 | 0)), Y || (A[w + 32 >> 2] = S, iA(g = w + 548 | 0, 91027, w + 32 | 0), KA(I, g, w + 208 | 0))) break E;
                      if ((0 | S) != 1) break Q;
                      break B;
                    }
                    if (!Y) break B;
                  }
                  M[w + 304 | 0] = 0;
                  break I;
                }
                if (g = 1, 4 & G[I + 105 | 0]) break A;
              }
              Dg(I, S, E, 0, w + 208 | 0);
            }
            g = 1;
          } else KA(I, 88875, w + 208 | 0);
          A[w + 28 >> 2] = w + 304, A[w + 24 >> 2] = w + 208, A[w + 20 >> 2] = w + 120, A[w + 16 >> 2] = w + 144, iA(w + 448 | 0, 91059, w + 16 | 0);
        } else y = U;
        M[w + 132 | 0] = 0;
        A: {
          I: {
            if ((0 | D) > 0) 16 & G[I + 109 | 0] && 2 & y || (!(1 & y) | E && (0 | C) <= 100 || !(64 & (g = A[I + 104 >> 2])) & (!(8388608 & g) | D >>> 0 > 9) || KA(I, 90824, w + 132 | 0), !(1 & y | G[w + 144 | 0]) | !(524288 & A[I + 104 >> 2]) | S || KA(I, 90824, w + 132 | 0)), M[w + 336 | 0] = 0;
            else if (M[w + 336 | 0] = 0, !D & g) break I;
            if (E ? (U = A[I + 108 >> 2], C = (0 | E) < 4 ? (U >>> E & 1) << 3 : 0) : (g = J ? 3 : 2, C = 32 & U | ((0 | C) < 100 ? 1 & y ? g : 4 | g : g), U = A[I + 108 >> 2]), C = (0 | E) == 1 && A[I + 212 >> 2] == 28012 ? 520 | C : C, 1048576 & U && (g = 16 | C, C = (0 | S) > 0 || 1 & y ? g : C), !Dg(I, D, E, 256 & y | C, w + 336 | 0) | !(128 & G[I + 104 | 0])) break A;
            M[w + 132 | 0] = 0;
            break A;
          }
          G[133104] && ((0 | (I = SA(w + 448 | 0))) <= 0 || G[(I = I + w | 0) + 447 | 0] == 10 && (M[I + 447 | 0] = 0), YA(w + 336 | 0, 133104));
        }
        A[w + 8 >> 2] = 15, A[w + 12 >> 2] = w + 336, A[w + 4 >> 2] = w + 132, A[w >> 2] = w + 448, iA(Q, 91101, w), t = w + 560 | 0;
      }
      function fB(I) {
        var C, Q, g, E = 0, U = 0, w = 0, D = 0, J = 0, o = 0, y = 0, S = 0, Y = 0, c = 0, n = 0, V = 0;
        for (E = A[32972], A[E + 64 >> 2] = 290816, A[E + 68 >> 2] = 4104, A[E + 96 >> 2] = 0, A[E + 100 >> 2] = 0, A[E + 120 >> 2] = 90, A[E + 124 >> 2] = 100, A[E + 112 >> 2] = 64, A[E + 116 >> 2] = 256, A[E + 104 >> 2] = 5, A[E + 108 >> 2] = 0, A[E + 84 >> 2] = 100, A[E + 88 >> 2] = 64, U = A[50754], A[E + 132 >> 2] = 0, A[E + 136 >> 2] = 0, A[E + 128 >> 2] = U, A[E + 140 >> 2] = 0, A[E + 144 >> 2] = 0, A[E + 148 >> 2] = 0, A[E + 152 >> 2] = 0, A[E + 156 >> 2] = 0, A[E + 160 >> 2] = 0, A[36435] = 450, A[E + 92 >> 2] = 2, A[50870] = 0, A[50871] = 0, A[50872] = 0, A[50873] = 0, A[50880] = 0, A[50881] = 0, A[50882] = 0, A[50883] = 0, A[50890] = 0, A[50891] = 0, A[50892] = 0, A[50893] = 0, w = -3.141592653589793 / +A[50754], H[25429] = w, J = -2 * w, H[25430] = J, C = (w = LC(200 * w)) * -w, H[25434] = C, H[25439] = C, H[25444] = C, w = (J = w * yC(2e3 * J)) + J, H[25433] = w, H[25438] = w, H[25443] = w, J = 1 - w - C, H[25432] = J, H[25437] = J, H[25442] = J, A[50902] = 0, A[50903] = 0, A[50900] = 0, A[50901] = 0, H[25449] = C, H[25448] = w, A[50912] = 0, A[50913] = 0, H[25447] = J, A[50910] = 0, A[50911] = 0, H[25454] = C, H[25453] = w, A[50922] = 0, A[50923] = 0, H[25452] = J, A[50920] = 0, A[50921] = 0, H[25459] = C, H[25458] = w, A[50932] = 0, A[50933] = 0, H[25457] = J, A[50930] = 0, A[50931] = 0, H[25464] = C, H[25463] = w, H[25462] = J, A[50942] = 0, A[50943] = 0, A[50940] = 0, A[50941] = 0, H[25469] = C, H[25468] = w, H[25467] = J, A[50952] = 0, A[50953] = 0, A[50950] = 0, A[50951] = 0, H[25474] = C, H[25473] = w, H[25472] = J, Q = A[32972], U = 0; L[(o = (U << 1) + Q | 0) + 236 >> 1] = 256, L[o + 164 >> 1] = 256, E = G[U + 105376 | 0] << 1, L[o + 254 >> 1] = E, L[o + 182 >> 1] = E, L[o + 200 >> 1] = G[U + 105385 | 0] << 1, A[(E = (D = U << 2) + Q | 0) + 308 >> 2] = A[D + 105408 >> 2], A[E + 272 >> 2] = 0, L[o + 218 >> 1] = 0, A[D + 200944 >> 2] = (0 | T(A[D + 105456 >> 2], 22050)) / A[50754], (0 | (U = U + 1 | 0)) != 9; ) ;
        for (c = A[32961], U = 0, g = Q + 344 | 0; ; ) {
          if (E = y, S = c, o = U, (0 | (y = A[(U = (D = U << 2) + 131840 | 0) >> 2])) == -1 && (y = 8e3, A[U >> 2] = 8e3, o && (A[131840 + (4 | D) >> 2] = A[D + 131836 >> 2])), c = A[131840 + (4 | D) >> 2], !((0 | E) >= (0 | (y = (0 | y) / 8 | 0)) || (0 | (Y = y - E | 0)) <= 0 || (D = E + 1 | 0, U = E, 1 & Y && (M[344 + (E + Q | 0) | 0] = (0 | S) >= 255 ? 255 : S, U = D), (0 | D) == (0 | y)))) for (n = c - S | 0; D = ((0 | T(U - E | 0, n)) / (0 | Y) | 0) + S | 0, M[U + g | 0] = (0 | D) >= 255 ? 255 : D, V = ((0 | T((D = U + 1 | 0) - E | 0, n)) / (0 | Y) | 0) + S | 0, M[D + g | 0] = (0 | V) >= 255 ? 255 : V, (0 | y) != (0 | (U = U + 2 | 0)); ) ;
          if (U = o + 2 | 0, !(o >>> 0 < 10)) break;
        }
        U = A[32972], A[U + 80 >> 2] = 232, A[U + 72 >> 2] = 256, A[U + 76 >> 2] = 238, I || (A[49848] = 0), L[U + 200 >> 1] = (0 | T(L[U + 200 >> 1], 105)) / 100;
      }
      function pB(I, C, Q) {
        var g, E = 0, U = 0, w = 0, D = 0, J = 0, o = 0, y = 0, S = 0;
        t = g = t - 288 | 0, (0 | C) != 132848 && mQ(132848, C, 40), (0 | (E = I + 228 | 0)) != (0 | C) && mQ(E, C, 40), A[g + 88 >> 2] = C, A[g + 84 >> 2] = 47, A[g + 80 >> 2] = 137584, iA(E = g + 96 | 0, 84089, g + 80 | 0), U = rC(E), (E = A[I + 688 >> 2]) && (_A(E), A[I + 688 >> 2] = 0), E = yQ(g + 96 | 0, 84577);
        A: if ((0 | U) > 0 && E) if (Q = KI(U), A[I + 688 >> 2] = Q, Q) if (o = RB(Q, U, E), mI(E), o >>> 0 <= 1032) A[g + 16 >> 2] = g + 96, lI(A[30450], 85164, g + 16 | 0), Q = 2;
        else if (E = A[I + 688 >> 2], Q = A[E + 4 >> 2], !((0 | (U = A[E >> 2])) != 1024 | (0 | Q) <= 0) & (0 | Q) < 134217729) {
          E = Q + E | 0, A[I + 684 >> 2] = E, S = pA(I + 5168 | 0, 0, 1024), pA(I + 7664 | 0, 0, 260), pA(I + 7924 | 0, 255, 256), pA(I + 4788 | 0, 0, 380), pA(I + 6192 | 0, 0, 512);
          I: if ((0 | (Q = G[0 | E])) != 7) for (; ; ) {
            if ((0 | (U = 255 & Q)) != 6) {
              if (!U) break I;
              U = A[I + 684 >> 2], A[g + 72 >> 2] = Q << 24 >> 24, A[g + 64 >> 2] = 132848, A[g + 68 >> 2] = E - U, lI(A[30450], 88950, g - -64 | 0);
              break;
            }
            Q: {
              B: {
                E: {
                  R: {
                    D: switch ((U = G[0 | (Q = E + 1 | 0)]) - 18 | 0) {
                      case 0:
                        break R;
                      case 2:
                        break D;
                      default:
                        break E;
                    }
                    for (Q = 4 + (-4 & Q) | 0, A[I + 180 >> 2] = Q; Q = (E = Q) + 1 | 0, !mU(E); ) ;
                    for (; U = G[0 | E], Q = E, E = E + 1 | 0, (0 | U) != 7; ) ;
                    break Q;
                  }
                  if (Q = E + 3 | 0, (0 | (E = ((0 | (E = M[E + 2 | 0])) < 65 ? 191 : -65) + E | 0)) > 94) break B;
                  A[4788 + ((E << 2) + I | 0) >> 2] = Q;
                  break B;
                }
                Q = 1 + ((D = SA(Q)) + Q | 0) | 0;
                E: switch (0 | D) {
                  case 1:
                    A[5168 + ((U << 2) + I | 0) >> 2] = Q;
                    break B;
                  case 0:
                    A[S >> 2] = Q;
                    break B;
                  default:
                    break E;
                }
                D = G[E + 2 | 0], (0 | U) != 1 ? (E = A[I + 7664 >> 2], G[0 | (y = (w = I + U | 0) + 7924 | 0)] == 255 && (M[0 | y] = E), M[0 | (w = w + 7668 | 0)] = G[0 | w] + 1, A[(w = (E << 2) + I | 0) + 6704 >> 2] = Q, A[I + 7664 >> 2] = E + 1, A[w + 7184 >> 2] = U | D << 8) : A[6188 + ((D << 2) + I | 0) >> 2] = Q;
              }
              if (G[0 | Q] != 7) for (; Q = 1 + (SA(Q) + Q | 0) | 0, G[0 | Q] != 7; ) ;
            }
            Q = G[0 | (E = Q + 1 | 0)];
          }
          for (E = A[I + 688 >> 2] + 8 | 0; ; ) {
            for (A[692 + ((Q = J << 2) + I | 0) >> 2] = E; U = G[0 | E]; ) E = E + U | 0;
            for (E = E + 1 | 0, A[692 + ((4 | Q) + I | 0) >> 2] = E; Q = G[0 | E]; ) E = Q + E | 0;
            if (E = E + 1 | 0, (0 | (J = J + 2 | 0)) == 1024) break;
          }
          Q = 0, (0 | (I = A[I + 324 >> 2])) <= 0 | I >>> 0 <= o >>> 0 || (A[g + 48 >> 2] = C, lI(A[30450], 85519, g + 48 | 0));
        } else A[g + 40 >> 2] = Q, A[g + 36 >> 2] = U, A[g + 32 >> 2] = g + 96, lI(A[30450], 85349, g + 32 | 0), Q = 2;
        else mI(E), Q = 3;
        else {
          if (Q || (A[g >> 2] = g + 96, lI(A[30450], 84963, g)), Q = 1, !E) break A;
          mI(E);
        }
        return t = g + 288 | 0, Q;
      }
      function ZQ(I) {
        var C, Q = 0, g = 0;
        for (C = pA(I + 344 | 0, 0, 256), M[I + 364 | 0] = 1, M[I + 356 | 0] = 1, M[I + 357 | 0] = 1, M[I + 358 | 0] = 1, M[I + 359 | 0] = 1, M[I + 360 | 0] = 1, M[I + 361 | 0] = 1, M[I + 362 | 0] = 1, M[I + 363 | 0] = 1, M[I + 348 | 0] = 1, M[I + 349 | 0] = 1, M[I + 350 | 0] = 1, M[I + 351 | 0] = 1, M[I + 352 | 0] = 1, M[I + 353 | 0] = 1, M[I + 354 | 0] = 1, M[I + 355 | 0] = 1, M[I + 431 | 0] = 3, M[I + 429 | 0] = 3, M[I + 430 | 0] = 3, M[I + 406 | 0] = 3, M[I + 407 | 0] = 3, M[I + 408 | 0] = 3, M[I + 409 | 0] = 3, M[I + 410 | 0] = 3, M[I + 411 | 0] = 3, M[I + 412 | 0] = 3, M[I + 413 | 0] = 3, M[I + 414 | 0] = 3, M[I + 415 | 0] = 3, M[I + 416 | 0] = 3, M[I + 417 | 0] = 3, M[I + 418 | 0] = 3, M[I + 419 | 0] = 3, M[I + 420 | 0] = 3, M[I + 421 | 0] = 3, M[I + 440 | 0] = 3, M[I + 441 | 0] = 3, M[I + 442 | 0] = 3, M[I + 443 | 0] = 3, g = 21; M[(Q = I + g | 0) + 344 | 0] = 4 | G[Q + 344 | 0], (0 | (Q = g + 1 | 0)) != 58; ) M[0 | (Q = Q + C | 0)] = 4 | G[0 | Q], M[(Q = g + C | 0) + 2 | 0] = 4 | G[Q + 2 | 0], M[Q + 3 | 0] = 4 | G[Q + 3 | 0], g = g + 4 | 0;
        M[I + 346 | 0] = 4 | G[I + 346 | 0], M[I + 347 | 0] = 4 | G[I + 347 | 0], M[I + 432 | 0] = 4 | G[I + 432 | 0], M[I + 433 | 0] = 4 | G[I + 433 | 0], M[I + 434 | 0] = 4 | G[I + 434 | 0], M[I + 435 | 0] = 4 | G[I + 435 | 0], M[I + 436 | 0] = 4 | G[I + 436 | 0], M[I + 437 | 0] = 4 | G[I + 437 | 0], M[I + 438 | 0] = 4 | G[I + 438 | 0], M[I + 439 | 0] = 4 | G[I + 439 | 0], M[I + 467 | 0] = 4 | G[I + 467 | 0], M[I + 468 | 0] = 4 | G[I + 468 | 0], M[I + 470 | 0] = 4 | G[I + 470 | 0], M[I + 471 | 0] = 4 | G[I + 471 | 0], M[I + 348 | 0] = 64 | G[I + 348 | 0], M[I + 349 | 0] = 64 | G[I + 349 | 0], M[I + 350 | 0] = 64 | G[I + 350 | 0], M[I + 351 | 0] = 64 | G[I + 351 | 0], M[I + 352 | 0] = 64 | G[I + 352 | 0], M[I + 353 | 0] = 64 | G[I + 353 | 0], M[I + 354 | 0] = 64 | G[I + 354 | 0], M[I + 355 | 0] = 64 | G[I + 355 | 0], M[I + 356 | 0] = 64 | G[I + 356 | 0], M[I + 357 | 0] = 64 | G[I + 357 | 0], M[I + 358 | 0] = 64 | G[I + 358 | 0], M[I + 359 | 0] = 64 | G[I + 359 | 0], M[I + 360 | 0] = 64 | G[I + 360 | 0], M[I + 361 | 0] = 64 | G[I + 361 | 0], M[I + 362 | 0] = 64 | G[I + 362 | 0], M[I + 363 | 0] = 64 | G[I + 363 | 0], M[I + 364 | 0] = 64 | G[I + 364 | 0], M[I + 406 | 0] = 64 | G[I + 406 | 0], M[I + 407 | 0] = 64 | G[I + 407 | 0], M[I + 408 | 0] = 64 | G[I + 408 | 0], M[I + 409 | 0] = 64 | G[I + 409 | 0], M[I + 410 | 0] = 64 | G[I + 410 | 0], M[I + 411 | 0] = 64 | G[I + 411 | 0], M[I + 412 | 0] = 64 | G[I + 412 | 0], M[I + 413 | 0] = 64 | G[I + 413 | 0], M[I + 414 | 0] = 64 | G[I + 414 | 0], M[I + 415 | 0] = 64 | G[I + 415 | 0], M[I + 416 | 0] = 64 | G[I + 416 | 0], M[I + 417 | 0] = 64 | G[I + 417 | 0], M[I + 418 | 0] = 64 | G[I + 418 | 0], M[I + 419 | 0] = 64 | G[I + 419 | 0], M[I + 420 | 0] = 64 | G[I + 420 | 0], M[I + 440 | 0] = 64 | G[I + 440 | 0], M[I + 441 | 0] = 64 | G[I + 441 | 0], M[I + 429 | 0] = 64 | G[I + 429 | 0], M[I + 430 | 0] = 64 | G[I + 430 | 0], M[I + 431 | 0] = 64 | G[I + 431 | 0], M[I + 442 | 0] = 64 | G[I + 442 | 0], M[I + 443 | 0] = 64 | G[I + 443 | 0], A[I + 40 >> 2] = 1, A[I + 204 >> 2] = A[I + 600 >> 2] + 77;
      }
      function tB(I, C, Q, g, E, U, w, D, J) {
        var o, y = 0, S = 0, Y = 0, c = 0, n = 0, V = 0, x = 0, O = 0, v = 0, _ = 0;
        t = o = t - 128 | 0;
        A: {
          I: {
            if (XC(U, w, D, J, 0, 0, 0, 0)) {
              S = 65535 & J;
              Q: B: {
                if ((0 | (c = J >>> 16 & 32767)) != 32767) {
                  if (y = 4, c) break B;
                  y = U | D | w | S ? 3 : 2;
                  break Q;
                }
                y = !(U | D | w | S);
              }
              if ((0 | (n = 32767 & (v = E >>> 16 | 0))) != 32767 && y) break I;
            }
            DI(o + 16 | 0, C, Q, g, E, U, w, D, J), JQ(o, C = A[o + 16 >> 2], g = A[o + 20 >> 2], E = A[o + 24 >> 2], Q = A[o + 28 >> 2], C, g, E, Q), g = A[o + 8 >> 2], E = A[o + 12 >> 2], D = A[o >> 2], J = A[o + 4 >> 2];
            break A;
          }
          if (c = D, (0 | XC(C, Q, y = g, V = 2147483647 & E, U, w, D, Y = 2147483647 & J)) <= 0) {
            if (XC(C, Q, y, V, U, w, c, Y)) {
              D = C, J = Q;
              break A;
            }
            DI(o + 112 | 0, C, Q, g, E, 0, 0, 0, 0), g = A[o + 120 >> 2], E = A[o + 124 >> 2], D = A[o + 112 >> 2], J = A[o + 116 >> 2];
          } else {
            if (x = J >>> 16 & 32767, n ? (J = Q, D = C) : (DI(o + 96 | 0, C, Q, y, V, 0, 0, 0, 1081540608), y = A[o + 104 >> 2], V = D = A[o + 108 >> 2], n = (D >>> 16 | 0) - 120 | 0, J = A[o + 100 >> 2], D = A[o + 96 >> 2]), x || (DI(o + 80 | 0, U, w, c, Y, 0, 0, 0, 1081540608), c = A[o + 88 >> 2], Y = U = A[o + 92 >> 2], x = (U >>> 16 | 0) - 120 | 0, w = A[o + 84 >> 2], U = A[o + 80 >> 2]), O = c, _ = 65535 & Y | 65536, V = 65535 & V | 65536, (0 | n) > (0 | x)) {
              for (; ; ) {
                if (c = (Y = y - O | 0) - (S = (0 | w) == (0 | J) & U >>> 0 > D >>> 0 | w >>> 0 > J >>> 0) | 0, (0 | (S = (V - ((y >>> 0 < O >>> 0) + _ | 0) | 0) - (S >>> 0 > Y >>> 0) | 0)) > 0 | (0 | S) >= 0) {
                  if (y = D, !((D = D - U | 0) | c | (J = J - ((U >>> 0 > y >>> 0) + w | 0) | 0) | S)) {
                    DI(o + 32 | 0, C, Q, g, E, 0, 0, 0, 0), g = A[o + 40 >> 2], E = A[o + 44 >> 2], D = A[o + 32 >> 2], J = A[o + 36 >> 2];
                    break A;
                  }
                  S = S << 1 | c >>> 31, y = c << 1 | J >>> 31;
                } else S = V << 1 | y >>> 31, y = y << 1 | J >>> 31;
                if (V = S, S = J << 1 | D >>> 31, D <<= 1, J = S, !((0 | (n = n - 1 | 0)) > (0 | x))) break;
              }
              n = x;
            }
            if (c = (Y = y - O | 0) - (S = (0 | w) == (0 | J) & U >>> 0 > D >>> 0 | w >>> 0 > J >>> 0) | 0, Y = S = (V - ((y >>> 0 < O >>> 0) + _ | 0) | 0) - (S >>> 0 > Y >>> 0) | 0, (0 | S) < 0) c = y, Y = V;
            else if (y = D, !((D = D - U | 0) | c | (J = J - ((U >>> 0 > y >>> 0) + w | 0) | 0) | Y)) {
              DI(o + 48 | 0, C, Q, g, E, 0, 0, 0, 0), g = A[o + 56 >> 2], E = A[o + 60 >> 2], D = A[o + 48 >> 2], J = A[o + 52 >> 2];
              break A;
            }
            if ((0 | Y) == 65535 | Y >>> 0 < 65535) for (; C = J >>> 31 | 0, n = n - 1 | 0, V = J << 1 | D >>> 31, D <<= 1, J = V, Q = C, C = Y << 1 | c >>> 31, c = Q | c << 1, Y = C, C >>> 0 < 65536; ) ;
            C = 32768 & v, (0 | n) <= 0 ? (DI(o - -64 | 0, D, J, c, 65535 & Y | (C | n + 120) << 16, 0, 0, 0, 1065811968), g = A[o + 72 >> 2], E = A[o + 76 >> 2], D = A[o + 64 >> 2], J = A[o + 68 >> 2]) : (g = c, E = 65535 & Y | (C | n) << 16);
          }
        }
        A[I >> 2] = D, A[I + 4 >> 2] = J, A[I + 8 >> 2] = g, A[I + 12 >> 2] = E, t = o + 128 | 0;
      }
      function eg(I, C, Q) {
        var g, E, U = 0, w = 0, D = 0, J = 0, o = 0, y = 0, S = 0, Y = 0, c = 0;
        if (t = g = t - 1040 | 0, (0 | (w = EE(I, 589824, 0))) >= 0 && ((U = oA(1, 2072)) ? A[U + 8 >> 2] = w : (HA(0 | w), U = 0)), E = U, U) {
          A: if (U = uQ(E)) for (c = A[30450], Y = (g + 96 | 0) + C | 0; ; ) {
            if ((0 | (w = A[50303])) >= 348) {
              A[g + 4 >> 2] = 350, A[g >> 2] = w + 1, lI(c, 91860, g);
              break A;
            }
            if (G[U + 19 | 0] != 46) if (A[g + 88 >> 2] = U + 19, A[g + 84 >> 2] = 47, A[g + 80 >> 2] = I, iA(U = g + 96 | 0, 91924, g + 80 | 0), (0 | (U = rC(U))) != -31) {
              if (!((0 | U) <= 0) && (S = yQ(g + 96 | 0, 85712))) {
                D = 0, M[g + 832 | 0] = 0, M[g + 752 | 0] = 0, A[g + 360 >> 2] = 0, A[g + 356 >> 2] = 4, o = 0;
                I: for (; ; ) {
                  for (y = 299 - o | 0; CB(g + 912 | 0, 120, S); ) {
                    U = g + 912 | 0;
                    Q: {
                      if (G[g + 912 | 0] != 35) {
                        B: if (!((0 | (U = SA(g + 912 | 0) - 1 | 0)) <= 0)) for (; ; ) {
                          if (!((0 | (w = M[0 | (J = (g + 912 | 0) + U | 0)])) == 32 | w - 9 >>> 0 < 5)) break B;
                          if (M[0 | J] = 0, !((0 | (U = U - 1 | 0)) > 0)) break;
                        }
                        if (!(U = PB(g + 912 | 0))) break Q;
                      }
                      M[0 | U] = 0;
                    }
                    U = g + 912 | 0;
                    Q: if (w = G[g + 912 | 0]) for (; ; ) {
                      if (pI(w << 24 >> 24)) break Q;
                      if (!(w = G[0 | (U = U + 1 | 0)])) break;
                    }
                    if (M[0 | U] = 0, G[g + 912 | 0]) {
                      U = U + 1 | 0;
                      Q: switch (OA(131904, g + 912 | 0) - 1 | 0) {
                        case 0:
                          for (; w = U, U = U + 1 | 0, (0 | (J = M[0 | w])) == 32 | J - 9 >>> 0 < 5; ) ;
                          sI(g + 832 | 0, w, 80);
                          continue;
                        case 1:
                          if (M[g + 672 | 0] = 0, A[g + 364 >> 2] = 5, w = g + 672 | 0, A[g + 16 >> 2] = w, A[g + 20 >> 2] = g + 364, QI(U, 86237, g + 16 | 0), (w = SA(w) + 2 | 0) >>> 0 >= y >>> 0) continue;
                          M[0 | (U = (g + 368 | 0) + o | 0)] = A[g + 364 >> 2], YA(U + 1 | 0, g + 672 | 0), D = D + 1 | 0, o = w + o | 0;
                          continue I;
                        case 2:
                          if (A[g + 52 >> 2] = g + 360, A[g + 48 >> 2] = g + 752, QI(U, 86237, g + 48 | 0), !Q) continue;
                          A[g + 32 >> 2] = Y, lI(c, 92042, g + 32 | 0);
                          continue;
                        case 5:
                          break Q;
                        default:
                          continue;
                      }
                      A[g + 64 >> 2] = g + 356, QI(U, 87268, g - -64 | 0);
                    }
                  }
                  break;
                }
                M[(g + 368 | 0) + o | 0] = 0, w = OA(132112, g + 752 | 0), D ? (J = SA(Y) + o | 0, y = bA((D = oA(28 + (SA(g + 832 | 0) + J | 0) | 0, 1)) + 24 | 0, g + 368 | 0, U = o + 1 | 0), A[D + 4 >> 2] = y, U = YA(U + y | 0, Y), A[D >> 2] = U, A[D + 8 >> 2] = U, G[g + 832 | 0] && (A[D >> 2] = YA(2 + (J + y | 0) | 0, g + 832 | 0)), U = A[g + 360 >> 2], M[D + 14 | 0] = 0, M[D + 12 | 0] = w, M[D + 13 | 0] = U, M[D + 15 | 0] = A[g + 356 >> 2], mI(S), U = A[50303], A[50303] = U + 1, A[201216 + (U << 2) >> 2] = D) : mI(S);
              }
            } else eg(g + 96 | 0, C, Q);
            if (!(U = uQ(E))) break;
          }
          ED(A[E + 8 >> 2]), _A(E);
        }
        t = g + 1040 | 0;
      }
      function vg(I, C) {
        var Q, g = 0, E = 0, U = 0, w = 0, D = 0, J = 0, o = 0, y = 0, S = 0;
        t = Q = t - 352 | 0;
        A: if (I || (I = A[136284 + (C << 4) >> 2])) {
          G[0 | I] != 47 && (A[Q + 12 >> 2] = I, A[Q + 4 >> 2] = 47, A[Q + 8 >> 2] = 47, A[Q >> 2] = 137584, iA(I = Q + 16 | 0, 84114, Q)), M[Q + 240 | 0] = 0;
          I: {
            Q: {
              if (g = yQ(I, 84577)) {
                if ((0 | AD(g, 20)) == -1) break I;
                if (U = zU(g), E = zU(g), D = zU(g), !((0 | U) != 65537 | (0 | E) != A[50754]) & (0 | D) == E << 1) break Q;
                mI(g), L[Q + 256 >> 1] = G[84864] | G[84865] << 8, I = G[84852] | G[84853] << 8 | G[84854] << 16 | G[84855] << 24, A[Q + 240 >> 2] = G[84848] | G[84849] << 8 | G[84850] << 16 | G[84851] << 24, A[Q + 244 >> 2] = I, I = G[84860] | G[84861] << 8 | G[84862] << 16 | G[84863] << 24, A[Q + 248 >> 2] = G[84856] | G[84857] << 8 | G[84858] << 16 | G[84859] << 24, A[Q + 252 >> 2] = I, t = U = t - 16 | 0;
                B: {
                  if ((g = SA(I = Q + 240 | 0)) >>> 0 >= 6 && !IC(D = (I + g | 0) - 6 | 0, 84274, 6)) {
                    for (o = 100; ; ) {
                      for (J = 0, t = g = t - 16 | 0, G[227196] || (M[227197] = $I(), M[227196] = 1), S = +jA(), GA(w = S / 1e3) < 9223372036854776e3 ? (y = GA(w) >= 1 ? ~~(w > 0 ? rA(lA(23283064365386963e-26 * w), 4294967295) : vA(23283064365386963e-26 * (w - +(~~w >>> 0 >>> 0)))) >>> 0 : 0, E = ~~w >>> 0) : (y = -2147483648, E = 0), A[g >> 2] = E, A[g + 4 >> 2] = y, w = 1e3 * (S - (+(tA(E, y, 1e3, 0) >>> 0) + 4294967296 * +(0 | QA))) * 1e3, E = GA(w) < 2147483648 ? ~~w : -2147483648, A[g + 8 >> 2] = E, E = D + (g >>> 4 | 0) ^ T(A[g + 8 >> 2], 65537); M[D + J | 0] = 65 + (15 & E | E << 1 & 32), E = E >>> 5 | 0, (0 | (J = J + 1 | 0)) != 6; ) ;
                      if (t = g + 16 | 0, A[U >> 2] = 384, (0 | (g = EE(I, 194, U))) >= 0) break B;
                      if (o = o - 1 | 0, A[56798] != 20 || !o) break;
                    }
                    bA(D, 84274, 6);
                  } else A[56798] = 28;
                  g = -1;
                }
                t = U + 16 | 0, (0 | g) < 0 || ED(g);
              }
              if (!(g = yQ(I, 84577))) {
                I = IQ(0, A[56798], I);
                break A;
              }
            }
            if ((0 | (U = rC(I))) < 0) {
              mI(g), I = IQ(0, 0 - U | 0, I);
              break A;
            }
            if ((0 | AD(g, 0)) == -1) {
              C = A[56798], mI(g), I = IQ(0, C, I);
              break A;
            }
            if (!(E = gC(A[(D = 136280 + (C << 4) | 0) >> 2], U))) {
              mI(g), I = 48;
              break A;
            }
            if ((0 | RB(E, U, g)) != (0 | U)) {
              C = A[56798], mI(g), G[Q + 240 | 0] && $w(Q + 240 | 0), _A(E), I = IQ(0, C, I);
              break A;
            }
            mI(g), G[Q + 240 | 0] && $w(Q + 240 | 0), A[136276 + (C << 4) >> 2] = (G[E + 40 | 0] | G[E + 41 | 0] << 8 | G[E + 42 | 0] << 16 | G[E + 43 | 0] << 24) / 2, A[D >> 2] = E, I = 0;
            break A;
          }
          C = A[56798], mI(g), I = IQ(0, C, I);
        } else I = 28;
        return t = Q + 352 | 0, I;
      }
      function WB(I, C, Q, g, E, U) {
        var w, D = 0, J = 0, o = 0, y = 0, S = 0, Y = 0, c = 0, n = 0, V = 0, x = 0, O = 0, v = 0, _ = 0, AA = 0;
        for (M[0 | Q] = 1, w = 1 & U, _ = 1, V = -1, x = -1, y = 1, U = C; ; ) {
          AA = v - 2 | 0, O = S, c = x;
          A: {
            I: {
              for (; ; ) {
                if (!(Y = G[0 | U])) {
                  x = c, S = O;
                  break A;
                }
                if (U = U + 1 | 0, n = A[144464 + (Y << 2) >> 2]) {
                  Q: {
                    if ((0 | (D = G[n + 11 | 0])) != 1) {
                      if (16 & G[n + 6 | 0] | (0 | D) != 2) break Q;
                      M[0 | (S = Q + y | 0)] = V, D = (0 | V) < 4 | (0 | c) > (0 | V), !(2 & G[n + 4 | 0]) | !w | (0 | V) >= 0 || (M[0 | S] = 1), S = D ? O : y, x = D ? c : V, V = -1, y = y + 1 | 0;
                      break I;
                    }
                    if (!a[n + 8 >> 1]) {
                      D = 0, o = y;
                      B: if ((0 | Y) != 8) D = G[n + 14 | 0], A[E >> 2] && D >>> 0 >= 4 || (c = (0 | D) < (0 | c) ? c : D, V = D);
                      else {
                        for (; ; ) {
                          if (Y = D, o = o - 1 | 0, A[E >> 2] | (0 | o) <= 0 || (0 | (n = M[0 | (J = Q + o | 0)])) > 3) break B;
                          if (D = Y + 1 | 0, !(n >>> 0 < 2)) break;
                        }
                        if (M[0 | J] = 4, O = (0 | c) < 4 ? o : O, c = (0 | c) <= 4 ? 4 : c, o >>> 0 < 2) break B;
                        if (n = 3 & (o = ~Y + v | 0), D = 1, AA - Y >>> 0 >= 3) for (Y = -4 & o, o = 0; G[0 | (J = Q + D | 0)] == 4 && (M[0 | J] = 3), G[J + 1 | 0] == 4 && (M[J + 1 | 0] = 3), G[J + 2 | 0] == 4 && (M[J + 2 | 0] = 3), G[J + 3 | 0] == 4 && (M[J + 3 | 0] = 3), D = D + 4 | 0, (0 | Y) != (0 | (o = o + 4 | 0)); ) ;
                        if (J = 0, !n) break B;
                        for (; G[0 | (Y = Q + D | 0)] == 4 && (M[0 | Y] = 3), D = D + 1 | 0, (0 | n) != (0 | (J = J + 1 | 0)); ) ;
                      }
                      if (_) continue;
                      break A;
                    }
                  }
                  break;
                }
              }
              x = c, S = O, (0 | Y) == 20 && (M[Q + y | 0] = w && (0 | V) < 0 ? 1 : V, y = y + 1 | 0);
            }
            if (M[0 | C] = Y, v = y - 1 | 0, C = C + 1 | 0, _ = (0 | y) < 99) continue;
          }
          break;
        }
        M[Q + y | 0] = 1, M[0 | C] = 0;
        A: if ((0 | (C = A[E >> 2])) > 0) x = 4, (0 | C) >= (0 | y) && (A[E >> 2] = v, C = v), M[C + Q | 0] = 4, S = A[E >> 2];
        else if ((0 | x) == 5 && (x = 4, !((0 | y) < 2))) {
          if (U = 1, c = 1 & (C = y - 1 | 0), (0 | y) != 2) for (O = -2 & C, o = 0; ; ) {
            J = 4;
            I: {
              Q: {
                B: switch (G[0 | (C = (D = U) + Q | 0)] - 4 | 0) {
                  case 1:
                    break Q;
                  case 0:
                    break B;
                  default:
                    break I;
                }
                J = 2 & G[I + 14 | 0] ? 1 : 3, D = S;
              }
              M[0 | C] = J, S = D;
            }
            J = 4;
            I: {
              Q: {
                B: switch (G[0 | (C = (D = U + 1 | 0) + Q | 0)] - 4 | 0) {
                  case 1:
                    break Q;
                  case 0:
                    break B;
                  default:
                    break I;
                }
                J = 2 & G[I + 14 | 0] ? 1 : 3, D = S;
              }
              M[0 | C] = J, S = D;
            }
            if (U = U + 2 | 0, (0 | O) == (0 | (o = o + 2 | 0))) break;
          }
          if (c) {
            J = 4;
            I: {
              Q: switch (G[0 | (C = Q + U | 0)] - 4 | 0) {
                case 1:
                  break I;
                case 0:
                  break Q;
                default:
                  break A;
              }
              J = 2 & G[I + 14 | 0] ? 1 : 3, U = S;
            }
            M[0 | C] = J, S = U;
          }
        }
        return A[E >> 2] = S, A[g >> 2] = y, x;
      }
      function gC(I, C) {
        var Q, g, E = 0, U = 0, w = 0, D = 0, J = 0, o = 0, y = 0, S = 0, Y = 0;
        if (!I) return KI(C);
        if (C >>> 0 >= 4294967232) return A[56798] = 48, 0;
        Q = C >>> 0 < 11 ? 16 : C + 11 & -8, w = -8 & (g = A[(D = I - 8 | 0) + 4 >> 2]);
        A: if (3 & g) {
          J = w + D | 0;
          I: if (w >>> 0 >= Q >>> 0) {
            if ((U = w - Q | 0) >>> 0 < 16) break I;
            A[D + 4 >> 2] = 1 & g | Q | 2, A[(E = D + Q | 0) + 4 >> 2] = 3 | U, A[J + 4 >> 2] = 1 | A[J + 4 >> 2], xB(E, U);
          } else if (A[57158] != (0 | J)) if (A[57157] != (0 | J)) {
            if (2 & (U = A[J + 4 >> 2]) || (y = w + (-8 & U) | 0) >>> 0 < Q >>> 0) break A;
            Y = y - Q | 0;
            Q: if (U >>> 0 <= 255) {
              if (w = A[J + 8 >> 2], E = U >>> 3 | 0, (0 | (U = A[J + 12 >> 2])) == (0 | w)) {
                A[57152] = A[57152] & MC(-2, E);
                break Q;
              }
              A[w + 12 >> 2] = U, A[U + 8 >> 2] = w;
            } else {
              if (S = A[J + 24 >> 2], (0 | (o = A[J + 12 >> 2])) == (0 | J)) if ((E = A[(w = J + 20 | 0) >> 2]) || (E = A[(w = J + 16 | 0) >> 2])) {
                for (; U = w, o = E, (E = A[(w = E + 20 | 0) >> 2]) || (w = o + 16 | 0, E = A[o + 16 >> 2]); ) ;
                A[U >> 2] = 0;
              } else o = 0;
              else E = A[J + 8 >> 2], A[E + 12 >> 2] = o, A[o + 8 >> 2] = E;
              if (S) {
                U = A[J + 28 >> 2];
                B: {
                  if (A[(E = 228912 + (U << 2) | 0) >> 2] == (0 | J)) {
                    if (A[E >> 2] = o, o) break B;
                    A[57153] = A[57153] & MC(-2, U);
                    break Q;
                  }
                  if (A[(A[S + 16 >> 2] == (0 | J) ? 16 : 20) + S >> 2] = o, !o) break Q;
                }
                A[o + 24 >> 2] = S, (E = A[J + 16 >> 2]) && (A[o + 16 >> 2] = E, A[E + 24 >> 2] = o), (E = A[J + 20 >> 2]) && (A[o + 20 >> 2] = E, A[E + 24 >> 2] = o);
              }
            }
            Y >>> 0 <= 15 ? (A[D + 4 >> 2] = 1 & g | y | 2, A[(E = D + y | 0) + 4 >> 2] = 1 | A[E + 4 >> 2]) : (A[D + 4 >> 2] = 1 & g | Q | 2, A[(U = D + Q | 0) + 4 >> 2] = 3 | Y, A[(E = D + y | 0) + 4 >> 2] = 1 | A[E + 4 >> 2], xB(U, Y));
          } else {
            if ((U = w + A[57154] | 0) >>> 0 < Q >>> 0) break A;
            (E = U - Q | 0) >>> 0 >= 16 ? (A[D + 4 >> 2] = 1 & g | Q | 2, A[(w = D + Q | 0) + 4 >> 2] = 1 | E, A[(U = U + D | 0) >> 2] = E, A[U + 4 >> 2] = -2 & A[U + 4 >> 2]) : (A[D + 4 >> 2] = U | 1 & g | 2, A[(E = U + D | 0) + 4 >> 2] = 1 | A[E + 4 >> 2], E = 0, w = 0), A[57157] = w, A[57154] = E;
          }
          else {
            if ((w = w + A[57155] | 0) >>> 0 <= Q >>> 0) break A;
            A[D + 4 >> 2] = 1 & g | Q | 2, E = w - Q | 0, A[(U = D + Q | 0) + 4 >> 2] = 1 | E, A[57155] = E, A[57158] = U;
          }
          E = D;
        } else {
          if (Q >>> 0 < 256 || w >>> 0 >= Q + 4 >>> 0 && (E = D, w - Q >>> 0 <= A[57272] << 1 >>> 0)) break A;
          E = 0;
        }
        return E ? E + 8 | 0 : (D = KI(C)) ? (bA(D, I, C >>> 0 > (E = (3 & (E = A[I - 4 >> 2]) ? -4 : -8) + (-8 & E) | 0) >>> 0 ? E : C), _A(I), D) : 0;
      }
      function fE() {
        var I, C, Q = 0, g = 0;
        return I = aC(12), A[I >> 2] = 22050, C = aC(432), A[(g = C) + 4 >> 2] = 0, A[g + 8 >> 2] = 0, A[g >> 2] = 132304, A[g + 32 >> 2] = 0, A[g + 12 >> 2] = 0, A[g + 16 >> 2] = 0, A[g + 20 >> 2] = 0, A[g + 24 >> 2] = 0, pA(g + 40 | 0, 0, 376), A[g + 420 >> 2] = 0, A[g + 424 >> 2] = -1, M[g + 416 | 0] = 1, Q = pA(aC(408), 0, 408), A[g + 28 >> 2] = Q, M[Q + 8 | 0] = 1, A[I + 4 >> 2] = g, Q = aC(1096), A[Q + 8 >> 2] = 22050, A[Q + 4 >> 2] = 22050, A[Q >> 2] = 132352, A[Q + 64 >> 2] = 22050, A[Q + 56 >> 2] = 0, A[Q + 60 >> 2] = 0, A[Q + 32 >> 2] = 0, A[Q + 36 >> 2] = 0, A[Q + 24 >> 2] = 22050, A[Q + 16 >> 2] = 0, A[Q + 20 >> 2] = 0, A[Q + 40 >> 2] = 0, A[Q + 44 >> 2] = 0, M[Q + 48 | 0] = 0, A[Q + 128 >> 2] = 0, A[Q + 132 >> 2] = 0, L[Q + 96 >> 1] = 0, A[Q + 72 >> 2] = 22050, A[Q + 136 >> 2] = 0, A[Q + 140 >> 2] = 0, L[Q + 168 >> 1] = 0, A[Q + 144 >> 2] = 22050, A[Q + 200 >> 2] = 0, A[Q + 204 >> 2] = 0, A[Q + 208 >> 2] = 0, A[Q + 212 >> 2] = 0, A[Q + 216 >> 2] = 22050, L[Q + 240 >> 1] = 0, A[Q + 280 >> 2] = 0, A[Q + 284 >> 2] = 0, A[Q + 272 >> 2] = 0, A[Q + 276 >> 2] = 0, A[Q + 288 >> 2] = 22050, L[Q + 312 >> 1] = 0, A[Q + 344 >> 2] = 0, A[Q + 348 >> 2] = 0, A[Q + 352 >> 2] = 0, A[Q + 356 >> 2] = 0, A[Q + 360 >> 2] = 22050, L[Q + 384 >> 1] = 0, A[Q + 416 >> 2] = 0, A[Q + 420 >> 2] = 0, A[Q + 424 >> 2] = 0, A[Q + 428 >> 2] = 0, A[Q + 432 >> 2] = 22050, L[Q + 456 >> 1] = 0, A[Q + 488 >> 2] = 0, A[Q + 492 >> 2] = 0, A[Q + 496 >> 2] = 0, A[Q + 500 >> 2] = 0, A[Q + 504 >> 2] = 22050, L[Q + 528 >> 1] = 1, A[Q + 560 >> 2] = 0, A[Q + 564 >> 2] = 0, A[Q + 568 >> 2] = 0, A[Q + 572 >> 2] = 0, L[Q + 600 >> 1] = 0, A[Q + 576 >> 2] = 22050, A[Q + 640 >> 2] = 0, A[Q + 644 >> 2] = 0, A[Q + 632 >> 2] = 0, A[Q + 636 >> 2] = 0, L[Q + 680 >> 1] = 0, A[Q + 656 >> 2] = 22050, A[Q + 648 >> 2] = 22050, A[Q + 720 >> 2] = 0, A[Q + 724 >> 2] = 0, A[Q + 712 >> 2] = 0, A[Q + 716 >> 2] = 0, L[Q + 752 >> 1] = 0, A[Q + 728 >> 2] = 22050, A[Q + 792 >> 2] = 0, A[Q + 796 >> 2] = 0, A[Q + 784 >> 2] = 0, A[Q + 788 >> 2] = 0, L[Q + 824 >> 1] = 0, A[Q + 800 >> 2] = 22050, A[Q + 864 >> 2] = 0, A[Q + 868 >> 2] = 0, A[Q + 856 >> 2] = 0, A[Q + 860 >> 2] = 0, A[Q + 872 >> 2] = 22050, L[Q + 896 >> 1] = 0, A[Q + 936 >> 2] = 0, A[Q + 940 >> 2] = 0, A[Q + 928 >> 2] = 0, A[Q + 932 >> 2] = 0, L[Q + 968 >> 1] = 0, A[Q + 944 >> 2] = 22050, A[Q + 1008 >> 2] = 0, A[Q + 1012 >> 2] = 0, A[Q + 1e3 >> 2] = 0, A[Q + 1004 >> 2] = 0, L[Q + 1040 >> 1] = 0, A[Q + 1016 >> 2] = 22050, A[Q + 1088 >> 2] = 0, A[(g = Q + 1080 | 0) >> 2] = 0, A[g + 4 >> 2] = 0, A[(g = Q + 1072 | 0) >> 2] = 0, A[g + 4 >> 2] = 0, A[I + 8 >> 2] = Q, fA[A[A[Q >> 2] + 4 >> 2]](Q, C), I;
      }
      function qC(I, C, Q) {
        var g = 0, E = 0, U = 0, w = 0, D = 0, J = 0, o = 0, y = 0, S = 0, Y = 0, c = 0;
        A: if (S = A[50759]) {
          if (g = A[50980], E = T(g, 80) + 222176 | 0, (0 | (J = (0 | (E = (0 | (E = (A[E + 12 >> 2] + A[E >> 2] | 0) / (0 | I) | 0)) < (0 | (y = ((0 | T(A[50754], 19)) / 40 << 16) / (0 | I) | 0)) ? E : y)) >= 399 ? 399 : E)) >= 0 && (pA(C, 0, 4 + (J << 2) | 0), g = A[50980]), (0 | g) >= 0) for (Y = A[50801]; ; ) {
            if (U = T(w, 80) + 222176 | 0, A[U + 4 >> 2] && (D = A[U >> 2])) {
              if (c = D + A[U + 12 >> 2] | 0, g = 1 + ((D - A[U + 8 >> 2] | 0) / (0 | I) | 0) | 0, (0 | D) > (0 | (g = T(E = (0 | g) <= 1 ? 1 : g, I)))) for (; A[(o = (E << 2) + C | 0) >> 2] = A[o >> 2] + T(A[U + 4 >> 2], G[((D - g | 0) / (A[U + 8 >> 2] >> 8) | 0) + Y | 0]), E = E + 1 | 0, (0 | D) > (0 | (g = I + g | 0)); ) ;
              if (!((0 | g) >= (0 | c))) for (; A[(o = (E << 2) + C | 0) >> 2] = A[o >> 2] + T(A[U + 4 >> 2], G[((g - D | 0) / (A[U + 12 >> 2] >> 8) | 0) + Y | 0]), E = E + 1 | 0, (0 | c) > (0 | (g = I + g | 0)); ) ;
            }
            if (!((0 | (w = w + 1 | 0)) <= A[50980])) break;
          }
          if (E = 1, !((0 | (U = 65536e3 / (0 | I) | 0)) <= 0 || (0 | (g = T(A[55565], 10))) <= 0)) for (U = (0 | g) / (0 | U) | 0; A[(D = (E << 2) + C | 0) >> 2] = A[D >> 2] + g, E = E + 1 | 0, (0 | (g = g - U | 0)) > 0; ) ;
          if ((0 | w) <= 8) for (; E = (g = w << 2) + 203216 | 0, U = T(w, 80) + 222176 | 0, D = A[U + 4 >> 2] >> 14, A[E >> 2] = (0 | T(T(D, D), 5)) / 2, Q ? g = A[g + 203264 >> 2] : (D = g + 203264 | 0, g = A[U >> 2] / (0 | I) | 0, A[D >> 2] = g), (0 | g) >= (0 | y) && (A[E >> 2] = 0), (0 | (w = w + 1 | 0)) != 9; ) ;
          if (E = 0, (0 | J) >= 0) for (g = 0; U = A[(w = (g << 2) + C | 0) >> 2] >> 15, U = T(U, U) >> 8, A[w >> 2] = U, (0 | E) <= 524287999 && (A[w >> 2] = T(U, G[344 + ((E >> 19) + S | 0) | 0]) >> 13), E = I + E | 0, w = (0 | g) != (0 | J), g = g + 1 | 0, w; ) ;
          if (A[C + 4 >> 2] = (0 | T(A[C + 4 >> 2], G[203300] ? 6 : 10)) / 8, 1 & Q) for (I = A[50826], g = 1; ; ) {
            if (A[(Q = g << 2) + 203312 >> 2] = A[C + Q >> 2] - A[I + Q >> 2] >> 3, (0 | (Q = g + 1 | 0)) == 30) break A;
            A[(Q <<= 2) + 203312 >> 2] = A[C + Q >> 2] - A[I + Q >> 2] >> 3, g = g + 2 | 0;
          }
        } else J = 1;
        return J;
      }
      function ug(I, C, Q, g) {
        var E, U = 0, w = 0;
        t = E = t - 176 | 0, M[0 | I] = 0, L[E + 80 >> 1] = 24320, A[E + 104 >> 2] = 0, A[E + 108 >> 2] = 0, M[82 + (HI(Q, U = E + 80 | 2) + E | 0) | 0] = 0;
        A: {
          I: {
            if (!g) {
              if (g = E + 80 | 1, A[E + 12 >> 2] = g, XI(C, E + 12 | 0, E + 16 | 0, E + 104 | 0, 0, 0) || (A[E + 12 >> 2] = U, XI(C, E + 12 | 0, E + 16 | 0, E + 104 | 0, 0, 0) || (M[E + 81 | 0] = 32, iC(C, U, E + 16 | 0, 60, 0, 0, 0))), (Q = G[E + 16 | 0]) && (0 | Q) != 21) break I;
              Q: {
                if (A[C + 212 >> 2] != 25966) {
                  if (wB(85719, 188772, 189296), M[E + 81 | 0] = 95, A[E + 12 >> 2] = g, XI(A[47193], E + 12 | 0, E + 16 | 0, E + 104 | 0, 0, 0) || (A[E + 12 >> 2] = U, XI(A[47193], E + 12 | 0, E + 16 | 0, E + 104 | 0, 0, 0)), G[E + 16 | 0]) break Q;
                  GC(A[A[32972] + 60 >> 2]), Q = G[E + 16 | 0];
                }
                if (255 & Q) break I;
                C = G[87124] | G[87125] << 8 | G[87126] << 16 | G[87127] << 24, Q = G[87120] | G[87121] << 8 | G[87122] << 16 | G[87123] << 24, M[0 | I] = Q, M[I + 1 | 0] = Q >>> 8, M[I + 2 | 0] = Q >>> 16, M[I + 3 | 0] = Q >>> 24, M[I + 4 | 0] = C, M[I + 5 | 0] = C >>> 8, M[I + 6 | 0] = C >>> 16, M[I + 7 | 0] = C >>> 24, M[I + 16 | 0] = G[87136], C = G[87132] | G[87133] << 8 | G[87134] << 16 | G[87135] << 24, Q = G[87128] | G[87129] << 8 | G[87130] << 16 | G[87131] << 24, M[I + 8 | 0] = Q, M[I + 9 | 0] = Q >>> 8, M[I + 10 | 0] = Q >>> 16, M[I + 11 | 0] = Q >>> 24, M[I + 12 | 0] = C, M[I + 13 | 0] = C >>> 8, M[I + 14 | 0] = C >>> 16, M[I + 15 | 0] = C >>> 24;
                break A;
              }
              g = E + 16 | 0, U = E + 104 | 0, t = Q = t - 112 | 0, (w = A[47193]) ? (kC(w, g, U, -1, 0), FC(U = g, g = Q + 48 | 0), C = A[C + 212 >> 2], M[Q + 43 | 0] = C >>> 24, M[0 | (w = (U = Q + 43 | 0) + (C >>> 0 > 16777215) | 0)] = C >>> 16, M[0 | (w = w + !!(16711680 & C) | 0)] = C >>> 8, M[0 | (w = w + !!(65280 & C) | 0)] = C, M[w + !!(255 & C) | 0] = 0, A[Q + 16 >> 2] = 85719, A[Q + 24 >> 2] = U, A[Q + 20 >> 2] = g, iA(I, 85662, Q + 16 | 0)) : (kC(C, g, U, -1, 0), FC(g, C = Q + 48 | 0), A[Q >> 2] = C, iA(I, 85451, Q)), t = Q + 112 | 0, GC(A[A[32972] + 60 >> 2]);
              break A;
            }
            if (A[E + 12 >> 2] = U, XI(C, E + 12 | 0, E + 16 | 0, E + 104 | 0, 0, 0), !G[E + 16 | 0]) break A;
          }
          kC(Q = C, C = E + 16 | 0, E + 104 | 0, -1, 0), FC(Q = C, C = E + 112 | 0), A[E >> 2] = C, iA(I, 85451, E);
        }
        return t = E + 176 | 0, I;
      }
      function iQ(I, C) {
        var Q, g = 0, E = 0, U = 0, w = 0, D = 0, J = 0, o = 0, y = 0, S = 0, Y = 0, c = 0, n = 0, V = 0, x = 0, O = 0, v = 0, _ = 0, AA = 0;
        if (t = Q = t - 112 | 0, A[Q + 72 >> 2] = -1, A[(g = Q - -64 | 0) >> 2] = -1, A[g + 4 >> 2] = -1, A[Q + 56 >> 2] = -1, A[Q + 60 >> 2] = -1, A[Q + 48 >> 2] = -1, A[Q + 52 >> 2] = -1, A[Q + 40 >> 2] = -1, A[Q + 44 >> 2] = -1, A[Q + 32 >> 2] = -1, A[Q + 36 >> 2] = -1, A[Q + 24 >> 2] = -1, A[Q + 28 >> 2] = -1, A[Q + 16 >> 2] = -1, A[Q + 20 >> 2] = -1, (0 | C) > 0) {
          for (U = A[Q + 72 >> 2], w = A[Q + 68 >> 2], D = A[Q + 64 >> 2], J = A[Q + 60 >> 2], o = A[Q + 56 >> 2], y = A[Q + 52 >> 2], S = A[Q + 48 >> 2], Y = A[Q + 44 >> 2], c = A[Q + 40 >> 2], n = A[Q + 36 >> 2], V = A[Q + 32 >> 2], x = A[Q + 28 >> 2], O = A[Q + 24 >> 2], v = A[Q + 20 >> 2], _ = A[Q + 16 >> 2]; E = U, U = (0 | (U = A[(g = 134912 + (AA << 6) | 0) + 60 >> 2])) < 0 ? E : U, E = w, w = (0 | (w = A[g + 56 >> 2])) < 0 ? E : w, E = D, D = (0 | (D = A[g + 52 >> 2])) < 0 ? E : D, E = J, J = (0 | (J = A[g + 48 >> 2])) < 0 ? E : J, E = o, o = (0 | (o = A[g + 44 >> 2])) < 0 ? E : o, E = y, y = (0 | (y = A[g + 40 >> 2])) < 0 ? E : y, E = S, S = (0 | (S = A[g + 36 >> 2])) < 0 ? E : S, E = Y, Y = (0 | (Y = A[g + 32 >> 2])) < 0 ? E : Y, E = c, c = (0 | (c = A[g + 28 >> 2])) < 0 ? E : c, E = n, n = (0 | (n = A[g + 24 >> 2])) < 0 ? E : n, E = V, V = (0 | (V = A[g + 20 >> 2])) < 0 ? E : V, E = x, x = (0 | (x = A[g + 16 >> 2])) < 0 ? E : x, E = O, O = (0 | (O = A[g + 12 >> 2])) < 0 ? E : O, E = v, v = (0 | (v = A[g + 8 >> 2])) < 0 ? E : v, _ = (0 | (g = A[g + 4 >> 2])) < 0 ? _ : g, (0 | (AA = AA + 1 | 0)) != (0 | C); ) ;
          A[Q + 72 >> 2] = U, A[Q + 68 >> 2] = w, A[Q + 64 >> 2] = D, A[Q + 60 >> 2] = J, A[Q + 56 >> 2] = o, A[Q + 52 >> 2] = y, A[Q + 48 >> 2] = S, A[Q + 44 >> 2] = Y, A[Q + 40 >> 2] = c, A[Q + 36 >> 2] = n, A[Q + 32 >> 2] = V, A[Q + 28 >> 2] = x, A[Q + 24 >> 2] = O, A[Q + 20 >> 2] = v, A[Q + 16 >> 2] = _;
        }
        for (C = 0; ; ) {
          if ((0 | (g = A[(U = C << 2) + (Q + 16 | 0) >> 2])) != A[(U = U + 134848 | 0) >> 2]) {
            M[Q + 80 | 0] = 0;
            A: {
              I: switch (C - 1 | 0) {
                case 4:
                  A[47201] = g - 1;
                  break A;
                case 5:
                  A[47200] = g;
                  break A;
                case 0:
                case 1:
                case 2:
                case 3:
                case 11:
                  break I;
                default:
                  break A;
              }
              A[Q + 4 >> 2] = g, A[Q >> 2] = 1, A[Q + 8 >> 2] = M[C + 102812 | 0], iA(Q + 80 | 0, 91942, Q);
            }
            A[U >> 2] = g, g = Q + 80 | 0, YA(A[I >> 2] + 189424 | 0, g), A[I >> 2] = A[I >> 2] + SA(g);
          }
          if ((0 | (C = C + 1 | 0)) == 15) break;
        }
        t = Q + 112 | 0;
      }
      function VC(I) {
        var C, Q, g, E = 0, U = 0, w = 0, D = 0;
        for (E = 17, A[I + 328 >> 2] = 17, A[I + 224 >> 2] = 0, A[I + 216 >> 2] = 1105, A[I + 220 >> 2] = 1072, A[I + 600 >> 2] = 1056, A[I + 8180 >> 2] = 105296, w = pA(I + 344 | 0, 0, 256), M[I + 393 | 0] = 1, M[I + 365 | 0] = 1, M[I + 360 | 0] = 1, M[I + 545 | 0] = 1, M[I + 529 | 0] = 1, M[I + 391 | 0] = 1, M[I + 379 | 0] = 1, M[I + 374 | 0] = 1, M[I + 489 | 0] = 1, M[I + 487 | 0] = 1, M[I + 398 | 0] = 1, M[I + 387 | 0] = 1, M[I + 388 | 0] = 2, M[I + 389 | 0] = 1, M[I + 390 | 0] = 1, M[I + 385 | 0] = 2, M[I + 383 | 0] = 2, M[I + 368 | 0] = 1, M[I + 369 | 0] = 2, U = 104224; M[0 | (E = E + w | 0)] = 4 | G[0 | E], E = w + G[U + 1 | 0] | 0, M[0 | E] = 4 | G[0 | E], E = w + G[U + 2 | 0] | 0, M[0 | E] = 4 | G[0 | E], E = G[0 | (U = U + 3 | 0)], (0 | U) != 104251; ) ;
        M[I + 386 | 0] = 8 | G[I + 386 | 0], M[I + 382 | 0] = 8 | G[I + 382 | 0], M[I + 384 | 0] = 8 | G[I + 384 | 0], M[I + 369 | 0] = 16 | G[I + 369 | 0], M[I + 370 | 0] = 16 | G[I + 370 | 0], M[I + 371 | 0] = 16 | G[I + 371 | 0], U = G[I + 361 | 0], w = G[I + 362 | 0], E = G[I + 363 | 0], D = G[I + 364 | 0], C = G[I + 366 | 0], Q = G[I + 367 | 0], M[I + 372 | 0] = 16 | G[I + 372 | 0], M[I + 373 | 0] = 16 | G[I + 373 | 0], M[I + 375 | 0] = 16 | G[I + 375 | 0], M[I + 376 | 0] = 16 | G[I + 376 | 0], M[I + 377 | 0] = 16 | G[I + 377 | 0], M[I + 378 | 0] = 16 | G[I + 378 | 0], M[I + 380 | 0] = 16 | G[I + 380 | 0], M[I + 381 | 0] = 16 | G[I + 381 | 0], M[I + 383 | 0] = 16 | G[I + 383 | 0], M[I + 385 | 0] = 16 | G[I + 385 | 0], g = G[I + 388 | 0], M[I + 367 | 0] = 48 | Q, M[I + 366 | 0] = 40 | C, M[I + 364 | 0] = 48 | D, M[I + 363 | 0] = 48 | E, M[I + 362 | 0] = 48 | w, M[I + 361 | 0] = 48 | U, M[I + 388 | 0] = 80 | g, U = G[I + 390 | 0], w = G[I + 391 | 0], E = G[I + 393 | 0], M[I + 360 | 0] = 128 | G[I + 360 | 0], D = G[I + 365 | 0], M[I + 393 | 0] = 192 | E, M[I + 365 | 0] = 128 | D, M[I + 368 | 0] = 128 | G[I + 368 | 0], M[I + 374 | 0] = 128 | G[I + 374 | 0], M[I + 379 | 0] = 128 | G[I + 379 | 0], M[I + 387 | 0] = 128 | G[I + 387 | 0], E = G[I + 389 | 0], M[I + 391 | 0] = 192 | w, M[I + 390 | 0] = 192 | U, M[I + 389 | 0] = 128 | E, M[I + 529 | 0] = 128 | G[I + 529 | 0], M[I + 545 | 0] = 128 | G[I + 545 | 0], M[I + 489 | 0] = 128 | G[I + 489 | 0], M[I + 487 | 0] = 128 | G[I + 487 | 0], M[I + 398 | 0] = 128 | G[I + 398 | 0];
      }
      function XI(I, C, Q, g, E, U) {
        var w, D = 0, J = 0, o = 0, y = 0, S = 0, Y = 0;
        t = w = t - 192 | 0, D = S = A[C >> 2];
        A: {
          I: {
            for (; J = 1, (0 | (o = M[0 | D])) >= 0 || (J = 2, o >>> 0 < 4294967264 || (J = o >>> 0 < 4294967280 ? 3 : 4)), !(G[0 | (o = J + D | 0)] != 32 | G[o + 1 | 0] != 46); ) {
              if (y - 160 >>> 0 < 4294967135) break I;
              bA((Y = w + 32 | 0) + y | 0, D, J), M[(J = J + y | 0) + Y | 0] = 46, D = o + 3 | 0, y = J + 1 | 0;
            }
            if (y) {
              for (J = 0; o = J, J = J + 1 | 0, 223 & G[D + o | 0]; ) ;
              if (!((Y = o + y | 0) + 1 >>> 0 > 160) && (bA((J = w + 32 | 0) + y | 0, D, o), M[J + Y | 0] = 0, rg(I, J, D, Q, g, E, U))) {
                A[g >> 2] = 128 | A[g >> 2], A[33264] = y, I = 1;
                break A;
              }
            }
          }
          for (D = 0; ; ) {
            if (S = (J = S) + 1 | 0, 223 & (J = G[0 | J])) if (!D | (0 | J) != 46 | M[31 + (D + w | 0) | 0] - 48 >>> 0 >= 10) {
              if (M[(w + 32 | 0) + D | 0] = J, J = 159, (0 | (D = D + 1 | 0)) != 159) continue;
            } else J = D;
            else J = D;
            break;
          }
          M[(D = w + 32 | 0) + J | 0] = 0, D = rg(I, D, S, Q, g, E, U);
          I: if (8 & G[g + 3 | 0]) {
            if (!aI(Q, o = I + 268 | 0)) {
              if (o = A[I + 288 >> 2] + 1 | 0, A[I + 288 >> 2] = o, (0 | o) < 4) break I;
              M[0 | Q] = 0;
              break I;
            }
            sI(o, Q, 20), A[I + 288 >> 2] = 1;
          } else A[I + 288 >> 2] = 0;
          I: {
            if (!D) {
              if (D = 0, 8 & G[g + 5 | 0] && (o = mA(w + 28 | 0, D = w + 32 | G[w + 32 | 0] == 95), OE(I, A[w + 28 >> 2], Q), D = D + o | 0), !(J >>> 0 < 2 | D)) {
                if (M[0 | Q] = 0, !(16 & E && G[0 | (D = 31 + (J + w | 0) | 0)] == 101) && (!(4096 & E) || G[0 | (D = (J = (w + 32 | 0) + J | 0) - 1 | 0)] != G[J - 2 | 0]))
                  break I;
                M[0 | D] = 0, D = rg(I, w + 32 | 0, S, Q, g, E, U);
              }
              if (!D) break I;
            }
            if (y = A[g >> 2], G[I + 172 | 0] && (y ^= 536870912, A[g >> 2] = y), I = 1, !(536870912 & y)) break A;
            2 & E && (L[66448] = 8192, A[w + 16 >> 2] = Q, iA(132898, 87470, w + 16 | 0), I = A[C >> 2], A[C >> 2] = 132898, 8 & G[188788] && (bA(C = w + 32 | 0, g = I, I = D - I | 0), M[I + C | 0] = 0, A[w + 4 >> 2] = 132898, I = A[47195], A[w >> 2] = C, lI(I, 87652, w)));
          }
          M[0 | Q] = 0, I = 0;
        }
        return t = w + 192 | 0, I;
      }
      function OB(I, C) {
        var Q = 0, g = 0, E = 0;
        Q = 31 & I;
        A: {
          I: {
            Q: {
              if ((0 | (I &= 96)) == 96) I = -1;
              else {
                if ((0 | I) != 64) break Q;
                I = 1;
              }
              if (Q >>> 0 >= 15) break A;
              C = A[203136 + (Q << 2) >> 2] + T(I, C) | 0;
              break I;
            }
            if (Q >>> 0 >= 15) break A;
          }
          I = A[(g = Q << 2) + 105616 >> 2], A[g + 203136 >> 2] = (0 | C) >= 0 ? (0 | I) > (0 | C) ? C : I : 0;
        }
        A: {
          I: {
            Q: {
              B: {
                E: switch (Q - 1 | 0) {
                  case 5:
                    if (!(I = A[50759])) break I;
                    A[54728] = A[50982], C = A[50979], Q = A[50978], pA(205184, 0, 11e3), A[51293] = 0, C = (Q = (E = (0 | (g = A[50789])) > 0) ? 130 : (0 | Q) >= 5499 ? 5499 : Q) ? E ? g : (0 | C) >= 100 ? 100 : C : 0, A[50755] = C, Q = (0 | T(Q, A[50754])) / 1e3 | 0, A[51292] = Q, A[54729] = (0 | C) > 20 ? Q << 1 : C ? Q : 0, A[33037] = (0 | T(500 - C | 0, (0 | T(G[A[50797] + 105596 | 0], (0 | T(A[50787], 55)) / 100 | 0)) / 16 | 0)) / 500;
                    break B;
                  case 0:
                    break E;
                  case 2:
                  case 12:
                    break A;
                  case 4:
                    break Q;
                  default:
                    break I;
                }
                if (!(I = A[50759])) break I;
              }
              return C = 256, (0 | (Q = (0 | (Q = A[50785])) >= 101 ? 101 : Q)) >= 51 && (C = 256 + (((T(Q, 25) - 1250 & 65535) >>> 0) / 50 | 0) | 0), L[I + 164 >> 1] = (0 | T(L[I + 236 >> 1], C)) / 256, L[I + 166 >> 1] = (0 | T(L[I + 238 >> 1], C)) / 256, L[I + 168 >> 1] = (0 | T(L[I + 240 >> 1], C)) / 256, L[I + 170 >> 1] = (0 | T(L[I + 242 >> 1], C)) / 256, L[I + 172 >> 1] = (0 | T(L[I + 244 >> 1], C)) / 256, L[I + 174 >> 1] = (0 | T(L[I + 246 >> 1], C)) / 256, I = A[50790], L[102e3] = (0 | T(L[102036], T(I, -3) + 256 | 0)) / 256, void (L[101999] = (0 | T(L[102035], T(I, -6) + 256 | 0)) / 256);
            }
            A[50759] && (A[54728] = A[50982], I = A[50979], C = A[50978], pA(205184, 0, 11e3), A[51293] = 0, I = (C = (g = (0 | (Q = A[50789])) > 0) ? 130 : (0 | C) >= 5499 ? 5499 : C) ? g ? Q : (0 | I) >= 100 ? 100 : I : 0, A[50755] = I, C = (0 | T(C, A[50754])) / 1e3 | 0, A[51292] = C, A[54729] = (0 | I) > 20 ? C << 1 : I ? C : 0, A[33037] = (0 | T(500 - I | 0, (0 | T(G[A[50797] + 105596 | 0], (0 | T(A[50787], 55)) / 100 | 0)) / 16 | 0)) / 500);
          }
          return;
        }
        A[33037] = (0 | T(G[A[50797] + 105596 | 0], (0 | T(A[50787], 55)) / 100 | 0)) / 16;
      }
      function WC(I, C, Q) {
        var g = 0, E = 0, U = 0, w = 0, D = 0, J = 0, o = 0, y = 0, S = 0, Y = 0;
        Q && (A[Q >> 2] = 0);
        A: {
          I: if (!((0 | (g = M[0 | I])) < 0)) {
            for (; ; ) {
              if ((0 | (U = 255 & g)) == 32 | U - 9 >>> 0 < 5) {
                if ((0 | (g = M[0 | (I = I + 1 | 0)])) >= 0) continue;
                break I;
              }
              break;
            }
            if (!(255 & g)) break A;
          }
          for (; ; ) {
            if ((0 | (g = J = 255 & g)) == 32 | g - 9 >>> 0 < 5) break A;
            if ((0 | J) != 124 || (0 | (g = G[0 | (U = I + 1 | 0)])) == 124) {
              I: {
                if ((0 | (S = A[36115])) >= 2) {
                  for (g = 1, U = -1, o = 0; ; ) {
                    Q: if (!(!(y = A[144464 + (g << 2) >> 2]) | G[y + 11 | 0] == 15)) {
                      D = A[y >> 2];
                      B: {
                        E: {
                          if (J >>> 0 >= 33) {
                            if (Y = 0, w = 0, (255 & D) == (0 | J) && (w = 1, (E = G[I + 1 | 0]) >>> 0 < 33 | (0 | E) != (D >>> 8 & 255) || (w = 2, (E = G[I + 2 | 0]) >>> 0 < 33 | (0 | E) != (D >>> 16 & 255) || (w = (E = (E = G[I + 3 | 0]) >>> 0 > 32 & (0 | E) == (D >>> 24 | 0)) ? 4 : 3, Y = 0 - E | 0))), (0 | U) >= (0 | w)) break Q;
                            if (E = 4, !(1 & Y)) break E;
                            break B;
                          }
                          if (w = 0, (0 | U) >= 0) break Q;
                        }
                        if (D >>> ((E = w) << 3) & 255) break Q;
                      }
                      o = G[y + 10 | 0], U = E;
                    }
                    if ((0 | S) == (0 | (g = g + 1 | 0))) break;
                  }
                  if (o) break I;
                }
                return Q && mA(Q, I), void (M[0 | C] = 0);
              }
              M[0 | C] = o, I = ((0 | U) <= 1 ? 1 : U) + I | 0, C = U = C + 1 | 0;
              I: if ((0 | o) == 21) {
                Q: if ((0 | (E = G[0 | I])) == 32 | E - 9 >>> 0 < 5) g = U;
                else if (g = U, E) for (; ; ) {
                  if (M[0 | g] = xC(E), g = g + 1 | 0, (0 | (E = G[0 | (I = I + 1 | 0)])) == 32 | E - 9 >>> 0 < 5) break Q;
                  if (!E) break;
                }
                if (M[0 | g] = 0, !E) {
                  if (C = g, aI(U, 85593)) break I;
                  return void (M[0 | U] = 0);
                }
                M[0 | g] = 124, C = g + 1 | 0;
              }
              g = G[0 | I];
            } else I = U;
            if (!(255 & g)) break;
          }
        }
        M[0 | C] = 0;
      }
      function pE(I, C) {
        var Q = 0, g = 0, E = 0, U = 0, w = 0;
        A: {
          I: {
            Q: {
              B: {
                E: switch ((0 | (Q = A[I + 4 >> 2])) == A[I + 104 >> 2] ? Q = CI(I) : (A[I + 4 >> 2] = Q + 1, Q = G[0 | Q]), Q - 43 | 0) {
                  case 0:
                  case 2:
                    break E;
                  default:
                    break B;
                }
                if (U = (0 | Q) == 45, w = !C, (0 | (Q = A[I + 4 >> 2])) == A[I + 104 >> 2] ? Q = CI(I) : (A[I + 4 >> 2] = Q + 1, Q = G[0 | Q]), w | (C = Q - 58 | 0) >>> 0 > 4294967285) break Q;
                if (A[I + 116 >> 2] < 0) break I;
                A[I + 4 >> 2] = A[I + 4 >> 2] - 1;
                break I;
              }
              C = Q - 58 | 0;
            }
            if (!(C >>> 0 < 4294967286)) {
              if ((C = Q - 48 | 0) >>> 0 < 10) {
                for (; E = (0 | (g = (g = T(g, 10) + Q | 0) - 48 | 0)) < 214748364, (0 | (C = A[I + 4 >> 2])) == A[I + 104 >> 2] ? Q = CI(I) : (A[I + 4 >> 2] = C + 1, Q = G[0 | C]), E & (C = Q - 48 | 0) >>> 0 <= 9; ) ;
                E = g >> 31;
              }
              Q: if (!(C >>> 0 >= 10)) for (; ; ) {
                if (C = (g = tA(g, E, 10, 0)) + Q | 0, Q = QA, Q = C >>> 0 < g >>> 0 ? Q + 1 | 0 : Q, g = C - 48 | 0, E = Q - (C >>> 0 < 48) | 0, (0 | (C = A[I + 4 >> 2])) == A[I + 104 >> 2] ? Q = CI(I) : (A[I + 4 >> 2] = C + 1, Q = G[0 | C]), (C = Q - 48 | 0) >>> 0 > 9) break Q;
                if (!(g >>> 0 < 2061584302 & (0 | E) <= 21474836 | (0 | E) < 21474836)) break;
              }
              if (C >>> 0 < 10) for (; (0 | (C = A[I + 4 >> 2])) == A[I + 104 >> 2] ? C = CI(I) : (A[I + 4 >> 2] = C + 1, C = G[0 | C]), C - 48 >>> 0 < 10; ) ;
              (0 | (C = A[I + 116 >> 2])) > 0 | (0 | C) >= 0 && (A[I + 4 >> 2] = A[I + 4 >> 2] - 1), I = g, g = U ? 0 - I | 0 : I, E = U ? 0 - (!!(0 | I) + E | 0) | 0 : E;
              break A;
            }
          }
          if (E = -2147483648, !(A[I + 116 >> 2] < 0)) return A[I + 4 >> 2] = A[I + 4 >> 2] - 1, QA = -2147483648, 0;
        }
        return QA = E, g;
      }
      function zQ(I) {
        var C = 0, Q = 0, g = 0, E = 0;
        if (A[36432] = 110, A[36433] = 100, A[36434] = 450, A[36430] = 5, C = A[203136 + ((0 | I) == 2 ? 32 : 8) >> 2], g = A[32972], (0 | (Q = A[g + 84 >> 2])) > 0 && (C = (0 | T(C, Q)) / 100 | 0), Q = (0 | C) >= 359 ? 359 : C, Q = (0 | (C = (0 | C) >= 450 ? 450 : C)) > 399 ? 6 : (0 | C) > 379 ? 7 : G[((0 | Q) <= 80 ? 80 : Q) + 101856 | 0], 1 & I && (A[32526] = (0 | T(Q, A[g + 72 >> 2])) / 256, A[32527] = (0 | T(Q, A[g + 76 >> 2])) / 256, A[32528] = (0 | T(Q, A[g + 80 >> 2])) / 256, Q >>> 0 > 7 || (E = Q - 1 | 0, A[32528] = E, A[32526] = Q, A[32527] = E)), 2 & I) {
          I = A[g + 72 >> 2];
          A: {
            I: {
              Q: {
                B: {
                  E: {
                    R: {
                      D: {
                        F: {
                          if ((0 | C) >= 351) g = C - 350 | 0, A[36432] = 85 - (((255 & g) >>> 0) / 3 | 0) & 255, g = 60 - (g >>> 3 | 0) | 0;
                          else {
                            if ((0 | C) < 251) break F;
                            g = C - 250 | 0, A[36432] = 110 - (g >>> 2 | 0), g = 110 - (g >>> 1 | 0) | 0;
                          }
                          if (A[36433] = g, I = (0 | T(I, Q)) / 256 | 0, A[36431] = 110 + ((0 | T(I, 150)) / 128 | 0), C >>> 0 <= 349) break D;
                          if (Q = C - 350 | 0, A[36431] = G[Q + 102224 | 0], C >>> 0 < 390) break E;
                          if (A[36434] = 450 + ((C + 112 << 24 >> 24) / -2 << 24 >> 24), C >>> 0 < 441) break R;
                          A[36434] = 860 - C, I = 12;
                          break I;
                        }
                        I = (0 | T(I, Q)) / 256 | 0, A[36431] = (0 | C) >= 170 ? 110 + ((0 | T(I, 150)) / 128 | 0) | 0 : 128 + ((I << 7) / 130 | 0) | 0;
                      }
                      I = (I << 8) / 115 | 0;
                      break I;
                    }
                    if (I = 12, C >>> 0 > 430) break I;
                    if (I = 13, C >>> 0 <= 400) break B;
                    break I;
                  }
                  if (I = (I << 8) / 115 | 0, A[36428] = I, C >>> 0 < 375) break Q;
                }
                I = 14;
                break I;
              }
              if ((0 | C) < 351) break A;
              I = G[Q + 102336 | 0];
            }
            A[36428] = I;
          }
          A[36429] = (0 | I) <= 16 ? 16 : I;
        }
      }
      function OC(I, C, Q) {
        var g, E, U, w;
        g = 244140625e-12 * +A[50767], H[Q >> 3] = g, H[Q + 40 >> 3] = 0.015625 * +A[I + 112 >> 2], H[Q + 48 >> 3] = 0.015625 * +A[I + 276 >> 2], H[Q + 56 >> 3] = 390625e-8 * +(0 | T(L[I + 166 >> 1], L[C + 4 >> 1])) + +L[I + 220 >> 1], H[Q + 64 >> 3] = 390625e-8 * +(0 | T(L[I + 168 >> 1], L[C + 6 >> 1])) + +L[I + 222 >> 1], H[Q + 72 >> 3] = 390625e-8 * +(0 | T(L[I + 170 >> 1], L[C + 8 >> 1])) + +L[I + 224 >> 1], H[Q + 80 >> 3] = 390625e-8 * +(0 | T(L[I + 172 >> 1], L[C + 10 >> 1])) + +L[I + 226 >> 1], H[Q + 88 >> 3] = 390625e-8 * +(0 | T(L[I + 174 >> 1], L[C + 12 >> 1])) + +L[I + 228 >> 1], E = L[I + 230 >> 1], U = L[I + 176 >> 1], w = L[C + 14 >> 1], A[Q + 112 >> 2] = 0, A[Q + 116 >> 2] = 1080623104, A[Q + 104 >> 2] = 0, A[Q + 108 >> 2] = 1081032704, H[Q + 96 >> 3] = 390625e-8 * +(0 | T(U, w)) + +(0 | E), G[C + 40 | 0] ? (A[Q + 184 >> 2] = 0, A[Q + 188 >> 2] = 1072693248, H[Q + 104 >> 3] = G[C + 40 | 0] << 1) : (A[Q + 184 >> 2] = 0, A[Q + 188 >> 2] = 0), H[Q + 120 >> 3] = 390625e-8 * +L[I + 202 >> 1] * +(G[C + 35 | 0] << 1), H[Q + 128 >> 3] = 390625e-8 * +L[I + 204 >> 1] * +(G[C + 36 | 0] << 1), H[Q + 136 >> 3] = 390625e-8 * +L[I + 206 >> 1] * +(G[C + 37 | 0] << 1), C = G[C + 38 | 0], I = L[I + 208 >> 1], A[Q + 176 >> 2] = 0, A[Q + 180 >> 2] = 1079574528, A[Q + 160 >> 2] = 0, A[Q + 164 >> 2] = 1083129856, A[Q + 152 >> 2] = 0, A[Q + 156 >> 2] = 1083129856, A[Q + 352 >> 2] = 0, A[Q + 356 >> 2] = 1072693248, A[Q + 168 >> 2] = 0, A[Q + 172 >> 2] = 1079574528, H[Q + 144 >> 3] = 390625e-8 * +(0 | I) * +(C << 1), I = A[50779], H[Q + 368 >> 3] = g, H[Q + 360 >> 3] = +(0 | I) / 100 * 3;
      }
      function XQ(I) {
        var C = 0;
        GQ(I, NQ(I));
        A: {
          I: {
            Q: {
              B: {
                E: {
                  R: {
                    D: {
                      F: {
                        w: {
                          U: {
                            if ((0 | (I = -1048576 & QA)) < 268435455 | (0 | I) <= 268435455) {
                              i: {
                                N: {
                                  if ((0 | I) < 33554431 | (0 | I) <= 33554431) {
                                    if ((0 | I) < 8388607 | (0 | I) <= 8388607) {
                                      if (C = 524328, !0 & (0 | I) == -2147483648) break A;
                                      if (0 | (0 | I) != -2143289344) break I;
                                      return 557096;
                                    }
                                    if (!0 & (0 | I) == 8388608) break N;
                                    if (0 | (0 | I) != 16777216) break I;
                                    return 524358;
                                  }
                                  if ((0 | I) > 71303167) break i;
                                  if (!0 & (0 | I) == 33554432) break Q;
                                  if (0 | (0 | I) != 67108864) break I;
                                }
                                return 266270;
                              }
                              if (!0 & (0 | I) == 71303168) break U;
                              if (!0 & (0 | I) == 134217728) break B;
                              if (0 | (0 | I) != 138412032) break I;
                              return 294942;
                            }
                            if ((0 | I) < 542113791 | (0 | I) <= 542113791) {
                              if ((0 | I) < 536870911 | (0 | I) <= 536870911) {
                                if (!0 & (0 | I) == 268435456) break E;
                                if (0 | (0 | I) != 272629760) break I;
                                return 299028;
                              }
                              if (!0 & (0 | I) == 536870912) break D;
                              if (!0 & (0 | I) == 538968064) break R;
                              if (0 | (0 | I) != 541065216) break I;
                              return 569389;
                            }
                            if ((0 | I) < 1075838975 | (0 | I) <= 1075838975) {
                              if (!0 & (0 | I) == 542113792) break U;
                              if (0 | (0 | I) != 1073741824) break I;
                              return 532520;
                            }
                            if (!0 & (0 | I) == 1075838976) break F;
                            if (!0 & (0 | I) == 1077936128) break w;
                            if (0 | (0 | I) != 1078984704) break I;
                          }
                          return 299038;
                        }
                        return 565288;
                      }
                      return 1581096;
                    }
                    return 536621;
                  }
                  return 1585197;
                }
                return 266260;
              }
              return 262174;
            }
            return 2396190;
          }
          C = 16384;
        }
        return C;
      }
      function uI(I, C, Q, g, E, U) {
        var w, D, J = 0, o = 0, y = 0, S = 0;
        if (D = 8388607 & I, o = A[34456], J = G[0 | (I = D + o | 0)] | G[I + 1 | 0] << 8) {
          w = !(y = G[I + 2 | 0]), I = A[36434] << w, (0 | Q) <= 0 ? Q = J : (Q = (0 | T(A[50754], Q)) / 1e3 << w, I = (0 | I) < (0 | (S = (0 | T(Q, I)) / (0 | J) | 0)) ? S : I), E = (0 | E) > 0 ? (0 | T(Q, E)) / 256 | 0 : Q, Q = (0 | T(E, A[36431])) / 256 | 0, Q = (0 | I) < (0 | (Q = (4 & g) >>> 2 | 0 && (0 | Q) > (0 | E) ? E : Q)) ? Q : I, y || (J = J >>> 1 | 0, Q = (0 | Q) / 2 | 0);
          A: if (!((0 | U) < 0)) {
            if (g = D + 4 | 0, 256 & C) I = A[50758], A[36439] = I, A[(C = 216192 + (I << 4) | 0) >> 2] = 7, A[C + 8 >> 2] = g + o, A[C + 4 >> 2] = J << 16 | Q, U = y | U << 8;
            else {
              if (I = A[50758], A[36439] = I, A[(I = 216192 + (I << 4) | 0) >> 2] = 6, U = y | U << 8, A[I + 12 >> 2] = U, A[I + 8 >> 2] = g + o, o = I, I = T(C = J >>> 2 | 0, 3), E = (0 | Q) > (0 | J), A[o + 4 >> 2] = E ? I : Q, o = A[50758] + 1 | 0, A[50758] = (0 | o) <= 169 ? o : 0, (0 | I) < (0 | (Q = E ? Q - I | 0 : 0))) for (E = C << 1, y = g + (y ? C : E) | 0; C = A[50758], A[36439] = C, A[(C = 216192 + (C << 4) | 0) >> 2] = 6, A[C + 4 >> 2] = E, A[C + 12 >> 2] = U, A[C + 8 >> 2] = y + A[34456], C = A[50758] + 1 | 0, A[50758] = (0 | C) <= 169 ? C : 0, (0 | I) < (0 | (Q = Q - E | 0)); ) ;
              if ((0 | Q) <= 0) break A;
              I = A[50758], A[36439] = I, A[(C = 216192 + (I << 4) | 0) >> 2] = 6, A[C + 4 >> 2] = Q, A[C + 8 >> 2] = A[34456] + (g + (J - Q << w) | 0);
            }
            A[12 + (216192 + (I << 4) | 0) >> 2] = U, I = A[50758] + 1 | 0, A[50758] = (0 | I) <= 169 ? I : 0;
          }
        }
      }
      function bA(I, C, Q) {
        var g, E = 0, U = 0;
        if (Q >>> 0 >= 512) return JA(0 | I, 0 | C, 0 | Q), I;
        g = I + Q | 0;
        A: if (3 & (I ^ C)) if (g >>> 0 < 4) Q = I;
        else if ((E = g - 4 | 0) >>> 0 < I >>> 0) Q = I;
        else for (Q = I; M[0 | Q] = G[0 | C], M[Q + 1 | 0] = G[C + 1 | 0], M[Q + 2 | 0] = G[C + 2 | 0], M[Q + 3 | 0] = G[C + 3 | 0], C = C + 4 | 0, E >>> 0 >= (Q = Q + 4 | 0) >>> 0; ) ;
        else {
          I: if (3 & I) if (Q) for (Q = I; ; ) {
            if (M[0 | Q] = G[0 | C], C = C + 1 | 0, !(3 & (Q = Q + 1 | 0))) break I;
            if (!(Q >>> 0 < g >>> 0)) break;
          }
          else Q = I;
          else Q = I;
          if (!((E = -4 & g) >>> 0 < 64 || (U = E + -64 | 0) >>> 0 < Q >>> 0)) for (; A[Q >> 2] = A[C >> 2], A[Q + 4 >> 2] = A[C + 4 >> 2], A[Q + 8 >> 2] = A[C + 8 >> 2], A[Q + 12 >> 2] = A[C + 12 >> 2], A[Q + 16 >> 2] = A[C + 16 >> 2], A[Q + 20 >> 2] = A[C + 20 >> 2], A[Q + 24 >> 2] = A[C + 24 >> 2], A[Q + 28 >> 2] = A[C + 28 >> 2], A[Q + 32 >> 2] = A[C + 32 >> 2], A[Q + 36 >> 2] = A[C + 36 >> 2], A[Q + 40 >> 2] = A[C + 40 >> 2], A[Q + 44 >> 2] = A[C + 44 >> 2], A[Q + 48 >> 2] = A[C + 48 >> 2], A[Q + 52 >> 2] = A[C + 52 >> 2], A[Q + 56 >> 2] = A[C + 56 >> 2], A[Q + 60 >> 2] = A[C + 60 >> 2], C = C - -64 | 0, U >>> 0 >= (Q = Q - -64 | 0) >>> 0; ) ;
          if (Q >>> 0 >= E >>> 0) break A;
          for (; A[Q >> 2] = A[C >> 2], C = C + 4 | 0, E >>> 0 > (Q = Q + 4 | 0) >>> 0; ) ;
        }
        if (Q >>> 0 < g >>> 0) for (; M[0 | Q] = G[0 | C], C = C + 1 | 0, (0 | g) != (0 | (Q = Q + 1 | 0)); ) ;
        return I;
      }
      function LC(I) {
        var C = 0, Q = 0, g = 0, E = 0, U = 0, w = 0, D = 0, J = 0;
        W(+I), C = 0 | d(1), d(0);
        A: {
          if ((g = (C = C >>> 20 & 2047) - 969 | 0) >>> 0 < 63) J = C;
          else {
            if ((0 | g) < 0) return I + 1;
            if (!(C >>> 0 < 1033)) {
              if (W(+I), g = 0 | d(1), Q = 0, !(0 | d(0)) & (0 | g) == -1048576) break A;
              return C >>> 0 >= 2047 ? I + 1 : (0 | g) < 0 ? (H[(C = t - 16 | 0) + 8 >> 3] = 12882297539194267e-247, 12882297539194267e-247 * H[C + 8 >> 3]) : (H[(C = t - 16 | 0) + 8 >> 3] = 3105036184601418e216, 3105036184601418e216 * H[C + 8 >> 3]);
            }
          }
          if (Q = H[14409], U = (Q = (I = (Q = (E = H[14408] * I + Q) - Q) * H[14411] + (Q * H[14410] + I)) * I) * Q * (I * H[14415] + H[14414]), Q *= I * H[14413] + H[14412], W(+E), d(1), D = 0 | d(0), I = U + (Q + (H[(g = D << 4 & 2032) + 115376 >> 3] + I)), w = A[(g = g + 115384 | 0) >> 2], C = (D << 13) + (C = A[g + 4 >> 2]) | 0, C = (g = (g = w) + (w = 0) | 0) >>> 0 < w >>> 0 ? C + 1 | 0 : C, !J) return -2147483648 & D ? (b(0, 0 | g), b(1, C + 1071644672 | 0), (I = (E = (Q = +P()) * I) + Q) < 1 && (A[(C = t - 16 | 0) + 8 >> 2] = 0, A[C + 12 >> 2] = 1048576, H[C + 8 >> 3] = 22250738585072014e-324 * H[C + 8 >> 3], I = (I = (U = I + 1) + (E + (Q - I) + (I + (1 - U))) + -1) == 0 ? 0 : I), I *= 22250738585072014e-324) : (b(0, 0 | g), b(1, C - 1058013184 | 0), I = 5486124068793689e288 * ((Q = +P()) * I + Q)), I;
          b(0, 0 | g), b(1, 0 | C), Q = (Q = +P()) * I + Q;
        }
        return Q;
      }
      function yQ(I, C) {
        var Q, g = 0, E = 0, U = 0, w = 0;
        t = Q = t - 16 | 0;
        A: {
          if (QQ(84270, M[0 | C])) {
            if (E = 2, QQ(C, 43) || (E = G[0 | C] != 114), E = QQ(C, 120) ? 128 | E : E, U = E = QQ(C, 101) ? 524288 | E : E, w = 64 | E, U = (0 | (E = G[0 | C])) == 114 ? U : w, U = (0 | E) == 119 ? 512 | U : U, A[Q >> 2] = 438, A[Q + 4 >> 2] = 0, (I = 0 | MA(-100, 0 | I, 32768 | ((0 | E) == 97 ? 1024 | U : U), 0 | Q)) >>> 0 >= 4294963201 && (A[56798] = 0 - I, I = -1), (0 | I) < 0) break A;
            t = E = t - 32 | 0;
            I: {
              Q: {
                if (QQ(84270, M[0 | C])) {
                  if (g = KI(1176)) break Q;
                } else A[56798] = 28;
                C = 0;
                break I;
              }
              pA(g, 0, 144), QQ(C, 43) || (A[g >> 2] = G[0 | C] == 114 ? 8 : 4), G[0 | C] == 97 ? (1024 & (C = 0 | YI(0 | I, 3, 0)) || (C |= 1024, A[E + 16 >> 2] = C, A[E + 20 >> 2] = C >> 31, YI(0 | I, 4, E + 16 | 0)), C = 128 | A[g >> 2], A[g >> 2] = C) : C = A[g >> 2], A[g + 80 >> 2] = -1, A[g + 48 >> 2] = 1024, A[g + 60 >> 2] = I, A[g + 44 >> 2] = g + 152, 8 & C || (A[E >> 2] = E + 24, A[E + 4 >> 2] = 0, 0 | XA(0 | I, 21523, 0 | E) || (A[g + 80 >> 2] = 10)), A[g + 40 >> 2] = 10, A[g + 36 >> 2] = 11, A[g + 32 >> 2] = 12, A[g + 12 >> 2] = 13, G[227205] || (A[g + 76 >> 2] = -1), A[g + 56 >> 2] = A[56816], (C = A[56816]) && (A[C + 52 >> 2] = g), A[56816] = g, C = g;
            }
            if (t = E + 32 | 0, g = C) break A;
            HA(0 | I);
          } else A[56798] = 28;
          g = 0;
        }
        return t = Q + 16 | 0, g;
      }
      function tE(I, C, Q) {
        var g, E = 0, U = 0, w = 0, D = 0, J = 0;
        if (w = I, t = g = t - 208 | 0, A[g + 8 >> 2] = 1, A[g + 12 >> 2] = 0, D = C << 2) {
          for (A[g + 16 >> 2] = 4, A[g + 20 >> 2] = 4, C = 4, E = 4, U = 2; I = C, C = (E + 4 | 0) + C | 0, A[(g + 16 | 0) + (U << 2) >> 2] = C, U = U + 1 | 0, E = I, C >>> 0 < D >>> 0; ) ;
          if ((I = (w + D | 0) - 4 | 0) >>> 0 <= w >>> 0) U = 0, C = 1, I = 0;
          else {
            for (U = 1, C = 1; 3 & ~U ? (UA[(g + 16 | 0) + ((E = C - 1 | 0) << 2) >> 2] >= I - w >>> 0 ? yg(w, Q, g + 8 | 0, C, 0, g + 16 | 0) : Ng(w, Q, C, g + 16 | 0), (0 | C) != 1 ? (CQ(g + 8 | 0, E), C = 1) : (CQ(g + 8 | 0, 1), C = 0)) : (Ng(w, Q, C, g + 16 | 0), iB(g + 8 | 0, 2), C = C + 2 | 0), U = 1 | (E = A[g + 8 >> 2]), A[g + 8 >> 2] = U, I >>> 0 > (w = w + 4 | 0) >>> 0; ) ;
            U = E >>> 0 > 1, I = A[g + 12 >> 2] != 0;
          }
          if (yg(w, Q, g + 8 | 0, C, 0, g + 16 | 0), U | (0 | C) != 1 | I) for (; (0 | C) <= 1 ? (iB(E = g + 8 | 0, I = X(E)), U = A[g + 8 >> 2], I = I + C | 0) : (CQ(E = g + 8 | 0, 2), A[g + 8 >> 2] = 7 ^ A[g + 8 >> 2], iB(E, 1), yg((J = w - 4 | 0) - A[(D = g + 16 | 0) + ((I = C - 2 | 0) << 2) >> 2] | 0, Q, E, C - 1 | 0, 1, D), CQ(E, 1), U = 1 | A[g + 8 >> 2], A[g + 8 >> 2] = U, yg(J, Q, E, I, 1, D)), C = I, w = w - 4 | 0, A[g + 12 >> 2] | (0 | C) != 1 | (0 | U) != 1; ) ;
        }
        t = g + 208 | 0;
      }
      function zB(I, C, Q, g) {
        var E, U = 0, w = 0, D = 0;
        t = E = t - 32 | 0, D = U = 2147483647 & g, w = U - 1006698496 | 0;
        A: if (0 | (U = U - 1140785152 | 0) >>> 0 > w >>> 0) {
          if (U = Q << 4 | C >>> 28, Q = g << 4 | Q >>> 28, (0 | (C &= 268435455)) == 134217728 & !!(0 | I) | C >>> 0 > 134217728) {
            w = Q + 1073741824 | 0, w = (U = U + 1 | 0) ? w : w + 1 | 0;
            break A;
          }
          if (w = Q + 1073741824 | 0, I | (0 | C) != 134217728) break A;
          w = (I = 1 & U) >>> 0 > (U = I + U | 0) >>> 0 ? w + 1 | 0 : w;
        } else (!Q & (0 | D) == 2147418112 ? !(I | C) : D >>> 0 < 2147418112) ? (U = 0, w = 2146435072, D >>> 0 > 1140785151 || (w = 0, (D = D >>> 16 | 0) >>> 0 < 15249 || (fI(E + 16 | 0, I, C, Q, U = 65535 & g | 65536, D - 15233 | 0), oQ(E, I, C, Q, U, 15361 - D | 0), U = (C = A[E + 8 >> 2]) << 4, C = A[E + 12 >> 2] << 4 | C >>> 28, Q = A[E >> 2], D = w = A[E + 4 >> 2], U |= w >>> 28, w = C, (0 | (I = 268435455 & D)) == 134217728 & !!(0 | (C = Q | !!(A[E + 16 >> 2] | A[E + 24 >> 2] | A[E + 20 >> 2] | A[E + 28 >> 2]))) | I >>> 0 > 134217728 ? w = (U = U + 1 | 0) ? w : w + 1 | 0 : C | (0 | I) != 134217728 || (w = (I = U) >>> 0 > (U = U + (1 & U) | 0) >>> 0 ? w + 1 | 0 : w)))) : (U = Q << 4 | C >>> 28, w = 524287 & (I = g << 4 | Q >>> 28) | 2146959360);
        return t = E + 32 | 0, b(0, 0 | U), b(1, -2147483648 & g | w), +P();
      }
      function WE(I) {
        var C, Q = 0, g = 0, E = 0, U = 0, w = 0;
        if (W(+I), w = 0 | d(1), E = 0 | d(0), (0 | (U = w >>> 20 & 2047)) == 2047) return (I *= 1) / I;
        if (!(g = E << 1) & (0 | (Q = w << 1 | E >>> 31)) == 2145386496 | Q >>> 0 < 2145386496) return !g & (0 | Q) == 2145386496 ? 0 * I : I;
        if (U) Q = 1048575 & w | 1048576;
        else {
          if (U = 0, g = E << 12, (0 | (Q = w << 12 | E >>> 20)) > 0 | (0 | Q) >= 0) for (; U = U - 1 | 0, Q = Q << 1 | g >>> 31, g <<= 1, (0 | Q) > 0 | (0 | Q) >= 0; ) ;
          g = 31 & (Q = 1 - U | 0), (63 & Q) >>> 0 >= 32 ? (Q = E << g, E = 0) : (Q = (1 << g) - 1 & E >>> 32 - g | w << g, E <<= g);
        }
        if (g = E, (0 | U) > 1023) {
          for (; ; ) {
            if (!((0 | (E = Q + -1048576 | 0)) < 0 || (Q = E) | g)) return 0 * I;
            if (Q = Q << 1 | g >>> 31, g <<= 1, !((0 | (U = U - 1 | 0)) > 1023)) break;
          }
          U = 1023;
        }
        if (!((0 | (E = Q + -1048576 | 0)) < 0 || (Q = E) | g)) return 0 * I;
        if ((0 | Q) == 1048575 | Q >>> 0 < 1048575) for (; U = U - 1 | 0, E = Q >>> 0 < 524288, Q = Q << 1 | g >>> 31, g <<= 1, E; ) ;
        return C = -2147483648 & w, (0 | U) > 0 ? Q = Q + -1048576 | U << 20 : (E = 1 - U | 0, w = Q, U = g, g = 31 & E, (63 & E) >>> 0 >= 32 ? (Q = 0, g = w >>> g | 0) : (Q = w >>> g | 0, g = ((1 << g) - 1 & w) << 32 - g | U >>> g)), b(0, 0 | g), b(1, Q | C), +P();
      }
      function nQ(I, C, Q, g, E) {
        var U, w = 0, D = 0;
        t = U = t - 160 | 0;
        A: {
          I: {
            Q: {
              B: switch ((w = G[C + 10 | 0]) - 15 | 0) {
                case 6:
                  break Q;
                case 0:
                  break B;
                default:
                  break I;
              }
              M[0 | I] = 0;
              break A;
            }
            A[U >> 2] = T(G[Q + 7 | 0], 44) + 137856, iA(I, 86002, U), I = SA(I) + I | 0;
            break A;
          }
          if (g) {
            if (M[U + 140 | 0] = 0, Q ? AC(0, 0, Q, U + 8 | 0, 0) : xA(w, U + 8 | 0), Q = U + 140 | 0, w = G[U + 140 | 0]) {
              if ((0 | w) == 32) {
                M[0 | I] = 0;
                break A;
              }
              224 & (w = w << 24 >> 24) || (E && (A[E >> 2] = w), Q = U + 141 | 0);
            }
            if (!((0 | (E = SA(Q))) <= 0)) {
              I = YA(I, Q) + E | 0, M[0 | I] = 0;
              break A;
            }
          }
          E = 0;
          I: if (!(!(Q = 255 & (w = A[C >> 2])) | (0 | Q) == 47)) {
            if (g) {
              if ((0 | (D = 255 & w)) == 95) break I;
              Q: {
                B: {
                  if ((0 | D) == 35) {
                    if (D = 3, G[C + 11 | 0] != 2) break B;
                    break I;
                  }
                  if ((D = Q - 32 | 0) >>> 0 > 95) break Q;
                }
                Q = a[93952 + (D << 1) >> 1];
              }
              E = HI(Q, I);
            } else M[0 | I] = w, E = 1;
            for (; ; ) {
              if (!(Q = 255 & (w >>= 8)) | (0 | Q) == 47) break I;
              if (g) {
                if ((0 | Q) == 35 & G[C + 11 | 0] == 2) break I;
                if (Q - 48 >>> 0 < 10) continue;
                (D = Q - 32 | 0) >>> 0 <= 95 && (Q = a[93952 + (D << 1) >> 1]), E = HI(Q, I + E | 0) + E | 0;
              } else M[I + E | 0] = w, E = E + 1 | 0;
            }
          }
          M[0 | (I = I + E | 0)] = 0;
        }
        return t = U + 160 | 0, I;
      }
      function Mg(I) {
        var C, Q = 0;
        C = I, Q = 131280;
        A: {
          I: {
            if (!((0 | I) <= 1023 || (Q = 131300, I >>> 0 < 1328 || (Q = 131320, I >>> 0 < 1424 || (Q = 131340, I >>> 0 < 1536 || (Q = 131360, I >>> 0 < 1792 || (Q = 131380, I >>> 0 < 1872 || (Q = 131400, I >>> 0 < 2432 || (Q = 131420, I >>> 0 < 2560 || (Q = 131440, I >>> 0 < 2688 || (Q = 131460, I >>> 0 < 2816 || (Q = 131480, I >>> 0 < 2944 || (Q = 131500, I >>> 0 < 3072 || (Q = 131520, I >>> 0 < 3200 || (Q = 131540, I >>> 0 < 3328 || (Q = 131560, I >>> 0 < 3456 || (Q = 131580, I >>> 0 < 3584 || (Q = 131600, I >>> 0 < 3712 || (Q = 131620, I >>> 0 < 3840 || (Q = 131640, I >>> 0 < 4096 || (Q = 131660, I >>> 0 < 4256 || (Q = 131680, I >>> 0 < 4352 || (Q = 131700, I >>> 0 < 4608 || (Q = 131720, I >>> 0 < 5024 || (Q = 131740, I >>> 0 < 10496 || (Q = 131760, I >>> 0 < 12544 || (Q = 131780, I >>> 0 < 40960))))))))))))))))))))))))))) {
              if (I >>> 0 >= 55296) break I;
              Q = 131800;
            }
            if ((0 | C) >= a[(I = Q) + 8 >> 1]) break A;
          }
          I = 0;
        }
        return I;
      }
      function OE(I, C, Q) {
        var g, E = 0, U = 0, w = 0, D = 0;
        t = g = t - 208 | 0, M[g + 80 | 0] = 0;
        A: {
          if ((E = C - 224 | 0) >>> 0 <= 158) C = 101072 + (E << 1) | 0;
          else {
            if ((C = C - 592 | 0) >>> 0 > 88) break A;
            C = 101392 + (C << 1) | 0;
          }
          if (C = a[C >> 1]) {
            if (w = C << 16 >> 16, D = (E = 63 & C) >>> 0 > 37 ? E + 59 | 0 : L[101584 + (E << 1) >> 1], E = C >>> 6 | 0, (0 | w) < 0) E = 59 + (63 & E) | 0, C = C >>> 12 & 7;
            else {
              if (!(U = 31 & E)) break A;
              E = 0, C = C >>> 11 & 15;
            }
            (U = KA(I, A[129920 + (U << 3) >> 2], g + 112 | 0)) && Yg(I, D, g + 176 | 0) && (C && 4096 & KA(I, A[129920 + (C << 3) >> 2], g + 80 | 0) && (Q = SA(C = YA(Q, g + 80 | 0)), M[g + 80 | 0] = 0, Q = C + Q | 0), E ? (Yg(C = I, E, I = g + 144 | 0), A[g + 68 >> 2] = g + 80, A[g - -64 >> 2] = I, A[g + 60 >> 2] = 6, A[g + 52 >> 2] = 23, A[g + 56 >> 2] = g + 176, A[g + 48 >> 2] = g + 112, iA(Q, 84101, g + 48 | 0)) : (0 | w) < 0 ? YA(Q, g + 176 | 0) : 1 & A[I + 144 >> 2] | 4096 & U ? (A[g + 36 >> 2] = 23, A[g + 40 >> 2] = 6, A[g + 44 >> 2] = g + 176, A[g + 32 >> 2] = g + 112, iA(Q, 84430, g + 32 | 0)) : (A[g + 16 >> 2] = 23, A[g + 8 >> 2] = 23, A[g >> 2] = 4, A[g + 12 >> 2] = g + 112, A[g + 4 >> 2] = g + 176, iA(Q, 84802, g)));
          }
        }
        t = g + 208 | 0;
      }
      function XB() {
        DA(), A[55928] = 0, A[55926] = 0, A[55927] = 0, A[55924] = 0, A[56244] = 0, A[56245] = 0, A[56246] = 0, A[56247] = 0, A[56260] = 0, A[56261] = 0, A[56262] = 0, A[56263] = 0, A[56276] = 0, A[56277] = 0, A[56278] = 0, A[56279] = 0, A[55974] = 0, A[55975] = 0, A[55972] = 0, A[55973] = 0, A[55988] = 0, A[55989] = 0, A[55990] = 0, A[55991] = 0, A[56004] = 0, A[56005] = 0, A[56006] = 0, A[56007] = 0, A[56020] = 0, A[56021] = 0, A[56022] = 0, A[56023] = 0, A[56036] = 0, A[56037] = 0, A[56038] = 0, A[56039] = 0, A[56052] = 0, A[56053] = 0, A[56054] = 0, A[56055] = 0, A[56068] = 0, A[56069] = 0, A[56070] = 0, A[56071] = 0, A[56086] = 0, A[56087] = 0, A[56084] = 0, A[56085] = 0, A[56102] = 0, A[56103] = 0, A[56100] = 0, A[56101] = 0, A[56118] = 0, A[56119] = 0, A[56116] = 0, A[56117] = 0, A[56134] = 0, A[56135] = 0, A[56132] = 0, A[56133] = 0, A[56150] = 0, A[56151] = 0, A[56148] = 0, A[56149] = 0, A[56166] = 0, A[56167] = 0, A[56164] = 0, A[56165] = 0, A[56182] = 0, A[56183] = 0, A[56180] = 0, A[56181] = 0, A[56198] = 0, A[56199] = 0, A[56196] = 0, A[56197] = 0, A[56214] = 0, A[56215] = 0, A[56212] = 0, A[56213] = 0, A[56230] = 0, A[56231] = 0, A[56228] = 0, A[56229] = 0;
      }
      function zE(I, C) {
        var Q = 0, g = 0, E = 0, U = 0, w = 0, D = 0, J = 0, o = 0, y = 0, S = 0;
        A: {
          if ((0 | (U = A[I + 4 >> 2])) == A[I >> 2]) if ((w = A[I + 8 >> 2]) >>> 0 < (Q = A[I + 12 >> 2]) >>> 0) Q = (E = (1 + (Q - w >> 2) | 0) / 2 << 2) + w | 0, (0 | U) != (0 | w) && (rQ(Q = Q - (g = w - U | 0) | 0, U, g), U = A[I + 8 >> 2]), A[I + 4 >> 2] = Q, A[I + 8 >> 2] = E + U;
          else {
            if ((g = (0 | Q) == (0 | U) ? 1 : Q - U >> 1) >>> 0 >= 1073741824) break A;
            if (y = (J = aC(Q = g << 2)) + Q | 0, D = Q = (g + 3 & -4) + J | 0, (0 | U) != (0 | w)) {
              if (S = -4 & (w = w - U | 0), E = Q, g = U, w = 1 + ((o = w - 4 | 0) >>> 2 | 0) & 7) for (D = 0; A[E >> 2] = A[g >> 2], g = g + 4 | 0, E = E + 4 | 0, (0 | w) != (0 | (D = D + 1 | 0)); ) ;
              if (D = Q + S | 0, !(o >>> 0 < 28)) for (; A[E >> 2] = A[g >> 2], A[E + 4 >> 2] = A[g + 4 >> 2], A[E + 8 >> 2] = A[g + 8 >> 2], A[E + 12 >> 2] = A[g + 12 >> 2], A[E + 16 >> 2] = A[g + 16 >> 2], A[E + 20 >> 2] = A[g + 20 >> 2], A[E + 24 >> 2] = A[g + 24 >> 2], A[E + 28 >> 2] = A[g + 28 >> 2], g = g + 32 | 0, (0 | D) != (0 | (E = E + 32 | 0)); ) ;
            }
            A[I + 12 >> 2] = y, A[I + 8 >> 2] = D, A[I + 4 >> 2] = Q, A[I >> 2] = J, U && (_A(U), Q = A[I + 4 >> 2]);
          }
          else Q = U;
          return A[Q - 4 >> 2] = A[C >> 2], void (A[I + 4 >> 2] = A[I + 4 >> 2] - 4);
        }
        OU(), r();
      }
      function XE(I, C, Q) {
        var g = 0, E = 0, U = 0, w = 0, D = 0, J = 0, o = 0, y = 0, S = 0;
        A: {
          I: {
            Q: {
              B: {
                E: {
                  R: {
                    D: {
                      F: {
                        w: {
                          if (C) {
                            if (!Q) break w;
                            break F;
                          }
                          return HQ = (C = I) - T(I = (I >>> 0) / (Q >>> 0) | 0, Q) | 0, MQ = 0, QA = 0, I;
                        }
                        if (!I) break D;
                        break R;
                      }
                      if (!((g = Q - 1 | 0) & Q)) break E;
                      U = 0 - (w = (aA(Q) + 33 | 0) - aA(C) | 0) | 0;
                      break Q;
                    }
                    return HQ = 0, MQ = C - T(I = (C >>> 0) / 0 | 0, 0) | 0, QA = 0, I;
                  }
                  if ((g = 32 - aA(C) | 0) >>> 0 < 31) break B;
                  break I;
                }
                if (HQ = I & g, MQ = 0, (0 | Q) == 1) break A;
                return Q = 31 & (g = GU(Q)), (63 & g) >>> 0 >= 32 ? I = C >>> Q | 0 : (E = C >>> Q | 0, I = ((1 << Q) - 1 & C) << 32 - Q | I >>> Q), QA = E, I;
              }
              w = g + 1 | 0, U = 63 - g | 0;
            }
            if (g = 31 & (E = 63 & w), E >>> 0 >= 32 ? (E = 0, D = C >>> g | 0) : (E = C >>> g | 0, D = ((1 << g) - 1 & C) << 32 - g | I >>> g), g = 31 & (U &= 63), U >>> 0 >= 32 ? (C = I << g, I = 0) : (C = (1 << g) - 1 & I >>> 32 - g | C << g, I <<= g), w) for (y = (0 | (g = Q - 1 | 0)) == -1 ? -1 : 0; J = E << 1 | D >>> 31, D = (E = D << 1 | C >>> 31) - (o = Q & (U = y - (J + (E >>> 0 > g >>> 0) | 0) >> 31)) | 0, E = J - (E >>> 0 < o >>> 0) | 0, C = C << 1 | I >>> 31, I = S | I << 1, S = J = 1 & U, w = w - 1 | 0; ) ;
            return HQ = D, MQ = E, QA = C << 1 | I >>> 31, J | I << 1;
          }
          HQ = I, MQ = C, I = 0, C = 0;
        }
        return QA = C, I;
      }
      function rE(I, C) {
        var Q = 0, g = 0, E = 0, U = 0, w = 0, D = 0, J = 0, o = 0, y = 0, S = 0;
        A: {
          if ((0 | (Q = A[I + 8 >> 2])) == A[I + 12 >> 2]) if ((g = A[I + 4 >> 2]) >>> 0 > (w = A[I >> 2]) >>> 0) E = rQ((U = (1 + (g - w >> 2) | 0) / -2 << 2) + g | 0, g, Q = Q - g | 0) + Q | 0, A[I + 8 >> 2] = E, A[I + 4 >> 2] = U + A[I + 4 >> 2];
          else {
            if ((U = (0 | Q) == (0 | w) ? 1 : Q - w >> 1) >>> 0 >= 1073741824) break A;
            if (y = (D = aC(E = U << 2)) + E | 0, E = U = (-4 & U) + D | 0, (0 | Q) != (0 | g)) {
              if (S = -4 & (Q = Q - g | 0), o = 1 + ((J = Q - 4 | 0) >>> 2 | 0) & 7) for (E = 0, Q = U; A[Q >> 2] = A[g >> 2], g = g + 4 | 0, Q = Q + 4 | 0, (0 | o) != (0 | (E = E + 1 | 0)); ) ;
              else Q = U;
              if (E = U + S | 0, !(J >>> 0 < 28)) for (; A[Q >> 2] = A[g >> 2], A[Q + 4 >> 2] = A[g + 4 >> 2], A[Q + 8 >> 2] = A[g + 8 >> 2], A[Q + 12 >> 2] = A[g + 12 >> 2], A[Q + 16 >> 2] = A[g + 16 >> 2], A[Q + 20 >> 2] = A[g + 20 >> 2], A[Q + 24 >> 2] = A[g + 24 >> 2], A[Q + 28 >> 2] = A[g + 28 >> 2], g = g + 32 | 0, (0 | E) != (0 | (Q = Q + 32 | 0)); ) ;
            }
            A[I + 12 >> 2] = y, A[I + 8 >> 2] = E, A[I + 4 >> 2] = U, A[I >> 2] = D, w && (_A(w), E = A[I + 8 >> 2]);
          }
          else E = Q;
          return A[E >> 2] = A[C >> 2], void (A[I + 8 >> 2] = A[I + 8 >> 2] + 4);
        }
        OU(), r();
      }
      function _g(I, C) {
        var Q, g = 0, E = 0, U = 0, w = 0, D = 0;
        E = 189088, t = Q = t - 320 | 0, A[Q + 312 >> 2] = 0, U = WB(I, w = YA(Q + 112 | 0, 189088), Q, Q + 316 | 0, Q + 312 | 0, 0), g = A[Q + 316 >> 2];
        A: if ((0 | C) <= 3) {
          if ((0 | g) < 2) break A;
          if (U = 3 & (C = g - 1 | 0), I = 1, g - 2 >>> 0 >= 3) for (D = -4 & C, C = 0; M[0 | (g = I + Q | 0)] >= 4 && (M[0 | g] = 3), M[(g = I + Q | 0) + 1 | 0] >= 4 && (M[g + 1 | 0] = 3), M[g + 2 | 0] >= 4 && (M[g + 2 | 0] = 3), M[g + 3 | 0] >= 4 && (M[g + 3 | 0] = 3), I = I + 4 | 0, (0 | D) != (0 | (C = C + 4 | 0)); ) ;
          if (!U) break A;
          for (C = 0; M[0 | (g = I + Q | 0)] >= 4 && (M[0 | g] = 3), I = I + 1 | 0, (0 | U) != (0 | (C = C + 1 | 0)); ) ;
        } else if (I = 1, !((0 | g) <= 1)) {
          for (; ; ) {
            if ((0 | U) > M[0 | (D = I + Q | 0)]) {
              if ((0 | g) != (0 | (I = I + 1 | 0))) continue;
              break A;
            }
            break;
          }
          M[0 | D] = C;
        }
        if (I = G[0 | w]) for (C = 1; g = A[144464 + ((255 & I) << 2) >> 2], G[g + 11 | 0] != 2 | 16 & G[g + 6 | 0] || (U = 255 & (g = M[C + Q | 0]), (0 | g) < 2 && U || (M[0 | E] = G[U + 94151 | 0], E = E + 1 | 0, I = G[0 | w]), C = C + 1 | 0), M[0 | E] = I, E = E + 1 | 0, I = G[0 | (w = w + 1 | 0)]; ) ;
        M[0 | E] = 0, t = Q + 320 | 0;
      }
      function mE(I) {
        var C = 0, Q = 0, g = 0, E = 0, U = 0, w = 0;
        Q = C = A[(I |= 0) >> 2], A[I >> 2] = C + 1;
        A: {
          I: {
            Q: {
              B: {
                E: {
                  R: {
                    D: switch (((U = G[0 | C]) >>> 4 | 0) - 8 | 0) {
                      case 0:
                      case 1:
                      case 2:
                      case 3:
                        break I;
                      case 7:
                        break E;
                      case 6:
                        break R;
                      case 4:
                      case 5:
                        break D;
                      default:
                        break A;
                    }
                    if ((g = C + 2 | 0) >>> 0 >= (E = A[I + 4 >> 2]) >>> 0) break B;
                    if (A[I >> 2] = g, (192 & (Q = G[Q + 1 | 0])) != 128) break Q;
                    return 63 & Q | U << 6 & 1984;
                  }
                  if ((g = C + 3 | 0) >>> 0 >= (E = A[I + 4 >> 2]) >>> 0) break B;
                  if (Q = C + 2 | 0, A[I >> 2] = Q, (192 & (C = G[C + 1 | 0])) != 128) {
                    g = Q;
                    break Q;
                  }
                  if (A[I >> 2] = g, (192 & (Q = G[0 | Q])) != 128) break Q;
                  return 63 & Q | (63 & C | U << 6 & 960) << 6;
                }
                if (!((E = A[I + 4 >> 2]) >>> 0 <= (Q = C + 4 | 0) >>> 0)) {
                  if (g = C + 2 | 0, A[I >> 2] = g, (192 & (E = G[C + 1 | 0])) != 128 || (g = C + 3 | 0, A[I >> 2] = g, (192 & (w = G[C + 2 | 0])) != 128) || (A[I >> 2] = Q, C = G[0 | g], g = Q, (192 & C) != 128)) break Q;
                  return 0 | ((I = 63 & C | w << 6 & 4032 | (63 & E | U << 6 & 960) << 12) >>> 0 >= 1114112 ? 65533 : I);
                }
              }
              A[I >> 2] = E;
              break I;
            }
            A[I >> 2] = g - 1;
          }
          U = 65533;
        }
        return 0 | U;
      }
      function Gg(I, C, Q, g) {
        var E, U, w = 0, D = 0, J = 0, o = 0, y = 0, S = 0;
        if (t = E = t - 432 | 0, !(!g | !(536870912 & (U = _C(I, C, Q, g)))) && (L[E + 48 >> 1] = 8192, g = YA(E + 48 | 2, g), G[0 | g])) {
          for (J = E + 224 | 0, w = 1, o = 200; ; ) {
            if (mA(E + 44 | 0, g), C = mC(A[E + 44 >> 2]), D = A[Q >> 2], C ? (A[Q >> 2] = 2 | D, HI(xC(A[E + 44 >> 2]), g)) : A[Q >> 2] = -3 & D, S = A[33264], _C(I, g, Q, 0), 1 & w ? (A[E + 16 >> 2] = 189088, D = oC(J, o, 84130, E + 16 | 0)) : (A[E + 32 >> 2] = 15, A[E + 36 >> 2] = 189088, D = oC(J, o, 84434, E + 32 | 0)), w = (C = A[33264]) + 1 | 0, A[33264] = w, C >>> 0 <= 2147483646) {
              for (; ; ) if (C = g, g = g + 1 | 0, (0 | (y = M[0 | C])) == 32 | y - 9 >>> 0 < 5) {
                for (; C = (g = C) + 1 | 0, (0 | (y = M[0 | g])) == 32 | y - 9 >>> 0 < 5; ) ;
                if (w = w - 1 | 0, A[33264] = w, !((0 | w) > 0)) break;
              }
            }
            if (J = J + D | 0, A[33264] = S, !(G[0 | g] && (w = 0, (0 | (o = o - D | 0)) > 1))) break;
          }
          (E + 224 | 0) != (0 | J) && (A[E >> 2] = E + 224, oC(189088, 200, 84130, E));
        }
        return t = E + 432 | 0, U;
      }
      function rB(I, C, Q, g, E, U, w, D) {
        var J, o;
        J = A[32972], o = A[J + 116 >> 2], L[I + 8 >> 1] = a[I + 8 >> 1] + U, U = 32 & D ? 0 - U | 0 : U, L[I + 10 >> 1] = U + a[I + 10 >> 1], L[I + 12 >> 1] = U + a[I + 12 >> 1], g = (0 | g) > (0 | (U = ((U = (0 | T(C, o)) / 256 | 0) - (C = L[I + 6 >> 1]) | 0) / 2 | 0)) ? U : g, L[I + 6 >> 1] = ((0 | Q) < (0 | g) ? g : Q) + C;
        A: {
          I: switch (E - 1 | 0) {
            case 0:
              C = (0 | (C = 235 - (Q = L[I + 4 >> 1]) | 0)) <= -100 ? -100 : C, L[I + 4 >> 1] = ((0 | C) >= -60 ? -60 : C) + Q;
              break A;
            case 1:
              C = (0 | (C = (0 | (C = 235 - (Q = L[I + 4 >> 1]) | 0)) <= -300 ? -300 : C)) >= -150 ? -150 : C, L[I + 4 >> 1] = C + Q, L[I + 2 >> 1] = C + a[I + 2 >> 1];
              break A;
            case 2:
              break I;
            default:
              break A;
          }
          C = (0 | (C = (0 | (C = 100 - (Q = L[I + 4 >> 1]) | 0)) <= -400 ? -400 : C)) > -300 ? -400 : C, L[I + 4 >> 1] = C + Q, L[I + 2 >> 1] = C + a[I + 2 >> 1];
        }
        A[J + 132 >> 2] || (M[I + 20 | 0] = (T(G[I + 20 | 0], w) >>> 0) / 100, M[I + 21 | 0] = (T(G[I + 21 | 0], w) >>> 0) / 100, M[I + 22 | 0] = (T(G[I + 22 | 0], w) >>> 0) / 100, M[I + 23 | 0] = (T(G[I + 23 | 0], w) >>> 0) / 100, M[I + 24 | 0] = (T(G[I + 24 | 0], w) >>> 0) / 100, M[I + 25 | 0] = (T(G[I + 25 | 0], w) >>> 0) / 100);
      }
      function $g(I) {
        var C, Q = 0, g = 0, E = 0, U = 0;
        t = C = t - 48 | 0;
        A: {
          if (I) {
            G[0 | I] || (I = sg(84285), G[0 | I] && I || (I = sg(121696), G[0 | I] && I || (I = sg(84614), G[0 | I] && I || (I = 84891))));
            I: {
              for (; ; ) {
                if (!(!(g = G[I + Q | 0]) | (0 | g) == 47)) {
                  if (E = 23, (0 | (Q = Q + 1 | 0)) != 23) continue;
                  break I;
                }
                break;
              }
              E = Q;
            }
            g = 84891;
            I: {
              Q: {
                if (Q = G[0 | I], (G[I + E | 0] | (0 | Q) == 46 || (g = I, (0 | Q) == 67)) && !G[g + 1 | 0] || !aI(g, 84891) || !aI(g, 85136)) {
                  if (Q = 121652, G[g + 1 | 0] == 46) break Q;
                  I = 0;
                  break I;
                }
                if (Q = A[56851]) for (; ; ) {
                  if (!aI(g, Q + 8 | 0)) break Q;
                  if (!(Q = A[Q + 32 >> 2])) break;
                }
                (I = KI(36)) && (Q = A[30414], A[I >> 2] = A[30413], A[I + 4 >> 2] = Q, bA(Q = I + 8 | 0, g, E), M[Q + E | 0] = 0, A[I + 32 >> 2] = A[56851], A[56851] = I), Q = I || 121652;
              }
              I = Q;
            }
            if ((0 | I) == -1) break A;
            A[56809] = I;
          } else I = A[56809];
          U = I ? I + 8 | 0 : 84309;
        }
        return t = C + 48 | 0, U;
      }
      function CI(I) {
        var C = 0, Q = 0, g = 0, E = 0, U = 0, w = 0, D = 0, J = 0, o = 0;
        J = !!((C = A[I + 112 >> 2]) | (g = A[I + 116 >> 2])), E = C, w = C = (U = A[I + 4 >> 2]) - (D = A[I + 44 >> 2]) | 0, Q = C + A[I + 120 >> 2] | 0, C = A[I + 124 >> 2] + (C >> 31) | 0;
        A: {
          if (!(((0 | (C = Q >>> 0 < w >>> 0 ? C + 1 | 0 : C)) >= (0 | g) & Q >>> 0 >= E >>> 0 | (0 | C) > (0 | g)) & J)) {
            if ((0 | (J = UI(I))) >= 0) break A;
            U = A[I + 4 >> 2], D = A[I + 44 >> 2];
          }
          return A[I + 112 >> 2] = -1, A[I + 116 >> 2] = -1, A[I + 104 >> 2] = U, g = (w = Q) + (Q = D - U | 0) | 0, C = (Q >> 31) + C | 0, A[I + 120 >> 2] = g, A[I + 124 >> 2] = Q >>> 0 > g >>> 0 ? C + 1 | 0 : C, -1;
        }
        return C = (g = Q + 1 | 0) ? C : C + 1 | 0, U = A[I + 4 >> 2], D = A[I + 8 >> 2], w = E = A[I + 116 >> 2], E | (Q = A[I + 112 >> 2]) && (E = Q - g | 0, (0 | (Q = w - (C + (Q >>> 0 < g >>> 0) | 0) | 0)) >= (0 | (w = (o = D - U | 0) >> 31)) & E >>> 0 >= o >>> 0 | (0 | Q) > (0 | w) || (D = E + U | 0)), A[I + 104 >> 2] = D, g = (E = (Q = A[I + 44 >> 2]) - U | 0) + g | 0, C = (E >> 31) + C | 0, A[I + 120 >> 2] = g, A[I + 124 >> 2] = g >>> 0 < E >>> 0 ? C + 1 | 0 : C, Q >>> 0 >= U >>> 0 && (M[U - 1 | 0] = J), J;
      }
      function rQ(I, C, Q) {
        var g = 0, E = 0;
        A: if ((0 | I) != (0 | C)) {
          if (C - (E = I + Q | 0) >>> 0 <= 0 - (Q << 1) >>> 0) return bA(I, C, Q);
          if (g = 3 & (I ^ C), I >>> 0 < C >>> 0) {
            if (g) g = I;
            else {
              if (3 & I) for (g = I; ; ) {
                if (!Q) break A;
                if (M[0 | g] = G[0 | C], C = C + 1 | 0, Q = Q - 1 | 0, !(3 & (g = g + 1 | 0))) break;
              }
              else g = I;
              if (!(Q >>> 0 <= 3)) for (; A[g >> 2] = A[C >> 2], C = C + 4 | 0, g = g + 4 | 0, (Q = Q - 4 | 0) >>> 0 > 3; ) ;
            }
            if (Q) for (; M[0 | g] = G[0 | C], g = g + 1 | 0, C = C + 1 | 0, Q = Q - 1 | 0; ) ;
          } else {
            if (!g) {
              if (3 & E) for (; ; ) {
                if (!Q) break A;
                if (M[0 | (g = (Q = Q - 1 | 0) + I | 0)] = G[C + Q | 0], !(3 & g)) break;
              }
              if (!(Q >>> 0 <= 3)) for (; A[(Q = Q - 4 | 0) + I >> 2] = A[C + Q >> 2], Q >>> 0 > 3; ) ;
            }
            if (!Q) break A;
            for (; M[(Q = Q - 1 | 0) + I | 0] = G[C + Q | 0], Q; ) ;
          }
        }
        return I;
      }
      function AB(I, C, Q, g) {
        A: switch (C - 9 | 0) {
          case 0:
            return C = A[Q >> 2], A[Q >> 2] = C + 4, void (A[I >> 2] = A[C >> 2]);
          case 6:
            return C = A[Q >> 2], A[Q >> 2] = C + 4, C = L[C >> 1], A[I >> 2] = C, void (A[I + 4 >> 2] = C >> 31);
          case 7:
            return C = A[Q >> 2], A[Q >> 2] = C + 4, A[I >> 2] = a[C >> 1], void (A[I + 4 >> 2] = 0);
          case 8:
            return C = A[Q >> 2], A[Q >> 2] = C + 4, C = M[0 | C], A[I >> 2] = C, void (A[I + 4 >> 2] = C >> 31);
          case 9:
            return C = A[Q >> 2], A[Q >> 2] = C + 4, A[I >> 2] = G[0 | C], void (A[I + 4 >> 2] = 0);
          case 16:
            return C = A[Q >> 2] + 7 & -8, A[Q >> 2] = C + 8, void (H[I >> 3] = H[C >> 3]);
          case 17:
            fA[0 | g](I, Q);
          default:
            return;
          case 1:
          case 4:
          case 14:
            return C = A[Q >> 2], A[Q >> 2] = C + 4, C = A[C >> 2], A[I >> 2] = C, void (A[I + 4 >> 2] = C >> 31);
          case 2:
          case 5:
          case 11:
          case 15:
            return C = A[Q >> 2], A[Q >> 2] = C + 4, A[I >> 2] = A[C >> 2], void (A[I + 4 >> 2] = 0);
          case 3:
          case 10:
          case 12:
          case 13:
            break A;
        }
        C = A[Q >> 2] + 7 & -8, A[Q >> 2] = C + 8, Q = A[C + 4 >> 2], A[I >> 2] = A[C >> 2], A[I + 4 >> 2] = Q;
      }
      function Jg(I, C, Q, g, E, U) {
        var w;
        t = w = t - 80 | 0;
        A: if ((0 | U) >= 16384) {
          if (DI(w + 32 | 0, C, Q, g, E, 0, 0, 0, 2147352576), g = A[w + 40 >> 2], E = A[w + 44 >> 2], C = A[w + 32 >> 2], Q = A[w + 36 >> 2], U >>> 0 < 32767) {
            U = U - 16383 | 0;
            break A;
          }
          DI(w + 16 | 0, C, Q, g, E, 0, 0, 0, 2147352576), U = ((0 | U) >= 49149 ? 49149 : U) - 32766 | 0, g = A[w + 24 >> 2], E = A[w + 28 >> 2], C = A[w + 16 >> 2], Q = A[w + 20 >> 2];
        } else (0 | U) > -16383 || (DI(w - -64 | 0, C, Q, g, E, 0, 0, 0, 7471104), g = A[w + 72 >> 2], E = A[w + 76 >> 2], C = A[w + 64 >> 2], Q = A[w + 68 >> 2], U >>> 0 > 4294934644 ? U = U + 16269 | 0 : (DI(w + 48 | 0, C, Q, g, E, 0, 0, 0, 7471104), U = ((0 | U) <= -48920 ? -48920 : U) + 32538 | 0, g = A[w + 56 >> 2], E = A[w + 60 >> 2], C = A[w + 48 >> 2], Q = A[w + 52 >> 2]));
        DI(w, C, Q, g, E, 0, 0, 0, U + 16383 << 16), C = A[w + 12 >> 2], A[I + 8 >> 2] = A[w + 8 >> 2], A[I + 12 >> 2] = C, C = A[w + 4 >> 2], A[I >> 2] = A[w >> 2], A[I + 4 >> 2] = C, t = w + 80 | 0;
      }
      function eE(I, C) {
        var Q, g, E = 0;
        t = Q = t + -64 | 0, E = A[I >> 2], g = A[E - 4 >> 2], E = A[E - 8 >> 2], A[Q + 32 >> 2] = 0, A[Q + 36 >> 2] = 0, A[Q + 40 >> 2] = 0, A[Q + 44 >> 2] = 0, A[Q + 48 >> 2] = 0, A[Q + 52 >> 2] = 0, M[Q + 55 | 0] = 0, M[Q + 56 | 0] = 0, M[Q + 57 | 0] = 0, M[Q + 58 | 0] = 0, M[Q + 59 | 0] = 0, M[Q + 60 | 0] = 0, M[Q + 61 | 0] = 0, M[Q + 62 | 0] = 0, A[Q + 24 >> 2] = 0, A[Q + 28 >> 2] = 0, A[Q + 20 >> 2] = 0, A[Q + 16 >> 2] = 125084, A[Q + 12 >> 2] = I, A[Q + 8 >> 2] = C, I = I + E | 0, E = 0;
        A: if (SQ(g, C, 0)) A[Q + 56 >> 2] = 1, fA[A[A[g >> 2] + 20 >> 2]](g, Q + 8 | 0, I, I, 1, 0), E = A[Q + 32 >> 2] == 1 ? I : 0;
        else {
          fA[A[A[g >> 2] + 24 >> 2]](g, Q + 8 | 0, I, 1, 0);
          I: switch (A[Q + 44 >> 2]) {
            case 0:
              E = A[Q + 48 >> 2] == 1 && A[Q + 36 >> 2] == 1 && A[Q + 40 >> 2] == 1 ? A[Q + 28 >> 2] : 0;
              break A;
            case 1:
              break I;
            default:
              break A;
          }
          A[Q + 32 >> 2] != 1 && A[Q + 48 >> 2] | A[Q + 36 >> 2] != 1 | A[Q + 40 >> 2] != 1 || (E = A[Q + 24 >> 2]);
        }
        return t = Q - -64 | 0, E;
      }
      function AQ(I, C, Q, g, E) {
        var U, w, D = 0;
        t = U = t - 80 | 0, L[U + 72 >> 1] = 0, A[U + 64 >> 2] = 0, A[U + 68 >> 2] = 0, M[0 | g] = 0, D = HI(C, w = 2 | (D = U - -64 | 0)) + D | 0, M[D + 2 | 0] = 32;
        A: if ((0 | Q) != -1) C >>> 0 >= 33 && !pI(C) ? (M[D + 3 | 0] = (0 | Q) == 32 ? 32 : 31, M[U + 65 | 0] = 95, KA(I, U - -64 | 1, U + 16 | 0) || (M[U + 65 | 0] = 32, KA(I, w, U + 16 | 0) || iC(I, w, U + 16 | 0, 40, 0, 268435456, 0)), G[U + 16 | 0] || OE(I, C, U + 16 | 0), C = YA(g, U + 16 | 0), !(Q = G[0 | C]) | (0 | Q) == 21 || (A[U + 56 >> 2] = 0, A[U + 60 >> 2] = 0, kC(I, C, U + 56 | 0, -1, 1 & E))) : (A[U >> 2] = C, iA(C = U - -64 | 1, 85485, U), KA(I, C, g));
        else {
          if (KA(I, w, g) || (M[U + 65 | 0] = 95, KA(I, U - -64 | 1, U + 16 | 0) | A[I + 212 >> 2] == 25966)) break A;
          FE(85055), KA(A[47194], w, U + 16 | 0) && (M[0 | g] = 21, M[g + 1 | 0] = 0), GC(A[A[32972] + 60 >> 2]);
        }
        t = U + 80 | 0;
      }
      function pA(I, C, Q) {
        var g = 0, E = 0, U = 0, w = 0;
        if (Q && (M[0 | I] = C, M[(g = I + Q | 0) - 1 | 0] = C, !(Q >>> 0 < 3 || (M[I + 2 | 0] = C, M[I + 1 | 0] = C, M[g - 3 | 0] = C, M[g - 2 | 0] = C, Q >>> 0 < 7 || (M[I + 3 | 0] = C, M[g - 4 | 0] = C, Q >>> 0 < 9 || (E = (g = 0 - I & 3) + I | 0, C = T(255 & C, 16843009), A[E >> 2] = C, A[(Q = (g = Q - g & -4) + E | 0) - 4 >> 2] = C, g >>> 0 < 9 || (A[E + 8 >> 2] = C, A[E + 4 >> 2] = C, A[Q - 8 >> 2] = C, A[Q - 12 >> 2] = C, g >>> 0 < 25 || (A[E + 24 >> 2] = C, A[E + 20 >> 2] = C, A[E + 16 >> 2] = C, A[E + 12 >> 2] = C, A[Q - 16 >> 2] = C, A[Q - 20 >> 2] = C, A[Q - 24 >> 2] = C, A[Q - 28 >> 2] = C, (Q = g - (w = 4 & E | 24) | 0) >>> 0 < 32)))))))) for (g = tA(C, 0, 1, 1), U = QA, C = E + w | 0; A[C + 24 >> 2] = g, A[C + 28 >> 2] = U, A[C + 16 >> 2] = g, A[C + 20 >> 2] = U, A[C + 8 >> 2] = g, A[C + 12 >> 2] = U, A[C >> 2] = g, A[C + 4 >> 2] = U, C = C + 32 | 0, (Q = Q - 32 | 0) >>> 0 > 31; ) ;
        return I;
      }
      function IB() {
        var I, C = 0, Q = 0, g = 0, E = 0, U = 0;
        if (t = I = t - 208 | 0, (0 | (g = A[50303])) > 0) for (; (E = A[(Q = 201216 + (C << 2) | 0) >> 2]) && (_A(E), A[Q >> 2] = 0), (0 | g) != (0 | (C = C + 1 | 0)); ) ;
        if (A[50303] = 0, A[I + 16 >> 2] = 137584, A[I + 20 >> 2] = 47, iA(C = I + 32 | 0, 87827, I + 16 | 0), eg(C, SA(C) + 1 | 0, 0), A[I + 4 >> 2] = 47, A[I >> 2] = 137584, iA(C, 87933, I), eg(C, SA(C) + 1 | 0, 1), C = A[50303], A[(Q = C << 2) + 201216 >> 2] = 0, Q = gC(g = A[50741], Q + 4 | 0)) {
          if (A[50741] = Q, tE(201216, C, 7), g = A[50741], Q = 0, C = A[50304]) for (E = 0; U = A[C + 4 >> 2], G[0 | U] && aI(U + 1 | 0, 86589) && IC(A[C + 8 >> 2], 88032, 3) && (A[(Q << 2) + g >> 2] = C, Q = Q + 1 | 0), C = A[201216 + ((E = E + 1 | 0) << 2) >> 2]; ) ;
          A[(Q << 2) + g >> 2] = 0;
        }
        return t = I + 208 | 0, g;
      }
      function CB(I, C, Q) {
        var g = 0, E = 0, U = 0, w = 0;
        if (U = C - 1 | 0, (0 | C) >= 2) {
          C = I;
          A: {
            for (; ; ) {
              I: {
                Q: {
                  if ((0 | (g = A[Q + 4 >> 2])) != (0 | (E = A[Q + 8 >> 2]))) {
                    if ((w = eQ(g, 10, E - g | 0)) ? E = 1 + (w - (g = A[Q + 4 >> 2]) | 0) | 0 : (g = A[Q + 4 >> 2], E = A[Q + 8 >> 2] - g | 0), bA(C, g, g = E >>> 0 < U >>> 0 ? E : U), E = g + A[Q + 4 >> 2] | 0, A[Q + 4 >> 2] = E, C = C + g | 0, w || !(U = U - g | 0)) break I;
                    if ((0 | E) != A[Q + 8 >> 2]) {
                      A[Q + 4 >> 2] = E + 1, g = G[0 | E];
                      break Q;
                    }
                  }
                  if (!((0 | (g = UI(Q))) >= 0)) {
                    if (g = 0, (0 | I) == (0 | C)) break A;
                    if (16 & G[0 | Q]) break I;
                    break A;
                  }
                }
                if (M[0 | C] = g, C = C + 1 | 0, (255 & g) != 10 && (U = U - 1 | 0)) continue;
              }
              break;
            }
            I ? (M[0 | C] = 0, g = I) : g = 0;
          }
        } else if (C = A[Q + 72 >> 2], A[Q + 72 >> 2] = C - 1 | C, !U) return M[0 | I] = 0, I;
        return g;
      }
      function mB(I) {
        var C = 0, Q = 0, g = 0, E = 0, U = 0, w = 0, D = 0, J = 0;
        if (C = T(I, 44), (0 | (I = A[C + 137896 >> 2])) > 0 && mB(I - 1 | 0), I = A[36115], !((0 | (C = A[(Q = C + 137856 | 0) + 36 >> 2])) <= 0)) {
          if (E = A[Q + 32 >> 2], D = 1 & C, (0 | C) != 1) for (J = -2 & C, Q = 0; C = G[(U = (g = Q << 4) + E | 0) + 10 | 0], A[144464 + (C << 2) >> 2] = U, (0 | I) >= (0 | C) ? C = I : pA(144464 + ((I = I + 1 | 0) << 2) | 0, 0, C - I << 2), I = G[(g = (16 | g) + E | 0) + 10 | 0], A[144464 + (I << 2) >> 2] = g, (0 | I) <= (0 | C) ? I = C : pA(144464 + ((C = C + 1 | 0) << 2) | 0, 0, I - C << 2), Q = Q + 2 | 0, (0 | J) != (0 | (w = w + 2 | 0)); ) ;
          else Q = 0;
          D && (C = G[(Q = (Q << 4) + E | 0) + 10 | 0], A[144464 + (C << 2) >> 2] = Q, (0 | I) >= (0 | C) || (pA(144464 + ((I = I + 1 | 0) << 2) | 0, 0, C - I << 2), I = C));
        }
        A[36115] = I;
      }
      function ig(I, C, Q, g, E) {
        var U, w = 0, D = 0, J = 0;
        t = U = t - 16 | 0;
        A: if (1 & M[I + 106 | 0] && (w = G[0 | Q], !(!(1 & M[g + 2 | 0]) & (0 | w) != 46 || 256 & (J = A[g + 12 >> 2]) | !(!(2 & J) || E) || (mA(U + 12 | 0, (0 | w) != 46 ? Q : Q + 2 | 0), !(w = G[0 | Q]) | !G[Q + 1 | 0])))) {
          if (!(!(J = A[U + 12 >> 2]) | 2 & G[g + 2 | 0])) {
            if (!MI(J)) break A;
            w = G[0 | Q];
          }
          (0 | w) == 46 && (M[0 | Q] = 32), D = 2, A[I + 212 >> 2] != 26741 | E || (Q = MI(A[U + 12 >> 2]) ? Gg(I, Q + 2 | 0, 0, 0) : 0, 128 & G[I + 8233 | 0] && (!(!(E = A[U + 12 >> 2]) | 2 & G[g + 2 | 0]) & E - 48 >>> 0 >= 10 || (D = 0)), D = 32768 & Q ? 0 : D, 131072 & Q && (D = 163840 & A[I + 8232 >> 2] ? 34 : G[C - 2 | 0] != 45 ? D : 0));
        }
        return t = U + 16 | 0, D;
      }
      function eB(I, C, Q, g, E) {
        var U, w = 0, D = 0;
        if (t = U = t - 208 | 0, A[U + 204 >> 2] = Q, pA(Q = U + 160 | 0, 0, 40), A[U + 200 >> 2] = A[U + 204 >> 2], (0 | PE(0, C, U + 200 | 0, U + 80 | 0, Q, g, E)) < 0) E = -1;
        else {
          A[I + 76 >> 2] >= 0, w = A[I >> 2], A[I + 72 >> 2] <= 0 && (A[I >> 2] = -33 & w);
          A: {
            I: {
              if (A[I + 48 >> 2]) {
                if (A[I + 16 >> 2]) break I;
              } else A[I + 48 >> 2] = 80, A[I + 28 >> 2] = 0, A[I + 16 >> 2] = 0, A[I + 20 >> 2] = 0, D = A[I + 44 >> 2], A[I + 44 >> 2] = U;
              if (Q = -1, Kg(I)) break A;
            }
            Q = PE(I, C, U + 200 | 0, U + 80 | 0, U + 160 | 0, g, E);
          }
          D && (fA[A[I + 36 >> 2]](I, 0, 0), A[I + 48 >> 2] = 0, A[I + 44 >> 2] = D, A[I + 28 >> 2] = 0, C = A[I + 20 >> 2], A[I + 16 >> 2] = 0, A[I + 20 >> 2] = 0, Q = C ? Q : -1), C = I, I = A[I >> 2], A[C >> 2] = I | 32 & w, E = 32 & I ? -1 : Q;
        }
        return t = U + 208 | 0, E;
      }
      function vE(I, C, Q, g) {
        var E, U = 0, w = 0, D = 0, J = 0, o = 0, y = 0, S = 0;
        if (t = E = t - 208 | 0, w = G[0 | C]) for (; M[U + E | 0] = w, J = ((255 & w) == 6 & (0 | D) != 21) + J | 0, D = w << 24 >> 24, w = G[(U = U + 1 | 0) + C | 0]; ) ;
        if (M[U + E | 0] = 0, U = G[0 | E]) for (y = J - 2 | 0, D = 0, S = (0 | g) < 2, w = 0; ; ) {
          A: {
            I: if ((255 & U) != 6 | S | (0 | w) == 21) {
              if ((0 | (g = 255 & U)) == 255) {
                if (!o | (0 | Q) < 2) break A;
                g = Q >>> 0 > 2 ? 11 : (0 | D) % 3 | 0 ? 23 : 11;
              }
              w = g, g = D;
            } else {
              if (U = D + 1 | 0, G[I + 169 | 0]) {
                w = (0 | U) > 1 ? 5 : 6, g = U;
                break I;
              }
              if (w = 6, g = J, (0 | U) == (0 | J)) break I;
              w = (0 | U) % 3 | 0 || (0 | D) == (0 | y) ? 5 : 6, g = U;
            }
            D = g, M[0 | C] = w, C = C + 1 | 0;
          }
          if (!(U = G[(o = o + 1 | 0) + E | 0])) break;
        }
        (0 | Q) >= 2 && (M[0 | C] = 11, C = C + 1 | 0), M[0 | C] = 0, t = E + 208 | 0;
      }
      function zC(I, C) {
        var Q = 0;
        Q = 0, I && (Q = A[50754], Q = (I = (I = (0 | T(A[145712 + (C ? 12 : ((0 | I) > 199) << 2) >> 2], I)) / 256 | 0) >>> 0 > (C = A[36430]) >>> 0 ? I : C) >>> 0 <= 89999 ? (T(I, Q) >>> 0) / 1e3 | 0 : (T(I, (0 | Q) / 25 | 0) >>> 0) / 40 | 0), (0 | (I = A[36440])) <= 0 || (0 | (C = A[36424])) < 0 || (A[(C = 216192 + (C << 4) | 0) + 4 >> 2] || (A[C + 4 >> 2] = I), A[36440] = 0), A[36426] = 0, A[36439] = -1, A[36455] = A[50758], aQ(), A[36427] = -1, I = 216192 + (A[50758] << 4) | 0, A[I >> 2] = 5, A[I + 4 >> 2] = Q, I = A[50758] + 1 | 0, A[50758] = (0 | I) <= 169 ? I : 0, A[36426] = 0, A[36438] && (A[36438] = 0, I = 216192 + (A[50758] << 4) | 0, A[I >> 2] = 14, A[I + 4 >> 2] = 0, I = A[50758] + 1 | 0, A[50758] = (0 | I) <= 169 ? I : 0);
      }
      function XC(I, C, Q, g, E, U, w, D) {
        var J, o = 0, y = 0, S = 0;
        o = 1, J = y = 2147483647 & g;
        A: if (!((S = (0 | y) == 2147418112) & !Q ? I | C : S & !!(0 | Q) | y >>> 0 > 2147418112) && !((S = (0 | (y = 2147483647 & D)) == 2147418112) & !w ? E | U : S & !!(0 | w) | y >>> 0 > 2147418112)) {
          if (!(I | E | Q | w | C | U | y | J)) return 0;
          if ((0 | (o = g & D)) > 0 | (0 | o) >= 0) {
            if (o = -1, (0 | Q) == (0 | w) & (0 | g) == (0 | D) ? (0 | C) == (0 | U) & I >>> 0 < E >>> 0 | C >>> 0 < U >>> 0 : Q >>> 0 < w >>> 0 & (0 | g) <= (0 | D) | (0 | g) < (0 | D)) break A;
            return !!(I ^ E | Q ^ w | C ^ U | g ^ D);
          }
          o = -1, ((0 | Q) == (0 | w) & (0 | g) == (0 | D) ? (0 | C) == (0 | U) & I >>> 0 > E >>> 0 | C >>> 0 > U >>> 0 : Q >>> 0 > w >>> 0 & (0 | g) >= (0 | D) | (0 | g) > (0 | D)) || (o = !!(I ^ E | Q ^ w | C ^ U | g ^ D));
        }
        return o;
      }
      function FC(I, C) {
        var Q = 0, g = 0, E = 0, U = 0;
        for (Q = G[85836] | G[85837] << 8, M[0 | C] = Q, M[C + 1 | 0] = Q >>> 8, M[C + 2 | 0] = G[85838]; ; ) if (E = G[0 | I], I = Q = I + 1 | 0, (0 | E) != 255) {
          if (!E) break;
          if (!(g = A[144464 + (E << 2) >> 2])) continue;
          if (G[g + 11 | 0] == 1 && (U = G[g + 14 | 0], !(a[g + 8 >> 1] | U >>> 0 > 4))) {
            if (U >>> 0 < 2) continue;
            M[0 | C] = G[U + 93943 | 0], C = C + 1 | 0;
            continue;
          }
          if (255 & (I = A[g >> 2])) for (; M[0 | C] = I, C = C + 1 | 0, g = 65280 & I, I = I >>> 8 | 0, g; ) ;
          if (I = Q, (0 | E) != 21 || (32 | (Q = M[0 | I])) - 97 >>> 0 >= 26) continue;
          for (; M[0 | C] = Q, C = C + 1 | 0, (32 | (Q = M[0 | (I = I + 1 | 0)])) - 97 >>> 0 < 26; ) ;
        }
        M[0 | C] = 0;
      }
      function YC(I, C) {
        var Q, g, E = 0, U = 0, w = 0;
        t = Q = t - 112 | 0, I || (A[50303] || IB(), I = 201216), sI(E = Q + 16 | 0, C, 40), A[Q >> 2] = 47, A[Q + 4 >> 2] = E, iA(C = Q - -64 | 0, 87599, Q), g = SA(C), w = -1;
        A: {
          I: {
            Q: {
              if (U = A[I >> 2]) {
                C = 0, E = -1;
                B: {
                  for (; ; ) {
                    if (AE(Q + 16 | 0, A[U >> 2])) {
                      if (AE(Q + 16 | 0, U = A[U + 8 >> 2]) ? w = AE(Q - -64 | 0, U + (SA(U) - g | 0) | 0) ? w : C : E = C, U = A[((C = C + 1 | 0) << 2) + I >> 2]) continue;
                      break B;
                    }
                    break;
                  }
                  if ((0 | C) >= 0) break I;
                  C = (0 | E) < 0 ? w : E;
                  break Q;
                }
                if ((0 | (C = E)) >= 0) break Q;
              }
              C = w;
            }
            if (E = 0, (0 | C) < 0) break A;
          }
          E = A[(C << 2) + I >> 2];
        }
        return t = Q + 112 | 0, E;
      }
      function bC(I, C) {
        var Q, g, E = 0, U = 0, w = 0, D = 0, J = 0;
        t = Q = t - 16 | 0, W(+C), g = 0 | d(1), U = 0 | d(0), (0 | (w = (E = 2147483647 & g) + -1048576 | 0)) == 2145386495 | w >>> 0 < 2145386495 ? (D = U << 28, w = E >>> 4 | 0, E = (15 & E) << 28 | U >>> 4, U = w + 1006632960 | 0) : (0 | E) == 2146435072 | E >>> 0 > 2146435072 ? (D = U << 28, E = (15 & g) << 28 | U >>> 4, U = g >>> 4 | 2147418112) : E | U ? (fI(Q, U, w = E, 0, 0, (E = E ? aA(E) : aA(U) + 32 | 0) + 49 | 0), J = A[Q >> 2], D = A[Q + 4 >> 2], w = 15372 - E << 16, E = A[Q + 8 >> 2], U = w | 65536 ^ A[Q + 12 >> 2]) : (E = 0, U = 0), A[I >> 2] = J, A[I + 4 >> 2] = D, A[I + 8 >> 2] = E, A[I + 12 >> 2] = -2147483648 & g | U, t = Q + 16 | 0;
      }
      function mQ(I, C, Q) {
        var g = 0, E = 0;
        A: {
          I: {
            Q: {
              if (!(3 & ((E = I) ^ C))) {
                g = !!(0 | Q);
                B: if (!(!(3 & C) | !Q)) for (; ; ) {
                  if (g = G[0 | C], M[0 | E] = g, !g) break A;
                  if (E = E + 1 | 0, g = !!(0 | (Q = Q - 1 | 0)), !(3 & (C = C + 1 | 0))) break B;
                  if (!Q) break;
                }
                if (!g) break I;
                if (!G[0 | C]) break A;
                if (!(Q >>> 0 < 4)) for (; ; ) {
                  if (~(g = A[C >> 2]) & g - 16843009 & -2139062144) break Q;
                  if (A[E >> 2] = g, E = E + 4 | 0, C = C + 4 | 0, !((Q = Q - 4 | 0) >>> 0 > 3)) break;
                }
              }
              if (!Q) break I;
            }
            for (; ; ) {
              if (g = G[0 | C], M[0 | E] = g, !g) break A;
              if (E = E + 1 | 0, C = C + 1 | 0, !(Q = Q - 1 | 0)) break;
            }
          }
          Q = 0;
        }
        return pA(E, 0, Q), I;
      }
      function yg(I, C, Q, g, E, U) {
        var w, D = 0, J = 0, o = 0;
        t = w = t - 240 | 0, D = A[Q >> 2], A[w + 232 >> 2] = D, Q = A[Q + 4 >> 2], A[w >> 2] = I, A[w + 236 >> 2] = Q, o = 1;
        A: {
          I: {
            Q: {
              if (Q | (0 | D) != 1) {
                for (D = I; ; ) {
                  if ((0 | kg(Q = D - A[(J = (g << 2) + U | 0) >> 2] | 0, I, C)) <= 0) {
                    Q = D;
                    break Q;
                  }
                  B: {
                    if (!((0 | g) < 2 | E) && (E = A[J - 8 >> 2], (0 | kg(J = D - 4 | 0, Q, C)) >= 0 || (0 | kg(J - E | 0, Q, C)) >= 0))
                      break B;
                    if (A[(o << 2) + w >> 2] = Q, iB(D = w + 232 | 0, E = X(D)), o = o + 1 | 0, g = g + E | 0, E = 0, D = Q, A[w + 236 >> 2] | A[w + 232 >> 2] != 1) continue;
                    break I;
                  }
                  break;
                }
                Q = D;
                break I;
              }
              Q = I;
            }
            if (E) break A;
          }
          RU(w, o), Ng(Q, C, g, U);
        }
        t = w + 240 | 0;
      }
      function dQ(I, C) {
        var Q = 0;
        A[4 + ((Q = I << 2) + 134912 | 0) >> 2] = C, A[Q + 136192 >> 2] = C, Q = 28;
        A: {
          I: {
            Q: switch (I - 1 | 0) {
              case 0:
                A[50792] = C, A[50786] = C, zQ(3);
                break I;
              case 1:
                A[50787] = C, A[33037] = (0 | T(G[A[50797] + 105596 | 0], (0 | T(A[50787], 55)) / 100 | 0)) / 16;
                break I;
              case 2:
                I = (0 | C) >= 99 ? 99 : C, A[50785] = (0 | I) > 0 ? I : 0;
                break I;
              case 3:
                A[50788] = (0 | C) >= 99 ? 99 : C;
                break I;
              case 12:
                A[47268] = C;
                break I;
              case 6:
                A[47205] = C;
                break I;
              case 9:
                break I;
              case 8:
                break Q;
              default:
                break A;
            }
            (I = 255 & C) && (A[A[47192] + 152 >> 2] = I), A[47196] = C;
          }
          Q = 0;
        }
        return Q;
      }
      function PI(I, C) {
        var Q = 0, g = 0, E = 0;
        A: if (A[I >> 2]) for (; ; ) {
          if (pI(A[I - 4 >> 2])) {
            if (g = 0, (0 | (Q = M[0 | C])) == A[I >> 2]) for (; (0 | (Q = M[(g = g + 1 | 0) + C | 0])) == A[(I = I + 4 | 0) >> 2]; ) ;
            if (!Q) {
              for (; C = I, I = I + 4 | 0, pI(A[C >> 2]); ) ;
              for (E = C + ((A[C >> 2] == 61) << 2) | 0; E = (I = E) + 4 | 0, pI(A[I >> 2]); ) ;
              I: switch ((C = A[I >> 2]) - 34 | 0) {
                case 0:
                case 5:
                  break A;
                default:
                  break I;
              }
              return pI(C) || A[I >> 2] == 47 ? 102808 : I;
            }
          }
          if (!A[(I = I + 4 | 0) >> 2]) break;
        }
        return E;
      }
      function BC(I, C, Q, g) {
        var E, U, w = 0, D = 0, J = 0;
        return !G[I + 25 | 0] | H[I + 8 >> 3] != Q | H[I + 16 >> 3] != g ? (H[I + 16 >> 3] = g, H[I + 8 >> 3] = Q, g = (w = LC(-3.141592653589793 / (D = +A[I >> 2]) * g)) * -w, H[I + 48 >> 3] = g, w *= yC(-6.283185307179586 / D * Q), w += w, H[I + 40 >> 3] = w, D = 1 - w - g, H[I + 32 >> 3] = D, !(J = G[I + 24 | 0]) | Q == 0 || (D = 1 / D, H[I + 32 >> 3] = D, g *= Q = -D, H[I + 48 >> 3] = g, w *= Q, H[I + 40 >> 3] = w, J = 1)) : (J = G[I + 24 | 0], g = H[I + 48 >> 3], w = H[I + 40 >> 3], D = H[I + 32 >> 3]), M[I + 25 | 0] = 1, Q = H[I + 64 >> 3], E = H[I + 56 >> 3], H[I + 64 >> 3] = E, U = C, C = g * Q + (D * C + w * E), H[I + 56 >> 3] = J ? U : C, C;
      }
      function uE(I, C, Q, g, E) {
        var U = 0, w = 0, D = 0, J = 0, o = 0;
        if ((D = A[34388]) && !((0 | (w = A[34436])) >= (A[34393] - 2 | 0))) {
          if (A[34436] = w + 1, U = T(w, 36) + D | 0, A[U >> 2] = I, A[U + 4 >> 2] = A[34437], o = A[34438], A[U + 12 >> 2] = C >>> 24, A[U + 8 >> 2] = 16777215 & C, A[U + 24 >> 2] = o, C = A[50754], E = A[34439] + ((E - A[34392] | 0) / 2 | 0) | 0, A[U + 20 >> 2] = E, C = GA(J = 1e3 * +(0 | E) / +(0 | C)) < 2147483648 ? ~~J : -2147483648, A[U + 16 >> 2] = C, I - 3 >>> 0 <= 1) return void (A[28 + (T(w, 36) + D | 0) >> 2] = A[33282] + Q);
          C = 28 + (T(w, 36) + D | 0) | 0, A[C >> 2] = Q, (0 | I) == 7 && (A[C + 4 >> 2] = g);
        }
      }
      function oQ(I, C, Q, g, E, U) {
        var w = 0, D = 0, J = 0, o = 0;
        64 & U ? (C = 31 & (Q = U + -64 | 0), (63 & Q) >>> 0 >= 32 ? (Q = 0, C = E >>> C | 0) : (Q = E >>> C | 0, C = ((1 << C) - 1 & E) << 32 - C | g >>> C), g = 0, E = 0) : U && (J = g, w = 31 & (D = 64 - U | 0), (63 & D) >>> 0 >= 32 ? (D = J << w, o = 0) : (D = (1 << w) - 1 & J >>> 32 - w | E << w, o = J << w), J = C, C = 31 & U, (63 & U) >>> 0 >= 32 ? (w = 0, C = Q >>> C | 0) : (w = Q >>> C | 0, C = ((1 << C) - 1 & Q) << 32 - C | J >>> C), C |= o, Q = w | D, w = g, g = 31 & U, (63 & U) >>> 0 >= 32 ? (D = 0, g = E >>> g | 0) : (D = E >>> g | 0, g = ((1 << g) - 1 & E) << 32 - g | w >>> g), E = D), A[I >> 2] = C, A[I + 4 >> 2] = Q, A[I + 8 >> 2] = g, A[I + 12 >> 2] = E;
      }
      function QB(I) {
        var C = 0, Q = 0;
        if (!I) {
          if (A[33174] && (C = QB(A[33174])), A[33136] && (C = QB(A[33136]) | C), I = A[56816]) for (; A[I + 20 >> 2] != A[I + 28 >> 2] && (C = QB(I) | C), I = A[I + 56 >> 2]; ) ;
          return C;
        }
        return A[I + 76 >> 2] >= 0, A[I + 20 >> 2] == A[I + 28 >> 2] || (fA[A[I + 36 >> 2]](I, 0, 0), A[I + 20 >> 2]) ? ((0 | (C = A[I + 8 >> 2])) != (0 | (Q = A[I + 4 >> 2])) && (C = Q - C | 0, fA[A[I + 40 >> 2]](I, C, C >> 31, 1)), C = 0, A[I + 28 >> 2] = 0, A[I + 16 >> 2] = 0, A[I + 20 >> 2] = 0, A[I + 4 >> 2] = 0, A[I + 8 >> 2] = 0) : C = -1, C;
      }
      function qQ(I, C) {
        var Q = 0, g = 0, E = 0, U = 0, w = 0;
        if ((192 & (Q = G[0 | C])) == 128) for (; (192 & (Q = G[0 | (C = C - 1 | 0)])) == 128; ) ;
        A: if (128 & (Q = Q << 24 >> 24)) {
          if (g = 1, (0 | (E = 224 & Q)) != 192) if ((240 & Q) != 224) {
            if (g = 3, (248 & Q) != 240) {
              Q &= 255, g = 0;
              break A;
            }
          } else g = 2, w = 1;
          Q = G[g + 93846 | 0] & Q, (U = G[C + 1 | 0]) ? (Q = 63 & U | Q << 6, (0 | E) != 192 && ((E = G[C + 2 | 0]) ? (Q = 63 & E | Q << 6, w || ((C = G[C + 3 | 0]) ? Q = 63 & C | Q << 6 : g = 2)) : g = 1)) : g = 0;
        }
        return A[I >> 2] = Q, g + 1 | 0;
      }
      function gB(I, C, Q, g) {
        var E, U = 0, w = 0;
        return t = E = t - 224 | 0, I ? (A[E >> 2] = 137584, A[E + 4 >> 2] = 47, A[E + 8 >> 2] = C, iA(C = E + 16 | 0, 85430, E), (0 | (U = rC(C))) < 0 ? C = IQ(g, 0 - U | 0, E + 16 | 0) : (C = yQ(E + 16 | 0, 85659)) ? ((w = A[I >> 2]) && _A(w), U ? (w = KI(U), A[I >> 2] = w, w ? (0 | RB(w, U, C)) == (0 | U) ? (mI(C), C = 0, Q && (A[Q >> 2] = U)) : (Q = A[56798], mI(C), _A(A[I >> 2]), A[I >> 2] = 0, C = IQ(g, Q, E + 16 | 0)) : (mI(C), C = 48)) : (C = 0, A[I >> 2] = 0)) : C = IQ(g, A[56798], E + 16 | 0)) : C = 28, t = E + 224 | 0, C;
      }
      function mA(I, C) {
        var Q = 0, g = 0, E = 0, U = 0, w = 0;
        if ((192 & (Q = G[0 | C])) == 128) for (; (192 & (Q = G[0 | (C = C + 1 | 0)])) == 128; ) ;
        A: if (128 & (Q = Q << 24 >> 24)) {
          if (g = 1, (0 | (E = 224 & Q)) != 192) if ((240 & Q) != 224) {
            if (g = 3, (248 & Q) != 240) {
              Q &= 255, g = 0;
              break A;
            }
          } else g = 2, w = 1;
          Q = G[g + 93846 | 0] & Q, (U = G[C + 1 | 0]) ? (Q = 63 & U | Q << 6, (0 | E) != 192 && ((E = G[C + 2 | 0]) ? (Q = 63 & E | Q << 6, w || ((C = G[C + 3 | 0]) ? Q = 63 & C | Q << 6 : g = 2)) : g = 1)) : g = 0;
        }
        return A[I >> 2] = Q, g + 1 | 0;
      }
      function fI(I, C, Q, g, E, U) {
        var w = 0, D = 0, J = 0;
        64 & U ? (g = C, C = 31 & (E = U + -64 | 0), (63 & E) >>> 0 >= 32 ? (E = g << C, g = 0) : (E = (1 << C) - 1 & g >>> 32 - C | Q << C, g <<= C), C = 0, Q = 0) : U && (w = g, g = 31 & U, (63 & U) >>> 0 >= 32 ? (D = w << g, J = 0) : (D = (1 << g) - 1 & w >>> 32 - g | E << g, J = w << g), w = C, g = 31 & (E = 64 - U | 0), (63 & E) >>> 0 >= 32 ? (E = 0, C = Q >>> g | 0) : (E = Q >>> g | 0, C = ((1 << g) - 1 & Q) << 32 - g | w >>> g), g = J | C, E |= D, C = 31 & U, (63 & U) >>> 0 >= 32 ? (D = w << C, C = 0) : (D = (1 << C) - 1 & w >>> 32 - C | Q << C, C = w << C), Q = D), A[I >> 2] = C, A[I + 4 >> 2] = Q, A[I + 8 >> 2] = g, A[I + 12 >> 2] = E;
      }
      function NQ(I) {
        var C = 0;
        return I >>> 0 <= 55295 ? C = G[A[125552 + (I >>> 6 & 67108860) >> 2] + (255 & I) | 0] : (C = 4, I >>> 0 < 57344 || (I >>> 0 < 63488 ? C = 3 : I >>> 0 <= 195327 ? C = G[A[126416 + (I - 63488 >>> 6 & 67108860) >> 2] + (255 & I) | 0] : (C = 2, I >>> 0 < 917504 || (I >>> 0 <= 918015 ? C = G[A[128476 + (I - 917504 >>> 6 & 67108860) >> 2] + (255 & I) | 0] : I >>> 0 < 983040 || (I >>> 0 < 1048574 ? C = 3 : I >>> 0 < 1048576 || (C = 3, I >>> 0 < 1114110 || (C = I >>> 0 < 1114112 ? 2 : 5))))))), 255 & C;
      }
      function _E(I, C) {
        var Q = 0, g = 0, E = 0, U = 0, w = 0, D = 0, J = 0, o = 0, y = 0;
        if (!((0 | (Q = A[33709])) <= 0)) {
          if (E = (0 | I) > 31 ? I - 32 | 0 : I, I = 0, Q >>> 0 >= 4) for (y = -4 & Q; D = 2 | I, J = 1 | I, g = A[134912 + ((w = 3 | I) << 6) >> 2] == (0 | E) ? w : A[134912 + (D << 6) >> 2] == (0 | E) ? D : A[134912 + (J << 6) >> 2] == (0 | E) ? J : A[134912 + (I << 6) >> 2] == (0 | E) ? I : g, I = I + 4 | 0, (0 | y) != (0 | (U = U + 4 | 0)); ) ;
          if (U = 3 & Q) for (; g = A[134912 + (I << 6) >> 2] == (0 | E) ? I : g, I = I + 1 | 0, (0 | U) != (0 | (o = o + 1 | 0)); ) ;
          (0 | g) <= 0 || (A[33709] = g, Q = g);
        }
        iQ(C, Q);
      }
      function vB(I) {
        var C, Q = 0, g = 0, E = 0;
        for (t = C = t - 96 | 0, sI(C, I, 60), EB(C, 1); E = xC(M[0 | (g = C + Q | 0)]), M[0 | g] = E, Q = Q + 1 | 0, 255 & E; ) ;
        A[C + 92 >> 2] = 0, A[C + 84 >> 2] = 0, A[C + 88 >> 2] = 0, A[C + 76 >> 2] = 0, A[C + 80 >> 2] = 0, A[C + 72 >> 2] = I;
        A: {
          I: {
            Q: {
              if ($C(C, 1)) {
                if (G[202976]) break Q;
                break I;
              }
              if (A[50303] || IB(), Q = 268437247, !(I = YC(201216, C)) || !$C(A[I + 8 >> 2], 0)) break A;
              if (!G[202976]) break I;
            }
            $C(202976, 2);
          }
          dA(A[32972]), A[C + 76 >> 2] = A[32972] + 40, $B(C + 72 | 0, 202976), Q = 0;
        }
        return t = C + 96 | 0, Q;
      }
      function $E(I, C) {
        if (!I) return 0;
        A: {
          I: {
            if (I) {
              if (C >>> 0 <= 127) break I;
              if (A[A[56841] >> 2]) {
                if (C >>> 0 <= 2047) {
                  M[I + 1 | 0] = 63 & C | 128, M[0 | I] = C >>> 6 | 192, I = 2;
                  break A;
                }
                if (!((-8192 & C) != 57344 & C >>> 0 >= 55296)) {
                  M[I + 2 | 0] = 63 & C | 128, M[0 | I] = C >>> 12 | 224, M[I + 1 | 0] = C >>> 6 & 63 | 128, I = 3;
                  break A;
                }
                if (C - 65536 >>> 0 <= 1048575) {
                  M[I + 3 | 0] = 63 & C | 128, M[0 | I] = C >>> 18 | 240, M[I + 2 | 0] = C >>> 6 & 63 | 128, M[I + 1 | 0] = C >>> 12 & 63 | 128, I = 4;
                  break A;
                }
              } else if ((-128 & C) == 57216) break I;
              A[56798] = 25, I = -1;
            } else I = 1;
            break A;
          }
          M[0 | I] = C, I = 1;
        }
        return I;
      }
      function AU(I) {
        var C = 0, Q = 0, g = 0, E = 0;
        if (A[I + 20 >> 2] = 0, (g = (Q = A[I + 8 >> 2]) - (C = A[I + 4 >> 2]) | 0) >>> 0 >= 9) for (; _A(A[C >> 2]), C = A[I + 4 >> 2] + 4 | 0, A[I + 4 >> 2] = C, (g = (Q = A[I + 8 >> 2]) - C | 0) >>> 0 > 8; ) ;
        E = 512;
        A: switch ((g >>> 2 | 0) - 1 | 0) {
          case 1:
            E = 1024;
          case 0:
            A[I + 16 >> 2] = E;
            break;
          default:
            break A;
        }
        if ((0 | C) != (0 | Q)) {
          for (; _A(A[C >> 2]), (0 | Q) != (0 | (C = C + 4 | 0)); ) ;
          (0 | (C = A[I + 8 >> 2])) != (0 | (Q = A[I + 4 >> 2])) && (A[I + 8 >> 2] = C + (3 + (Q - C | 0) & -4));
        }
        (I = A[I >> 2]) && _A(I);
      }
      function eQ(I, C, Q) {
        var g = 0, E = 0;
        g = !!(0 | Q);
        A: {
          I: {
            Q: if (!(!(3 & I) | !Q)) for (E = 255 & C; ; ) {
              if ((0 | E) == G[0 | I]) break I;
              if (g = !!(0 | (Q = Q - 1 | 0)), !(3 & (I = I + 1 | 0))) break Q;
              if (!Q) break;
            }
            if (!g) break A;
            if (!(G[0 | I] == (255 & C) | Q >>> 0 < 4)) for (g = T(255 & C, 16843009); ; ) {
              if (~(E = g ^ A[I >> 2]) & E - 16843009 & -2139062144) break I;
              if (I = I + 4 | 0, !((Q = Q - 4 | 0) >>> 0 > 3)) break;
            }
            if (!Q) break A;
          }
          for (C &= 255; ; ) {
            if ((0 | C) == G[0 | I]) return I;
            if (I = I + 1 | 0, !(Q = Q - 1 | 0)) break;
          }
        }
        return 0;
      }
      function BB(I, C) {
        var Q = 0, g = 0;
        A: {
          if (g = 255 & C) {
            if (3 & I) for (; ; ) {
              if (!(Q = G[0 | I]) | (0 | Q) == (255 & C)) break A;
              if (!(3 & (I = I + 1 | 0))) break;
            }
            I: if (!(~(Q = A[I >> 2]) & Q - 16843009 & -2139062144)) for (g = T(g, 16843009); ; ) {
              if (~(Q ^= g) & Q - 16843009 & -2139062144) break I;
              if (Q = A[I + 4 >> 2], I = I + 4 | 0, Q - 16843009 & ~Q & -2139062144) break;
            }
            for (; (g = G[0 | (Q = I)]) && (I = Q + 1 | 0, (0 | g) != (255 & C)); ) ;
            return Q;
          }
          return SA(I) + I | 0;
        }
        return I;
      }
      function IU(I, C, Q, g, E) {
        var U, w = 0, D = 0;
        D = -1;
        A: if (!(((w = (0 | (U = 2147483647 & g)) == 2147418112) & !Q ? I | C : w & !!(0 | Q) | U >>> 0 > 2147418112) || (w = 2147483647 & E) >>> 0 > 2147418112 & (0 | w) != 2147418112)) {
          if (!(I | Q | w | U | C)) return 0;
          if ((0 | (w = g & E)) > 0 | (0 | w) >= 0) {
            if ((!!(0 | Q) | (0 | g) != (0 | E)) & (0 | g) < (0 | E)) break A;
            return !!(I | Q | g ^ E | C);
          }
          (!Q & (0 | g) == (0 | E) ? I | C : !!(0 | Q) & (0 | g) >= (0 | E) | (0 | g) > (0 | E)) || (D = !!(I | Q | g ^ E | C));
        }
        return D;
      }
      function EB(I, C) {
        var Q, g = 0;
        t = Q = t + -64 | 0, M[202976] = 0, A[Q + 48 >> 2] = 47, iA(Q + 59 | 0, 91351, Q + 48 | 0), C || (M[Q + 59 | 0] = 0);
        A: {
          I: {
            if (I && (I = QQ(I, 43))) {
              if (M[0 | I] = 0, M[0 | (I = I + 1 | 0)] - 48 >>> 0 >= 10) break I;
              g = VQ(I);
            }
            if ((0 | g) <= 0) break A;
            if (g >>> 0 <= 9) {
              A[Q + 4 >> 2] = g, A[Q >> 2] = Q + 59, iA(202976, 91378, Q);
              break A;
            }
            A[Q + 20 >> 2] = g - 10, A[Q + 16 >> 2] = Q + 59, iA(202976, 91503, Q + 16 | 0);
            break A;
          }
          A[Q + 36 >> 2] = I, A[Q + 32 >> 2] = Q + 59, iA(202976, 85425, Q + 32 | 0);
        }
        t = Q - -64 | 0;
      }
      function og(I) {
        var C, Q = 0, g = 0, E = 0;
        t = C = t - 80 | 0, Q = bB(I, C + 12 | 0), A[C + 12 >> 2] ? (sI(g = C + 16 | 0, Q, 60), Q = 0, EB(g, 1), !$C(g, 0) | !G[202976] || $C(202976, 2), dA(A[32972]), $B(I, 86012)) : Q = 268437247, t = C + 80 | 0;
        A: {
          I: {
            Q: {
              B: {
                if ((0 | Q) <= 268437502) {
                  if (!Q) break A;
                  if ((0 | Q) == 268436479) break I;
                  if ((0 | Q) != 268437247) break B;
                  return 2;
                }
                if ((0 | Q) == 268437503 | (0 | Q) == 268437759) break Q;
                if ((0 | Q) == 268439295) break A;
              }
              return -1;
            }
            return 2;
          }
          E = 1;
        }
        return E;
      }
      function rI(I, C, Q, g, E, U, w, D, J) {
        var o, y, S;
        J = tA(C, Q, D, J), D = QA, E = tA(g, E, U, w), g = QA + D | 0, D = E >>> 0 > (J = E + J | 0) >>> 0 ? g + 1 | 0 : g, o = w, y = Q, w = (Q = tA(w, E = 0, Q, g = 0)) + J | 0, J = QA + D | 0, S = w, Q = Q >>> 0 > w >>> 0 ? J + 1 | 0 : J, w = tA(U, 0, C, 0), D = QA, g = tA(U, J = 0, y, g), U = QA + J | 0, U = g >>> 0 > (D = D + g | 0) >>> 0 ? U + 1 | 0 : U, g = Q, U = U >>> 0 > (J = U + S | 0) >>> 0 ? g + 1 | 0 : g, Q = tA(C, 0, o, E) + D | 0, E = QA, D = (E = Q >>> 0 < D >>> 0 ? E + 1 | 0 : E) + J | 0, J = U, A[I + 8 >> 2] = D, A[I + 12 >> 2] = E >>> 0 > D >>> 0 ? J + 1 | 0 : J, A[I >> 2] = w, A[I + 4 >> 2] = Q;
      }
      function YA(I, C) {
        var Q = 0, g = 0;
        A: {
          if (3 & ((g = I) ^ C)) Q = G[0 | C];
          else {
            if (3 & C) for (; ; ) {
              if (Q = G[0 | C], M[0 | g] = Q, !Q) break A;
              if (g = g + 1 | 0, !(3 & (C = C + 1 | 0))) break;
            }
            if (!(~(Q = A[C >> 2]) & Q - 16843009 & -2139062144)) for (; A[g >> 2] = Q, Q = A[C + 4 >> 2], g = g + 4 | 0, C = C + 4 | 0, !(Q - 16843009 & ~Q & -2139062144); ) ;
          }
          if (M[0 | g] = Q, 255 & Q) for (; Q = G[C + 1 | 0], M[g + 1 | 0] = Q, g = g + 1 | 0, C = C + 1 | 0, Q; ) ;
        }
        return I;
      }
      function yC(I) {
        var C, Q = 0, g = 0;
        t = C = t - 16 | 0, W(+I), g = 0 | d(1), d(0);
        A: if ((g &= 2147483647) >>> 0 <= 1072243195) {
          if (Q = 1, g >>> 0 < 1044816030) break A;
          Q = Ag(I, 0);
        } else if (Q = I - I, !(g >>> 0 >= 2146435072)) {
          I: switch (3 & TE(I, C)) {
            case 0:
              Q = Ag(H[C >> 3], H[C + 8 >> 3]);
              break A;
            case 1:
              Q = -Sg(H[C >> 3], H[C + 8 >> 3], 1);
              break A;
            case 2:
              Q = -Ag(H[C >> 3], H[C + 8 >> 3]);
              break A;
            default:
              break I;
          }
          Q = Sg(H[C >> 3], H[C + 8 >> 3], 1);
        }
        return t = C + 16 | 0, I = Q;
      }
      function uB(I, C, Q, g) {
        var E = 0, U = 0, w = 0;
        if (!((SA(g) + SA(C) | 0) >= (0 | Q))) {
          for (w = A[36115], Q = g; E = G[0 | Q]; ) if (Q = Q + 1 | 0, !((0 | E) >= (0 | w))) {
            A: {
              I: switch (E = A[144464 + (E << 2) >> 2], G[E + 11 | 0] - 1 | 0) {
                case 1:
                  break A;
                case 0:
                  break I;
                default:
                  continue;
              }
              U = G[E + 14 | 0] < 4 | U;
              continue;
            }
            1 & (G[E + 4 | 0] >>> 1 | U) || (A[I + 8212 >> 2] = A[I + 8212 >> 2] + 1), A[I + 8208 >> 2] = A[I + 8208 >> 2] + 1, U = 0;
          }
          C && UC(C, g);
        }
      }
      function UB(I) {
        var C, Q = 0;
        t = C = t - 16 | 0, W(+I), Q = 0 | d(1), d(0);
        A: if ((Q &= 2147483647) >>> 0 <= 1072243195) {
          if (Q >>> 0 < 1045430272) break A;
          I = Sg(I, 0, 0);
        } else if (Q >>> 0 >= 2146435072) I -= I;
        else {
          I: switch (3 & TE(I, C)) {
            case 0:
              I = Sg(H[C >> 3], H[C + 8 >> 3], 1);
              break A;
            case 1:
              I = Ag(H[C >> 3], H[C + 8 >> 3]);
              break A;
            case 2:
              I = -Sg(H[C >> 3], H[C + 8 >> 3], 1);
              break A;
            default:
              break I;
          }
          I = -Ag(H[C >> 3], H[C + 8 >> 3]);
        }
        return t = C + 16 | 0, I;
      }
      function CU(I) {
        var C = 0;
        A[I + 296 >> 2] = 303173648, A[I + 300 >> 2] = 370677780, C = A[26341], A[I + 304 >> 2] = A[26340], A[I + 308 >> 2] = C, C = A[26343], A[I + 312 >> 2] = A[26342], A[I + 316 >> 2] = C, VC(I), A[I + 56 >> 2] = 2, A[I + 36 >> 2] = 3, A[I + 40 >> 2] = 1074, M[I + 168 | 0] = 5, A[I + 132 >> 2] = 32, A[I + 104 >> 2] = 1032, A[I + 108 >> 2] = 66, A[I + 8 >> 2] = 5, A[I + 12 >> 2] = 32, M[I + 365 | 0] = 64 | G[I + 365 | 0], M[I + 368 | 0] = 64 | G[I + 368 | 0], M[I + 396 | 0] = 64 | G[I + 396 | 0], M[I + 399 | 0] = 64 | G[I + 399 | 0];
      }
      function QU(I, C, Q) {
        var g = 0, E = 0, U = 0;
        A: {
          if (!(g = A[Q + 16 >> 2])) {
            if (Kg(Q)) break A;
            g = A[Q + 16 >> 2];
          }
          if (g - (U = A[Q + 20 >> 2]) >>> 0 < C >>> 0) return 0 | fA[A[Q + 36 >> 2]](Q, I, C);
          I: if (A[Q + 80 >> 2] < 0) g = 0;
          else {
            for (E = C; ; ) {
              if (!(g = E)) {
                g = 0;
                break I;
              }
              if (G[(E = g - 1 | 0) + I | 0] == 10) break;
            }
            if ((E = 0 | fA[A[Q + 36 >> 2]](Q, I, g)) >>> 0 < g >>> 0) break A;
            I = I + g | 0, C = C - g | 0, U = A[Q + 20 >> 2];
          }
          bA(U, I, C), A[Q + 20 >> 2] = A[Q + 20 >> 2] + C, E = C + g | 0;
        }
        return E;
      }
      function gU(I) {
        var C, Q = 0, g = 0;
        A: {
          if ((0 | (C = A[34064])) > 0) for (; ; ) {
            if ((g = A[136284 + (Q << 4) >> 2]) && !aI(I, g)) {
              if (A[136276 + (Q << 4) >> 2]) return Q;
              if (g = -1, vg(0, Q)) break A;
              return Q;
            }
            if ((0 | C) == (0 | (Q = Q + 1 | 0))) break;
          }
          g = -1, vg(I, C) || (Q = gC(A[12 + (136272 + (A[34064] << 4) | 0) >> 2], SA(I) + 1 | 0), g = A[34064], A[12 + (136272 + (g << 4) | 0) >> 2] = Q, YA(Q, I), A[34064] = g + 1);
        }
        return g;
      }
      function BU(I, C) {
        var Q, g = 0, E = 0, U = 0, w = 0;
        for (t = Q = t - 16 | 0, M[0 | C] = 0, (g = 15 & A[I >> 2]) && (C = (E = SA(C = YA(C, Qg(128496, 64 | g)))) + C | 0), g = 8; ; ) {
          A: {
            I: {
              if (g >>> 0 <= 29) {
                if (A[I >> 2] >>> g & 1) break I;
                break A;
              }
              if (!(A[I + 4 >> 2] >>> g - 32 & 1) | g >>> 0 < 32) break A;
            }
            (0 | (E = (w = SA(U = Qg(128496, g)) + 1 | 0) + E | 0)) >= 80 || (A[Q >> 2] = U, iA(C, 84439, Q), C = C + w | 0);
          }
          if ((0 | (g = g + 1 | 0)) == 64) break;
        }
        t = Q + 16 | 0;
      }
      function _B(I, C, Q) {
        var g, E = 0, U = 0, w = 0;
        if (t = g = t - 16 | 0, G[0 | I]) {
          for (w = A[30450]; ; ) if (U = I, I = I + 1 | 0, !((0 | (E = M[0 | U])) == 32 | E - 9 >>> 0 < 5)) {
            for ((0 | (E = VQ(U))) > 0 && ((0 | E) < 32 ? A[C >> 2] = A[C >> 2] | 1 << E : (U = Qg(129568, Q), A[g + 4 >> 2] = E, A[g >> 2] = U, lI(w, 84902, g)), U = I); U = (I = U) + 1 | 0, (E = M[0 | I]) - 48 >>> 0 < 10 | (32 | E) - 97 >>> 0 < 26; ) ;
            if (!E) break;
          }
        }
        t = g + 16 | 0;
      }
      function vQ(I, C, Q) {
        var g = 0, E = 0, U = 0, w = 0;
        A: if (C && !((0 | (E = Q - 4 | 0)) <= 0)) for (U = (0 | (Q = A[C - 4 >> 2])) != 34 ? (0 | Q) == 39 ? Q : 0 : Q, Q = 0; ; ) {
          if (w = Q, !(Q = A[C >> 2])) break A;
          I: {
            if (!U) {
              if ((0 | Q) == 32 | Q - 9 >>> 0 < 5) break A;
              if ((0 | Q) != 47) break I;
              break A;
            }
            if ((0 | w) != 92 && (0 | Q) == (0 | U)) break A;
          }
          if (C = C + 4 | 0, !((0 | E) > (0 | (g = HI(Q, I + g | 0) + g | 0)))) break;
        }
        return M[I + g | 0] = 0, g;
      }
      function MI(I) {
        var C = 0;
        A: if (!gA(I)) {
          C = 0;
          I: if (!(I >>> 0 < 768)) {
            if (I - 2305 >>> 0 <= 1270) {
              if ((124 & I) >>> 0 < 100) break A;
              if (C = 1, eI(93850, I)) break I;
              return I - 3450 >>> 0 < 6;
            }
            if ((0 | I) == 1541 | I - 1456 >>> 0 < 19 | (0 | I) == 1648 || (0 | (C = -256 & I)) == 10240 | (0 | C) == 4352 | I - 3904 >>> 0 < 125 | I >>> 0 < 880) break A;
            C = 1, I - 1611 >>> 0 < 20 || (C = I - 12353 >>> 0 < 30400);
          }
          return C;
        }
        return 1;
      }
      function $B(I, C) {
        var Q = 0;
        I ? ((Q = A[I + 4 >> 2]) && YA(133208, Q), (Q = A[I >> 2]) && sI(133168, Q, 40), A[33289] = G[I + 14 | 0], A[33291] = G[I + 13 | 0], A[33290] = G[I + 12 | 0], sI(134672, G[0 | C] != 33 | G[C + 1 | 0] != 118 ? C : (G[C + 2 | 0] == 47 ? 3 : 0) + C | 0, 40), I = A[50298], A[33678] = A[50297], A[33679] = I, I = A[50302], A[33682] = A[50301], A[33683] = I, I = A[50300], A[33680] = A[50299], A[33681] = I) : pA(133152, 0, 76);
      }
      function EU(I, C, Q, g) {
        M[I + 53 | 0] = 1;
        A: if (A[I + 4 >> 2] == (0 | Q)) {
          M[I + 52 | 0] = 1;
          I: {
            if (!(Q = A[I + 16 >> 2])) {
              if (A[I + 36 >> 2] = 1, A[I + 24 >> 2] = g, A[I + 16 >> 2] = C, (0 | g) != 1) break A;
              if (A[I + 48 >> 2] == 1) break I;
              break A;
            }
            if ((0 | C) == (0 | Q)) {
              if ((0 | (Q = A[I + 24 >> 2])) == 2 && (A[I + 24 >> 2] = g, Q = g), A[I + 48 >> 2] != 1) break A;
              if ((0 | Q) == 1) break I;
              break A;
            }
            A[I + 36 >> 2] = A[I + 36 >> 2] + 1;
          }
          M[I + 54 | 0] = 1;
        }
      }
      function sQ(I, C) {
        var Q = 0, g = 0, E = 0, U = 0, w = 0;
        A: if (Q = A[C >> 2]) for (; ; ) {
          g = 0;
          I: if (I) {
            for (; w = M[g + Q | 0], (E = A[(g << 2) + I >> 2]) && (g = g + 1 | 0, (0 | w) == (0 | E)); ) ;
            Q: switch (E - 34 | 0) {
              case 0:
              case 5:
                break Q;
              default:
                break I;
            }
            if (!w) break A;
          }
          if (!(Q = A[((U = U + 1 | 0) << 3) + C >> 2])) break;
        }
        return A[4 + ((U << 3) + C | 0) >> 2];
      }
      function jQ(I, C) {
        A: if ((0 | C) >= 1024) {
          if (I *= 898846567431158e293, C >>> 0 < 2047) {
            C = C - 1023 | 0;
            break A;
          }
          I *= 898846567431158e293, C = ((0 | C) >= 3069 ? 3069 : C) - 2046 | 0;
        } else (0 | C) > -1023 || (I *= 2004168360008973e-307, C >>> 0 > 4294965304 ? C = C + 969 | 0 : (I *= 2004168360008973e-307, C = ((0 | C) <= -2960 ? -2960 : C) + 1938 | 0));
        return b(0, 0), b(1, C + 1023 << 20), I * +P();
      }
      function oC(I, C, Q, g) {
        var E, U, w, D = 0;
        return t = U = t - 16 | 0, A[U + 12 >> 2] = g, t = E = t - 160 | 0, w = C ? I : E + 158 | 0, A[E + 144 >> 2] = w, D = -1, I = C - 1 | 0, A[E + 148 >> 2] = I >>> 0 <= C >>> 0 ? I : 0, I = pA(E, 0, 144), A[I + 76 >> 2] = -1, A[I + 36 >> 2] = 17, A[I + 80 >> 2] = -1, A[I + 44 >> 2] = I + 159, A[I + 84 >> 2] = I + 144, (0 | C) < 0 ? A[56798] = 61 : (M[0 | w] = 0, D = eB(I, Q, g, 15, 16)), t = I + 160 | 0, t = U + 16 | 0, D;
      }
      function AE(I, C) {
        var Q = 0, g = 0, E = 0;
        A: if (Q = G[0 | I]) for (; ; ) {
          if (!(g = G[0 | C])) {
            E = Q;
            break A;
          }
          if ((0 | Q) != (0 | g) && (0 | (g = Q - 65 >>> 0 < 26 ? 32 | Q : Q)) != (0 | ((Q = G[0 | C]) - 65 >>> 0 < 26 ? 32 | Q : Q))) {
            E = G[0 | I];
            break A;
          }
          if (C = C + 1 | 0, Q = G[I + 1 | 0], I = I + 1 | 0, !Q) break;
        }
        return (E = (I = 255 & E) - 65 >>> 0 < 26 ? 32 | I : I) - ((I = G[0 | C]) - 65 >>> 0 < 26 ? 32 | I : I) | 0;
      }
      function RB(I, C, Q) {
        var g = 0, E = 0;
        if (g = A[Q + 72 >> 2], A[Q + 72 >> 2] = g - 1 | g, (0 | (g = A[Q + 4 >> 2])) == (0 | (E = A[Q + 8 >> 2])) ? g = C : (bA(I, g, g = C >>> 0 > (g = E - g | 0) >>> 0 ? g : C), A[Q + 4 >> 2] = g + A[Q + 4 >> 2], I = I + g | 0, g = C - g | 0), g) for (; ; ) {
          if (hg(Q) || !(E = 0 | fA[A[Q + 32 >> 2]](Q, I, g))) return C - g | 0;
          if (I = I + E | 0, !(g = g - E | 0)) break;
        }
        return C;
      }
      function VQ(I) {
        for (var C = 0, Q = 0, g = 0, E = 0; I = (C = I) + 1 | 0, (0 | (Q = M[0 | C])) == 32 | Q - 9 >>> 0 < 5; ) ;
        A: {
          I: {
            Q: switch ((Q = M[0 | C]) - 43 | 0) {
              case 0:
                break I;
              case 2:
                break Q;
              default:
                break A;
            }
            E = 1;
          }
          Q = M[0 | I], C = I;
        }
        if (Q - 48 >>> 0 < 10) for (; g = 48 + (T(g, 10) - M[0 | C] | 0) | 0, I = M[C + 1 | 0], C = C + 1 | 0, I - 48 >>> 0 < 10; ) ;
        return E ? g : 0 - g | 0;
      }
      function IE(I, C) {
        var Q, g, E, U = 0;
        return t = Q = t - 32 | 0, A[C >> 2] = 0, A[C + 4 >> 2] = 0, A[(U = g = C + 24 | 0) >> 2] = 0, A[U + 4 >> 2] = 0, A[(U = E = C + 16 | 0) >> 2] = 0, A[U + 4 >> 2] = 0, A[(U = C + 8 | 0) >> 2] = 0, A[U + 4 >> 2] = 0, A[Q + 28 >> 2] = C + 28, A[Q + 24 >> 2] = g, A[Q + 20 >> 2] = C + 20, A[Q + 16 >> 2] = E, A[Q + 12 >> 2] = C + 12, A[Q + 8 >> 2] = U, A[Q + 4 >> 2] = C + 4, A[Q >> 2] = C, I = QI(I, 84553, Q), t = Q + 32 | 0, I;
      }
      function UU(I) {
        var C = 0, Q = 0, g = 0;
        if ((C = G[0 | I]) && ((Q = G[I + 1 | 0]) ? (Q = C | Q << 8, (C = G[I + 2 | 0]) && (Q |= C << 16, (I = G[I + 3 | 0]) && (Q |= I << 24))) : Q = C), (0 | (C = A[36115])) > 0) for (I = 0; ; ) {
          if (!(!(g = A[144464 + (I << 2) >> 2]) | A[g >> 2] != (0 | Q))) return G[g + 10 | 0];
          if ((0 | C) == (0 | (I = I + 1 | 0))) break;
        }
        return 0;
      }
      function Ng(I, C, Q, g) {
        var E, U = 0, w = 0, D = 0, J = 0, o = 0;
        t = E = t - 240 | 0, A[E >> 2] = I, D = 1;
        A: if (!((0 | Q) < 2)) for (U = I; ; ) {
          if ((0 | kg(I, w = (U = U - 4 | 0) - A[((J = Q - 2 | 0) << 2) + g >> 2] | 0, C)) >= 0 && (0 | kg(I, U, C)) >= 0) break A;
          if (o = w, U = (w = (0 | kg(w, U, C)) >= 0) ? o : U, A[(D << 2) + E >> 2] = U, D = D + 1 | 0, !((0 | (Q = w ? Q - 1 | 0 : J)) > 1)) break;
        }
        RU(E, D), t = E + 240 | 0;
      }
      function iA(I, C, Q) {
        var g, E, U, w = 0;
        return t = E = t - 16 | 0, A[E + 12 >> 2] = Q, t = g = t - 160 | 0, bA(U = g + 8 | 0, 124528, 144), A[g + 52 >> 2] = I, A[g + 28 >> 2] = I, w = (w = -2 - I | 0) >>> 0 > 2147483647 ? 2147483647 : w, A[g + 56 >> 2] = w, I = I + w | 0, A[g + 36 >> 2] = I, A[g + 24 >> 2] = I, I = vU(U, C, Q), w && (C = A[g + 28 >> 2], M[C - ((0 | C) == A[g + 24 >> 2]) | 0] = 0), t = g + 160 | 0, t = E + 16 | 0, I;
      }
      function RU(I, C) {
        var Q, g = 0, E = 0, U = 0, w = 0, D = 0;
        if (g = 4, t = Q = t - 256 | 0, (0 | C) >= 2) for (A[(D = (C << 2) + I | 0) >> 2] = Q; ; ) {
          for (U = g >>> 0 >= 256 ? 256 : g, bA(A[D >> 2], A[I >> 2], U), E = 0; w = (E << 2) + I | 0, E = E + 1 | 0, bA(A[w >> 2], A[(E << 2) + I >> 2], U), A[w >> 2] = A[w >> 2] + U, (0 | C) != (0 | E); ) ;
          if (!(g = g - U | 0)) break;
        }
        t = Q + 256 | 0;
      }
      function KA(I, C, Q) {
        var g, E = 0;
        return t = g = t - 96 | 0, A[g + 88 >> 2] = 0, A[g + 92 >> 2] = 1073741824, A[g + 84 >> 2] = C, C = XI(I, g + 84 | 0, Q, g + 88 | 0, 2, 0), 536870912 & (E = A[g + 88 >> 2]) ? (C = A[47202], A[47202] = 0, M[g + 2 | 0] = 32, L[g >> 1] = 8192, sI(E = 3 | g, A[g + 84 >> 2], 77), I = Gg(I, E, 0, 0), YA(Q, 189088), A[47202] = C) : I = C ? E : 0, t = g + 96 | 0, I;
      }
      function wB(I, C, Q) {
        var g = 0, E = 0, U = 0;
        E = jg(I), g = A[C >> 2];
        A: {
          I: if ((0 | E) >= 0) {
            if (g) {
              if (!aI(I, Q)) break I;
              (U = A[g + 688 >> 2]) && _A(U), _A(g), A[C >> 2] = 0;
            }
            A[C >> 2] = Wg(I), I = YA(Q, I), pB(Q = A[C >> 2], Q + 228 | 0, 0) && (GC(A[A[32972] + 60 >> 2]), M[0 | I] = 0, E = -1), g = A[C >> 2], A[g + 292 >> 2] = E;
          } else if (!g) break A;
          M[g + 268 | 0] = 0;
        }
        return E;
      }
      function DB(I) {
        var C = 0, Q = 0;
        return (0 | (C = A[I + 76 >> 2])) >= 0 & (!C | A[56823] != (-1073741825 & C)) ? (Q = A[(C = I + 76 | 0) >> 2], A[C >> 2] = Q || 1073741823, (0 | (Q = A[I + 4 >> 2])) == A[I + 8 >> 2] ? I = UI(I) : (A[I + 4 >> 2] = Q + 1, I = G[0 | Q]), A[C >> 2] = 0, I) : (0 | (C = A[I + 4 >> 2])) != A[I + 8 >> 2] ? (A[I + 4 >> 2] = C + 1, G[0 | C]) : UI(I);
      }
      function IC(I, C, Q) {
        var g = 0, E = 0;
        A: {
          I: {
            if (Q >>> 0 >= 4) {
              if (3 & (I | C)) break I;
              for (; ; ) {
                if (A[I >> 2] != A[C >> 2]) break I;
                if (C = C + 4 | 0, I = I + 4 | 0, !((Q = Q - 4 | 0) >>> 0 > 3)) break;
              }
            }
            if (!Q) break A;
          }
          for (; ; ) {
            if ((0 | (g = G[0 | I])) == (0 | (E = G[0 | C]))) {
              if (C = C + 1 | 0, I = I + 1 | 0, Q = Q - 1 | 0) continue;
              break A;
            }
            break;
          }
          return g - E | 0;
        }
        return 0;
      }
      function NC(I, C) {
        var Q, g = 0, E = 0, U = 0;
        t = Q = t - 16 | 0, C ? (fI(Q, E = ((g = C >> 31) ^ C) - g | 0, 0, 0, 0, (g = aA(E)) + 81 | 0), E = 0 + A[Q + 8 >> 2] | 0, g = (65536 ^ A[Q + 12 >> 2]) + (16414 - g << 16) | 0, U = -2147483648 & C | (g = E >>> 0 < U >>> 0 ? g + 1 | 0 : g), g = A[Q + 4 >> 2], C = A[Q >> 2]) : C = 0, A[I >> 2] = C, A[I + 4 >> 2] = g, A[I + 8 >> 2] = E, A[I + 12 >> 2] = U, t = Q + 16 | 0;
      }
      function sg(I) {
        var C, Q = 0, g = 0, E = 0;
        if ((0 | (Q = BB(I, 61))) == (0 | I)) return 0;
        A: if (!G[(C = Q - I | 0) + I | 0] && (Q = A[56800]) && (g = A[Q >> 2])) {
          for (; ; ) {
            if (Lg(I, g, C) || (g = A[Q >> 2] + C | 0, G[0 | g] != 61)) {
              if (g = A[Q + 4 >> 2], Q = Q + 4 | 0, g) continue;
              break A;
            }
            break;
          }
          E = g + 1 | 0;
        }
        return E;
      }
      function jg(I) {
        var C = 0, Q = 0;
        A: if (!((0 | (Q = A[34461])) <= 0)) {
          for (; ; ) {
            if (!aI(I, T(C, 44) + 137856 | 0)) {
              A[34457] = C;
              break A;
            }
            if ((0 | Q) == (0 | (C = C + 1 | 0))) break;
          }
          return -1;
        }
        return (I = (0 | C) == (0 | Q)) ? -1 : ((0 | (I = I ? -1 : C)) != A[36114] && (A[36115] = 0, mB(I), A[36114] = I, A[36115] = A[36115] + 1), C);
      }
      function CE(I, C, Q, g) {
        var E = 0, U = 0;
        A: if ((32 | G[0 | C]) != 32) {
          if (E = ((0 | g) > 2) << 1, U = qI(I, C, Q, E = (0 | g) > 1 ? 4 | E : E), G[0 | Q] != 21) for (E |= 1, C = C + U | 0, U = 1; ; ) {
            if ((32 | G[0 | C]) == 32) break A;
            if (C = qI(I, C, Q, E) + C | 0, U = U + 1 | 0, G[0 | Q] == 21) break;
          }
          return YA(189088, Q), 0;
        }
        return vE(I, Q, g, U), C;
      }
      function HI(I, C) {
        var Q, g = 0, E = 0, U = 0;
        if (I >>> 0 <= 127) return M[0 | C] = I, 1;
        if (I >>> 0 >= 1114112) return M[0 | C] = 32, 1;
        for (g = T(Q = I >>> 0 < 2048 ? 1 : I >>> 0 < 65536 ? 2 : 3, 6), M[0 | C] = G[Q + 93842 | 0] | I >>> g; g = g - 6 | 0, M[(E = E + 1 | 0) + C | 0] = I >>> g & 63 | 128, (0 | (U = U + 1 | 0)) != (0 | Q); ) ;
        return Q + 1 | 0;
      }
      function uQ(I) {
        var C = 0, Q = 0;
        A: {
          if ((0 | (C = A[I + 12 >> 2])) >= A[I + 16 >> 2]) {
            if (C = 0, (0 | (Q = 0 | nI(A[I + 8 >> 2], I + 24 | 0, 2048))) <= 0) {
              if (!Q | (0 | Q) == -44) break A;
              return A[56798] = 0 - Q, 0;
            }
            A[I + 16 >> 2] = Q;
          }
          Q = C, C = I + C | 0, A[I + 12 >> 2] = Q + a[C + 40 >> 1], Q = A[C + 36 >> 2], A[I >> 2] = A[C + 32 >> 2], A[I + 4 >> 2] = Q, C = C + 24 | 0;
        }
        return C;
      }
      function QE(I, C) {
        var Q, g = 0;
        if (g = A[I + 632 >> 2]) return !!(0 | eA(g, C));
        A: {
          I: {
            if ((0 | (Q = A[I + 600 >> 2])) > 0) {
              if (g = 0, (C = C - Q | 0) - 1 >>> 0 < 255) break I;
              break A;
            }
            if ((g = C - 192 | 0) >>> 0 <= 413) return 128 & G[344 + (G[g + 94240 | 0] + I | 0) | 0];
            if (g = 0, C >>> 0 > 255) break A;
          }
          g = 128 & G[344 + (I + C | 0) | 0];
        }
        return g;
      }
      function Sg(I, C, Q) {
        var g, E, U;
        return U = (g = I * I) * (g * g) * (158969099521155e-24 * g - 25050760253406863e-24) + (g * (27557313707070068e-22 * g - 1984126982985795e-19) + 0.00833333333332249), E = g * I, Q ? I - (g * (0.5 * C - U * E) - C + 0.16666666666666632 * E) : E * (g * U - 0.16666666666666632) + I;
      }
      function _Q(I, C) {
        var Q, g = 0, E = 0, U = 0;
        t = Q = t - 16 | 0, C ? (fI(Q, g = C, 0, 0, 0, (C = aA(C)) + 81 | 0), g = 0 + A[Q + 8 >> 2] | 0, C = (65536 ^ A[Q + 12 >> 2]) + (16414 - C << 16) | 0, U = E >>> 0 > g >>> 0 ? C + 1 | 0 : C, E = A[Q + 4 >> 2], C = A[Q >> 2]) : C = 0, A[I >> 2] = C, A[I + 4 >> 2] = E, A[I + 8 >> 2] = g, A[I + 12 >> 2] = U, t = Q + 16 | 0;
      }
      function FB(I) {
        var C, Q = 0;
        t = C = t - 16 | 0, M[C + 15 | 0] = 10;
        A: {
          if (!(Q = A[I + 16 >> 2])) {
            if (Kg(I)) break A;
            Q = A[I + 16 >> 2];
          }
          (0 | Q) == (0 | (Q = A[I + 20 >> 2])) | A[I + 80 >> 2] == 10 ? fA[A[I + 36 >> 2]](I, C + 15 | 0, 1) : (A[I + 20 >> 2] = Q + 1, M[0 | Q] = 10);
        }
        t = C + 16 | 0;
      }
      function hg(I) {
        var C, Q = 0;
        return Q = A[I + 72 >> 2], A[I + 72 >> 2] = Q - 1 | Q, A[I + 20 >> 2] != A[I + 28 >> 2] && fA[A[I + 36 >> 2]](I, 0, 0), A[I + 28 >> 2] = 0, A[I + 16 >> 2] = 0, A[I + 20 >> 2] = 0, 4 & (Q = A[I >> 2]) ? (A[I >> 2] = 32 | Q, -1) : (C = A[I + 44 >> 2] + A[I + 48 >> 2] | 0, A[I + 8 >> 2] = C, A[I + 4 >> 2] = C, Q << 27 >> 31);
      }
      function $Q(I) {
        var C = 0;
        A: {
          I: {
            Q: {
              B: {
                if ((0 | (I = vB(I))) <= 268437502) {
                  if (!I) break A;
                  if ((0 | I) == 268436479) break I;
                  if ((0 | I) != 268437247) break B;
                  return 2;
                }
                if ((0 | I) == 268437503 | (0 | I) == 268437759) break Q;
                if ((0 | I) == 268439295) break A;
              }
              return -1;
            }
            return 2;
          }
          C = 1;
        }
        return C;
      }
      function SA(I) {
        var C = 0, Q = 0, g = 0;
        A: {
          if (3 & (C = I)) for (; ; ) {
            if (!G[0 | C]) break A;
            if (!(3 & (C = C + 1 | 0))) break;
          }
          for (; Q = C, C = C + 4 | 0, !(~(g = A[Q >> 2]) & g - 16843009 & -2139062144); ) ;
          for (; Q = (C = Q) + 1 | 0, G[0 | C]; ) ;
        }
        return C - I | 0;
      }
      function HC(I, C, Q) {
        var g, E = 0, U = 0, w = 0;
        A[I + 112 >> 2] = C, A[I + 116 >> 2] = Q, g = A[I + 4 >> 2], E = A[I + 44 >> 2] - g | 0, A[I + 120 >> 2] = E, A[I + 124 >> 2] = E >> 31, E = A[I + 8 >> 2], C | Q && ((0 | Q) >= (0 | (w = (U = E - g | 0) >> 31)) & C >>> 0 >= U >>> 0 | (0 | Q) > (0 | w) || (E = C + g | 0)), A[I + 104 >> 2] = E;
      }
      function gE(I, C) {
        var Q, g, E = 0;
        if (W(+I), Q = 0 | d(1), g = 0 | d(0), (0 | (E = Q >>> 20 & 2047)) != 2047) {
          if (!E) return I == 0 ? E = 0 : (I = gE(18446744073709552e3 * I, C), E = A[C >> 2] + -64 | 0), A[C >> 2] = E, I;
          A[C >> 2] = E - 1022, b(0, 0 | g), b(1, -2146435073 & Q | 1071644672), I = +P();
        }
        return I;
      }
      function wU(I, C, Q) {
        return A[I + 20 >> 2] != A[I + 28 >> 2] && (fA[A[I + 36 >> 2]](I, 0, 0), !A[I + 20 >> 2]) || (A[I + 28 >> 2] = 0, A[I + 16 >> 2] = 0, A[I + 20 >> 2] = 0, fA[A[I + 40 >> 2]](I, C, Q, 0), (0 | QA) < 0) ? -1 : (A[I + 4 >> 2] = 0, A[I + 8 >> 2] = 0, A[I >> 2] = -17 & A[I >> 2], 0);
      }
      function Ag(I, C) {
        var Q, g, E = 0;
        return (g = 1 - (E = 0.5 * (Q = I * I))) + (1 - g - E + (Q * (Q * (Q * (2480158728947673e-20 * Q - 0.001388888888887411) + 0.0416666666666666) + (E = Q * Q) * E * (Q * (-11359647557788195e-27 * Q + 2087572321298175e-24) - 27557314351390663e-23)) - I * C));
      }
      function Ig(I, C, Q) {
        var g = 0, E = 0;
        if (C) for (; Q = Q - 1 | 0, E = I, I = _U(I, C, 10), g = QA, M[0 | Q] = E - tA(I, g, 10, 0) | 48, E = C >>> 0 > 9, C = g, E; ) ;
        if (I) for (; C = (I >>> 0) / 10 | 0, M[0 | (Q = Q - 1 | 0)] = I - T(C, 10) | 48, g = I >>> 0 > 9, I = C, g; ) ;
        return Q;
      }
      function BE(I, C) {
        var Q = 0, g = 0, E = 0;
        A: if (I) {
          for (; E = M[C + Q | 0], (g = A[(Q << 2) + I >> 2]) && (Q = Q + 1 | 0, (0 | E) == (0 | g)); ) ;
          I: switch (g - 34 | 0) {
            case 0:
            case 5:
              break I;
            default:
              break A;
          }
          if (!E) return 0;
        }
        return 1;
      }
      function EE(I, C, Q) {
        var g, E = 0;
        return t = g = t - 16 | 0, !(64 & C) && (E = 0, 4259840 & ~C) || (A[g + 12 >> 2] = Q + 4, E = A[Q >> 2]), A[g >> 2] = E, A[g + 4 >> 2] = 0, (I = 0 | MA(-100, 0 | I, 32768 | C, 0 | g)) >>> 0 >= 4294963201 && (A[56798] = 0 - I, I = -1), t = g + 16 | 0, I;
      }
      function Lg(I, C, Q) {
        var g = 0, E = 0, U = 0;
        if (!Q) return 0;
        A: if (g = G[0 | I]) {
          for (; ; ) {
            if ((E = G[0 | C]) && !(!(Q = Q - 1 | 0) | (0 | g) != (0 | E))) {
              if (C = C + 1 | 0, g = G[I + 1 | 0], I = I + 1 | 0, g) continue;
              break A;
            }
            break;
          }
          U = g;
        }
        return (255 & U) - G[0 | C] | 0;
      }
      function xA(I, C) {
        var Q, g = 0;
        t = g = t - 128 | 0, g = pA(g, 0, 128), M[g + 98 | 0] = 9, M[g + 66 | 0] = 9, M[g + 34 | 0] = I, L[g + 68 >> 1] = 1, Q = A[36125], A[g + 104 >> 2] = Q, A[g + 72 >> 2] = Q, A[g + 40 >> 2] = A[144464 + (I << 2) >> 2], M[g + 2 | 0] = 9, A[g + 8 >> 2] = Q, AC(0, 0, g + 32 | 0, C, 0), t = g + 128 | 0;
      }
      function DU(I) {
        var C = 0, Q = 0, g = 0;
        if (M[A[I >> 2]] - 48 >>> 0 >= 10) return 0;
        for (; g = A[I >> 2], Q = -1, C >>> 0 <= 214748364 && (Q = (0 | (Q = M[0 | g] - 48 | 0)) > (2147483647 ^ (C = T(C, 10))) ? -1 : Q + C | 0), A[I >> 2] = g + 1, C = Q, M[g + 1 | 0] - 48 >>> 0 < 10; ) ;
        return C;
      }
      function UE(I, C) {
        var Q = 0;
        if (!(!I | A[I >> 2] - 48 >>> 0 >= 10)) {
          if (A[I >> 2] - 48 >>> 0 < 10) for (; Q = (A[I >> 2] + T(Q, 10) | 0) - 48 | 0, A[(I = I + 4 | 0) >> 2] - 48 >>> 0 < 10; ) ;
          (0 | C) == 1 && (Q = (0 | xC(A[I >> 2])) == 115 ? T(Q, 1e3) : Q);
        }
        return Q;
      }
      function pI(I) {
        var C = 0;
        C = 1;
        A: {
          I: switch (0 | NQ(I)) {
            case 30:
              if (C = 0, (0 | I) == 160 | (0 | I) == 8199 | (0 | I) == 8239) break A;
              return 1;
            case 0:
              if (I - 9 >>> 0 < 5) return 1;
              if ((0 | I) == 133) break A;
              break;
            case 28:
            case 29:
              break A;
            default:
              break I;
          }
          C = 0;
        }
        return C;
      }
      function Yg(I, C, Q) {
        var g, E = 0;
        return t = g = t - 16 | 0, M[g + 6 | 0] = 0, M[g + 7 | 0] = 95, E = HI(E = C, C = g + 8 | 0) + g | 0, M[E + 8 | 0] = 32, M[E + 9 | 0] = 0, KA(I, g + 7 | 0, Q) || (M[g + 7 | 0] = 32, KA(I, C, Q) || iC(I, C, Q, 20, 0, 0, 0)), t = g + 16 | 0, M[0 | Q];
      }
      function TC(I) {
        var C = 0, Q = 0;
        Q = 170;
        A: if (!((0 | I) < 170)) for (; ; ) {
          if ((0 | I) == (0 | Q)) return a[101616 + (C << 1 | 2) >> 1];
          if ((2147483646 & (C = C + 2 | 0)) == 124) break A;
          if (!((0 | (Q = a[101616 + (C << 1) >> 1])) <= (0 | I))) break;
        }
        return 0;
      }
      function tA(I, C, Q, g) {
        var E, U, w, D, J = 0, o = 0;
        return D = T(J = Q >>> 16 | 0, o = I >>> 16 | 0), J = (65535 & (o = ((w = T(E = 65535 & Q, U = 65535 & I)) >>> 16 | 0) + T(o, E) | 0)) + T(J, U) | 0, QA = (T(C, Q) + D | 0) + T(I, g) + (o >>> 16) + (J >>> 16) | 0, 65535 & w | J << 16;
      }
      function xC(I) {
        var C = 0, Q = 0, g = 0, E = 0;
        for (C = 2778; ; ) {
          if ((0 | (Q = A[1040 + ((g = (C + E | 0) / 2 | 0) << 4) >> 2])) == (0 | I)) return (C = A[1048 + (g << 4) >> 2]) || I;
          if (!((0 | (E = (Q = I >>> 0 > Q >>> 0) ? g + 1 | 0 : E)) <= (0 | (C = Q ? C : g - 1 | 0)))) break;
        }
        return I;
      }
      function MB(I) {
        var C = 0, Q = 0, g = 0, E = 0;
        for (C = 2778; ; ) {
          if ((0 | (Q = A[1040 + ((g = (C + E | 0) / 2 | 0) << 4) >> 2])) == (0 | I)) return (C = A[1044 + (g << 4) >> 2]) || I;
          if (!((0 | (E = (Q = I >>> 0 > Q >>> 0) ? g + 1 | 0 : E)) <= (0 | (C = Q ? C : g - 1 | 0)))) break;
        }
        return I;
      }
      function rC(I) {
        var C, Q = 0;
        return t = C = t - 112 | 0, (I = 0 | dC(0 | I, 0 | C)) >>> 0 >= 4294963201 && (A[56798] = 0 - I, I = -1), Q = 0 - A[56798] | 0, I || (Q = -31, (61440 & A[C + 12 >> 2]) != 16384 && (Q = A[C + 40 >> 2])), t = C + 112 | 0, I = Q;
      }
      function RE(I, C, Q) {
        var g;
        if (!(g = A[I + 16 >> 2])) return A[I + 36 >> 2] = 1, A[I + 24 >> 2] = Q, void (A[I + 16 >> 2] = C);
        A: {
          if ((0 | C) == (0 | g)) {
            if (A[I + 24 >> 2] != 2) break A;
            return void (A[I + 24 >> 2] = Q);
          }
          M[I + 54 | 0] = 1, A[I + 24 >> 2] = 2, A[I + 36 >> 2] = A[I + 36 >> 2] + 1;
        }
      }
      function OI(I, C, Q, g, E) {
        var U;
        if (t = U = t - 256 | 0, !(73728 & E | (0 | Q) <= (0 | g))) {
          if (pA(U, 255 & C, (Q = (g = Q - g | 0) >>> 0 < 256) ? g : 256), !Q) for (; CC(I, U, 256), (g = g - 256 | 0) >>> 0 > 255; ) ;
          CC(I, U, g);
        }
        t = U + 256 | 0;
      }
      function IQ(I, C, Q) {
        var g = 0;
        A: {
          if (I) {
            if (g = A[I >> 2]) {
              _A(A[g + 4 >> 2]), g = A[I >> 2];
              break A;
            }
            if (g = KI(16), A[I >> 2] = g, g) break A;
            C = 48;
          }
          return C;
        }
        return A[g >> 2] = 0, A[g + 4 >> 2] = MU(Q), I = A[I >> 2], A[I + 8 >> 2] = 0, A[I + 12 >> 2] = 0, C;
      }
      function mI(I) {
        var C = 0, Q = 0;
        QB(I), fA[A[I + 12 >> 2]](I), 1 & M[0 | I] || ((C = A[I + 52 >> 2]) && (A[C + 56 >> 2] = A[I + 56 >> 2]), (Q = A[I + 56 >> 2]) && (A[Q + 52 >> 2] = C), A[56816] == (0 | I) && (A[56816] = Q), _A(A[I + 96 >> 2]), _A(I));
      }
      function mC(I) {
        var C = 0, Q = 0;
        C = 1;
        A: {
          I: {
            Q: {
              B: switch ((Q = NQ(I)) - 9 | 0) {
                case 1:
                  break A;
                case 6:
                case 18:
                  break Q;
                case 0:
                  break B;
                default:
                  break I;
              }
              return (0 | xC(I)) != (0 | I);
            }
            return GQ(I, Q) >>> 15 & 1;
          }
          C = 0;
        }
        return C;
      }
      function Cg(I) {
        var C, Q, g, E = 0, U = 0;
        if (g = SA(I) + 1 | 0, E = A[33282], (0 | (Q = (C = A[33287]) + g | 0)) >= A[33286]) {
          if (!(E = gC(E, U = Q + 1e3 | 0))) return -1;
          A[33286] = U, A[33282] = E;
        }
        return bA(E + C | 0, I, g), A[33287] = Q, C;
      }
      function Kg(I) {
        var C = 0;
        return C = A[I + 72 >> 2], A[I + 72 >> 2] = C - 1 | C, 8 & (C = A[I >> 2]) ? (A[I >> 2] = 32 | C, -1) : (A[I + 4 >> 2] = 0, A[I + 8 >> 2] = 0, C = A[I + 44 >> 2], A[I + 28 >> 2] = C, A[I + 20 >> 2] = C, A[I + 16 >> 2] = C + A[I + 48 >> 2], 0);
      }
      function GB(I, C, Q, g) {
        A: if (I) {
          I: switch (C + 2 | 0) {
            case 0:
              return void (M[0 | I] = Q);
            case 1:
              return void (L[I >> 1] = Q);
            case 2:
            case 3:
              return void (A[I >> 2] = Q);
            case 5:
              break I;
            default:
              break A;
          }
          A[I >> 2] = Q, A[I + 4 >> 2] = g;
        }
      }
      function JB(I, C, Q, g, E, U, w, D, J) {
        var o;
        t = o = t - 16 | 0, WI(o, C, Q, g, E, U, w, D, -2147483648 ^ J), g = A[o >> 2], Q = A[o + 4 >> 2], C = A[o + 12 >> 2], A[I + 8 >> 2] = A[o + 8 >> 2], A[I + 12 >> 2] = C, A[I >> 2] = g, A[I + 4 >> 2] = Q, t = o + 16 | 0;
      }
      function aI(I, C) {
        var Q = 0, g = 0;
        A: if (!(!(Q = G[0 | I]) | (0 | Q) != (0 | (g = G[0 | C])))) for (; ; ) {
          if (g = G[C + 1 | 0], !(Q = G[I + 1 | 0])) break A;
          if (C = C + 1 | 0, I = I + 1 | 0, (0 | Q) != (0 | g)) break;
        }
        return Q - g | 0;
      }
      function Qg(I, C) {
        var Q = 0, g = 0, E = 0;
        if (!(Q = A[I >> 2])) return 84399;
        if (A[I + 4 >> 2] != (0 | C)) for (; ; ) {
          if (!(Q = A[(g = I + 8 | 0) >> 2])) return 84399;
          if (E = I, I = g, A[E + 12 >> 2] == (0 | C)) break;
        }
        return Q;
      }
      function wE(I, C, Q) {
        var g = 0, E = 0, U = 0;
        A: if (Q) {
          for (; ; ) {
            if (!(!(g = A[C >> 2]) | !(E = A[I >> 2]) | (0 | g) != (0 | E))) {
              if (C = C + 4 | 0, I = I + 4 | 0, Q = Q - 1 | 0) continue;
              break A;
            }
            break;
          }
          U = E - g | 0;
        }
        return U;
      }
      function EC(I) {
        var C, Q = 0, g = 0;
        if ((0 | (C = A[36115])) > 0) for (; ; ) {
          if (!(!(g = A[144464 + (Q << 2) >> 2]) | A[g >> 2] != (0 | I))) return G[g + 10 | 0];
          if ((0 | C) == (0 | (Q = Q + 1 | 0))) break;
        }
        return 0;
      }
      function bQ(I) {
        var C, Q;
        return (I = (C = A[33175]) + (Q = I + 7 & -8) | 0) >>> 0 <= C >>> 0 && Q || I >>> 0 > IA.byteLength / 65536 << 16 >>> 0 && !(0 | DC(0 | I)) ? (A[56798] = 48, -1) : (A[33175] = I, C);
      }
      function K(I) {
        var C = 0;
        A: if (!((C = NQ(I)) >>> 0 > 27)) {
          if (!(1 << C & 134259072)) {
            if ((0 | C) == 6) return 1;
            if ((0 | C) != 9) break A;
            return (0 | MB(I)) != (0 | I);
          }
          return GQ(I, C) >>> 14 & 1;
        }
        return 0;
      }
      function Z(I, C) {
        var Q = 0;
        return M[0 | I] = C >>> 24, M[0 | (Q = (C >>> 0 > 16777215) + I | 0)] = C >>> 16, M[0 | (Q = Q + !!(16711680 & C) | 0)] = C >>> 8, M[0 | (Q = Q + !!(65280 & C) | 0)] = C, M[Q + !!(255 & C) | 0] = 0, I;
      }
      function f(I, C) {
        A: if ((0 | (I = dQ(I, C))) <= 268437502) {
          if (!I | (0 | I) == 268436479 | (0 | I) != 268437247) break A;
          return;
        }
      }
      function X(I) {
        var C = 0;
        return C = A[I >> 2] - 1 | 0, (C = M[121600 + (T(0 - C & C, 124511785) >>> 27 | 0) | 0]) || (I = A[I + 4 >> 2], C = (I = M[121600 + (T(0 - I & I, 124511785) >>> 27 | 0) | 0]) ? I + 32 | 0 : 0), C;
      }
      function u(I) {
        var C = 0, Q = 0, g = 0;
        A: {
          if (!((C = NQ(I)) >>> 0 > 27)) {
            if (Q = 1, 116672 & (g = 1 << C)) break A;
            if (134227968 & g) return GQ(I, C) >>> 10 & 1;
          }
          Q = 0;
        }
        return Q;
      }
      function gA(I) {
        var C = 0, Q = 0, g = 0;
        A: {
          if (!((C = NQ(I)) >>> 0 > 27)) {
            if (Q = 1, 34752 & (g = 1 << C)) break A;
            if (134227968 & g) return GQ(I, C) >>> 10 & 1;
          }
          Q = 0;
        }
        return Q;
      }
      function DA() {
        var I, C = 0;
        (I = A[56797]) && ((C = A[I + 8 >> 2]) && fA[A[A[C >> 2] + 12 >> 2]](C), (C = A[I + 4 >> 2]) && fA[A[A[C >> 2] + 16 >> 2]](C), _A(I)), A[56797] = 0, A[56797] = fE();
      }
      function oA(I, C) {
        var Q = 0;
        return I && (Q = tA(I, 0, C, 0), (I | C) >>> 0 < 65536 || (Q = QA ? -1 : Q)), !(I = KI(Q)) | !(3 & G[I - 4 | 0]) || pA(I, 0, Q), I;
      }
      function hA(I, C) {
        var Q, g;
        g = A[130128 + (C - T(Q = (0 | C) / 100 | 0, 100) << 2) >> 2], A[I + 100 >> 2] = g, A[I + 96 >> 2] = g, C + 99 >>> 0 >= 199 && (A[I + 100 >> 2] = A[130128 + (Q << 2) >> 2]);
      }
      function dA(I) {
        var C = 0;
        (C = KI(1344)) && (I = bA(C, I, 1344), C = 216192 + (A[50758] << 4) | 0, A[C >> 2] = 11, A[C + 8 >> 2] = I, I = A[50758] + 1 | 0, A[50758] = (0 | I) <= 169 ? I : 0);
      }
      function OA(I, C) {
        var Q = 0;
        A: if (Q = A[I >> 2]) for (; ; ) {
          if (C && !aI(C, Q)) break A;
          if (!(Q = A[(I = I + 8 | 0) >> 2])) break;
        }
        return A[I + 4 >> 2];
      }
      function UI(I) {
        var C, Q = 0;
        return t = C = t - 16 | 0, Q = -1, hg(I) || (0 | fA[A[I + 32 >> 2]](I, C + 15 | 0, 1)) == 1 && (Q = G[C + 15 | 0]), t = C + 16 | 0, Q;
      }
      function eA(I, C) {
        var Q = 0, g = 0;
        if (C) {
          for (; g = I, (Q = A[I >> 2]) && (I = g + 4 | 0, (0 | C) != (0 | Q)); ) ;
          return Q ? g : 0;
        }
        return (ID(I) << 2) + I | 0;
      }
      function eI(I, C) {
        var Q = 0, g = 0;
        if (Q = a[I >> 1]) for (; ; ) {
          if (g = g + 1 | 0, (0 | C) == (0 | Q)) return g;
          if (!(Q = a[(g << 1) + I >> 1])) break;
        }
        return 0;
      }
      function CQ(I, C) {
        var Q = 0, g = 0;
        C >>> 0 <= 31 ? (g = A[I >> 2], Q = I + 4 | 0) : (C = C - 32 | 0, Q = I), Q = A[Q >> 2], A[I >> 2] = g << C, A[I + 4 >> 2] = Q << C | g >>> 32 - C;
      }
      function iB(I, C) {
        var Q = 0, g = 0;
        Q = A[I + 4 >> 2], C >>> 0 <= 31 ? g = A[I >> 2] : (C = C - 32 | 0, g = Q, Q = 0), A[I + 4 >> 2] = Q >>> C, A[I >> 2] = Q << 32 - C | g >>> C;
      }
      function aC(I) {
        var C = 0;
        I = I || 1;
        A: {
          for (; ; ) {
            if (C = KI(I)) break A;
            if (!(C = A[57276])) break;
            fA[0 | C]();
          }
          WQ(), r();
        }
        return C;
      }
      function FU(I) {
        return I >>> 0 <= 131071 ? G[117424 + (I >>> 3 & 31 | G[117424 + (I >>> 8 | 0) | 0] << 5) | 0] >>> (7 & I) & 1 : I >>> 0 < 196606;
      }
      function _w(I, C, Q, g, E, U, w, D, J) {
        A[I >> 2] = C, A[I + 4 >> 2] = Q, A[I + 8 >> 2] = g, A[I + 12 >> 2] = 65535 & E | (J >>> 16 & 32768 | E >>> 16 & 32767) << 16;
      }
      function SQ(I, C, Q) {
        return Q ? (0 | I) == (0 | C) ? 1 : !aI(A[I + 4 >> 2], A[C + 4 >> 2]) : A[I + 4 >> 2] == A[C + 4 >> 2];
      }
      function $w(I) {
        var C = 0;
        (0 | (C = 0 | yI(-100, 0 | I, 0))) == -31 && (C = 0 | vC(0 | I)), C >>> 0 >= 4294963201 && (A[56798] = 0 - C);
      }
      function OU() {
        var I;
        I = KI(84) + 80 | 0, A[I >> 2] = 125420, A[I >> 2] = 125380, A[I >> 2] = 125400, bE(0 | I, 125512, 9), r();
      }
      function zU(I) {
        var C, Q;
        return C = DB(I), Q = DB(I), DB(I) << 16 & 16711680 | Q << 8 & 65280 | 255 & C | DB(I) << 24;
      }
      function yB(I) {
        var C = 0;
        return I ? (C = 1, I - 9472 >>> 0 < 160 | I - 65529 >>> 0 < 7 || (C = pI(I)), C) : 0;
      }
      function AD(I, C) {
        var Q;
        return Q = C >> 31, I = (A[I + 76 >> 2], wU(I, C, Q));
      }
      function ID(I) {
        var C = 0, Q = 0;
        for (Q = I; Q = (C = Q) + 4 | 0, A[C >> 2]; ) ;
        return C - I >> 2;
      }
      function CD(I, C) {
        return M[0 | I] = C, M[I + 4 | 0] = 0, M[I + 3 | 0] = C >>> 24, M[I + 2 | 0] = C >>> 16, M[I + 1 | 0] = C >>> 8, I;
      }
      function MC(I, C) {
        var Q = 0;
        return (-1 >>> (Q = 31 & C) & I) << Q | ((Q = I) & -1 << (I = 0 - C & 31)) >>> I;
      }
      function DE(I, C) {
        var Q = 0;
        return (0 | I) == 73 && (Q = 305, G[C + 173 | 0]) || (Q = xC(I)), Q;
      }
      function GC(I) {
        A[36114] != (0 | I) && (A[36115] = 0, mB(I), A[36114] = I, A[36115] = A[36115] + 1);
      }
      function XU(I) {
        return I ? A[34460] + I | 0 : (rU(85328, 20, A[30450]), A[32320]);
      }
      function MU(I) {
        var C, Q;
        return (Q = KI(C = SA(I) + 1 | 0)) ? bA(Q, I, C) : 0;
      }
      function QD() {
        var I;
        A[33287] = 0, (I = A[33282]) && (_A(I), A[33286] = 0, A[33282] = 0);
      }
      function lI(I, C, Q) {
        var g;
        t = g = t - 16 | 0, A[g + 12 >> 2] = Q, vU(I, C, Q), t = g + 16 | 0;
      }
      function rU(I, C, Q) {
        I = (A[Q + 76 >> 2], QU(I, C, Q));
      }
      function lg(I, C) {
        return C ? I << 24 | (65280 & I) << 8 | I >>> 8 & 65280 | I >>> 24 : I;
      }
      function oB(I) {
        return I = I - 8212 >>> 0 >= 12 ? eI(93856, I) : 1;
      }
      function gD(I) {
        var C = 0;
        I && ((C = A[I + 688 >> 2]) && _A(C), _A(I));
      }
      function BD(I) {
        return I = (0 | I) <= 127 ? QQ(87712, I) : 0;
      }
      function mU(I) {
        return !(I = G[0 | I] ? 1 : IC(I, I + 1 | 0, 3));
      }
      function ED(I) {
        (I = (0 | (I = 0 | HA(0 | I))) != 27 ? I : 0) && (A[56798] = I);
      }
      function kg(I, C, Q) {
        return I |= 0, C |= 0, 0 | fA[0 | (Q |= 0)](I, C);
      }
      function QQ(I, C) {
        return I = BB(I, C), G[0 | I] == (255 & C) ? I : 0;
      }
      function eU(I, C) {
        return XE(I, C, 2147483647), QA = MQ, HQ;
      }
      function GU(I) {
        return I ? 31 - aA(I - 1 ^ I) | 0 : 32;
      }
      function CC(I, C, Q) {
        32 & G[0 | I] || QU(C, Q, I);
      }
      function sI(I, C, Q) {
        M[(mQ(I, C, Q) + Q | 0) - 1 | 0] = 0;
      }
      function FE(I) {
        return wB(I, 188776, 189328);
      }
      function UD(I, C) {
        C |= 0, A[(I |= 0) + 8 >> 2] = C;
      }
      function vU(I, C, Q) {
        return eB(I, C, Q, 0, 0);
      }
      function RD(I) {
        return A[(I |= 0) + 12 >> 2];
      }
      function wD(I) {
        return A[(I |= 0) + 16 >> 2];
      }
      function DD(I) {
        return A[(I |= 0) + 20 >> 2];
      }
      function uU(I) {
        return A[(I |= 0) + 8 >> 2];
      }
      function FD(I) {
        return A[(I |= 0) + 4 >> 2];
      }
      function MD(I) {
        return A[(I |= 0) >> 2];
      }
      function _U(I, C, Q) {
        return XE(I, C, Q);
      }
      function JU(I) {
        (I |= 0) && _A(I);
      }
      function UC(I, C) {
        YA(SA(I) + I | 0, C);
      }
      function $U(I) {
        return 0 | (I |= 0);
      }
      function GD(I) {
        return 0;
      }
      function NB(I) {
        _A(I |= 0);
      }
      function JD(I) {
      }
      j(i = G, 1024, ""), j(i, 45536, "HhYWFhgWFhYXExYaFhIWFg4ODg4ODg4ODg4WFhoaGhYWCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoXFhMZERkGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBgYGBhcaExo="), j(i, 45664, ""), j(i, 81428, "ggAAAAAAAAIAAAAAAAAAAgAAAAAAAAAC"), j(i, 81475, "AgAAAAAAACAAAAAAAAAAIA=="), j(i, 81506, "IA=="), j(i, 81522, "IAAAAAAAAAAg"), j(i, 81618, "IA=="), j(i, 81634, "IA=="), j(i, 81650, "IAAAAAAAAAAg"), j(i, 81682, "IAAAAAAAAAAgAAAAAAAAACAAAAAAAIAAAAAAAAAAgA=="), j(i, 81728, "gAAAAAAAAACAAAAAAAAAAIA="), j(i, 81760, "gAAAAAAAAACA"), j(i, 81904, "gAAAAAAAAACAAAAAAAAAAIAAAAAAAAAAgAAAAAAAAACAAAAAAAAAAAAU"), j(i, 81961, "FAAAAAAAAAAU"), j(i, 81985, "FAAAAAAAAAAE"), j(i, 82009, "BAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABA="), j(i, 82097, "EAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABA="), j(i, 82169, "EAAAAAAAAAAQAAAAAAAAABAAAAAAAACA"), j(i, 82224, "gAAAAAAAAACA"), j(i, 82272, "gAAAAAAAAACAAAAAAAAAAIAAAAAAAAAAgAAAAAAAAACAAAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABA=="), j(i, 82353, "BAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABA=="), j(i, 82393, "BAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAQAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAABAAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABA=="), j(i, 82625, "BAAAAAAAAAAE"), j(i, 82649, "BAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAQAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABA=="), j(i, 83033, "BAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABA=="), j(i, 83097, "BAAAAAAAAAAE"), j(i, 83121, "BAAAAAAAAAAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAEAAAAAAAAQAAAEAAAAAFAAAAQAAAAgEAAABAAAAAQQAAAAAAAACBAAAAAAAAAgEAAAAAAAAAAQAAAAAAAAABAAAAQAAAAgEAAAAAAAAAQQAAAAAAAAARAAAAAAAAAAEAAAAAAAAAAQA=="), j(i, 83288, "QA=="), j(i, 83303, "AkAAAAAAAAAQQAAAEAAAAIBAAAAAAAAACEA="), j(i, 83352, "QAAAAAAAABBAAAAQAAAAgAAg"), j(i, 83379, "gAAAAABAAACQggAAIEAAAJAAAAAAAAAAgAAAAABAAACQggAAIEAAAJCCAAAgAAAAgAAAAAAAAACAAAAAAAAAAIAAAAAAQAAAkIIAACBAAACQggAAIEAAAJCCAAAgQAAAkAAAAEBAAACQAAAAYEAAAJCCAABgQAAAkIIAACBAAACQggAAIEAAAJCCAAAgQAAAkIIAACBAAACQggAAIAAAAIAAAAAEAAAAAAAAAIAAAAAAAAAACAAAAAAAAAAEAAAAAAAAACAAAAAAAAAAQAAAAAAAAACAAAAAAAAAAIAAAAAAAAAAAkAAAAAAAAAQQAAAEAAAAIBAAAAAAAAABEAAAAAAAAAIAAAAgIIAAAAAAACAgAAAAAAAAIAAAAAAAAAAgIYAAAAAAACAhgAAAAAAAICAAAAAAAAAgIAAAAAAAACAggAAAAAAAICAAAAAAAAAgIAAAAAAAACAgAAAAAAAAICAAAAAAAAAgJIAAACAAACAggAAAIAAAICCAAAAAAAAgIIAAAAAAACAggAAAIAAAICCAAAAAAAAgIIAAAAAAACAggAAAAAAAICAAAAAAAAAgIAAAAAAAACAggAAAAAAAICGAAAAAAAAgIIAAAAAAACAhgAAAAAAAICCAAAAAAAAgIIAAAAAAACAggAAAAAAAICCAAAAAAAAgIAAAAAAAACAggAAAAAAAICAAAAAAAAAgIIAAAAAAACAggAAAAAAAICCAAAAAAAAgIAAAAAAAACAggAAAAAAAICGAAAAAAAAgJIAAAAAAACAhgAAAAAAAICAAAAAAAAAgIAAAAAAAACAhg=="), j(i, 83999, ""), j(i, 93904, "ICAgICAgICAgICYlKyNTRFpBTCEgQD9KTktWP1RYP1dBQkNIRkdZPT0sLCcqICAAIAAhACIAsAIkACUA5gDIAigAKQB+AisAzAItAC4ALwBSAjEAMgBcAjQANQA2ADcAdQI5ANACsgI8AD0APgCUAlkCUQKyA+cA8ABbAkYAYgInAWoCXwJLAGsCcQJLAVQCpgNjAoACgwK4A4oCjAJTAccD+ACSAioDXABdAF4AXwBgAGEAYgBjAGQAZQBmAGECaABpAGoAawBsAG0AbgBvAHAAcQByAHMAdAB1AHYAdwB4AHkAegB7AHwAfQADA38APT0sLCcnAAMCBAUGBxoAAAAAAQECAwMEBQYHBwgJCgsAAAEBAgIDAwQFBgcHCAkKAAABAgMDAwQFBgcHBwgJClNldFdvcmRTdHJlc3MA5ADrAO8A9gD8AP8AAAAAAAAAYWFhYWFhYWNlZWVlaWlpaWRub29vb28Ab3V1dXV5dHNhYWFhYWFhY2VlZWVpaWlpZG5vb29vbwBvdXV1dXl0eWFhYWFhYWNjY2NjY2NjZGRkZGVlZWVlZWVlZWVnZ2dnZ2dnZ2hoaGhpaWlpaWlpaWlpaWlqamtra2xsbGxsbGxsbGxubm5ubm5ubm5vb29vb29vb3JycnJycnNzc3Nzc3NzdHR0dHR0dXV1dXV1dXV1dXV1d3d5eXl6enp6enpzYmJiYgAAb2NjZGRkZGRlZWVmZmdnaGlpa2tsbG1ubm9vb29vcHB5AABzc3R0dHR1dXV2eXl6enp6enp6AAAAd3R0dGtkZGRsbGxubm5hYWlpb291dXV1dXV1dXV1ZWFhYWFhYWdnZ2dra29vb296empkZGRnZ3d3bm5hYWFhb29hYWFhZWVlZWlpaWlvb29vcnJycnV1dXVzc3R0eXloaG5kb296emFhZWVvb29vb29vb3l5bG50amRxYWNjbHRzegAAYnV2ZWVqanFxcnJ5eWFhYWJvY2RkZWVlZWVl"), j(i, 94846, "TG9va3VwRGljdDIAAAAAAAAAgACBAIIAgwCEAIUAhgCHAIgAiQCKAIsAjACNAI4AjwCQAJEAkgCTAJQAlQCWAJcAmACZAJoAmwCcAJ0AngCfAKAAoQCiAKMApAClAKYApwCoAKkAqgCrAKwArQCuAK8AsACxALIAswC0ALUAtgC3ALgAuQC6ALsAvAC9AL4AvwDAAMEAwgDDAMQAxQDGAMcAyADJAMoAywDMAM0AzgDPANAA0QDSANMA1ADVANYA1wDYANkA2gDbANwA3QDeAN8A4ADhAOIA4wDkAOUA5gDnAOgA6QDqAOsA7ADtAO4A7wDwAPEA8gDzAPQA9QD2APcA+AD5APoA+wD8AP0A/gD/AIAAgQCCAIMAhACFAIYAhwCIAIkAigCLAIwAjQCOAI8AkACRAJIAkwCUAJUAlgCXAJgAmQCaAJsAnACdAJ4AnwCgAAQB2AJBAaQAPQFaAacAqABgAV4BZAF5Aa0AfQF7AbAABQHbAkIBtAA+AVsBxwK4AGEBXwFlAXoB3QJ+AXwBVAHBAMIAAgHEADkBBgHHAAwByQAYAcsAGgHNAM4ADgEQAUMBRwHTANQAUAHWANcAWAFuAdoAcAHcAN0AYgHfAFUB4QDiAAMB5AA6AQcB5wANAekAGQHrABsB7QDuAA8BEQFEAUgB8wD0AFEB9gD3AFkBbwH6AHEB/AD9AGMB2QKAAIEAggCDAIQAhQCGAIcAiACJAIoAiwCMAI0AjgCPAJAAkQCSAJMAlACVAJYAlwCYAJkAmgCbAJwAnQCeAJ8AoAAmAdgCowCkAP3/JAGnAKgAMAFeAR4BNAGtAP3/ewGwACcBsgCzALQAtQAlAbcAuAAxAV8BHwE1Ab0A/f98AcAAwQDCAP3/xAAKAQgBxwDIAMkAygDLAMwAzQDOAM8A/f/RANIA0wDUACAB1gDXABwB2QDaANsA3ABsAVwB3wDgAOEA4gD9/+QACwEJAecA6ADpAOoA6wDsAO0A7gDvAP3/8QDyAPMA9AAhAfYA9wAdAfkA+gD7APwAbQFdAdkCgACBAIIAgwCEAIUAhgCHAIgAiQCKAIsAjACNAI4AjwCQAJEAkgCTAJQAlQCWAJcAmACZAJoAmwCcAJ0AngCfAKAABAE4AVYBpAAoATsBpwCoAGABEgEiAWYBrQB9Aa8AsAAFAdsCVwG0ACkBPAHHArgAYQETASMBZwFKAX4BSwEAAcEAwgDDAMQAxQDGAC4BDAHJABgBywAWAc0AzgAqARABRQFMATYB1ADVANYA1wDYAHIB2gDbANwAaAFqAd8AAQHhAOIA4wDkAOUA5gAvAQ0B6QAZAesAFwHtAO4AKwERAUYBTQE3AfQA9QD2APcA+ABzAfoA+wD8AGkBawHZAoAAgQCCAIMAhACFAIYAhwCIAIkAigCLAIwAjQCOAI8AkACRAJIAkwCUAJUAlgCXAJgAmQCaAJsAnACdAJ4AnwCgAAEEAgQDBAQEBQQGBAcECAQJBAoECwQMBK0ADgQPBBAEEQQSBBMEFAQVBBYEFwQYBBkEGgQbBBwEHQQeBB8EIAQhBCIEIwQkBCUEJgQnBCgEKQQqBCsELAQtBC4ELwQwBDEEMgQzBDQENQQ2BDcEOAQ5BDoEOwQ8BD0EPgQ/BEAEQQRCBEMERARFBEYERwRIBEkESgRLBEwETQROBE8EFiFRBFIEUwRUBFUEVgRXBFgEWQRaBFsEXASnAF4EXwSAAIEAggCDAIQAhQCGAIcAiACJAIoAiwCMAI0AjgCPAJAAkQCSAJMAlACVAJYAlwCYAJkAmgCbAJwAnQCeAJ8AoAD9//3//f+kAP3//f/9//3//f/9//3/DAatAP3//f/9//3//f/9//3//f/9//3//f/9//3/Gwb9//3//f8fBv3/IQYiBiMGJAYlBiYGJwYoBikGKgYrBiwGLQYuBi8GMAYxBjIGMwY0BjUGNgY3BjgGOQY6Bv3//f/9//3//f9ABkEGQgZDBkQGRQZGBkcGSAZJBkoGSwZMBk0GTgZPBlAGUQZSBv3//f/9//3//f/9//3//f/9//3//f/9//3/gACBAIIAgwCEAIUAhgCHAIgAiQCKAIsAjACNAI4AjwCQAJEAkgCTAJQAlQCWAJcAmACZAJoAmwCcAJ0AngCfAKAAGCAZIKMArCCvIKYApwCoAKkAegOrAKwArQD9/xUgsACxALIAswCEA4UDhgO3AIgDiQOKA7sAjAO9AI4DjwOQA5EDkgOTA5QDlQOWA5cDmAOZA5oDmwOcA50DngOfA6ADoQP9/6MDpAOlA6YDpwOoA6kDqgOrA6wDrQOuA68DsAOxA7IDswO0A7UDtgO3A7gDuQO6A7sDvAO9A74DvwPAA8EDwgPDA8QDxQPGA8cDyAPJA8oDywPMA80DzgP9/4AAgQCCAIMAhACFAIYAhwCIAIkAigCLAIwAjQCOAI8AkACRAJIAkwCUAJUAlgCXAJgAmQCaAJsAnACdAJ4AnwCgAP3/ogCjAKQApQCmAKcAqACpANcAqwCsAK0ArgCvALAAsQCyALMAtAC1ALYAtwC4ALkA9wC7ALwAvQC+AP3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f8XINAF0QXSBdMF1AXVBdYF1wXYBdkF2gXbBdwF3QXeBd8F4AXhBeIF4wXkBeUF5gXnBegF6QXqBf3//f8OIA8g/f+AAIEAggCDAIQAhQCGAIcAiACJAIoAiwCMAI0AjgCPAJAAkQCSAJMAlACVAJYAlwCYAJkAmgCbAJwAnQCeAJ8AoAChAKIAowCkAKUApgCnAKgAqQCqAKsArACtAK4ArwCwALEAsgCzALQAtQC2ALcAuAC5ALoAuwC8AL0AvgC/AMAAwQDCAMMAxADFAMYAxwDIAMkAygDLAMwAzQDOAM8AHgHRANIA0wDUANUA1gDXANgA2QDaANsA3AAwAV4B3wDgAOEA4gDjAOQA5QDmAOcA6ADpAOoA6wDsAO0A7gDvAB8B8QDyAPMA9AD1APYA9wD4APkA+gD7APwAMQFfAf8AgACBAIIAgwCEAIUAhgCHAIgAiQCKAIsAjACNAI4AjwCQAJEAkgCTAJQAlQCWAJcAmACZAJoAmwCcAJ0AngCfAKAABAESASIBKgEoATYBpwA7ARABYAFmAX0BrQBqAUoBsAAFARMBIwErASkBNwG3ADwBEQFhAWcBfgEVIGsBSwEAAcEAwgDDAMQAxQDGAC4BDAHJABgBywAWAc0AzgDPANAARQFMAdMA1ADVANYAaAHYAHIB2gDbANwA3QDeAN8AAQHhAOIA4wDkAOUA5gAvAQ0B6QAZAesAFwHtAO4A7wDwAEYBTQHzAPQA9QD2AGkB+ABzAfoA+wD8AP0A/gA4AYAAgQCCAIMAhACFAIYAhwCIAIkAigCLAIwAjQCOAI8AkACRAJIAkwCUAJUAlgCXAJgAmQCaAJsAnACdAJ4AnwCgAAEOAg4DDgQOBQ4GDgcOCA4JDgoOCw4MDg0ODg4PDhAOEQ4SDhMOFA4VDhYOFw4YDhkOGg4bDhwOHQ4eDh8OIA4hDiIOIw4kDiUOJg4nDigOKQ4qDisOLA4tDi4OLw4wDjEOMg4zDjQONQ42DjcOOA45DjoO/f/9//3//f8/DkAOQQ5CDkMORA5FDkYORw5IDkkOSg5LDkwOTQ5ODk8OUA5RDlIOUw5UDlUOVg5XDlgOWQ5aDlsO/f/9//3//f+AAIEAggCDAIQAhQCGAIcAiACJAIoAiwCMAI0AjgCPAJAAkQCSAJMAlACVAJYAlwCYAJkAmgCbAJwAnQCeAJ8AoAAdIKIAowCkAB4gpgCnANgAqQBWAasArACtAK4AxgCwALEAsgCzABwgtQC2ALcA+AC5AFcBuwC8AL0AvgDmAAQBLgEAAQYBxADFABgBEgEMAckAeQEWASIBNgEqATsBYAFDAUUB0wBMAdUA1gDXAHIBQQFaAWoB3AB7AX0B3wAFAS8BAQEHAeQA5QAZARMBDQHpAHoBFwEjATcBKwE8AWEBRAFGAfMATQH1APYA9wBzAUIBWwFrAfwAfAF+ARkggACBAIIAgwCEAIUAhgCHAIgAiQCKAIsAjACNAI4AjwCQAJEAkgCTAJQAlQCWAJcAmACZAJoAmwCcAJ0AngCfAKAAAh4DHqMACgELAQoepwCAHqkAgh4LHvIerQCuAHgBHh4fHiABIQFAHkEetgBWHoEeVx6DHmAe8x6EHoUeYR7AAMEAwgDDAMQAxQDGAMcAyADJAMoAywDMAM0AzgDPAHQB0QDSANMA1ADVANYAah7YANkA2gDbANwA3QB2Ad8A4ADhAOIA4wDkAOUA5gDnAOgA6QDqAOsA7ADtAO4A7wB1AfEA8gDzAPQA9QD2AGse+AD5APoA+wD8AP0AdwH/AIAAgQCCAIMAhACFAIYAhwCIAIkAigCLAIwAjQCOAI8AkACRAJIAkwCUAJUAlgCXAJgAmQCaAJsAnACdAJ4AnwCgAKEAogCjAKwgpQBgAacAYQGpAKoAqwCsAK0ArgCvALAAsQCyALMAfQG1ALYAtwB+AbkAugC7AFIBUwF4Ab8AwADBAMIAwwDEAMUAxgDHAMgAyQDKAMsAzADNAM4AzwDQANEA0gDTANQA1QDWANcA2ADZANoA2wDcAN0A3gDfAOAA4QDiAOMA5ADlAOYA5wDoAOkA6gDrAOwA7QDuAO8A8ADxAPIA8wD0APUA9gD3APgA+QD6APsA/AD9AP4A/wCAAIEAggCDAIQAhQCGAIcAiACJAIoAiwCMAI0AjgCPAJAAkQCSAJMAlACVAJYAlwCYAJkAmgCbAJwAnQCeAJ8AoAAEAQUBQQGsIB4gYAGnAGEBqQAYAqsAeQGtAHoBewGwALEADAFCAX0BHSC2ALcAfgENARkCuwBSAVMBeAF8AcAAwQDCAAIBxAAGAcYAxwDIAMkAygDLAMwAzQDOAM8AEAFDAdIA0wDUAFAB1gBaAXAB2QDaANsA3AAYARoC3wDgAOEA4gADAeQABwHmAOcA6ADpAOoA6wDsAO0A7gDvABEBRAHyAPMA9ABRAfYAWwFxAfkA+gD7APwAGQEbAv8AgACBAIIAgwCEAIUAhgCHAIgAiQCKAIsAjACNAI4AjwCQAJEAkgCTAJQAlQCWAJcAmACZAJoAmwCcAJ0AngCfAKAABAEFAUEBrCAeIGABpwBhAakAGAKrAHkBrQB6AXsBsACxAAwBQgF9AR0gtgC3AH4BDQEZArsAUgFTAXgBfAHAAMEAwgACAcQABgHGAMcAyADJAMoAywDMAM0AzgDPABABQwHSANMA1ABQAdYAWgFwAdkA2gDbANwAGAEaAt8A4ADhAOIAAwHkAAcB5gDnAOgA6QDqAOsA7ADtAO4A7wARAUQB8gDzAPQAUQH2AFsBcQH5APoA+wD8ABkBGwL/AP3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f/9//3//f/9/wEJAgkDCQUJBgkHCQgJCQkKCQsJDgkPCRAJDQkSCRMJFAkRCRUJFgkXCRgJGQkaCRsJHAkdCR4JHwkgCSEJIgkjCSQJJQkmCScJKAkpCSoJKwksCS0JLgkvCV8JMAkxCTIJMwk0CTUJNgk3CTgJOQkgAD4JPwlACUEJQglDCUYJRwlICUUJSglLCUwJSQlNCTwJZAn9//3//f/9//3/IAAwADEAMgAzADQANQA2ADcAOAA5AP3//f/9//3//f8CAAAAAAAAAAEAAAADAAAA//36+Pb08vDu7Oro5uTi4N7c2tjW1NLQzszKyMbEwsC+vLq4trSysK6sqqimpKKgnpyamJaUkpCOjIqIhoSCgH58enh2dHJwbmxqaGZkYmBeXFpYVlRSUE5MSkhGREJAPjw6ODY0MjAuLCooJiQiIB4cGhgWFBIQDgwKCAYEAgAAAgQGCAoMDhASFBYYGhweICIkJigqLC4wMjQ2ODo8PkBCREZISkxOUFJUVlhaXF5gYmRmaGpsbnBydHZ4enx+gIKEhoiKjI6QkpSWmJqcnqCipKaoqqyusLK0tri6vL7AwsTGyMrMztDS1NbY2tze4OLk5ujq7O7w8vT2+Pr9///06uDWzMO6saifl4+Hf3hxamNcVlBKRD85NC8rJiIeGhcTEA0LCAYEAgEAAAAAAAAAAQIDBAUHCAoMDhATFRcaHR8iJSgsLjAyNDY5Oz1AQkVHSkxPUVRXWl1fYmVoa25xdHh7foGFiIuPkpaZnaCkqKyvs7e7v8PHy8/T19vgz8zJxsPAvbm0sKunopyXkoyGgXt1b2ljXVdQSkQ+ODMtJyIcFxINCAQCAgEAAAAAAAEBAgMEBQcICgwNDxIUFhkbHiEkJyotMDQ2ODo8P0FDRkhLTVBSVVhaXWBjZmlsb3J1eHt+gYWIi4+SlpmdoKSorK+zt7u/w8fLz9PX2+D/+fTu6eTf2tXQy8bBvbizr6qmoZ2ZlZCMiISAfXl1cW5qZ2NgXVlWU1BNSkdEQT48OTc0Mi8tKygmJCIgHhwaGRcVFBIRDw4NDAoJCAcGBQUEAwICAQE="), j(i, 99845, "AQECAgMEBAUGBwgJCgsMDg8QEhMVFxgaHB4g0M7NzMrIx8XDwcC9u7i1s7CtqqejoJ2ZlpKPi4eEgHx4dHBtaWVhXVlVUU1KRkI+Ozc0MS8tKigmJCIgHhwaGRcVFBIRDw4NDAoJCAcGBQUEAwICAQE="), j(i, 99973, "AQECAgMEBAUGBwgJCgsMDg8QEhMVFxgaHB4gmJmZmpydn6Gkp6mssLO2ur7BxcnN0dTY3N/j5urt8PL19/n7/P3+/v////////79+/r49vPx7uzp5uTg3drX09DMyMTAvLi0sKyno5+alpGNiIR/e3ZybWllYFxYVFBMSERAPDk1Mi8rKCYjIB0aFxUSDw0KCAcFAwIBAAAAAAD+///////+/fz6+Pb08e7r6OXh3trW0s3JxL+6trCrpqGclpGLhoB7dW9qZF9ZVE9JRD86NTArJiIdGRURDQoHBAMBAAAAAAAAAAABAQIEBQcJCw0QEhUYGx4iJSktMTU6PkNITFFXW15iZWhrbnF0dnh7fH6AgYKDg4SEg4OCgXJycXFwb21samhmZGFfXFpXVFFOS0hFQj87ODUyLywpJiMgHRsYFhQSEA4MCwoJCAcHBwcHBgUFBQUFBQUFBQYHBwgJCgwNDxASFBYYGx0gIyYpLC8zNzs/Q0dMUVZbYGVqb3R5f4SJj5Wboaets7rAx87V3OPq8fX3+vz9/v///v79/fz7+/r6+fj49/f29vX09PPz8vLx8PDv7u7t7Ovq6uno5+bl5OPi4eDe3dzb2djW1dPS0M7My8nHxcPAvry5t7Wyr62qp6ShnpqXlJCNiYWBfXl1cW1oZGFeW1dUUU1KRkNAPDk1Mi4qJyMfHBgUEQ0LCQcFBAMCAQAAAAAAAAAAAQEBAgIDAwQEBQYGBwgICQoLDAwNDg8QERITFBYXGBkbHB0fICIjJSYoKSstLzAyNDY4Ojw+QEJER0lLTlBSVVdaXV9iZWdqbXBzdnl8f4KGiYyQk5aanaCjpqmsr7K1uLu+wcTHys3Q09bZ3N/i5Ofp7O7w8vT2+Pr7/X9/f4CBg4SHiYyPkpaZnaGlqq6yt7vAxcnN0tba3uLm6u3w8/X4+vv8/f7+/fz7+ff08Ozn4tzVzsa9tKmekoiCfXdybGZgWlROSUI8NzItKCQfGxgUEQ4MCQcGBQQEBAQFBggKDRAUGB0jKS83PkdQWmRwfIOFiIqMjo+RkpOTAEAIAEYSAAAAAAAAGAwAAARQEgZOFgAAAAAAACI0AAAEWBYGUhYAAAAAAAAiQAAAAFwIAFxQAAAAAAAATAgBAABWBABeQgAAAAAAACIKAAAAPgoAPhQAAAAAAAAcEAAABEQSBkQWAAAAAAAAHiwAAAZAEABCIAAAAAAAACASAAACRC4AKiAAAAAAAAAuOgAABE4YBkgWAAAAAAAAKjQAAARYIgBAIAAAAAAAAC5SAAAAOAwAOBQAAAAAAAAYDAAAAEYSAEYYAAAAAAAAIBQAAAkAAAAJAAAAEAAAABAAAAAQAAAAFwAAADcAAAAgAAAAACgYCAAKNCAUCgYmGA4EAAYAAAAHAAAACQAAAAkAAAAUAAAAFAAAABQAAAAZAAAA5iAUCA=="), j(i, 101072, "ZgNmAWYCpgSmAiYEpoooAmoDagFqAqoCbgNuAW4CrgIpALMEdAN0AXQCtAS0AgAAdAR6A3oBegK6An4BOQC+AgAApgMAAKYBAADmAwAAaAEAAGgCAAAoAwAA6AEAAOkBAABpBAAAqgMAAKoBAAAqAwAA6gMAAOoBAABsAgAArAEAACwDAAAsAgAAbQIAAG0EAACuBAAArgMAAK4BAADuAwAALgAAAO6LAABvAgAAMAIwAAAAcQEAADECAADxAQAAMQMAAHEEAABzAQAAMwIAAPMBMwAAADMAAAC0AwAAtAEAAPQCAAC0igAAdwEAADcCAAD3AQAAeAEAAHgCAAA4AgAA+AEAADkCAAD5AQAAeQQAALoEAAC6AwAAugEAADoEAAD6AgAA+gMAAHwCAAB+AgAAAAB/AQAAPwMAAP8BOACmAAEAgQBnBQAAKAEpBWkF6gAAAEIFAADDAEMdAADvBGwFLABsAAQAAACtAG0FAADuBAUAbgCxBPEEMQXxj7IAAAByBQAAMwVzAPQEtJoAAAgAtwCOADcVAAA3BQAAzQB3ALcIOAUAAG8FyQAJAbkAOQX6BAoAewW7ALwAvgB+AD8FPwEAAAsBAADMAIwAAAAAAGcAAABsDW0ALwGwAHEAdgVMBEwc6Y8AAOnPOY4AADnO"), j(i, 101586, "sQNZAlsCswO5A1MByQPGA4MCxQOSApQCfgJ8AgAAqgBhgLIAMoCzADOAuQAxgLoAb4CwAmiAsQJmgrICaoCzAnKAtAJ5grUCe4K2AoGCtwJ3gLgCeYDAApSCwQKVguACY4LhAmyA4gJzgOMCeIBwIDCAcSBpgHQgNIB1IDWAdiA2gHcgN4B4IDiAeSA5gHogK4B7IC2AfCA9gH0gKIB+ICmAfyBugIAgMECBIDFAgiAyQIMgM0CEIDRAhSA1QIYgNkCHIDdAiCA4QIkgOUCKICtAiyAtQIwgPUCNIChAjiApQJAgYUCRIGVAkiBvQJMgeECUIFlClSBoQJYga0CXIGxAmCBtQJkgbkCaIHBAmyBzQJwgdEAAAAAAaXhjbXZsZA=="), j(i, 101888, "AQAAAAoAAABkAAAA6AMAAAUAAAAyAAAA9AEAAAAXCgkYExgY"), j(i, 101936, "///////9+fXy7uvo5OHe2tjV0s/MycbEwb+8ure1s7CurKmopaOhn56bmZiWlJKRj42LiYiHhYOCgX9+fHt6eHd2dXNycXBvbm1ramloZ2ZlZGNiYWBfXl1cW1pZWVhXVlVUU1JSUVBQT05NTExLS0pJSEdHRkVFRENDQkJBQEA/Pj49PTw7Ozo6OTk4ODc2NjU1NDQ0MzIyMTEwMC8vLi4uLS0sLCwrKyopKCgoJycnJiYmJSUlJCQjIyMjIiIiISEhICAfHx8eHh4dHR0dHBwbGxsbGhoaGhkZGRgYGBgXFxcXFhYWFRUVFRQUFBQTExMSEhERERAQEBAQEA8PDw8ODg4NDQ0MDAwMCwsLCwoKCgkJCQgICAAAAAAAAAAAeHl4d3d2dnV0dHNycXBwb29ubWxrampoZ2dmZmZlZWNiYmFgYF9eXVtaW1pZWFZVVlVVVFJRUE9NTk5MTUtLSklHSEZFRUVDQUA/Pz89PTs7Ozo4OTo4NjU0NDU0NDIwLy8tLi0="), j(i, 102336, "FhYWFhYWFhUVFRUUFBMTEhEQDw8PDw8PDwAAAAAAAABkeGRpZG5uZF9kaXhpbn2Ch3N9ZGl4S2RLaXhVS2RpeFVpX3N4ZF9kbnhfaWRzeGRkZGl4ZGlfc3huX2RpeGRpaXp9bmlkaXhkaWl6fW5pZGl4X2lkc3huZGRkeGRkZGRkZGRk"), j(i, 102480, "ZJZkaW5zbm5uZGmWaW59h4xzh2RpllppWnqHZFpkaZZkaWR6h2RkZGmWZGlpc4duaWRplmRpaXqCeH1kaZZkaW56fXNuZGmWZGlpeod4aWRplmRpaXOHbmlkZGRkZGRkZGRkZA=="), j(i, 102592, "bnhkbm5ubm5ubm54ZG5ubm5ubm5ueGRuZG5ubmRubnhkbm5ubm5ubm54ZG5ubm5ubm5ueGRubm5ubm5ubnhkbm5ubm5ubm54ZG5ubm5ubm5ueGRubm5ubm5ubnhkbm5ubm5ubg=="), j(i, 102708, "rwAAAGQAAAAyAAAAMg=="), j(i, 102744, "ZA=="), j(i, 102764, "MjIoRlpkZGRGboeWZGRLZHiWAAAAAAAABwAAAA4AAAAVAAAAKAAAAFAAAAAAAAAAAFNBUFIAQwAAAAAARgAAAAAAAAABAAAAAgAAAAQAAAAPAAAAAAEAAAEBAAEBAgQAAAAAAPMAEAEAAQABAAEAAQAB8ADwAPA="), j(i, 102898, "QABaAG4AgACPAJwAqQC1AMAAygDUAN0A5gDvAPcAAAEHAQ8BFgEeASUBLAEyATkBQAFGAUwBUgFYAV4BZAFqAW8BdQF6AYABhQGKAY8BlAGZAZ4BowGoAa0BsgG2AbsBwAHEAckBzQHRAdYB2gHeAeMB5wHrAe8B8wH3AfsBAAIDAgcCCwIPAhMCFwIbAh8CIgImAioCLQIxAjUCOAI8AkACQwJHAkoCTgJRAlQCWAJbAl8CYgJlAmkCbAJvAnMCdgJ5AnwCgAKDAoYCiQKMAo8CkgKWApkCnAKfAqICpQKoAqsCrgKxArQCtwK6Ar0CwALCAsUCyALLAs4C0QLUAtYC2QLcAt8C4gLkAucC6gLtAu8C8gL1AvcC+gL9AgADAgMFAwcDCgMNAw8DEgMVAxcDGgMcAx8DIQMkAycDKQMsAy4DMQMzAzYDOAM7Az0DQANCA0QDRwNJA0wDTgNRA1MDVQNYA1oDXQNfA2EDZANmA2gDawNtA28DcgN0A3YDeQN7A30DgAOCA4QDhgMAAAGqAqytAwQFsLGys7S0tgYHCLkJCrwMDQ4PEBESYWJjZGVmZ2hpamtsbW5vcHFyc3R1"), j(i, 103360, "YAYAAPAGAABmCQAA5gkAAGYKAADmCgAAZgsAAOYLAABmDAAA5gwAAGYNAABQDgAA0A4AACAPAABAEAAAkBA="), j(i, 103440, "5gDmAOYA5gAAAAAA5gDmAL4AqgC+AMgAAAAAAL4A8AC+AL4A0gDSAAAAAADSANIAyADIANIA0gAAAAAA5gDmAOYA5gDwAPAAAAAAAAQBBAGqAIwA3ADcAAAAAAD6AA4BoACMAMgAjAAAAAAA8ACgALQAtADSANIAAAAAAOYA8ACqANwAtAC0AAAAAAD6AA4BlgCCAMgAyAAAAAAADgEOAbYAjADcANwAAAAAAPgAEwGbALQA0gDSAAAAAAAOASwBwwMAAAAAAABsAAAAAAAAAKAAkQCbAJYAAAAAAMgA9QAnAAAAtwAAAAAAAADCugAAyADIAMgAyAAAAAAA0gDmAAABAgMEBQYHCAkKCwwNDg8QERITFBUWFxgZGgAAAAAAABscHR4fICEiIyQlJicoKSorAAAs"), j(i, 103790, "LQAAAAAAAAAu"), j(i, 103816, "Lw=="), j(i, 103833, "MAAAAAAAMQ=="), j(i, 103856, "Mg=="), j(i, 103868, "MwAAAK0AAQBABgEADCAtAAAAAAC+AL4A0gDSAAAAAADmAPoAoACWAMgAyAAAAAAA+gAEAbkAwwDDAL4AAAAAANIA3AD6AMgA+gD6AAAAAAD6APoAMjM0Njk6PD0+P0BBQkNERkdJSktMTU5PUFFSU1RWAACWAIwAtAC0AAAAAADIAMgAbA=="), j(i, 104016, "oADIALQAtAAAAAAA3ADwALQAoADIAMgAAAAAAPAA+gBjAAAAZgAAAGgAAABrAAAAcAAAAHQAAAB4AAAA/g=="), j(i, 104096, "oACMAJYApQAAAAAA2gAxAZEAkQCqAKAAAAAAAEoBXgEuAAAALAAAACcAAADIAg=="), j(i, 104160, "MTIzNTY3OTo7PD4/QEFCREVGR0hJSktMTU5PUFFSU1RW"), j(i, 104208, "vgC0AOYA5gAAAAAA+gD6ABESExQWFxkaGxwdHyAhIiQlJicoKSosc3uDmwAAAAAAtAC0AL4AtAAAAAAA5gDwALQAtAC0AKAAAAAAAOYAtABABAAAMAQAADUEAAA4BAAAOQQAAD4EAABDBAAASwQAAE0EAABOBAAATwQAAFAEAABRBAAAVgQAAFcEAABdBAAAXgQ="), j(i, 104368, "tACgAMgAyAAAAAAA3ADmAKAAhwDSANIAAAAAAAQBGAGgAIwAyADIAAAAAADcAOYAyADIAMgAyAAAAAAAyADIAKAAvgCvAK8AAAAAAMgA0gCqAHMA0gDwAAAAAAAEARgBqgCqALQAtAAAAAAA8AAEAZYAtADIAMgAAAAAANIA+gCWAJYAtAC0AAAAAAAsASwBoACHANwA3AAAAAAA+gAYAaAAqgDIAMgAAAAAAEABVAG0AKAA8ADwAAAAAAAEAQQBvgC0AMgA5gAAAAAA8AD6AJYAlgC0ALQA0gDmAOYA8ABhAAAA4AAAAOEAAACjHgAA4wAAAKEeAAADAQAAsR4AAK8eAACzHgAAtR4AALceAADiAAAApx4AAKUeAACpHgAAqx4AAK0eAABlAAAA6AAAAOkAAAC7HgAAvR4AALkeAADqAAAAwR4AAL8eAADDHgAAxR4AAMceAABpAAAA7AAAAO0AAADJHgAAKQEAAMseAABvAAAA8gAAAPMAAADPHgAA9QAAAM0eAAD0AAAA0x4AANEeAADVHgAA1x4AANkeAAChAQAA3R4AANseAADfHgAA4R4AAOMeAAB1AAAA+QAAAPoAAADnHgAAaQEAAOUeAACwAQAA6x4AAOkeAADtHgAA7x4AAPEeAAB5AAAA8x4AAP0AAAD3HgAA+R4AAPUe"), j(i, 104896, "5gCWAOYA5gDmAAAA8AD6AAAAAAAnAAAAAAAAAAABAgM="), j(i, 104945, "AQIDBAUGBwgJCgsMDQ4PEBESExQVFhcYGRo="), j(i, 105072, "GxwdAAAeHyAhIiMkACUmAAAAACcAACgAKQAqACsAAAAAAAAsAC0ALgAAAAAALwAAADAAAAAAAAAAMQ=="), j(i, 105170, "MgAz"), j(i, 105195, "NAAAAAAANQA2"), j(i, 105226, "NwA4ADkArQABAAwgAQ=="), j(i, 105249, "AQIDAAQAAQIDAAQFBgIDAAQFBwEDAAQICQoDAAAICAoDAAALCwsLAAAMDAwMAAAMAQ4BEwEBAw8DDgYRBgMJAQsPCwEMCQwBDgYOCQ4ODg8OHA4DDxEPEg8PEBEQAREGEQkRDxETEiAS/38AAAAAlgCMANwA3AAAAAAABAEYAYKAeHRkZICAgIyAgKCrq4CAgA=="), j(i, 105412, "yAAAAMgAAACQAQAAkAEAAJABAABYAgAAWAIAAFgC"), j(i, 105456, "8AAAAKoAAACqAAAAqgAAAKoAAACqAAAAqgAAAKoAAACqAAAAAQIMAw0EDgULAAAAAQIDBAUGAAAAAAAACwwNDg=="), j(i, 105540, "MgAAAK8AAABkAAAAMg=="), j(i, 105568, "rw=="), j(i, 105596, "EBAKEBY="), j(i, 105620, "/38AANAHAAAsAQAAYwAAAGMAAABjAAAAAAAAANAH"), j(i, 105668, "BA=="), j(i, 105680, "QEFCQ0RFRkdISUpLTE1OT1BRUlNUVldYWVtcXV5gYWJkZWdoaWtsbm9xc3R2d3l7fH6AgoSFh4mLjY+Rk5WXmZueoKKkp6mrrrCztbi6vb/CxcfKzdDT1tnc3+Ll6Ozv8vb5/P7/"), j(i, 105792, "//7+/v7+/v7+/v39/f38/Pz7+/v6+vn5+Pj39/b19fTz8/Lx7+3r6efl4+Hf3drY1dPQzcvIxcK/u7i1sq6rp6OgnJiUkIyIhH97d3JuaWRgXltYVlNRTkxKR0VCQD48OTc1MzEvLCooJiQiIB4dGxkXFRMSEA4MCwkHBgQDAQ=="), j(i, 106064, "//7+/v7+/f38+/v6+fj39vX08vHv7uzq6efl4+Hf3NrY1dPRz83LycfFw8G/vbu5t7SysK2rqaakoZ+cmpeUko+MioeEgX57eHZzcGxpZmNgX11bWlhWVVNSUE9NTEpJSEZFRENCQD8+PTw7Ojk4Nzc2NTQ0MzIyMTAwLy8uLi4tLS0sLCwsLCwsKysrKywrKiopKCgnJiYlJCQjIyIhISAgHx4eHR0cHBsaGhkZGBgXFxYWFRUUFBMTEhISEREQEA8PDw4ODQ0NDAwLCwsKCgoJCQkICAgHBwcHBgYGBQUFBQQEBAQEAwMDAwICAgICAgEBAQEBAQ=="), j(i, 106341, "RvIpAC8ALwBF8ikALwAuAEXyKAAuAC0ANPIoAC0tLAA08igAKysrADTyKAAqKioANPIoACkpKQA08igAAOf/zv+1/5z/g/9q/1H/N/8e/wX/7P7T/rr+of6I/m/+Vf48/iP+Cv7x/dj9v/2m/Y39dP1b/UL9Kf0Q/ff83vzF/Kz8k/x6/GH8SPwv/Bb8/fvk+8v7svuZ+4D7Z/tP+zb7HfsE++v60vq6+qH6iPpv+lf6Pvol+g369Pnb+cP5qvmR+Xn5YPlH+S/5Fvn++OX4zfi0+Jz4g/hr+FP4Ovgi+Ar48ffZ98H3qPeQ93j3YPdH9y/3F/f/9uf2z/a39p/2h/Zv9lf2P/Yn9g/29/Xf9cf1sPWY9YD1aPVR9Tn1IfUK9fL02/TD9Kz0lPR99GX0TvQ29B/0CPTw89nzwvOr85TzfPNl807zN/Mg8wnz8vLb8sTyrvKX8oDyafJS8jzyJfIO8vjx4fHL8bTxnvGH8XHxW/FE8S7xGPEB8evw1fC/8Knwk/B98GfwUfA78CXwEPD67+Tvzu+576Pvje9472LvTe847yLvDe/47uLuze647qPuju557mTuT+467iXuEO777eft0u297antlO2A7WvtV+1C7S7tGu0F7fHs3ezJ7LXsoeyN7HnsZexR7D3sKuwW7ALs7+vb68jrtOuh643reutn61TrQest6xrrB+v06uLqz+q86qnqluqE6nHqX+pM6jrqJ+oV6gPq8One6czpuumo6ZbphOly6WHpT+k96SzpGukI6ffo5ujU6MPosuig6I/ofuht6FzoS+g76CroGegI6Pjn5+fX58bntuel55Xnhed152XnVedF5zXnJecV5wXn9ubm5tfmx+a45qjmmeaK5nvma+Zc5k3mPuYw5iHmEuYD5vXl5uXY5cnlu+Wt5Z7lkOWC5XTlZuVY5UrlPOUv5SHlE+UG5fjk6+Te5NDkw+S25KnknOSP5ILkdeRo5FzkT+RD5DbkKuQd5BHkBeT54+3j4ePV48njveOx46XjmuOO44Pjd+Ns42HjVuNL4z/jNOMq4x/jFOMJ4//i9OLq4t/i1eLK4sDituKs4qLimOKO4oTie+Jx4mfiXuJU4kviQuI54i/iJuId4hTiDOID4vrh8eHp4eDh2OHQ4cfhv+G34a/hp+Gf4Zfhj+GI4YDheOFx4WrhYuFb4VThTeFG4T/hOOEx4SrhJOEd4RbhEOEK4QPh/eD34PHg6+Dl4N/g2eDU4M7gyeDD4L7guOCz4K7gqeCk4J/gmuCV4JHgjOCH4IPgfuB64HbgcuBu4GrgZuBi4F7gWuBX4FPgT+BM4EngReBC4D/gPOA54DbgM+Ax4C7gK+Ap4CfgJOAi4CDgHuAc4BrgGOAW4BTgEuAR4A/gDuAN4AvgCuAJ4AjgB+AG4AXgBeAE4APgA+AC4ALgAuAC4ALgAeAC4ALgAuAC4ALgA+AD4ATgBeAF4AbgB+AI4AngCuAL4A3gDuAP4BHgEuAU4BbgGOAa4BzgHuAg4CLgJOAn4CngK+Au4DHgM+A24DngPOA/4ELgReBJ4EzgT+BT4FfgWuBe4GLgZuBq4G7gcuB24HrgfuCD4IfgjOCR4JXgmuCf4KTgqeCu4LPguOC+4MPgyeDO4NTg2eDf4OXg6+Dx4Pfg/eAD4QrhEOEW4R3hJOEq4THhOOE/4UbhTeFU4VvhYuFq4XHheOGA4Yjhj+GX4Z/hp+Gv4bfhv+HH4dDh2OHg4enh8eH64QPiDOIU4h3iJuIv4jniQuJL4lTiXuJn4nHie+KE4o7imOKi4qzituLA4sri1eLf4uri9OL/4gnjFOMf4yrjNOM/40vjVuNh42zjd+OD447jmuOl47HjvePJ49Xj4ePt4/njBeQR5B3kKuQ25EPkT+Rc5GjkdeSC5I/knOSp5Lbkw+TQ5N7k6+T45AblE+Uh5S/lPOVK5VjlZuV05YLlkOWe5a3lu+XJ5djl5uX15QPmEuYh5jDmPuZN5lzma+Z75ormmeao5rjmx+bX5ubm9uYF5xXnJec150XnVedl53XnheeV56XntufG59fn5+f45wjoGegq6DvoS+hc6G3ofuiP6KDosujD6NTo5uj36AjpGuks6T3pT+lh6XLphOmW6ajpuunM6d7p8OkD6hXqJ+o66kzqX+px6oTqluqp6rzqz+ri6vTqB+sa6y3rQetU62freuuN66HrtOvI69vr7+sC7BbsKuw97FHsZex57I3soey17Mns3ezx7AXtGu0u7ULtV+1r7YDtlO2p7b3t0u3n7fvtEO4l7jruT+5k7nnuju6j7rjuze7i7vjuDe8i7zjvTe9i73jvje+j77nvzu/k7/rvEPAl8DvwUfBn8H3wk/Cp8L/w1fDr8AHxGPEu8UTxW/Fx8YfxnvG08cvx4fH48Q7yJfI88lLyafKA8pfyrvLE8tvy8vIJ8yDzN/NO82XzfPOU86vzwvPZ8/DzCPQf9Db0TvRl9H30lPSs9MP02/Ty9Ar1IfU59VH1aPWA9Zj1sPXH9d/19/UP9if2P/ZX9m/2h/af9rf2z/bn9v/2F/cv90f3YPd495D3qPfB99n38fcK+CL4OvhT+Gv4g/ic+LT4zfjl+P74Fvkv+Uf5YPl5+ZH5qvnD+dv59PkN+iX6PvpX+m/6iPqh+rr60vrr+gT7Hfs2+0/7Z/uA+5n7svvL++T7/fsW/C/8SPxh/Hr8k/ys/MX83vz3/BD9Kf1C/Vv9dP2N/ab9v/3Y/fH9Cv4j/jz+Vf5v/oj+of66/tP+7P4F/x7/N/9R/2r/g/+c/7X/zv/n/wAAGQAyAEsAZAB9AJYArwDJAOIA+wAUAS0BRgFfAXgBkQGrAcQB3QH2AQ8CKAJBAloCcwKMAqUCvgLXAvACCQMiAzsDVANtA4YDnwO4A9ED6gMDBBwENQROBGcEgASZBLEEygTjBPwEFQUuBUYFXwV4BZEFqQXCBdsF8wUMBiUGPQZWBm8GhwagBrkG0QbqBgIHGwczB0wHZAd9B5UHrQfGB94H9gcPCCcIPwhYCHAIiAigCLkI0QjpCAEJGQkxCUkJYQl5CZEJqQnBCdkJ8QkJCiEKOQpQCmgKgAqYCq8KxwrfCvYKDgslCz0LVAtsC4MLmwuyC8oL4Qv4CxAMJww+DFUMbAyEDJsMsgzJDOAM9wwODSUNPA1SDWkNgA2XDa4NxA3bDfINCA4fDjUOTA5iDnkOjw6lDrwO0g7oDv8OFQ8rD0EPVw9tD4MPmQ+vD8UP2w/wDwYQHBAyEEcQXRBzEIgQnhCzEMgQ3hDzEAgRHhEzEUgRXRFyEYcRnBGxEcYR2xHwEQUSGRIuEkMSVxJsEoASlRKpEr4S0hLmEvsSDxMjEzcTSxNfE3MThxObE68TwxPWE+oT/hMRFCUUOBRMFF8UcxSGFJkUrBS/FNMU5hT5FAwVHhUxFUQVVxVqFXwVjxWhFbQVxhXZFesV/RUQFiIWNBZGFlgWahZ8Fo4WnxaxFsMW1BbmFvgWCRcaFywXPRdOF2AXcReCF5MXpBe1F8UX1hfnF/gXCBgZGCkYOhhKGFsYaxh7GIsYmxirGLsYyxjbGOsY+xgKGRoZKRk5GUgZWBlnGXYZhRmVGaQZsxnCGdAZ3xnuGf0ZCxoaGigaNxpFGlMaYhpwGn4ajBqaGqgathrEGtEa3xrtGvoaCBsVGyIbMBs9G0obVxtkG3EbfhuLG5gbpBuxG70byhvWG+Mb7xv7GwccExwfHCscNxxDHE8cWxxmHHIcfRyJHJQcnxyqHLUcwRzMHNYc4RzsHPccAR0MHRYdIR0rHTYdQB1KHVQdXh1oHXIdfB2FHY8dmR2iHawdtR2+Hccd0R3aHeMd7B30Hf0dBh4PHhceIB4oHjAeOR5BHkkeUR5ZHmEeaR5xHngegB6IHo8elh6eHqUerB6zHroewR7IHs8e1h7cHuMe6h7wHvYe/R4DHwkfDx8VHxsfIR8nHywfMh83Hz0fQh9IH00fUh9XH1wfYR9mH2sfbx90H3kffR+CH4Yfih+OH5Iflh+aH54foh+mH6kfrR+xH7Qftx+7H74fwR/EH8cfyh/NH88f0h/VH9cf2R/cH94f4B/iH+Qf5h/oH+of7B/uH+8f8R/yH/Mf9R/2H/cf+B/5H/of+x/7H/wf/R/9H/4f/h/+H/4f/h//H/4f/h/+H/4f/h/9H/0f/B/7H/sf+h/5H/gf9x/2H/Uf8x/yH/Ef7x/uH+wf6h/oH+Yf5B/iH+Af3h/cH9kf1x/VH9Ifzx/NH8ofxx/EH8Efvh+7H7cftB+xH60fqR+mH6Ifnh+aH5Yfkh+OH4ofhh+CH30feR90H28fax9mH2EfXB9XH1IfTR9IH0IfPR83HzIfLB8nHyEfGx8VHw8fCR8DH/0e9h7wHuoe4x7cHtYezx7IHsEeuh6zHqwepR6eHpYejx6IHoAeeB5xHmkeYR5ZHlEeSR5BHjkeMB4oHiAeFx4PHgYe/R30Hewd4x3aHdEdxx2+HbUdrB2iHZkdjx2FHXwdch1oHV4dVB1KHUAdNh0rHSEdFh0MHQEd9xzsHOEc1hzMHMEctRyqHJ8clByJHH0cchxmHFscTxxDHDccKxwfHBMcBxz7G+8b4xvWG8obvRuxG6QbmBuLG34bcRtkG1cbShs9GzAbIhsVGwgb+hrtGt8a0RrEGrYaqBqaGowafhpwGmIaUxpFGjcaKBoaGgsa/RnuGd8Z0BnCGbMZpBmVGYUZdhlnGVgZSBk5GSkZGhkKGfsY6xjbGMsYuxirGJsYixh7GGsYWxhKGDoYKRgZGAgY+BfnF9YXxRe1F6QXkxeCF3EXYBdOFz0XLBcaFwkX+BbmFtQWwxaxFp8WjhZ8FmoWWBZGFjQWIhYQFv0V6xXZFcYVtBWhFY8VfBVqFVcVRBUxFR4VDBX5FOYU0xS/FKwUmRSGFHMUXxRMFDgUJRQRFP4T6hPWE8MTrxObE4cTcxNfE0sTNxMjEw8T+xLmEtISvhKpEpUSgBJsElcSQxIuEhkSBRLwEdsRxhGxEZwRhxFyEV0RSBEzER4RCBHzEN4QyBCzEJ4QiBBzEF0QRxAyEBwQBhDwD9sPxQ+vD5kPgw9tD1cPQQ8rDxUP/w7oDtIOvA6lDo8OeQ5iDkwONQ4fDggO8g3bDcQNrg2XDYANaQ1SDTwNJQ0ODfcM4AzJDLIMmwyEDGwMVQw+DCcMEAz4C+ELyguyC5sLgwtsC1QLPQslCw4L9grfCscKrwqYCoAKaApQCjkKIQoJCvEJ2QnBCakJkQl5CWEJSQkxCRkJAQnpCNEIuQigCIgIcAhYCD8IJwgPCPYH3gfGB60HlQd9B2QHTAczBxsHAgfqBtEGuQagBocGbwZWBj0GJQYMBvMF2wXCBakFkQV4BV8FRgUuBRUF/ATjBMoEsQSZBIAEZwROBDUEHAQDBOoD0QO4A58DhgNtA1QDOwMiAwkD8ALXAr4CpQKMAnMCWgJBAigCDwL2Ad0BxAGrAZEBeAFfAUYBLQEUAfsA4gDJAK8AlgB9AGQASwAyABkAMAAAADAAAABAAAAAUAAAAJAAAACgAAAAsAAAAMAAAACAm7XL3Ojt7Obczr+wo5iQjIuMj5KUlZKMg3hpWUk8MSopLTZEVml9j5+qsbKtpJaHeGlcU09PVV5reoiWoquwsa6ooJiRi4iJjZSdqLK7wMG9tKWSfGNKMh4OBQIFDx4wRFltf4yWnJ+fnZuZmZyhqbO/ytXc4N7YzLumj3dgSzouKCkvOkhZanqGkJSVkYmAdWtiXFpcYWl0gIqUmp6dmJCGfHFoYmBja3iIm6/C0t/m5+LXxrKchG9bS0A5Nzg9Q0pQVFZVUk1IQj8+QUlWZ3yTq8PZ6vb8+/Tn1cCqlIBxZF1aXGFocHd9f397dGthV05IRkhOWWZ1hJOfp6uqpJmLe2pbTkZDRU1aa3+SprjFz9PSzcS5raGWjomHh4qNkZKRjIR4aFVBLhwOBQEFDx80TWiBmrDBzdPT0Mi/taukn5ydoKWqrrGwq6OWh3ZjUUI2Ly0xOkhZa36OnKaqqaOYintsXVJKSEpQWmd1gi0AAAAmAAAALQAAAC0AAAA3AAAALQ=="), j(i, 110928, "yv5w/hICZAHgAFkAFwD2/8b/8P/NAVcCGAK9AgIDXQLxAc0BMAKUAW4A4ACDAGgAn/+bABYBZv9z+6r94QJ9ALD9KQALAAn/9v9BAFwAUADQ/kcApwD//3oA6QChANX/FgHfAeUBlwEKAYoChgBQAOwARAAEAQ0BswA1AIwAEwElASgBaAABAZgANwG2AAcB9QB9ADoBjAAsAMsA5gAV/+L+FwBrAFwApf8mANABuwGwAGIA8Pxv9p346/vA+Ur6mPoT+0v8Jv0="), j(i, 111162, "BgAHAAgACQAKAAsADQAOABAAEgAUABYAGQAcACAAIwAoAC0AMwA5AEAARwBQAFoAZQByAIAAjgCfALMAygDjAAABHAE+AWcBlQHHAQACOAJ+As8CcQOPAwAEcQT8BJ4FVgYfBwAI4Qj4CTsLrAw9DgAQwxHwE3cWWBl7HAAghSPfJ+4ssDL2OABArkekUIVbZmYzc/9/"), j(i, 111324, "qMtoQQAAAACoy2jBAAAAAAAAAAAXCtQJkglQCQ8JzgiPCE8IEwjVB5oHYgcoB/MGvgaLBloGKwb9BdMFqQWBBVwFOAUWBfcE1wS7BKAEhgRuBFcEQQQtBBkEBwT1A+QD1APFA7YDqAOZA40DfwNxA2UDVwNLAz4DMgMkAxgDCwP+AvIC5ALYAssCvgKxAqQClwKLAn0CcgJkAlkCTAJAAjQCKAIcAhICBQL7AfAB5QHbAdABxgG7AbIBqAGeAZQBigGBAXcBbgFjAVsBUAFIAT0BNAErASABGAENAQQB+gDwAOcA3ADUAMgAwAC1AKwAoQCYAI4AhQB7AHEAaQBeAFYATABDADkAMQAnAB4AFgALAAQA+//y/+n/4P/X/87/xP+7/7L/qf+g/5X/jf+C/3r/cP9m/1z/Uv9J/z//Nf8r/yL/F/8O/wT/+v7x/uf+3f7T/sr+wP62/q3+o/6b/pD+h/59/nP+av5f/lb+TP5C/jj+Lf4j/hn+Df4D/vf97P3h/dX9yf29/bH9pf2Y/Yz9f/1z/Wb9Wf1M/T/9M/0k/Rn9Cv3//PH85fzY/Mz8vvyz/KT8mPyL/H78cfxi/FX8Rfw4/Cb8GfwG/Pb74vvQ+7r7pfuO+3b7XPtB+yT7Bvvl+sT6n/p5+lP6KPr++dD5oflw+Tz5CfnR+Jr4YPgm+Oj3q/ds9yz36/aq9mj2Jvbj9bAEdgRABA4E3wO0A4sDZQNBAx8DAAPiAsYCqwKSAnoCZAJOAjoCJwIVAgMC8wHjAdQBxgG4AasBnwGTAYcBfAFyAWgBXgFVAUwBQwE7ATMBLAEkAR0BFgEQAQkBAwH9APcA8gDtAOcA4gDdANkA1ADQAMwAxwDDAMAAvAC4ALQAsQCuAKoApwCkAKEAngCbAJkAlgCTAJEAjgCMAIkAhwCFAIMAgAB+AHwAegB4AHcAdQBzAHEAbwBuAGwAagBpAGcAZgBkAGMAYQBgAF8AXQBcAFsAWgBYAFcAVgBVAFQAUwBSAFAATwBOAE0ATABLAEsASgBJAEgARwBGAEUARABEAEMAQgBBAEAAQAA/AD4APQA9ADwAOwA7ADoAOQA5ADgAOAA3ADcANgA2ADUANQA0ADQAMwAzADIAMgAxADEAMAAwAC8ALwAuAC4ALQAtACwALAArACsAKgAqACkAKQApACkAKAAoACcAJwAmACYAJgAmACUAJQAkACQAJAAkACMAIwAjACMAIgAiACEAIQAhACEAIAAgACAAIAAfAB8AHwAfAB4AHgAeAB4AHQAdAB0AHQAcABwAHAAcABsAGwAxNkZyYW1lTWFuYWdlckltcGwAMTJGcmFtZU1hbmFnZXIAMjNTcGVlY2hXYXZlR2VuZXJhdG9ySW1wbAAxOVNwZWVjaFdhdmVHZW5lcmF0b3IAMTNXYXZlR2VuZXJhdG9y"), j(i, 112416, "AwAAAAQAAAAEAAAABgAAAIP5ogBETm4A/CkVANFXJwDdNPUAYtvAADyZlQBBkEMAY1H+ALveqwC3YcUAOm4kANJNQgBJBuAACeouAByS0QDrHf4AKbEcAOg+pwD1NYIARLsuAJzphAC0JnAAQX5fANaROQBTgzkAnPQ5AItfhAAo+b0A+B87AN7/lwAPmAUAES/vAApaiwBtH20Az342AAnLJwBGT7cAnmY/AC3qXwC6J3UA5evHAD178QD3OQcAklKKAPtr6gAfsV8ACF2NADADVgB7/EYA8KtrACC8zwA29JoA46kdAF5hkQAIG+YAhZllAKAUXwCNQGgAgNj/ACdzTQAGBjEAylYVAMmocwB74mAAa4zAABnERwDNZ8MACejcAFmDKgCLdsQAphyWAESv3QAZV9EApT4FAAUH/wAzfj8AwjLoAJhP3gC7fTIAJj3DAB5r7wCf+F4ANR86AH/yygDxhx0AfJAhAGokfADVbvoAMC13ABU7QwC1FMYAwxmdAK3EwgAsTUEADABdAIZ9RgDjcS0Am8aaADNiAAC00nwAtKeXADdV1QDXPvYAoxAYAE12/ABknSoAcNerAGN8+AB6sFcAFxXnAMBJVgA71tkAp4Q4ACQjywDWincAWlQjAAAfuQDxChsAGc7fAJ8x/wBmHmoAmVdhAKz7RwB+f9gAImW3ADLoiQDmv2AA78TNAGw2CQBdP9QAFt7XAFg73gDem5IA0iIoACiG6ADiWE0AxsoyAAjjFgDgfcsAF8BQAPMdpwAY4FsALhM0AIMSYgCDSAEA9Y5bAK2wfwAe6fIASEpDABBn0wCq3dgArl9CAGphzgAKKKQA05m0AAam8gBcd38Ao8KDAGE8iACKc3gAr4xaAG/XvQAtpmMA9L/LAI2B7wAmwWcAVcpFAMrZNgAoqNIAwmGNABLJdwAEJhQAEkabAMRZxADIxUQATbKRAAAX8wDUQ60AKUnlAP3VEAAAvvwAHpTMAHDO7gATPvUA7PGAALPnwwDH+CgAkwWUAMFxPgAuCbMAC0XzAIgSnACrIHsALrWfAEeSwgB7Mi8ADFVtAHKnkABr5x8AMcuWAHkWSgBBeeIA9N+JAOiUlwDi5oQAmTGXAIjtawBfXzYAu/0OAEiatABnpGwAcXJCAI1dMgCfFbgAvOUJAI0xJQD3dDkAMAUcAA0MAQBLCGgALO5YAEeqkAB05wIAvdYkAPd9pgBuSHIAnxbvAI6UpgC0kfYA0VNRAM8K8gAgmDMA9Ut+ALJjaADdPl8AQF0DAIWJfwBVUikAN2TAAG3YEAAySDIAW0x1AE5x1ABFVG4ACwnBACr1aQAUZtUAJwedAF0EUAC0O9sA6nbFAIf5FwBJa30AHSe6AJZpKQDGzKwArRRUAJDiagCI2YkALHJQAASkvgB3B5QA8zBwAAD8JwDqcagAZsJJAGTgPQCX3YMAoz+XAEOU/QANhowAMUHeAJI5nQDdcIwAF7fnAAjfOwAVNysAXICgAFqAkwAQEZIAD+jYAGyArwDb/0sAOJAPAFkYdgBipRUAYcu7AMeJuQAQQL0A0vIEAEl1JwDrtvYA2yK7AAoUqgCJJi8AZIN2AAk7MwAOlBoAUTqqAB2jwgCv7a4AXCYSAG3CTQAtepwAwFaXAAM/gwAJ8PYAK0CMAG0xmQA5tAcADCAVANjDWwD1ksQAxq1LAE7KpQCnN80A5qk2AKuSlADdQmgAGWPeAHaM7wBoi1IA/Ns3AK6hqwDfFTEAAK6hAAz72gBkTWYA7QW3ACllMABXVr8AR/86AGr5uQB1vvMAKJPfAKuAMABmjPYABMsVAPoiBgDZ5B0APbOkAFcbjwA2zQkATkLpABO+pAAzI7UA8KoaAE9lqADSwaUACz8PAFt4zQAj+XYAe4sEAIkXcgDGplMAb27iAO/rAACbSlgAxNq3AKpmugB2z88A0QIdALHxLQCMmcEAw613AIZI2gD3XaAAxoD0AKzwLwDd7JoAP1y8ANDebQCQxx8AKtu2AKMlOgAAr5oArVOTALZXBAApLbQAS4B+ANoHpwB2qg4Ae1mhABYSKgDcty0A+uX9AInb/gCJvv0A5HZsAAap/AA+gHAAhW4VAP2H/wAoPgcAYWczACoYhgBNveoAs+evAI9tbgCVZzkAMb9bAITXSAAw3xYAxy1DACVhNQDJcM4AMMu4AL9s/QCkAKIABWzkAFrdoAAhb0cAYhLSALlchABwYUkAa1bgAJlSAQBQVTcAHtW3ADPxxAATbl8AXTDkAIUuqQAdssMAoTI2AAi3pADqsdQAFvchAI9p5AAn/3cADAOAAI1ALQBPzaAAIKWZALOi0wAvXQoAtPlCABHaywB9vtAAm9vBAKsXvQDKooEACGpcAC5VFwAnAFUAfxTwAOEHhgAUC2QAlkGNAIe+3gDa/SoAayW2AHuJNAAF8/4Aub+eAGhqTwBKKqgAT8RaAC34vADXWpgA9MeVAA1NjQAgOqYApFdfABQ/sQCAOJUAzCABAHHdhgDJ3rYAv2D1AE1lEQABB2sAjLCsALLA0ABRVUgAHvsOAJVywwCjBjsAwEA1AAbcewDgRcwATin6ANbKyADo80EAfGTeAJtk2ADZvjEApJfDAHdY1ABp48UA8NoTALo6PABGGEYAVXVfANK99QBuksYArC5dAA5E7QAcPkIAYcSHACn96QDn1vMAInzKAG+RNQAI4MUA/9eNAG5q4gCw/cYAkwjBAHxddABrrbIAzW6dAD5yewDGEWoA98+pAClz3wC1yboAtwBRAOKyDQB0uiQA5X1gAHTYigANFSwAgRgMAH5mlAABKRYAn3p2AP39vgBWRe8A2X42AOzZEwCLurkAxJf8ADGoJwDxbsMAlMU2ANioVgC0qLUAz8wOABKJLQBvVzQALFaJAJnO4wDWILkAa16qAD4qnAARX8wA/QtKAOH0+wCOO20A4oYsAOnUhAD8tKkA7+7RAC41yQAvOWEAOCFEABvZyACB/AoA+0pqAC8c2ABTtIQATpmMAFQizAAqVdwAwMbWAAsZlgAacLgAaZVkACZaYAA/Uu4AfxEPAPS1EQD8y/UANLwtADS87gDoXcwA3V5gAGeOmwCSM+8AyRe4AGFYmwDhV7wAUYPGANg+EADdcUgALRzdAK8YoQAhLEYAWfPXANl6mACeVMAAT4b6AFYG/ADlea4AiSI2ADitIgBnk9wAVeiqAIImOADK55sAUQ2kAJkzsQCp1w4AaQVIAGWy8AB/iKcAiEyXAPnRNgAhkrMAe4JKAJjPIQBAn9wA3EdVAOF0OgBn60IA/p3fAF7UXwB7Z6QAuqx6AFX2ogAriCMAQbpVAFluCAAhKoYAOUeDAInj5gDlntQASftAAP9W6QAcD8oAxVmKAJT6KwDTwcUAD8XPANtargBHxYYAhUNiACGGOwAseZQAEGGHACpMewCALBoAQ78SAIgmkAB4PIkAqMTkAOXbewDEOsIAJvTqAPdnigANkr8AZaMrAD2TsQC9fAsApFHcACfdYwBp4d0AmpQZAKgplQBozigACe20AESfIABOmMoAcIJjAH58IwAPuTIAp/WOABRW5wAh8QgAtZ0qAG9+TQClGVEAtfmrAILf1gCW3WEAFjYCAMQ6nwCDoqEAcu1tADmNegCCuKkAazJcAEYnWwAANO0A0gB3APz0VQABWU0A4HGA"), j(i, 115203, "QPsh+T8AAAAALUR0PgAAAICYRvg8AAAAYFHMeDsAAACAgxvwOQAAAEAgJXo4AAAAgCKC4zYAAAAAHfNpNf6CK2VHFWdAAAAAAAAAOEMAAPr+Qi52vzo7nrya9wy9vf3/////3z88VFVVVVXFP5ErF89VVaU/F9CkZxERgT8AAAAAAADIQu85+v5CLuY/JMSC/72/zj+19AzXCGusP8xQRtKrsoM/hDpOm+DXVT8="), j(i, 115390, "8D9uv4gaTzubPDUz+6k99u8/XdzYnBNgcbxhgHc+muzvP9FmhxB6XpC8hX9u6BXj7z8T9mc1UtKMPHSFFdOw2e8/+o75I4DOi7ze9t0pa9DvP2HI5mFO92A8yJt1GEXH7z+Z0zNb5KOQPIPzxso+vu8/bXuDXaaalzwPiflsWLXvP/zv/ZIatY4890dyK5Ks7z/RnC9wPb4+PKLR0zLso+8/C26QiTQDarwb0/6vZpvvPw69LypSVpW8UVsS0AGT7z9V6k6M74BQvMwxbMC9iu8/FvTVuSPJkbzgLamumoLvP69VXOnj04A8UY6lyJh67z9Ik6XqFRuAvHtRfTy4cu8/PTLeVfAfj7zqjYw4+WrvP79TEz+MiYs8dctv61tj7z8m6xF2nNmWvNRcBITgW+8/YC86PvfsmjyquWgxh1TvP504hsuC54+8Hdn8IlBN7z+Nw6ZEQW+KPNaMYog7Ru8/fQTksAV6gDyW3H2RST/vP5SoqOP9jpY8OGJ1bno47z99SHTyGF6HPD+msk/OMe8/8ucfmCtHgDzdfOJlRSvvP14IcT97uJa8gWP14d8k7z8xqwlt4feCPOHeH/WdHu8/+r9vGpshPbyQ2drQfxjvP7QKDHKCN4s8CwPkpoUS7z+Py86JkhRuPFYvPqmvDO8/tquwTXVNgzwVtzEK/gbvP0x0rOIBQoY8MdhM/HAB7z9K+NNdOd2PPP8WZLII/O4/BFuOO4Cjhrzxn5JfxfbuP2hQS8ztSpK8y6k6N6fx7j+OLVEb+AeZvGbYBW2u7O4/0jaUPujRcbz3n+U02+fuPxUbzrMZGZm85agTwy3j7j9tTCqnSJ+FPCI0Ekym3u4/imkoemASk7wcgKwERdruP1uJF0iPp1i8Ki73IQrW7j8bmklnmyx8vJeoUNn10e4/EazCYO1jQzwtiWFgCM7uP+9kBjsJZpY8VwAd7UHK7j95A6Ha4cxuPNA8wbWixu4/MBIPP47/kzze09fwKsPuP7CvervOkHY8Jyo21dq/7j934FTrvR2TPA3d/ZmyvO4/jqNxADSUj7ynLJ12srnuP0mjk9zM3oe8QmbPotq27j9fOA+9xt54vIJPnVYrtO4/9lx77EYShrwPkl3KpLHuP47X/RgFNZM82ie1Nkev7j8Fm4ovt5h7PP3Hl9QSre4/CVQc4uFjkDwpVEjdB6vuP+rGGVCFxzQ8t0ZZiiap7j81wGQr5jKUPEghrRVvp+4/n3aZYUrkjLwJ3Ha54aXuP6hN7zvFM4y8hVU6sH6k7j+u6SuJeFOEvCDDzDRGo+4/WFhWeN3Ok7wlIlWCOKLuP2QZfoCqEFc8c6lM1FWh7j8oIl6/77OTvM07f2aeoO4/grk0h60Sary/2gt1EqDuP+6pbbjvZ2O8LxplPLKf7j9RiOBUPdyAvISUUfl9n+4/zz5afmQfeLx0X+zodZ/uP7B9i8BK7oa8dIGlSJqf7j+K5lUeMhmGvMlnQlbrn+4/09QJXsuckDw/Xd5PaaDuPx2lTbncMnu8hwHrcxSh7j9rwGdU/eyUPDLBMAHtoe4/VWzWq+HrZTxiTs8286LuP0LPsy/FoYi8Eho+VCek7j80NzvxtmmTvBPOTJmJpe4/Hv8ZOoRegLytxyNGGqfuP25XcthQ1JS87ZJEm9mo7j8Aig5bZ62QPJlmitnHqu4/tOrwwS+3jTzboCpC5azuP//nxZxgtmW8jES1FjKv7j9EX/NZg/Z7PDZ3FZmuse4/gz0epx8Jk7zG/5ELW7TuPykebIu4qV285cXNsDe37j9ZuZB8+SNsvA9SyMtEuu4/qvn0IkNDkrxQTt6fgr3uP0uOZtdsyoW8ugfKcPHA7j8nzpEr/K9xPJDwo4KRxO4/u3MK4TXSbTwjI+MZY8juP2MiYiIExYe8ZeVde2bM7j/VMeLjhhyLPDMtSuyb0O4/Fbu809G7kbxdJT6yA9XuP9Ix7pwxzJA8WLMwE57Z7j+zWnNuhGmEPL/9eVVr3u4/tJ2Ol83fgrx689O/a+PuP4czy5J3Gow8rdNamZ/o7j/62dFKj3uQvGa2jSkH7u4/uq7cVtnDVbz7FU+4ovPuP0D2pj0OpJC8OlnljXL57j80k6049NZovEde+/J2/+4/NYpYa+LukbxKBqEwsAXvP83dXwrX/3Q80sFLkB4M7z+smJL6+72RvAke11vCEu8/swyvMK5uczycUoXdmxnvP5T9n1wy4448etD/X6sg7z+sWQnRj+CEPEvRVy7xJ+8/ZxpOOK/NYzy15waUbS/vP2gZkmwsa2c8aZDv3CA37z/StcyDGIqAvPrDXVULP+8/b/r/P12tj7x8iQdKLUfvP0mpdTiuDZC88okNCIdP7z+nBz2mhaN0PIek+9wYWO8/DyJAIJ6RgryYg8kW42DvP6ySwdVQWo48hTLbA+Zp7z9LawGsWTqEPGC0AfMhc+8/Hz60ByHVgrxfm3szl3zvP8kNRzu5Kom8KaH1FEaG7z/TiDpgBLZ0PPY/i+cukO8/cXKdUezFgzyDTMf7UZrvP/CR048S94+82pCkoq+k7z99dCPimK6NvPFnji1Ir+8/CCCqQbzDjjwnWmHuG7rvPzLrqcOUK4Q8l7prNyvF7z/uhdExqWSKPEBFblt20O8/7eM75Lo3jrwUvpyt/dvvP53NkU07iXc82JCegcHn7z+JzGBBwQVTPPFxjyvC8+8/EhETFBUWFxgZGhscHR4fICERIiMkESUmJygpKissES0uLxAQMBAQEBAQEBAxMjMQNDUQEBERERERERERERERERERERERERERERERERE2ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERNxERERE4ETk6Ozw9PhERERERERERERERERERERERERERERERERERERERERERERERERERERERERE/EBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEUBBEUJDREVGR0hJShFLTE1OT1BREFJTVFVWV1hZWltcXRBeX2AQERERYWJjEBAQEBAQEBAQEBERERFkEBAQEBAQEBAQEBAQEBAQERFlEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQERFmZxAQaGkREREREREREREREREREREREREREREREWoREWsQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEWxtEBAQEBAQEBAQbhAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQb3BxchAQEBAQEBAQc3R1EBAQEBB2dxAQEBB4EBB5EBAQEBAQEBAQEBAQEBA="), j(i, 117968, "//////////////////////////////////////////8AAAAAAAAAAP7//wf+//8HAAAAAAAEIAT//3////9//////////////////////////////////8P/AwAfUA=="), j(i, 118072, "IAAAAAAA37xA1///+////////////7///////////////////////wP8///////////////////////////+////fwL//////wEAAAAA/7+2AP///4cHAAAA/wf//////////v/D////////////////7x/+4f+fAAD///////8A4P///////////////wMA//////8HMAT////8/x8AAP///wH/BwAAAAAAAP//3z8AAPD/+AP////////////v/9/h/8///v/vn/n///3F459ZgLDP/wMQ7of5///9bcOHGQJewP8/AO6/+////e3jvxsBAM//AB7un/n///3t458ZwLDP/wIA7Mc91hjH/8PHHYEAwP8AAO/f/f///f/j3x1gB8//AADv3/3///3v498dYEDP/wYA79/9/////+ffXfCAz/8A/Oz/f/z///svf4Bf/8D/DAD+/////3//Bz8g/wMAAAAA1vf//6///ztfIP/zAAAAAAEAAAD/AwAA//7///8f/v8D///+////HwAAAAAAAAAA////////f/n/A////////////z//////vyD///////f///////////89fz3//////z3/////PX89/3//////////Pf//////////BwAAAAD//wAA/////////////z8//v//////////////////////////////////////////////////////////n////v//B////////////8f/Af/fDwD//w8A//8PAP/fDQD////////P//8BgBD/AwAAAAD/A///////////////Af//////B///////////PwD///9//w//AcD/////Px8A//////8P////A/8DAAAAAP///w//////////f/7/HwD/A/8DgA=="), j(i, 118768, "////////7//vD/8DAAAAAP//////8////////7//AwD///////9/AP/j//////8//wH//////+cAAAAAAN5vBP///////////////////////////////wAAAACA/x8A//8/P/////8/P/+q////P////////99f3B/PD/8f3B8="), j(i, 118910, "AoAAAP8f"), j(i, 118928, "hPwvPlC9//PgQwAA//////8B"), j(i, 118982, "wP///////wMAAP//////f///////f/////////////////////8feAwA/////78g/////////4AAAP//fwB/f39/f39/f/////8AAAAAAIA="), j(i, 119088, "4AAAAP4DPh/+////////////f+D+//////////////fg///////+/////////////38AAP///wcAAAAAAAD///////////////////////////////8/"), j(i, 119184, "////////////////////////////////////////AAD//////////////////////x8AAAAAAAAAAP//////P/8f////DwAA//////9/8I///////////////////wAAAACA//z////////////////5////////fAAAAAAAgP+//////wAAAP///////w8A//////////8vAP8DAAD86P//////B/////8HAP///x/////////3/wCA/wP///9/////////fwD/P/8D//9//P////////9/BQAAOP//PAB+fn4Af3////////f/AP///////////////////wf/A///////////////////////////DwD//3/4//////8P/////////////////z//////////////////AwAAAAB/APjg//1/X9v/////////////////AwAAAPj///////////////8/AAD///////////z///////8AAAAAAP8P"), j(i, 119582, "3/////////////////////8fAAD/A/7//wf+//8HwP////////////9//Pz8HAAAAAD/7///f///t/8//z8AAAAA////////////////////BwAAAAAAAAAA////////Hw=="), j(i, 119712, "////H////////wEAAAAAAP////8A4P///wf//////wf///8//////w//PgAAAAAA/////////////////////////z//A/////8P/////w///////wD///////8P"), j(i, 119824, "////////fwD//z8A/w=="), j(i, 119856, "P/3/////v5H//z8A//9/AP///38AAAAAAAAAAP//NwD//z8A////AwAAAAAAAAAA/////////8AAAAAAAAAAAG/w7/7//z8AAAAAAP///x////8fAAAAAP/+//8fAAAA////////PwD//z8A//8HAP//Aw=="), j(i, 119984, "////////////AQAAAAAAAP///////wcA////////BwD//////wD/Aw=="), j(i, 120048, "////H4AA//8/"), j(i, 120076, "//9/AP//////////PwAAAMD/AAD8////////AQAA////Af8D////////x/9wAP////9HAP//////////HgD/FwAAAAD///v///+fQAAAAAAAAAAAf73/v/8B/////////wH/A++f+f///e3jnxmB4A8="), j(i, 120208, "//////////+7B/+DAAAAAP//////////swD/Aw=="), j(i, 120256, "////////P38AAAA/AAAAAP////////9/EQD/AwAAAAD///////8/Af8DAAAAAAAA////5/8H/wM="), j(i, 120336, "/////////wE="), j(i, 120356, "////////////AwCA"), j(i, 120388, "//z///////waAAAA////////538AAP///////////yAAAAAA/////////wH//f////9/fwEA/wMAAPz////8///+fw=="), j(i, 120464, "f/v/////f7TLAP8Dv/3///9/ewH/Aw=="), j(i, 120524, "//9/AP////////////////////////8D"), j(i, 120560, "/////////////////38AAP///////////////////////////////w8="), j(i, 120624, "//////9/"), j(i, 120656, "//////////9/"), j(i, 120688, "/////////wH///9//wM="), j(i, 120714, "////PwAA////////AAAPAP8D+P//4P//"), j(i, 120760, "//////////8="), j(i, 120784, "////////////h/////////+A//8AAAAAAAAAAAsAAAD/////////////////////////////////////////AP///////////////////////////////////////wcA////fwAAAAAAAAcA8AD/////////////////////////////////////////////////////////////////D/////////////////8H/x//Af9D"), j(i, 120976, "/////////////9///////////99k3v/r7/////////+/59/f////e1/8/f//////////////////////////////////////////////////////P/////3///f////3///f////3///f////3/////9/////f//98////////9////52wc="), j(i, 121136, "//////8fgD//Qw=="), j(i, 121192, "//////8P/wP///////////////////////////////8fAAAAAAAAAP//////////jwj/Aw=="), j(i, 121264, "7////5b+9wqE6paqlvf3Xv/7/w/u+/8P"), j(i, 121302, "////A////wP///8D"), j(i, 121328, "/////////////////////////////////////////////////////////////////wABAgMEBQYHCAn/////////CgsMDQ4PEBESExQVFhcYGRobHB0eHyAhIiP///////8KCwwNDg8QERITFBUWFxgZGhscHR4fICEiI/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////8="), j(i, 121601, "ARcCHRgTAx4bGQsUCAQNHxYcEhoKBwwVEQkGEAUPDt4SBJUAAAAA////////////////INsBABQAAABDLlVURi04"), j(i, 121696, "TENfQ1RZUEUAAAAATENfTlVNRVJJQwAATENfVElNRQAAAAAATENfQ09MTEFURQAATENfTU9ORVRBUlkATENfTUVTU0FHRVM="), j(i, 121776, "Qy5VVEYtOA=="), j(i, 121800, "MAUCAE5vIGVycm9yIGluZm9ybWF0aW9uAElsbGVnYWwgYnl0ZSBzZXF1ZW5jZQBEb21haW4gZXJyb3IAUmVzdWx0IG5vdCByZXByZXNlbnRhYmxlAE5vdCBhIHR0eQBQZXJtaXNzaW9uIGRlbmllZABPcGVyYXRpb24gbm90IHBlcm1pdHRlZABObyBzdWNoIGZpbGUgb3IgZGlyZWN0b3J5AE5vIHN1Y2ggcHJvY2VzcwBGaWxlIGV4aXN0cwBWYWx1ZSB0b28gbGFyZ2UgZm9yIGRhdGEgdHlwZQBObyBzcGFjZSBsZWZ0IG9uIGRldmljZQBPdXQgb2YgbWVtb3J5AFJlc291cmNlIGJ1c3kASW50ZXJydXB0ZWQgc3lzdGVtIGNhbGwAUmVzb3VyY2UgdGVtcG9yYXJpbHkgdW5hdmFpbGFibGUASW52YWxpZCBzZWVrAENyb3NzLWRldmljZSBsaW5rAFJlYWQtb25seSBmaWxlIHN5c3RlbQBEaXJlY3Rvcnkgbm90IGVtcHR5AENvbm5lY3Rpb24gcmVzZXQgYnkgcGVlcgBPcGVyYXRpb24gdGltZWQgb3V0AENvbm5lY3Rpb24gcmVmdXNlZABIb3N0IGlzIGRvd24ASG9zdCBpcyB1bnJlYWNoYWJsZQBBZGRyZXNzIGluIHVzZQBCcm9rZW4gcGlwZQBJL08gZXJyb3IATm8gc3VjaCBkZXZpY2Ugb3IgYWRkcmVzcwBCbG9jayBkZXZpY2UgcmVxdWlyZWQATm8gc3VjaCBkZXZpY2UATm90IGEgZGlyZWN0b3J5AElzIGEgZGlyZWN0b3J5AFRleHQgZmlsZSBidXN5AEV4ZWMgZm9ybWF0IGVycm9yAEludmFsaWQgYXJndW1lbnQAQXJndW1lbnQgbGlzdCB0b28gbG9uZwBTeW1ib2xpYyBsaW5rIGxvb3AARmlsZW5hbWUgdG9vIGxvbmcAVG9vIG1hbnkgb3BlbiBmaWxlcyBpbiBzeXN0ZW0ATm8gZmlsZSBkZXNjcmlwdG9ycyBhdmFpbGFibGUAQmFkIGZpbGUgZGVzY3JpcHRvcgBObyBjaGlsZCBwcm9jZXNzAEJhZCBhZGRyZXNzAEZpbGUgdG9vIGxhcmdlAFRvbyBtYW55IGxpbmtzAE5vIGxvY2tzIGF2YWlsYWJsZQBSZXNvdXJjZSBkZWFkbG9jayB3b3VsZCBvY2N1cgBTdGF0ZSBub3QgcmVjb3ZlcmFibGUAUHJldmlvdXMgb3duZXIgZGllZABPcGVyYXRpb24gY2FuY2VsZWQARnVuY3Rpb24gbm90IGltcGxlbWVudGVkAE5vIG1lc3NhZ2Ugb2YgZGVzaXJlZCB0eXBlAElkZW50aWZpZXIgcmVtb3ZlZABEZXZpY2Ugbm90IGEgc3RyZWFtAE5vIGRhdGEgYXZhaWxhYmxlAERldmljZSB0aW1lb3V0AE91dCBvZiBzdHJlYW1zIHJlc291cmNlcwBMaW5rIGhhcyBiZWVuIHNldmVyZWQAUHJvdG9jb2wgZXJyb3IAQmFkIG1lc3NhZ2UARmlsZSBkZXNjcmlwdG9yIGluIGJhZCBzdGF0ZQBOb3QgYSBzb2NrZXQARGVzdGluYXRpb24gYWRkcmVzcyByZXF1aXJlZABNZXNzYWdlIHRvbyBsYXJnZQBQcm90b2NvbCB3cm9uZyB0eXBlIGZvciBzb2NrZXQAUHJvdG9jb2wgbm90IGF2YWlsYWJsZQBQcm90b2NvbCBub3Qgc3VwcG9ydGVkAFNvY2tldCB0eXBlIG5vdCBzdXBwb3J0ZWQATm90IHN1cHBvcnRlZABQcm90b2NvbCBmYW1pbHkgbm90IHN1cHBvcnRlZABBZGRyZXNzIGZhbWlseSBub3Qgc3VwcG9ydGVkIGJ5IHByb3RvY29sAEFkZHJlc3Mgbm90IGF2YWlsYWJsZQBOZXR3b3JrIGlzIGRvd24ATmV0d29yayB1bnJlYWNoYWJsZQBDb25uZWN0aW9uIHJlc2V0IGJ5IG5ldHdvcmsAQ29ubmVjdGlvbiBhYm9ydGVkAE5vIGJ1ZmZlciBzcGFjZSBhdmFpbGFibGUAU29ja2V0IGlzIGNvbm5lY3RlZABTb2NrZXQgbm90IGNvbm5lY3RlZABDYW5ub3Qgc2VuZCBhZnRlciBzb2NrZXQgc2h1dGRvd24AT3BlcmF0aW9uIGFscmVhZHkgaW4gcHJvZ3Jlc3MAT3BlcmF0aW9uIGluIHByb2dyZXNzAFN0YWxlIGZpbGUgaGFuZGxlAFJlbW90ZSBJL08gZXJyb3IAUXVvdGEgZXhjZWVkZWQATm8gbWVkaXVtIGZvdW5kAFdyb25nIG1lZGl1bSB0eXBlAE11bHRpaG9wIGF0dGVtcHRlZABSZXF1aXJlZCBrZXkgbm90IGF2YWlsYWJsZQBLZXkgaGFzIGV4cGlyZWQAS2V5IGhhcyBiZWVuIHJldm9rZWQAS2V5IHdhcyByZWplY3RlZCBieSBzZXJ2aWNl"), j(i, 123730, "pQJbAPABtQWMBSUBgwYdA5QE/wDHAzEDCwa8AY8BfwPKBCsA2gavAEIDTgPcAQ4EFQChBg0BlAILAjgGZAK8Av8CXQPnBAsHzwLLBe8F2wXhAh4GRQKFAIICbANvBPEA8wMYBdkA2gNMBlQCewGdA70EAABRABUCuwCzA20A/wGFBC8F+QQ4AGUBRgGfALcGqAFzAlMB"), j(i, 123928, "IQQAAAAAAAAAAC8C"), j(i, 123960, "NQRHBFYE"), j(i, 123982, "oAQ="), j(i, 124002, "RgVgBW4FYQYAAM8BAAAAAAAAAADJBukG+QYeBzkHSQdeBw=="), j(i, 124048, "GQAKABkZGQAAAAAFAAAAAAAACQAAAAALAAAAAAAAAAAZABEKGRkZAwoHAAEACQsYAAAJBgsAAAsABhkAAAAZGRk="), j(i, 124129, "DgAAAAAAAAAAGQAKDRkZGQANAAACAAkOAAAACQAOAAAO"), j(i, 124187, "DA=="), j(i, 124199, "EwAAAAATAAAAAAkMAAAAAAAMAAAM"), j(i, 124245, "EA=="), j(i, 124257, "DwAAAAQPAAAAAAkQAAAAAAAQAAAQ"), j(i, 124303, "Eg=="), j(i, 124315, "EQAAAAARAAAAAAkSAAAAAAASAAASAAAaAAAAGhoa"), j(i, 124370, "GgAAABoaGgAAAAAAAAk="), j(i, 124419, "FA=="), j(i, 124431, "FwAAAAAXAAAAAAkUAAAAAAAUAAAU"), j(i, 124477, "Fg=="), j(i, 124489, "FQAAAAAVAAAAAAkWAAAAAAAWAAAWAAAwMTIzNDU2Nzg5QUJDREVG"), j(i, 124564, "EQ=="), j(i, 124604, "//////////8="), j(i, 124672, "0XSeAFedvSqAcFIP//8+JwoAAABkAAAA6AMAABAnAACghgEAQEIPAICWmAAA4fUFGAAAADUAAABxAAAAa////877//+Sv///AAAAAAAAAAACAADAAwAAwAQAAMAFAADABgAAwAcAAMAIAADACQAAwAoAAMALAADADAAAwA0AAMAOAADADwAAwBAAAMARAADAEgAAwBMAAMAUAADAFQAAwBYAAMAXAADAGAAAwBkAAMAaAADAGwAAwBwAAMAdAADAHgAAwB8AAMAAAACzAQAAwwIAAMMDAADDBAAAwwUAAMMGAADDBwAAwwgAAMMJAADDCgAAwwsAAMMMAADDDQAA0w4AAMMPAADDAAAMuwEADMMCAAzDAwAMwwQADNsAAAAAIAAAAAkAAAAKAAAADQAAAAsAAAAMAAAAhQAAAAAgAAABIAAAAiAAAAMgAAAEIAAABSAAAAYgAAAIIAAACSAAAAogAAAoIAAAKSAAAF8gAAAAMAAAAAAAAE4xMF9fY3h4YWJpdjExNl9fc2hpbV90eXBlX2luZm9FAAAAAGjpAQB46AEAZOoBAE4xMF9fY3h4YWJpdjExN19fY2xhc3NfdHlwZV9pbmZvRQAAAGjpAQCo6AEAnOgBAE4xMF9fY3h4YWJpdjExN19fcGJhc2VfdHlwZV9pbmZvRQAAAGjpAQDY6AEAnOgBAE4xMF9fY3h4YWJpdjExOV9fcG9pbnRlcl90eXBlX2luZm9FAGjpAQAI6QEA/OgBAAAAAADM6AEAFAAAABUAAAAWAAAAFwAAABgAAAAZAAAAGgAAABsAAAAAAAAAsOkBABQAAAAcAAAAFgAAABcAAAAYAAAAHQAAAB4AAAAfAAAATjEwX19jeHhhYml2MTIwX19zaV9jbGFzc190eXBlX2luZm9FAAAAAGjpAQCI6QEAzOgBAAAAAAAg6gEACQAAACAAAAAhAAAAAAAAAEjqAQAJAAAAIgAAACMAAAAAAAAACOoBAAkAAAAkAAAAJQAAAFN0OWV4Y2VwdGlvbgAAAABA6QEA+OkBAFN0OWJhZF9hbGxvYwAAAABo6QEAEOoBAAjqAQBTdDIwYmFkX2FycmF5X25ld19sZW5ndGgAAAAAaOkBACzqAQAg6gEAU3Q5dHlwZV9pbmZvAAAAAEDpAQBU6gE="), j(i, 125552, "wLEAAMCyAADAswAAwLQAAMC1AADAtgAAwLcAAMC4AADAuQAAwLoAAMC7AADAvAAAwL0AAMC+AADAvwAAwMAAAMDBAADAwgAAwMMAAMDEAADAxQAAwMIAAMDGAADAxwAAwMgAAMDJAADAygAAwMsAAMDMAADAzQAAwM4AAMDPAADA0AAAwNEAAMDSAADA0wAAwNQAAMDVAADA1gAAwNcAAMDYAADA2QAAwNIAAMDaAADA2wAAwNwAAMDdAADA3gAAwN8AAMDgAADA4QAAwNgAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADA4gAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwOMAAMDkAADAwgAAwMIAAMDCAADA5QAAwMIAAMDmAADA5wAAwOgAAMDpAADA6gAAwOsAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADA7AAAwO0AAMDCAADA7gAAwO8AAMDCAADA8AAAwPEAAMDyAADA8wAAwPQAAMD1AADA9gAAwPcAAMD4AADAwgAAwPkAAMD6AADA+wAAwPwAAMD9AADA/gAAwP8AAMAAAQDAAQEAwAIBAMADAQDABAEAwAUBAMAGAQDABwEAwAgBAMAJAQDACgEAwAsBAMAMAQDACwEAwA0BAMAOAQDADwEAwAsBAMDCAADAwgAAwMIAAMAQAQDAEQEAwBIBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDAwgAAwMIAAMDCAADAwgAAwBMBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMDCAADAwgAAwBQBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMDCAADAwgAAwBUBAMAWAQDACwEAwAsBAMAXAQDAGAEAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAGQEAwMIAAMDCAADAGgEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMDCAADAGwEAwBwBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMAdAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwB4BAMAfAQDAIAEAwCEBAMAiAQDAIwEAwCQBAMAlAQDA2AAAwNgAAMAmAQDACwEAwAsBAMALAQDACwEAwAsBAMAnAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwCgBAMApAQDACwEAwAsBAMAqAQDACwEAwCsBAMALAQDALAEAwC0BAMAuAQDALwEAwNgAAMDYAADAMAEAwDEBAMAyAQDAMwEAwDQBAMALAQDACwEAwAsBAMALAQDACwEAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMA1AQDAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwDYBAMA3AQDAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAOAEAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMDCAADAwgAAwMIAAMA5AQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDACwEAwAsBAMALAQDAwgAAwMIAAMA6AQDAOwEAwDwB"), j(i, 128496, "oVcBAEEAAADdVwEAQgAAACZYAQBDAAAAa1gBAEQAAADSWAEARQAAABNZAQBGAAAAfFkBAEcAAACEWQEASAAAADBaAQBJAAAAZ1oBAEoAAADuWgEASwAAAC5bAQBMAAAAcVsBAE0AAADZWwEATgAAAGtcAQBPAAAAh1wBAAgAAADcXAEACQAAAB9dAQAKAAAAZ10BAAsAAACVXQEADAAAAMpdAQANAAAAD14BAA4AAAAqXgEADwAAAIZeAQAPAAAAvV4BABAAAABDXwEAEQAAAH1fAQASAAAAq18BABMAAADZXwEAFAAAAAVgAQAVAAAAMGABABcAAABgYAEAGAAAAHlgAQAZAAAAtWABABsAAADdYAEAHAAAAPBgAQAdAAAAI2EBACAAAABEYQEAIQAAAG9hAQAiAAAAnWEBACMAAADRYQEAJAAAAPNhAQAlAAAAFWIBACYAAABZYgEAKAAAAH1iAQApAAAArmIBACoAAADoYgEAKwAAADVjAQAtAAAAb2MBAC4AAACnYwEALwAAAOZjAQAwAAAAeGQBADEAAACdZAEAMgAAAM9kAQAzAAAA/mQBAGQAAABgZQEAyAAAAN1lAQDJAAAAAAAAAP////8iZgEAAQAAAD5mAQACAAAABVUBAAMAAADNZgEAEQAAADRnAQASAAAAg2cBABMAAAD7ZwEAFAAAADtoAQAVAAAATGgBABYAAAB0aAEAEQAAALdoAQAhAAAAymgBACIAAAD+aAEAIwAAAEtpAQAkAAAAaWkBACUAAACfaQEAJgAAAOJpAQAhAAAAAAAAAP////8AAAAAAAAAACYAAAAAAAAAAQAAAJByAQABAAAAkHMBAAEAAACQdAEAAQAAAJB1AQABAAAAkHYBAAEAAACQdwEAAQAAAJB4AQABAAAAkHkBAAEAAACQegEAAQAAAJB7AQABAAAAkHwBAAEAAACQfQEAAQAAAJB+AQABAAAAkH8BAAEAAACQgAEAAQAAAJCBAQABAAAAkIIBAAUAAAAAAAAABg=="), j(i, 129280, "oIMBAKCDAQAghAEAIIQBAKCEAQAghQEAoIUBACCGAQCghgEAoIYBACCHAQAghwEAoIcBAKCHAQAgiAEAIIgBAKCIAQCgiAEAIIkBACCJAQAuOU4ycIoBAAMHBQCQigEALjlOLnCKAQADBwUAkIoBAC45Ti5wigEAAwcFAJCKAQAuOVoycIoBAAMJBQCVigEALjlOMnCKAQADBwUAkIoBAC45SjdwigEABAcFAJqKAQAuOUo3cIoBAAQHBQCaigEALjlKN3CKAQAEBwUAmooBAC45TjJwigEAAwcFAJCKAQAuOU4ucIoBAAMHBQCQigEALjlOMnCKAQADBwUAkIoBACIpKSBwigEAAwcFAJqKAQAuOTcycIoBAAMHBQCaigEAo1MBABABAAAAVAEADAEAANJUAQARAQAAClUBACMAAAB/VQEAGwAAADRWAQAVAAAAxVYBAAABAAABVwEAAgEAAE1XAQADAQAAvVcBAAQBAAD7VwEABQEAAE5YAQATAAAAkVgBAB4AAADVWAEAFwAAAF9ZAQAaAAAAkVkBABkAAAD0WQEAGAAAADhaAQAdAAAAzloBABwAAAAPWwEAFgAAADdbAQAU"), j(i, 129744, "Q1gBABABAACIWAEADAEAAPNYAQARAQAAM1kBACMAAACHWQEAGwAAAOBZAQAVAAAAQloBAAABAACcWgEAAgEAAABbAQADAQAAT1sBAAQBAACnWwEABQEAAEhcAQATAAAAc1wBAB4AAADEXAEAFwAAABVdAQAaAAAAXV0BABkAAACIXQEAGAAAANJdAQAdAAAABF4BABwAAAAvXgEAFgAAAF9eAQAU"), j(i, 129920, "u08BAAEAAABcUAEAAAAAAM9QAQAAAAAAOFIBAAAAAABBUwEAAAAAAIFTAQAAAAAA+1MBAAAAAADnVAEAAAAAACVVAQAAAAAAiVUBAAAAAABUVgEAAAAAAPxWAQAAAAAADlcBAAAAAABIVwEAAAAAAKdXAQAAAAAA9lcBAAAAAAA3WAEAAAAAAKNYAQAAAAAA6FgBAAAAAAAuWQEAAAAAAH9ZAQAAAAAA61kBAAAAAAD/////g00BAIIAAAB5AAAAdg=="), j(i, 130128, "4I8BAOCPAQBQkAEAwJABAMCQAQDAkAEAAQAAANQKAwCMCgMAROcC"), j(i, 130176, "I0sBAAEAAAAAAAAA/////1dMAQABAAAA+0wBAAIAAADGTQEAAwAAAAAAAAD/////Vk4BAAAAAADSTgEAAQAAALJPAQACAAAAGFABABQAAAAAAAAA/////wAAAAAAAAAAt1ABABIAAABNUgEAFAAAAN5SAQAkAAAAhlMBAEAAAAARVAEAwQAAAAAAAAD/////q1QBAAEAAAAAAAAA/////1dMAQAAAAAAGVUBAAEAAACRVQEAAgAAAENWAQADAAAA31YBAAQAAAAgVwEABQAAAAAAAAD/////AAAAAAAAAABXTAEAAQAAAIlXAQACAAAAr1cBAAMAAADfVgEABAAAACBXAQAFAAAAAAAAAP////8AAAAAClgBADxYAQAYUAEAqFgB"), j(i, 130480, "8l8BAAEAAAA5YAEAAgAAAFhgAQADAAAAgWABAAQAAACwYAEABQAAANNgAQAGAAAABWEBAAcAAAAqYQEACAAAAFFhAQAJAAAAdmEBAAoAAACQYQEACwAAAMNhAQAMAAAA+WEBAA0AAAAuYgEADgAAAE5iAQAPAAAAhmIBAA8AAADUYgEADwAAABljAQAPAAAAP2MBAA8AAACkYwEABwAAANpjAQAHAAAAO2QBAAcAAACEZAEABwAAAK9kAQAHAAAAw2QBAA4AAADnZAEADgAAAAplAQAQAAAA9GUBABAAAAArZgEAEAAAAN9WAQAQAAAAbmYBABAAAADBZgEAEA=="), j(i, 130752, "f20BAD4AAACjbQEAPOAAAM1tAQAmAAAA1G0BACIAAAA6bgEAIAAAAHhuAQAnAAAAAAAAAP////8AAAAAAAAAAGNnAQBkAAAAxWcBAAAAAAAJaAEAHgAAAEJoAQBBAAAAQ1YBAGQAAACGaAEAlgAAAKVoAQDmAAAAAAAAAP////9jZwEAZAAAAL5oAQA8AAAA6WgBAFAAAABDVgEAZAAAABJpAQB9AAAAUmkBAKAAAAAAAAAA/////wAAAAAAAAAAY2cBAGQAAACUaQEARgAAAN5pAQBVAAAAQ1YBAGQAAAAoagEAbgAAAGdqAQB4AAAAAAAAAP////8AAAAAAAAAAGNnAQBkAAAAlGkBABQAAADeaQEAMgAAAENWAQBkAAAAKGoBAIwAAABnagEAtAAAAAAAAAD/////"), j(i, 131076, "QP8BAAD/AQCA/wEAwP8B"), j(i, 131104, "wmoBACDgAAALawEACeAAAEFrAQBf4AAAe2sBACI="), j(i, 131152, "q2sBAAEAAAC8awEAAgAAAA1sAQAD"), j(i, 131184, "+EwBAMJNAQBTTgEACU8BAOVPAQBkUAEA2lABAGdSAQDyUgEA1FMBAGFUAQ=="), j(i, 131236, "iFIBADlTAQAAAAAAnlMBAGRUAQDwVAEAL1UBAJpVAQBQVgE="), j(i, 131280, "Y1IBAIADAACAA/8DbGUAAAcAAAA0UwEAIAQAAAAELwUAAAAAAAAAAHNTAQAwBQAAMAWPBXloAAAEAAAAG1QBAJAFAACQBf8FAAAAAAAAAAC3VAEAAAYAAAAG/wYAAAAAAAAAACpVAQAABwAAAAdPBwAAAAAAAAAAllUBAAAJAAAACX8JaWgAAAQAAAA/VgEAgAkAAIAJ/wluYgAABAAAANZWAQAACgAAAAp/CmFwAAAEAAAAClcBAIAKAACACv8KdWcAAAQAAABfVwEAAAsAAAALfwsAAAAAAAAAAM5XAQCACwAAgAv/C2F0AAAEAAAAD1gBAAAMAAAADH8MZXQAAAAAAAAsWAEAgAwAAIAM/wxuawAABAAAAJ9YAQAADQAAAA1/DWxtAAAEAAAA5FgBAIANAACADf8NaXMAAAQAAAA8WQEAAA4AAAAOfw4AAAAAAAAAAJtZAQCADgAAgA7/DgAAAAAAAAAA8FkBAAAPAAAAD/8PAAAAAAAAAAA0WgEAABAAAAAQnxAAAAAAAAAAANlaAQCgEAAAoBD/EGFrAAAEAAAAGFsBAAARAAAAEf8Rb2sAAAQAAABKWwEAABIAAAASnxMAAAAAAAAAALlbAQAAKAAAACj/KAAAAAAQAAAAWlwBAEAwAABAMP8wAAAAAAgAAACDXAEAADEAAAAx/58AAAAACAAAABhbAQAApwAAAKf/129rAAAM"), j(i, 131840, "WAIAAKoAAACwBAAAhwAAANAHAABuAAAAuAsAAG4AAAD/////"), j(i, 131888, "qAsD"), j(i, 131904, "mF4BAAEAAAA4XwEAAgAAAGFfAQADAAAAnV8BAAYAAADCXwEACQAAAPhfAQAKAAAAJ2ABAAQAAABNYAEABQAAAI1gAQAkAAAAq2ABAAsAAADVYAEADAAAAPZgAQANAAAAFmEBAA4AAABMYQEADwAAAGdhAQAQAAAAlmEBABEAAAC7YQEAEgAAAAJiAQAfAAAAG2IBACUAAABIYgEAIAAAAJJiAQAhAAAAzmIBACIAAADwYgEABwAAAC5jAQAI"), j(i, 132112, "jmMBAAEAAAC8YwEAAgAAAAAAAAABAAAAFJwBACCcAQAsnAEAPAAAABo="), j(i, 132163, "AgMFCAsOEhYbICUrMTc+RUxTWmJpcXmAiJCYn6autbzCyc/V2uDk6e3w9Pb5+/z9/f39/Pv59vTw7enk4NrVz8nCvLWupp+YkIiAeXFpYlpTTEU+NzErJSAbFhIOCwgFAwI="), j(i, 132288, "QAAAAAABAAAAAAAA7AQCACcAAAAoAAAAKQAAACoAAAArAAAAQOkBAMO2AQBo6QEAsLYBAOQEAgAAAAAAJAUCACwAAAAtAAAALgAAAC8AAABA6QEAArcBAGjpAQDstgEAEAUCAGjpAQDStgEAGAUCAAU="), j(i, 132412, "DQ=="), j(i, 132436, "CwAAAAoAAADoeAM="), j(i, 132460, "Ag=="), j(i, 132476, "//////////8="), j(i, 132544, "MAUCAAAAAAAF"), j(i, 132564, "MA=="), j(i, 132588, "CwAAADEAAAD4eAMAAAQ="), j(i, 132612, "AQ=="), j(i, 132628, "/////wo="), j(i, 132696, "yAUCAAB/BA==");
      var ME, fA = (ME = [null, function(I) {
        var C, Q = 0;
        return Q = A[(I |= 0) >> 2], A[I >> 2] = Q + 1, Q = 255 & (C = M[0 | Q]), (0 | C) < 0 && (Q = a[(A[I + 12 >> 2] + (Q << 1) | 0) - 256 >> 1]), 0 | Q;
      }, GD, function(I) {
        var C, Q;
        return C = A[(I |= 0) >> 2], Q = A[C >> 2], A[I >> 2] = C + 4, 0 | Q;
      }, function(I) {
        var C = 0, Q = 0;
        return C = A[(I |= 0) >> 2], (0 | (Q = mE(I))) == 65533 && (A[I >> 2] = C + 1, A[I + 8 >> 2] = 1, Q = 255 & (C = M[0 | C]), (0 | C) >= 0 || (Q = a[(A[I + 12 >> 2] + (Q << 1) | 0) - 256 >> 1])), 0 | Q;
      }, mE, function(I) {
        var C, Q, g = 0;
        return (g = A[4 + (I |= 0) >> 2]) >>> 0 <= (Q = (C = A[I >> 2]) + 1 | 0) >>> 0 ? (A[I >> 2] = g, 65533) : (A[I >> 2] = Q, g = G[0 | C], A[I >> 2] = C + 2, g | G[C + 1 | 0] << 8);
      }, function(I, C) {
        var Q, g, E;
        return C |= 0, I = A[(I |= 0) >> 2], Q = A[I + 4 >> 2], g = A[C >> 2], (C = aI(Q + 1 | 0, (E = A[g + 4 >> 2]) + 1 | 0)) || (C = M[0 | Q] - M[0 | E] | 0) || (C = aI(A[I >> 2], A[g >> 2])), 0 | C;
      }, function(I, C) {
        var Q;
        return I |= 0, C = A[(C |= 0) >> 2], Q = A[I >> 2], (I = A[C + 16 >> 2] - A[Q + 16 >> 2] | 0) || (I = aI(A[Q >> 2], A[C >> 2])), 0 | I;
      }, $U, function(I, C, Q, g) {
        var E;
        return C |= 0, Q |= 0, g |= 0, t = E = t - 16 | 0, (I = 0 | iI(A[60 + (I |= 0) >> 2], 0 | C, 0 | Q, 255 & g, E + 8 | 0)) ? (A[56798] = I, I = -1) : I = 0, t = E + 16 | 0, QA = I ? -1 : A[E + 12 >> 2], 0 | (I ? -1 : A[E + 8 >> 2]);
      }, function(I, C, Q) {
        C |= 0, Q |= 0;
        var g, E = 0, U = 0, w = 0, D = 0, J = 0, o = 0;
        t = g = t - 32 | 0, E = A[28 + (I |= 0) >> 2], A[g + 16 >> 2] = E, w = A[I + 20 >> 2], A[g + 28 >> 2] = Q, A[g + 24 >> 2] = C, C = w - E | 0, A[g + 20 >> 2] = C, w = C + Q | 0, J = 2;
        A: {
          I: {
            C = g + 16 | 0, (E = 0 | PA(A[I + 60 >> 2], 0 | C, 2, g + 12 | 0)) ? (A[56798] = E, E = -1) : E = 0;
            Q: {
              if (E) E = C;
              else for (; ; ) {
                if ((0 | (U = A[g + 12 >> 2])) == (0 | w)) break Q;
                if ((0 | U) < 0) {
                  E = C;
                  break I;
                }
                if (D = U - ((o = (D = A[C + 4 >> 2]) >>> 0 < U >>> 0) ? D : 0) | 0, A[(E = (o << 3) + C | 0) >> 2] = D + A[E >> 2], A[(C = (o ? 12 : 4) + C | 0) >> 2] = A[C >> 2] - D, w = w - U | 0, C = E, J = J - o | 0, (U = 0 | PA(A[I + 60 >> 2], 0 | C, 0 | J, g + 12 | 0)) ? (A[56798] = U, U = -1) : U = 0, U) break;
              }
              if ((0 | w) != -1) break I;
            }
            C = A[I + 44 >> 2], A[I + 28 >> 2] = C, A[I + 20 >> 2] = C, A[I + 16 >> 2] = C + A[I + 48 >> 2], I = Q;
            break A;
          }
          A[I + 28 >> 2] = 0, A[I + 16 >> 2] = 0, A[I + 20 >> 2] = 0, A[I >> 2] = 32 | A[I >> 2], I = 0, (0 | J) != 2 && (I = Q - A[E + 4 >> 2] | 0);
        }
        return t = g + 32 | 0, 0 | I;
      }, function(I, C, Q) {
        I |= 0, C |= 0, Q |= 0;
        var g, E = 0, U = 0, w = 0;
        t = g = t - 32 | 0, A[g + 16 >> 2] = C, E = A[I + 48 >> 2], A[g + 20 >> 2] = Q - !!(0 | E), U = A[I + 44 >> 2], A[g + 28 >> 2] = E, A[g + 24 >> 2] = U;
        A: {
          I: {
            if ((E = 0 | cQ(A[I + 60 >> 2], g + 16 | 0, 2, g + 12 | 0)) ? (A[56798] = E, E = -1) : E = 0, E) C = 32;
            else {
              if ((0 | (E = A[g + 12 >> 2])) > 0) break I;
              C = E ? 32 : 16;
            }
            A[I >> 2] = C | A[I >> 2];
            break A;
          }
          w = E, (U = A[g + 20 >> 2]) >>> 0 >= E >>> 0 || (E = A[I + 44 >> 2], A[I + 4 >> 2] = E, A[I + 8 >> 2] = E + (w - U | 0), A[I + 48 >> 2] && (A[I + 4 >> 2] = E + 1, M[(C + Q | 0) - 1 | 0] = G[0 | E]), w = Q);
        }
        return t = g + 32 | 0, 0 | w;
      }, function(I) {
        return 0 | HA(A[60 + (I |= 0) >> 2]);
      }, kg, function(I, C, Q, g, E, U) {
        I |= 0, C = +C, Q |= 0, g |= 0, E |= 0, U |= 0;
        var w, D = 0, J = 0, o = 0, y = 0, S = 0, Y = 0, c = 0, n = 0, V = 0, x = 0, O = 0, v = 0, _ = 0, AA = 0, CA = 0, BA = 0, EA = 0, wA = 0;
        t = w = t - 560 | 0, A[w + 44 >> 2] = 0, W(+C), D = 0 | d(1), d(0), (0 | D) < 0 ? (v = 1, EA = 84997, W(+(C = -C)), D = 0 | d(1), d(0)) : 2048 & E ? (v = 1, EA = 85e3) : (EA = (v = 1 & E) ? 85003 : 84998, wA = !v);
        A: if (2146435072 & ~D) {
          AA = w + 16 | 0;
          I: {
            Q: {
              B: {
                if (C = gE(C, w + 44 | 0), (C += C) != 0) {
                  if (D = A[w + 44 >> 2], A[w + 44 >> 2] = D - 1, (0 | (CA = 32 | U)) != 97) break B;
                  break I;
                }
                if ((0 | (CA = 32 | U)) == 97) break I;
                S = A[w + 44 >> 2], Y = (0 | g) < 0 ? 6 : g;
                break Q;
              }
              S = D - 29 | 0, A[w + 44 >> 2] = S, C *= 268435456, Y = (0 | g) < 0 ? 6 : g;
            }
            for (J = x = (w + 48 | 0) + ((0 | S) >= 0 ? 288 : 0) | 0; g = C < 4294967296 & C >= 0 ? ~~C >>> 0 : 0, A[J >> 2] = g, J = J + 4 | 0, (C = 1e9 * (C - +(g >>> 0))) != 0; ) ;
            if ((0 | S) <= 0) g = S, D = J, o = x;
            else for (o = x, g = S; ; ) {
              if (n = (0 | g) >= 29 ? 29 : g, !(o >>> 0 > (D = J - 4 | 0) >>> 0)) {
                for (g = 0; y = A[D >> 2], BA = g, g = 31 & n, (63 & n) >>> 0 >= 32 ? (c = y << g, g = 0) : (c = (1 << g) - 1 & y >>> 32 - g, g = y << g), y = c + V | 0, g = _U(BA = BA + g | 0, g >>> 0 > BA >>> 0 ? y + 1 | 0 : y, 1e9), A[D >> 2] = BA - tA(g, QA, 1e9, 0), o >>> 0 <= (D = D - 4 | 0) >>> 0; ) ;
                g && (A[(o = o - 4 | 0) >> 2] = g);
              }
              for (; o >>> 0 < (D = J) >>> 0 && !A[(J = D - 4 | 0) >> 2]; ) ;
              if (g = A[w + 44 >> 2] - n | 0, A[w + 44 >> 2] = g, J = D, !((0 | g) > 0)) break;
            }
            if ((0 | g) < 0) for (_ = 1 + ((Y + 25 >>> 0) / 9 | 0) | 0, V = (0 | CA) == 102; ; ) {
              if (c = (0 | (g = 0 - g | 0)) >= 9 ? 9 : g, D >>> 0 <= o >>> 0) J = A[o >> 2];
              else {
                for (n = 1e9 >>> c | 0, y = ~(-1 << c), g = 0, J = o; BA = g, g = A[J >> 2], A[J >> 2] = BA + (g >>> c | 0), g = T(n, g & y), (J = J + 4 | 0) >>> 0 < D >>> 0; ) ;
                J = A[o >> 2], g && (A[D >> 2] = g, D = D + 4 | 0);
              }
              if (g = c + A[w + 44 >> 2] | 0, A[w + 44 >> 2] = g, o = (!J << 2) + o | 0, D = D - (J = V ? x : o) >> 2 > (0 | _) ? J + (_ << 2) | 0 : D, !((0 | g) < 0)) break;
            }
            if (g = 0, !(D >>> 0 <= o >>> 0 || (g = T(x - o >> 2, 9), J = 10, (y = A[o >> 2]) >>> 0 < 10))) for (; g = g + 1 | 0, y >>> 0 >= (J = T(J, 10)) >>> 0; ) ;
            if ((0 | (J = (Y - ((0 | CA) != 102 ? g : 0) | 0) - ((0 | CA) == 103 & !!(0 | Y)) | 0)) < (T(D - x >> 2, 9) - 9 | 0)) {
              if (S = ((((0 | S) < 0 ? 4 : 292) + w | 0) + ((y = (0 | (n = J + 9216 | 0)) / 9 | 0) << 2) | 0) - 4048 | 0, J = 10, (0 | (c = n - T(y, 9) | 0)) <= 7) for (; J = T(J, 10), (0 | (c = c + 1 | 0)) != 8; ) ;
              if (!(!(V = (n = A[S >> 2]) - T(J, _ = (n >>> 0) / (J >>> 0) | 0) | 0) & (0 | (y = S + 4 | 0)) == (0 | D)) && (!(1 & _) && (C = 9007199254740992, !(1 & M[S - 4 | 0]) | (0 | J) != 1e9 | o >>> 0 >= S >>> 0) || (C = 9007199254740994), O = (0 | D) == (0 | y) ? 1 : 1.5, O = (y = J >>> 1 | 0) >>> 0 > V >>> 0 ? 0.5 : (0 | y) == (0 | V) ? O : 1.5, G[0 | EA] != 45 | wA || (O = -O, C = -C), y = n - V | 0, A[S >> 2] = y, C + O != C)) {
                if (g = J + y | 0, A[S >> 2] = g, g >>> 0 >= 1e9) for (; A[S >> 2] = 0, (S = S - 4 | 0) >>> 0 < o >>> 0 && (A[(o = o - 4 | 0) >> 2] = 0), g = A[S >> 2] + 1 | 0, A[S >> 2] = g, g >>> 0 > 999999999; ) ;
                if (g = T(x - o >> 2, 9), J = 10, !((y = A[o >> 2]) >>> 0 < 10)) for (; g = g + 1 | 0, y >>> 0 >= (J = T(J, 10)) >>> 0; ) ;
              }
              D = D >>> 0 > (J = S + 4 | 0) >>> 0 ? J : D;
            }
            for (; y = D, !(n = D >>> 0 <= o >>> 0) && !A[(D = y - 4 | 0) >> 2]; ) ;
            if ((0 | CA) == 103) {
              if (Y = ((D = (0 | (J = Y || 1)) > (0 | g) & (0 | g) > -5) ? ~g : -1) + J | 0, U = (D ? -1 : -2) + U | 0, !(S = 8 & E)) {
                if (D = -9, !n && (S = A[y - 4 >> 2]) && (c = 10, D = 0, !((S >>> 0) % 10 | 0))) {
                  for (; J = D, D = D + 1 | 0, !((S >>> 0) % ((c = T(c, 10)) >>> 0) | 0); ) ;
                  D = ~J;
                }
                J = T(y - x >> 2, 9), (-33 & U) != 70 ? (S = 0, Y = (0 | (D = (0 | (D = ((g + J | 0) + D | 0) - 9 | 0)) > 0 ? D : 0)) > (0 | Y) ? Y : D) : (S = 0, Y = (0 | (D = (0 | (D = (D + J | 0) - 9 | 0)) > 0 ? D : 0)) > (0 | Y) ? Y : D);
              }
            } else S = 8 & E;
            if (c = -1, (0 | ((n = S | Y) ? 2147483645 : 2147483646)) < (0 | Y)) break A;
            if (V = 1 + (!!(0 | n) + Y | 0) | 0, (0 | (J = -33 & U)) != 70) {
              if ((AA - (D = Ig(((D = g >> 31) ^ g) - D | 0, 0, AA)) | 0) <= 1) for (; M[0 | (D = D - 1 | 0)] = 48, (AA - D | 0) < 2; ) ;
              if (M[0 | (_ = D - 2 | 0)] = U, M[D - 1 | 0] = (0 | g) < 0 ? 45 : 43, (0 | (D = AA - _ | 0)) > (2147483647 ^ V)) break A;
            } else {
              if ((2147483647 ^ V) < (0 | g)) break A;
              D = (0 | g) > 0 ? g : 0;
            }
            if ((0 | (g = D + V | 0)) > (2147483647 ^ v)) break A;
            OI(I, 32, Q, V = g + v | 0, E), CC(I, EA, v), OI(I, 48, Q, V, 65536 ^ E);
            Q: {
              B: {
                E: {
                  if ((0 | J) == 70) {
                    for (g = 8 | (U = w + 16 | 0), S = 9 | U, o = J = o >>> 0 > x >>> 0 ? x : o; ; ) {
                      D = Ig(A[o >> 2], 0, S);
                      R: if ((0 | J) == (0 | o)) (0 | D) == (0 | S) && (M[w + 24 | 0] = 48, D = g);
                      else {
                        if (w + 16 >>> 0 >= D >>> 0) break R;
                        for (; M[0 | (D = D - 1 | 0)] = 48, w + 16 >>> 0 < D >>> 0; ) ;
                      }
                      if (CC(I, D, S - D | 0), !(x >>> 0 >= (o = o + 4 | 0) >>> 0)) break;
                    }
                    if (n && CC(I, 85998, 1), (0 | Y) <= 0 | o >>> 0 >= y >>> 0) break E;
                    for (; ; ) {
                      if ((D = Ig(A[o >> 2], 0, S)) >>> 0 > w + 16 >>> 0) for (; M[0 | (D = D - 1 | 0)] = 48, w + 16 >>> 0 < D >>> 0; ) ;
                      if (CC(I, D, (0 | Y) >= 9 ? 9 : Y), D = Y - 9 | 0, y >>> 0 <= (o = o + 4 | 0) >>> 0) break B;
                      if (g = (0 | Y) > 9, Y = D, !g) break;
                    }
                    break B;
                  }
                  R: if (!((0 | Y) < 0)) for (x = o >>> 0 < y >>> 0 ? y : o + 4 | 0, g = 8 | (U = w + 16 | 0), y = 9 | U, J = o; ; ) {
                    (0 | y) == (0 | (D = Ig(A[J >> 2], 0, y))) && (M[w + 24 | 0] = 48, D = g);
                    D: if ((0 | J) == (0 | o)) CC(I, D, 1), D = D + 1 | 0, S | Y && CC(I, 85998, 1);
                    else {
                      if (w + 16 >>> 0 >= D >>> 0) break D;
                      for (; M[0 | (D = D - 1 | 0)] = 48, w + 16 >>> 0 < D >>> 0; ) ;
                    }
                    if (CC(I, D, (0 | (U = y - D | 0)) > (0 | Y) ? Y : U), Y = Y - U | 0, x >>> 0 <= (J = J + 4 | 0) >>> 0) break R;
                    if (!((0 | Y) >= 0)) break;
                  }
                  OI(I, 48, Y + 18 | 0, 18, 0), CC(I, _, AA - _ | 0);
                  break Q;
                }
                D = Y;
              }
              OI(I, 48, D + 9 | 0, 9, 0);
            }
            OI(I, 32, Q, V, 8192 ^ E), c = (0 | Q) < (0 | V) ? V : Q;
            break A;
          }
          if (S = (U << 26 >> 31 & 9) + EA | 0, !(g >>> 0 > 11)) {
            for (D = 12 - g | 0, O = 16; O *= 16, D = D - 1 | 0; ) ;
            C = G[0 | S] != 45 ? C + O - O : -(O + (-C - O));
          }
          for ((0 | AA) == (0 | (D = Ig(((D = A[w + 44 >> 2]) ^ (J = D >> 31)) - J | 0, 0, AA))) && (M[w + 15 | 0] = 48, D = w + 15 | 0), x = 2 | v, o = 32 & U, J = A[w + 44 >> 2], M[0 | (Y = D - 2 | 0)] = U + 15, M[D - 1 | 0] = (0 | J) < 0 ? 45 : 43, D = 8 & E, J = w + 16 | 0; U = J, y = GA(C) < 2147483648 ? ~~C : -2147483648, M[0 | J] = o | G[y + 124512 | 0], !((0 | g) > 0 | D) & (C = 16 * (C - +(0 | y))) == 0 | ((J = U + 1 | 0) - (w + 16 | 0) | 0) != 1 || (M[U + 1 | 0] = 46, J = U + 2 | 0), C != 0; ) ;
          c = -1, (2147483645 - (U = (D = AA - Y | 0) + x | 0) | 0) < (0 | g) || (OI(I, 32, Q, U = (g = !g || ((o = J - (w + 16 | 0) | 0) - 2 | 0) >= (0 | g) ? o = J - (w + 16 | 0) | 0 : g + 2 | 0) + U | 0, E), CC(I, S, x), OI(I, 48, Q, U, 65536 ^ E), CC(I, w + 16 | 0, o), OI(I, 48, g - o | 0, 0, 0), CC(I, Y, D), OI(I, 32, Q, U, 8192 ^ E), c = (0 | Q) < (0 | U) ? U : Q);
        } else OI(I, 32, Q, D = v + 3 | 0, -65537 & E), CC(I, EA, v), g = 32 & U, CC(I, C != C ? g ? 85596 : 85774 : g ? 85247 : 85460, 3), OI(I, 32, Q, D, 8192 ^ E), c = (0 | Q) < (0 | D) ? D : Q;
        return t = w + 560 | 0, 0 | c;
      }, function(I, C) {
        var Q;
        I |= 0, Q = C |= 0, C = A[C >> 2] + 7 & -8, A[Q >> 2] = C + 16, H[I >> 3] = zB(A[C >> 2], A[C + 4 >> 2], A[C + 8 >> 2], A[C + 12 >> 2]);
      }, function(I, C, Q) {
        C |= 0, Q |= 0;
        var g, E, U = 0, w = 0;
        return g = A[84 + (I |= 0) >> 2], w = A[g + 4 >> 2], E = A[I + 28 >> 2], (U = (U = A[I + 20 >> 2] - E | 0) >>> 0 > w >>> 0 ? w : U) && (bA(A[g >> 2], E, U), A[g >> 2] = U + A[g >> 2], w = A[g + 4 >> 2] - U | 0, A[g + 4 >> 2] = w), U = A[g >> 2], (w = Q >>> 0 > w >>> 0 ? w : Q) && (bA(U, C, w), U = w + A[g >> 2] | 0, A[g >> 2] = U, A[g + 4 >> 2] = A[g + 4 >> 2] - w), M[0 | U] = 0, C = A[I + 44 >> 2], A[I + 28 >> 2] = C, A[I + 20 >> 2] = C, 0 | Q;
      }, function(I, C, Q) {
        Q |= 0;
        var g, E, U = 0;
        return bA(C |= 0, g = A[84 + (I |= 0) >> 2], Q = Q >>> 0 > (U = (E = eQ(g, 0, U = Q + 256 | 0)) ? E - g | 0 : U) >>> 0 ? U : Q), C = g + U | 0, A[I + 84 >> 2] = C, A[I + 8 >> 2] = C, A[I + 4 >> 2] = Q + g, 0 | Q;
      }, function(I, C, Q) {
        C |= 0, Q |= 0;
        var g, E = 0, U = 0, w = 0;
        E = A[84 + (I |= 0) >> 2], g = A[E >> 2] ? E : 84412, E = 0;
        A: if (A[I + 48 >> 2]) for (; ; ) {
          if (!(U = A[(E << 2) + g >> 2])) break A;
          if (M[A[I + 44 >> 2] + E | 0] = (0 | U) >= 128 ? 64 : U, !((E = E + 1 | 0) >>> 0 < UA[I + 48 >> 2])) break;
        }
        return U = A[I + 44 >> 2], A[I + 4 >> 2] = U, A[I + 84 >> 2] = (E << 2) + g, A[I + 8 >> 2] = E + U, !Q | !E || (A[I + 4 >> 2] = U + 1, M[0 | C] = G[0 | U], w = 1), 0 | w;
      }, $U, NB, JD, JD, function(I, C, Q) {
        Q |= 0;
        var g, E = 0;
        return t = g = t + -64 | 0, E = 1, SQ(I |= 0, C |= 0, 0) || (E = 0, C && (E = 0, (C = eE(C, 125132)) && (pA(4 | (E = g + 8 | 0), 0, 52), A[g + 56 >> 2] = 1, A[g + 20 >> 2] = -1, A[g + 16 >> 2] = I, A[g + 8 >> 2] = C, fA[A[A[C >> 2] + 28 >> 2]](C, E, A[Q >> 2], 1), (0 | (I = A[g + 32 >> 2])) == 1 && (A[Q >> 2] = A[g + 24 >> 2]), E = (0 | I) == 1))), t = g - -64 | 0, 0 | E;
      }, function(I, C, Q, g, E, U) {
        Q |= 0, g |= 0, E |= 0, U |= 0, SQ(I |= 0, A[8 + (C |= 0) >> 2], U) && EU(C, Q, g, E);
      }, function(I, C, Q, g, E) {
        if (Q |= 0, g |= 0, E |= 0, SQ(I |= 0, A[8 + (C |= 0) >> 2], E)) A[C + 28 >> 2] == 1 | A[C + 4 >> 2] != (0 | Q) || (A[C + 28 >> 2] = g);
        else A: if (SQ(I, A[C >> 2], E)) {
          if (!(A[C + 16 >> 2] != (0 | Q) & A[C + 20 >> 2] != (0 | Q))) {
            if ((0 | g) != 1) break A;
            return void (A[C + 32 >> 2] = 1);
          }
          A[C + 20 >> 2] = Q, A[C + 32 >> 2] = g, A[C + 40 >> 2] = A[C + 40 >> 2] + 1, A[C + 36 >> 2] != 1 | A[C + 24 >> 2] != 2 || (M[C + 54 | 0] = 1), A[C + 44 >> 2] = 4;
        }
      }, function(I, C, Q, g) {
        Q |= 0, g |= 0, SQ(I |= 0, A[8 + (C |= 0) >> 2], 0) && RE(C, Q, g);
      }, NB, function(I, C, Q, g, E, U) {
        Q |= 0, g |= 0, E |= 0, U |= 0, SQ(I |= 0, A[8 + (C |= 0) >> 2], U) ? EU(C, Q, g, E) : (I = A[I + 8 >> 2], fA[A[A[I >> 2] + 20 >> 2]](I, C, Q, g, E, U));
      }, function(I, C, Q, g, E) {
        if (Q |= 0, g |= 0, E |= 0, SQ(I |= 0, A[8 + (C |= 0) >> 2], E)) A[C + 28 >> 2] == 1 | A[C + 4 >> 2] != (0 | Q) || (A[C + 28 >> 2] = g);
        else A: {
          if (SQ(I, A[C >> 2], E)) {
            if (!(A[C + 16 >> 2] != (0 | Q) & A[C + 20 >> 2] != (0 | Q))) {
              if ((0 | g) != 1) break A;
              return void (A[C + 32 >> 2] = 1);
            }
            A[C + 32 >> 2] = g;
            I: if (A[C + 44 >> 2] != 4) {
              if (L[C + 52 >> 1] = 0, I = A[I + 8 >> 2], fA[A[A[I >> 2] + 20 >> 2]](I, C, Q, Q, 1, E), G[C + 53 | 0]) {
                if (A[C + 44 >> 2] = 3, !G[C + 52 | 0]) break I;
                break A;
              }
              A[C + 44 >> 2] = 4;
            }
            if (A[C + 20 >> 2] = Q, A[C + 40 >> 2] = A[C + 40 >> 2] + 1, A[C + 36 >> 2] != 1 | A[C + 24 >> 2] != 2) break A;
            return void (M[C + 54 | 0] = 1);
          }
          I = A[I + 8 >> 2], fA[A[A[I >> 2] + 24 >> 2]](I, C, Q, g, E);
        }
      }, function(I, C, Q, g) {
        Q |= 0, g |= 0, SQ(I |= 0, A[8 + (C |= 0) >> 2], 0) ? RE(C, Q, g) : (I = A[I + 8 >> 2], fA[A[A[I >> 2] + 28 >> 2]](I, C, Q, g));
      }, NB, function(I) {
        return 84787;
      }, NB, function(I) {
        return 85058;
      }, NB, function(I) {
        return 84147;
      }, function(I) {
        var C;
        return C = I |= 0, I = A[I >> 2], A[C >> 2] = I + 1, 0 | ((0 | (I = M[0 | I])) < 0 ? 65533 : 255 & I);
      }, function(I, C, Q, g, E, U) {
        I |= 0, C |= 0, Q |= 0, g |= 0, E |= 0, U |= 0;
        var w, D = 0, J = 0, o = 0, y = 0, S = 0, Y = 0, c = 0, n = 0;
        if (w = aC(408), A[w + 4 >> 2] = g, A[w >> 2] = Q, C ? (bA(w + 16 | 0, C, 376), H[w + 392 >> 3] = (H[C + 368 >> 3] - H[C >> 3]) / +(Q >>> 0), C = 0) : C = 1, A[w + 400 >> 2] = E, M[w + 8 | 0] = C, U) {
          if (Q = A[I + 24 >> 2]) for (C = A[I + 20 >> 2], g = A[I + 8 >> 2]; (E = A[A[(C >>> 8 & 16777212) + g >> 2] + ((1023 & C) << 2) >> 2]) && (_A(E), Q = A[I + 24 >> 2], g = A[I + 8 >> 2], C = A[I + 20 >> 2]), C = C + 1 | 0, A[I + 20 >> 2] = C, Q = Q - 1 | 0, A[I + 24 >> 2] = Q, C >>> 0 >= 2048 && (_A(A[g >> 2]), g = A[I + 8 >> 2] + 4 | 0, A[I + 8 >> 2] = g, C = A[I + 20 >> 2] - 1024 | 0, A[I + 20 >> 2] = C, Q = A[I + 24 >> 2]), Q; ) ;
          C = A[I + 28 >> 2], A[I + 420 >> 2] = A[C >> 2], (Q = A[I + 32 >> 2]) && (M[C + 8 | 0] = G[Q + 8 | 0], bA(C + 16 | 0, I + 40 | 0, 376), (C = A[I + 32 >> 2]) && _A(C), A[I + 32 >> 2] = 0);
        }
        if (Q = (g = A[I + 24 >> 2]) + A[I + 20 >> 2] | 0, E = A[I + 12 >> 2], (0 | Q) == (0 | ((0 | (C = A[I + 8 >> 2])) != (0 | E) ? (E - C << 8) - 1 : 0))) {
          t = D = t - 32 | 0;
          A: {
            I: {
              Q: {
                B: {
                  if ((C = A[16 + (U = I + 4 | 0) >> 2]) >>> 0 >= 1024) {
                    if (A[U + 16 >> 2] = C - 1024, C = A[U + 4 >> 2], Y = A[C >> 2], E = C + 4 | 0, A[U + 4 >> 2] = E, (0 | (C = A[U + 8 >> 2])) == A[U + 12 >> 2]) if ((J = A[U >> 2]) >>> 0 < E >>> 0) Q = rQ((g = (1 + (E - J >> 2) | 0) / -2 << 2) + E | 0, E, C = C - E | 0) + C | 0, A[U + 8 >> 2] = Q, A[U + 4 >> 2] = g + A[U + 4 >> 2];
                    else {
                      if ((Q = (0 | C) == (0 | J) ? 1 : C - J >> 1) >>> 0 >= 1073741824) break B;
                      if (c = (g = Q << 2) + (o = aC(g)) | 0, Q = g = o + (-4 & Q) | 0, (0 | C) != (0 | E)) {
                        if (n = -4 & (C = C - E | 0), S = 1 + ((y = C - 4 | 0) >>> 2 | 0) & 7) for (Q = 0, C = g; A[C >> 2] = A[E >> 2], E = E + 4 | 0, C = C + 4 | 0, (0 | S) != (0 | (Q = Q + 1 | 0)); ) ;
                        else C = g;
                        if (Q = g + n | 0, !(y >>> 0 < 28)) for (; A[C >> 2] = A[E >> 2], A[C + 4 >> 2] = A[E + 4 >> 2], A[C + 8 >> 2] = A[E + 8 >> 2], A[C + 12 >> 2] = A[E + 12 >> 2], A[C + 16 >> 2] = A[E + 16 >> 2], A[C + 20 >> 2] = A[E + 20 >> 2], A[C + 24 >> 2] = A[E + 24 >> 2], A[C + 28 >> 2] = A[E + 28 >> 2], E = E + 32 | 0, (0 | Q) != (0 | (C = C + 32 | 0)); ) ;
                      }
                      A[U + 12 >> 2] = c, A[U + 8 >> 2] = Q, A[U + 4 >> 2] = g, A[U >> 2] = o, J && (_A(J), Q = A[U + 8 >> 2]);
                    }
                    else Q = C;
                    A[Q >> 2] = Y, A[U + 8 >> 2] = A[U + 8 >> 2] + 4;
                    break A;
                  }
                  if ((J = (E = A[U + 8 >> 2]) - A[U + 4 >> 2] >> 2) >>> 0 < (g = (C = A[U + 12 >> 2]) - (Q = A[U >> 2]) | 0) >> 2 >>> 0) {
                    if ((0 | C) != (0 | E)) {
                      A[D + 8 >> 2] = aC(4096), rE(U, D + 8 | 0);
                      break A;
                    }
                    if (A[D + 8 >> 2] = aC(4096), zE(U, D + 8 | 0), C = A[U + 4 >> 2], Y = A[C >> 2], E = C + 4 | 0, A[U + 4 >> 2] = E, (0 | (C = A[U + 8 >> 2])) == A[U + 12 >> 2]) if ((J = A[U >> 2]) >>> 0 < E >>> 0) Q = rQ((g = (1 + (E - J >> 2) | 0) / -2 << 2) + E | 0, E, C = C - E | 0) + C | 0, A[U + 8 >> 2] = Q, A[U + 4 >> 2] = g + A[U + 4 >> 2];
                    else {
                      if ((Q = (0 | C) == (0 | J) ? 1 : C - J >> 1) >>> 0 >= 1073741824) break B;
                      if (c = (g = Q << 2) + (o = aC(g)) | 0, Q = g = o + (-4 & Q) | 0, (0 | C) != (0 | E)) {
                        if (n = -4 & (C = C - E | 0), S = 1 + ((y = C - 4 | 0) >>> 2 | 0) & 7) for (Q = 0, C = g; A[C >> 2] = A[E >> 2], E = E + 4 | 0, C = C + 4 | 0, (0 | S) != (0 | (Q = Q + 1 | 0)); ) ;
                        else C = g;
                        if (Q = g + n | 0, !(y >>> 0 < 28)) for (; A[C >> 2] = A[E >> 2], A[C + 4 >> 2] = A[E + 4 >> 2], A[C + 8 >> 2] = A[E + 8 >> 2], A[C + 12 >> 2] = A[E + 12 >> 2], A[C + 16 >> 2] = A[E + 16 >> 2], A[C + 20 >> 2] = A[E + 20 >> 2], A[C + 24 >> 2] = A[E + 24 >> 2], A[C + 28 >> 2] = A[E + 28 >> 2], E = E + 32 | 0, (0 | Q) != (0 | (C = C + 32 | 0)); ) ;
                      }
                      A[U + 12 >> 2] = c, A[U + 8 >> 2] = Q, A[U + 4 >> 2] = g, A[U >> 2] = o, J && (_A(J), Q = A[U + 8 >> 2]);
                    }
                    else Q = C;
                    A[Q >> 2] = Y, A[U + 8 >> 2] = A[U + 8 >> 2] + 4;
                    break A;
                  }
                  if (A[D + 24 >> 2] = U + 12, !((C = (0 | C) == (0 | Q) ? 1 : g >> 1) >>> 0 >= 1073741824)) {
                    if (C = aC(Q = C << 2), A[D + 8 >> 2] = C, g = C + (J << 2) | 0, A[D + 16 >> 2] = g, A[D + 20 >> 2] = C + Q, A[D + 12 >> 2] = g, A[D + 4 >> 2] = aC(4096), rE(D + 8 | 0, D + 4 | 0), (0 | (E = A[U + 8 >> 2])) == A[U + 4 >> 2]) {
                      C = E;
                      break I;
                    }
                    for (; zE(D + 8 | 0, E = E - 4 | 0), A[U + 4 >> 2] != (0 | E); ) ;
                    break Q;
                  }
                }
                OU(), r();
              }
              C = A[U + 8 >> 2];
            }
            Q = A[U >> 2], A[U >> 2] = A[D + 8 >> 2], A[D + 8 >> 2] = Q, A[U + 4 >> 2] = A[D + 12 >> 2], A[D + 12 >> 2] = E, A[U + 8 >> 2] = A[D + 16 >> 2], A[D + 16 >> 2] = C, g = A[U + 12 >> 2], A[U + 12 >> 2] = A[D + 20 >> 2], A[D + 20 >> 2] = g, (0 | C) != (0 | E) && (A[D + 16 >> 2] = C + (3 + (E - C | 0) & -4)), Q && _A(Q);
          }
          t = D + 32 | 0, Q = (g = A[I + 24 >> 2]) + A[I + 20 >> 2] | 0, C = A[I + 8 >> 2];
        }
        A[A[C + (Q >>> 8 & 16777212) >> 2] + ((1023 & Q) << 2) >> 2] = w, A[I + 24 >> 2] = g + 1;
      }, function(I) {
        var C = 0, Q = 0, g = 0, E = 0, U = 0, w = 0, D = 0, J = 0, o = 0;
        Q = A[420 + (I |= 0) >> 2] + 1 | 0, A[I + 420 >> 2] = Q;
        A: {
          if (C = A[I + 32 >> 2]) {
            if (Q >>> 0 > (D = A[C + 4 >> 2]) >>> 0) {
              (Q = A[I + 28 >> 2]) && (_A(Q), C = A[I + 32 >> 2]), A[I + 32 >> 2] = 0, A[I + 28 >> 2] = C;
              break A;
            }
            for (U = I + 40 | 0, w = C + 16 | 0, J = A[I + 28 >> 2] + 16 | 0, o = +(Q >>> 0) / +(D >>> 0), C = 0; ; ) {
              if (g = H[(Q = C << 3) + w >> 3], E = H[Q + J >> 3], H[Q + U >> 3] = g == g ? (g - E) * o + E : E, (0 | (Q = 1 | C)) == 47) break A;
              g = H[(Q <<= 3) + w >> 3], E = H[Q + J >> 3], H[Q + U >> 3] = g == g ? (g - E) * o + E : E, C = C + 2 | 0;
            }
          }
          if (C = A[I + 28 >> 2], Q >>> 0 > UA[C >> 2]) {
            if (U = A[I + 24 >> 2]) {
              if (M[I + 416 | 0] = 0, w = A[I + 8 >> 2], Q = A[I + 20 >> 2], C = A[A[w + (Q >>> 8 & 16777212) >> 2] + ((1023 & Q) << 2) >> 2], A[I + 32 >> 2] = C, A[I + 24 >> 2] = U - 1, Q = Q + 1 | 0, A[I + 20 >> 2] = Q, Q >>> 0 >= 2048 && (_A(A[w >> 2]), A[I + 8 >> 2] = A[I + 8 >> 2] + 4, A[I + 20 >> 2] = A[I + 20 >> 2] - 1024, C = A[I + 32 >> 2]), G[C + 8 | 0]) bA(C + 16 | 0, A[I + 28 >> 2] + 16 | 0, 376), C = A[I + 32 >> 2], A[C + 368 >> 2] = 0, A[C + 372 >> 2] = 0, g = H[I + 40 >> 3], A[C + 392 >> 2] = 0, A[C + 396 >> 2] = 0, H[C + 16 >> 3] = g;
              else if (Q = A[I + 28 >> 2], G[Q + 8 | 0] && (bA(Q + 16 | 0, C + 16 | 0, 376), C = A[I + 28 >> 2], A[C + 368 >> 2] = 0, A[C + 372 >> 2] = 0, !(C = A[I + 32 >> 2]))) break A;
              (0 | (Q = A[C + 400 >> 2])) != -1 && (A[I + 424 >> 2] = Q), A[I + 420 >> 2] = 0, H[C + 16 >> 3] = H[C + 392 >> 3] * +UA[C + 4 >> 2] + H[C + 16 >> 3];
              break A;
            }
            M[I + 416 | 0] = 1;
          } else g = H[C + 392 >> 3] + H[I + 40 >> 3], H[I + 40 >> 3] = g, H[C + 16 >> 3] = g;
        }
        return 0 | (G[I + 416 | 0] ? 0 : I + 40);
      }, function(I) {
        return A[424 + (I |= 0) >> 2];
      }, function(I) {
        var C = 0;
        return A[(I |= 0) >> 2] = 132304, (C = A[I + 28 >> 2]) && _A(C), (C = A[I + 32 >> 2]) && _A(C), AU(I + 4 | 0), 0 | I;
      }, function(I) {
        var C = 0;
        A[(I |= 0) >> 2] = 132304, (C = A[I + 28 >> 2]) && _A(C), (C = A[I + 32 >> 2]) && _A(C), AU(I + 4 | 0), _A(I);
      }, function(I, C, Q) {
        C |= 0, Q |= 0;
        var g = 0, E = 0, U = 0, w = 0, D = 0, J = 0, o = 0, y = 0, S = 0, Y = 0, c = 0, n = 0, V = 0, x = 0, O = 0, v = 0, _ = 0, AA = 0, CA = 0;
        if (!A[1088 + (I |= 0) >> 2]) return 0;
        A: if (C) {
          for (o = I + 648 | 0, J = I - -64 | 0; ; ) {
            if (g = A[I + 1088 >> 2], !(g = 0 | fA[A[A[g >> 2] + 4 >> 2]](g))) break A;
            if (E = WE(H[I + 32 >> 3] + H[g + 16 >> 3] / +A[I + 24 >> 2]), H[I + 32 >> 3] = E, E = UB(6.283185307179586 * E), E = WE(H[I + 16 >> 3] + H[g >> 3] * (0.06 * E * H[g + 8 >> 3] + 1) / +A[I + 8 >> 2]), H[I + 16 >> 3] = E, D = tA(A[56848], A[56849], 1284865837, 1481765933), U = QA, U = (D = D + 1 | 0) ? U : U + 1 | 0, A[56848] = D, A[56849] = U, w = 0.75 * H[I + 40 >> 3] + +(U >>> 1 | 0) / 2147483647, H[I + 40 >> 3] = w, y = H[g + 24 >> 3], U = E >= H[g + 32 >> 3], M[I + 48 | 0] = U, w = (Y = y) * (y = 0.2 * w), w = BC(J + 512 | 0, BC(J + 440 | 0, E = H[g + 352 >> 3] * (y * H[g + 48 >> 3] + H[g + 40 >> 3] * (E + E + -1 + (U ? w : 0.01 * w))) * 0.5, H[g + 104 >> 3], H[g + 168 >> 3]), H[g + 112 >> 3], H[g + 176 >> 3]), w = BC(J + 8 | 0, BC(J + 80 | 0, BC(J + 152 | 0, BC(J + 224 | 0, BC(J + 296 | 0, BC(J + 368 | 0, w == w ? (w - E) * H[g + 184 >> 3] + E : E, H[g + 96 >> 3], H[g + 160 >> 3]), H[g + 88 >> 3], H[g + 152 >> 3]), H[g + 80 >> 3], H[g + 144 >> 3]), H[g + 72 >> 3], H[g + 136 >> 3]), H[g + 64 >> 3], H[g + 128 >> 3]), H[g + 56 >> 3], H[g + 120 >> 3]), D = tA(A[56848], A[56849], 1284865837, 1481765933), U = QA, U = (D = D + 1 | 0) ? U : U + 1 | 0, A[56848] = D, A[56849] = U, E = 0.75 * H[I + 56 >> 3] + +(U >>> 1 | 0) / 2147483647, H[I + 56 >> 3] = E, U = (S << 1) + Q | 0, y = BC(o + 8 | 0, E = H[g + 352 >> 3] * (H[g + 192 >> 3] * (0.3 * E)) * 0.5, H[g + 200 >> 3], H[g + 248 >> 3]), c = H[g + 296 >> 3], n = BC(o + 80 | 0, E, H[g + 208 >> 3], H[g + 256 >> 3]), V = H[g + 304 >> 3], x = BC(o + 152 | 0, E, H[g + 216 >> 3], H[g + 264 >> 3]), O = H[g + 312 >> 3], v = BC(o + 224 | 0, E, H[g + 224 >> 3], H[g + 272 >> 3]), _ = H[g + 320 >> 3], AA = BC(o + 296 | 0, E, H[g + 232 >> 3], H[g + 280 >> 3]), CA = H[g + 328 >> 3], Y = w, w = (BC(o + 368 | 0, E, H[g + 240 >> 3], H[g + 288 >> 3]) - E) * H[g + 336 >> 3] + (CA * (AA - E) + (_ * (v - E) + (O * (x - E) + (V * (n - E) + (c * (y - E) + 0))))), E = (Y + (E == E ? (E - w) * H[g + 344 >> 3] + w : w)) * H[g + 360 >> 3] * 4e3, g = (0 | (g = GA(E) < 2147483648 ? ~~E : -2147483648)) >= 32e3 ? 32e3 : g, L[U >> 1] = (0 | g) <= -32e3 ? -32e3 : g, (0 | (S = S + 1 | 0)) == (0 | C)) break;
          }
          S = C;
        }
        return 0 | (C >>> 0 > S >>> 0 ? S : C);
      }, function(I, C) {
        C |= 0, A[1088 + (I |= 0) >> 2] = C;
      }, $U, NB, GD, function(I, C, Q, g) {
        return QA = 0, 0;
      }], ME.grow = function(I) {
        var C = this.length;
        return this.length = this.length + I, C;
      }, ME.set = function(I, C) {
        this[I] = C;
      }, ME.get = function(I) {
        return this[I];
      }, ME);
      return { v: function() {
        var I, C = 0;
        t = I = t - 16 | 0, 0 | kQ(I + 12 | 0, I + 8 | 0) || (C = KI(4 + (A[I + 12 >> 2] << 2) | 0), A[56800] = C, C && (!(C = KI(A[I + 8 >> 2])) || (A[A[56800] + (A[I + 12 >> 2] << 2) >> 2] = 0, 0 | hC(A[56800], 0 | C))) && (A[56800] = 0)), t = I + 16 | 0, A[56841] = 227236, A[56823] = 42;
      }, w: JU, x: MD, y: function(I, C) {
        C |= 0, A[(I |= 0) >> 2] = C;
      }, z: function(I, C) {
        return C |= 0, M[A[(I |= 0) + 4 >> 2] + C | 0];
      }, A: uU, B: UD, C: function(I) {
        return G[(I |= 0) + 12 | 0];
      }, D: function(I, C) {
        C |= 0, M[(I |= 0) + 12 | 0] = C;
      }, E: function(I) {
        return G[(I |= 0) + 13 | 0];
      }, F: function(I, C) {
        C |= 0, M[(I |= 0) + 13 | 0] = C;
      }, G: function(I) {
        return G[(I |= 0) + 14 | 0];
      }, H: function(I, C) {
        C |= 0, M[(I |= 0) + 14 | 0] = C;
      }, I: function(I) {
        return G[(I |= 0) + 15 | 0];
      }, J: function(I, C) {
        C |= 0, M[(I |= 0) + 15 | 0] = C;
      }, K: wD, L: function(I, C) {
        C |= 0, A[(I |= 0) + 16 >> 2] = C;
      }, M: DD, N: function(I, C) {
        C |= 0, A[(I |= 0) + 20 >> 2] = C;
      }, O: JU, P: MD, Q: FD, R: uU, S: RD, T: wD, U: DD, V: function(I) {
        return A[(I |= 0) + 24 >> 2];
      }, W: JU, X: function() {
        var I, C = 0, Q = 0, g = 0, E = 0, U = 0, w = 0, D = 0, J = 0, o = 0, y = 0, S = 0, Y = 0, c = 0, n = 0, V = 0, x = 0, O = 0, v = 0, _ = 0, AA = 0, CA = 0, BA = 0, EA = 0;
        if (I = aC(20), A[I + 16 >> 2] = 0, A[I + 8 >> 2] = 175, A[I + 12 >> 2] = 50, !(C = A[33208])) {
          t = C = (t = _ = t - 16 | 0) - 80 | 0;
          A: {
            if ((Q = sg(84292)) && (A[C + 32 >> 2] = Q, oC(137584, 160, 85959, C + 32 | 0), (0 | rC(137584)) == -31 || (A[C + 16 >> 2] = Q, oC(137584, 160, 86031, C + 16 | 0), (0 | rC(137584)) == -31)))
              break A;
            (Q = sg(84619)) && (A[C >> 2] = Q, oC(137584, 160, 85959, C), (0 | rC(137584)) == -31) || (Q = G[84826] | G[84827] << 8 | G[84828] << 16 | G[84829] << 24, A[34396] = G[84822] | G[84823] << 8 | G[84824] << 16 | G[84825] << 24, A[34397] = Q, L[68804] = G[84846] | G[84847] << 8, Q = G[84842] | G[84843] << 8 | G[84844] << 16 | G[84845] << 24, A[34400] = G[84838] | G[84839] << 8 | G[84840] << 16 | G[84841] << 24, A[34401] = Q, Q = G[84834] | G[84835] << 8 | G[84836] << 16 | G[84837] << 24, A[34398] = G[84830] | G[84831] << 8 | G[84832] << 16 | G[84833] << 24, A[34399] = Q);
          }
          if (t = C + 80 | 0, A[_ + 12 >> 2] = 0, E = _ + 12 | 0, t = D = t - 16 | 0, A[D + 12 >> 2] = 22050, $g(85144) || $g(85315) || $g(85473) || $g(85698), S = D + 12 | 0, t = U = t - 16 | 0, A[U + 12 >> 2] = 0, !((C = gB(137832, 84262, 0, E)) || (C = gB(137836, 84420, 0, E)) || (C = gB(137840, 84813, 0, E)) || (C = gB(137820, 85016, U + 12 | 0, E)))) if (A[34454] = UA[U + 12 >> 2] / 68, Q = A[34460], A[34456] = Q, Q && (0 | (o = G[0 | Q] | G[Q + 1 | 0] << 8 | G[Q + 2 | 0] << 16 | G[Q + 3 | 0] << 24)) == 83969) {
            if (Y = G[Q + 4 | 0] | G[Q + 5 | 0] << 8 | G[Q + 6 | 0] << 16 | G[Q + 7 | 0] << 24, Q = A[34458], n = G[0 | Q], A[34461] = n, n) for (C = Q + 4 | 0, o = 0; g = T(o, 44) + 137856 | 0, E = G[0 | C], A[g + 36 >> 2] = E, A[g + 40 >> 2] = G[C + 1 | 0], w = G[C + 8 | 0] | G[C + 9 | 0] << 8 | G[C + 10 | 0] << 16 | G[C + 11 | 0] << 24, Q = G[C + 4 | 0] | G[C + 5 | 0] << 8 | G[C + 6 | 0] << 16 | G[C + 7 | 0] << 24, M[0 | g] = Q, M[g + 1 | 0] = Q >>> 8, M[g + 2 | 0] = Q >>> 16, M[g + 3 | 0] = Q >>> 24, M[g + 4 | 0] = w, M[g + 5 | 0] = w >>> 8, M[g + 6 | 0] = w >>> 16, M[g + 7 | 0] = w >>> 24, w = G[C + 16 | 0] | G[C + 17 | 0] << 8 | G[C + 18 | 0] << 16 | G[C + 19 | 0] << 24, Q = G[C + 12 | 0] | G[C + 13 | 0] << 8 | G[C + 14 | 0] << 16 | G[C + 15 | 0] << 24, M[g + 8 | 0] = Q, M[g + 9 | 0] = Q >>> 8, M[g + 10 | 0] = Q >>> 16, M[g + 11 | 0] = Q >>> 24, M[g + 12 | 0] = w, M[g + 13 | 0] = w >>> 8, M[g + 14 | 0] = w >>> 16, M[g + 15 | 0] = w >>> 24, w = G[C + 24 | 0] | G[C + 25 | 0] << 8 | G[C + 26 | 0] << 16 | G[C + 27 | 0] << 24, Q = G[C + 20 | 0] | G[C + 21 | 0] << 8 | G[C + 22 | 0] << 16 | G[C + 23 | 0] << 24, M[g + 16 | 0] = Q, M[g + 17 | 0] = Q >>> 8, M[g + 18 | 0] = Q >>> 16, M[g + 19 | 0] = Q >>> 24, M[g + 20 | 0] = w, M[g + 21 | 0] = w >>> 8, M[g + 22 | 0] = w >>> 16, M[g + 23 | 0] = w >>> 24, w = G[C + 32 | 0] | G[C + 33 | 0] << 8 | G[C + 34 | 0] << 16 | G[C + 35 | 0] << 24, Q = G[C + 28 | 0] | G[C + 29 | 0] << 8 | G[C + 30 | 0] << 16 | G[C + 31 | 0] << 24, M[g + 24 | 0] = Q, M[g + 25 | 0] = Q >>> 8, M[g + 26 | 0] = Q >>> 16, M[g + 27 | 0] = Q >>> 24, M[g + 28 | 0] = w, M[g + 29 | 0] = w >>> 8, M[g + 30 | 0] = w >>> 16, M[g + 31 | 0] = w >>> 24, Q = C + 36 | 0, A[g + 32 >> 2] = Q, C = Q + (E << 4) | 0, (0 | n) != (0 | (o = o + 1 | 0)); ) ;
            (0 | n) <= A[34457] && (A[34457] = 0), C = 0, S && (A[S >> 2] = Y);
          } else A: {
            I: {
              if (E) {
                if (Q = A[E >> 2]) {
                  _A(A[Q + 4 >> 2]), C = A[E >> 2];
                  break I;
                }
                if (C = KI(16), A[E >> 2] = C, C) break I;
                C = 48;
              } else C = 268436223;
              break A;
            }
            A[C >> 2] = 1, A[C + 4 >> 2] = MU(137584), Q = A[E >> 2], A[Q + 12 >> 2] = 83969, A[Q + 8 >> 2] = o, C = 268436223;
          }
          if (t = U + 16 | 0, Q = C, !C) {
            if (S = A[D + 12 >> 2], A[50754] = S, A[50759] = 0, A[50760] = 134217728 / (0 | S), A[50762] = 0, A[50763] = 0, A[50765] = 2147483647, A[50781] = 100, A[50779] = 32, A[50761] = (S << 6) / (0 | S), C = A[26385], A[50784] = A[26384], A[50785] = C, C = A[26387], A[50786] = A[26386], A[50787] = C, C = A[26389], A[50788] = A[26388], A[50789] = C, C = A[26391], A[50790] = A[26390], A[50791] = C, C = A[26393], A[50792] = A[26392], A[50793] = C, C = A[26395], A[50794] = A[26394], A[50795] = C, C = A[26397], A[50796] = A[26396], A[50797] = C, A[50798] = A[26398], Y = (0 | (C = (0 | (E = T(S, 60))) / 12800 | 0)) >= 128 ? 128 : C, A[50799] = Y, A[50800] = (0 | Y) / 2, !((0 | S) == 22050 | (0 | E) < 12800)) {
              if (S = 1 & (C = (0 | Y) <= 1 ? 1 : Y), O = +(0 | Y), o = 0, (0 | Y) >= 2) for (Y = 2147483646 & C, C = 0; V = o + 132160 | 0, J = 127 * (1 - yC(6.283185307179586 * +(0 | o) / O)), c = GA(J) < 2147483648 ? ~~J : -2147483648, M[0 | V] = c, V = (E = 1 | o) + 132160 | 0, J = 127 * (1 - yC(6.283185307179586 * +(0 | E) / O)), c = GA(J) < 2147483648 ? ~~J : -2147483648, M[0 | V] = c, o = o + 2 | 0, (0 | Y) != (0 | (C = C + 2 | 0)); ) ;
              S && (C = o + 132160 | 0, J = 127 * (1 - yC(6.283185307179586 * +(0 | o) / O)), V = GA(J) < 2147483648 ? ~~J : -2147483648, M[0 | C] = V);
            }
            if (A[50801] = 105792, A[56797] = fE(), A[55964] = 38, A[55921] = 1, A[55918] = 22050, A[56606] = 0, A[55960] = 110928, A[55958] = 0, A[55959] = 1074266112, A[55956] = 100, A[55922] = 20, A[55923] = 220, A[55916] = 1, A[55917] = 0, DA(), A[56244] = 0, A[56245] = 0, A[55928] = 0, A[55926] = 0, A[55927] = 0, A[55924] = 0, A[56246] = 0, A[56247] = 0, A[56260] = 0, A[56261] = 0, A[56262] = 0, A[56263] = 0, A[56276] = 0, A[56277] = 0, A[56278] = 0, A[56279] = 0, A[55974] = 0, A[55975] = 0, A[55972] = 0, A[55973] = 0, O = -3.141592653589793 / +(0 | (C = A[55918])), H[27967] = O, E = (0 | T(C, 630)) / 1e4 | 0, A[55920] = E, C = (0 | T(C, 950)) / 1e4 | 0, A[55919] = C, J = -2 * O, H[27968] = J, O = (BA = LC(O * +(0 | E))) * -BA, H[28129] = O, J = BA * yC(J * +(0 | C)), J += J, H[28128] = J, H[28127] = 1 - J - O, A[55990] = 0, A[55991] = 0, A[55988] = 0, A[55989] = 0, A[56006] = 0, A[56007] = 0, A[56004] = 0, A[56005] = 0, A[56022] = 0, A[56023] = 0, A[56020] = 0, A[56021] = 0, A[56038] = 0, A[56039] = 0, A[56036] = 0, A[56037] = 0, A[56054] = 0, A[56055] = 0, A[56052] = 0, A[56053] = 0, A[56070] = 0, A[56071] = 0, A[56068] = 0, A[56069] = 0, A[56086] = 0, A[56087] = 0, A[56084] = 0, A[56085] = 0, A[56102] = 0, A[56103] = 0, A[56100] = 0, A[56101] = 0, A[56118] = 0, A[56119] = 0, A[56116] = 0, A[56117] = 0, A[56134] = 0, A[56135] = 0, A[56132] = 0, A[56133] = 0, A[56150] = 0, A[56151] = 0, A[56148] = 0, A[56149] = 0, A[56166] = 0, A[56167] = 0, A[56164] = 0, A[56165] = 0, A[56182] = 0, A[56183] = 0, A[56180] = 0, A[56181] = 0, A[56198] = 0, A[56199] = 0, A[56196] = 0, A[56197] = 0, A[56214] = 0, A[56215] = 0, A[56212] = 0, A[56213] = 0, A[56230] = 0, A[56231] = 0, A[56228] = 0, A[56229] = 0, A[56639] = 59, A[56640] = 59, A[56629] = 0, A[56630] = 59, A[56619] = 89, A[56620] = 160, A[56609] = 280, A[56610] = 688, A[56611] = 1064, A[56621] = 70, A[56631] = 59, A[56612] = 2806, A[56613] = 3260, A[56622] = 160, A[56623] = 200, A[56632] = 59, A[56633] = 59, A[56641] = 89, A[56642] = 149, A[56643] = 200, A[56644] = 200, A[56634] = 59, A[56635] = 59, A[56624] = 200, A[56625] = 500, A[56614] = 3700, A[56615] = 6500, A[56645] = 500, A[56646] = 0, A[56616] = 7e3, A[56626] = 500, A[56636] = 0, A[56647] = 0, A[56637] = 0, A[56627] = 500, A[56617] = 8e3, A[56669] = 89, A[56648] = 0, A[56638] = 0, A[56628] = 89, A[56618] = 280, A[56657] = 62, A[56655] = 0, A[56656] = 0, A[56653] = 50, A[56654] = 0, A[56651] = 0, A[56652] = 0, A[56649] = 0, A[56650] = 40, A[56607] = 1e3, A[56608] = 59, t = U = t - 416 | 0, A[U + 16 >> 2] = 137584, A[U + 20 >> 2] = 47, A[U + 24 >> 2] = 85952, iA(C = U + 240 | 0, 85699, U + 16 | 0), w = yQ(C, 86034)) {
              if (CB(U + 240 | 0, 170, w)) for (S = 5 | (C = U + 240 | 0), Y = 10 | C; G[U + 240 | 0] != 47 && (A[U + 240 >> 2] != 1701736308 ? IC(U + 240 | 0, 86614, 9) || (A[U + 4 >> 2] = U + 32, A[U >> 2] = U + 239, (0 | QI(Y, 86829, U)) == 2 && (E = A[34064], A[(n = 136272 + (E << 4) | 0) >> 2] = M[U + 239 | 0], C = MU(U + 32 | 0), A[34064] = E + 1, A[n + 12 >> 2] = C, A[n + 4 >> 2] = 0)) : (t = C = t - 48 | 0, A[32960] = -1, A[32961] = -1, A[32970] = -1, A[32971] = -1, A[32968] = -1, A[32969] = -1, A[32966] = -1, A[32967] = -1, A[32964] = -1, A[32965] = -1, A[32962] = -1, A[32963] = -1, A[C + 36 >> 2] = 131876, A[C + 32 >> 2] = 131872, A[C + 28 >> 2] = 131868, A[C + 24 >> 2] = 131864, A[C + 20 >> 2] = 131860, A[C + 16 >> 2] = 131856, A[C + 12 >> 2] = 131852, A[C + 8 >> 2] = 131848, A[C + 4 >> 2] = 131844, A[C >> 2] = 131840, QI(S, 84222, C), t = C + 48 | 0)), CB(U + 240 | 0, 170, w); ) ;
              mI(w);
            }
            t = U + 416 | 0, A[50297] = 0, A[50298] = 0, A[50301] = 0, A[50302] = 0, A[50299] = 0, A[50300] = 0, $B(0, 85698), A[36425] = 0, A[36424] = 0, A[36426] = 0, A[36427] = -1, QD(), fB(0), g = A[25690], A[34062] = g, y = A[25689], U = A[25688], A[34060] = U, A[34061] = y, x = A[25687], w = A[25686], A[34058] = w, A[34059] = x, v = A[25685], n = A[25684], A[34056] = n, A[34057] = v, AA = A[25683], S = A[25682], A[34054] = S, A[34055] = AA, CA = A[25681], Y = A[25680], A[34052] = Y, A[34053] = CA, c = A[25679], E = A[25678], A[34050] = E, A[34051] = c, V = A[25677], C = A[25676], A[34048] = C, A[34049] = V, A[33729] = C, A[33730] = V, A[33731] = E, A[33732] = c, A[33733] = Y, A[33734] = CA, A[33735] = S, A[33736] = AA, A[33737] = n, A[33738] = v, A[33739] = w, A[33740] = x, A[33741] = U, A[33742] = y, A[33743] = g, dQ(1, 175), dQ(2, 100), dQ(6, A[47200]), dQ(5, A[47201]), dQ(7, 0), A[47198] = 0, A[47197] = 0, J = +jA() / 1e3, E = tA(C = GA(J) < 9223372036854776e3 ? ~~J >>> 0 : 0, 0, 1103515245, 0), C = QA, C = (E = E + 12345 | 0) >>> 0 < 12345 ? C + 1 | 0 : C, A[33209] = eU(E, C);
          }
          if (t = D + 16 | 0, Q) {
            V = A[30450], AA = A[_ + 12 >> 2], D = (y = t - 560 | 0) + 48 | 0, t = g = (t = y) - 16 | 0;
            A: {
              I: switch (0 | MC(Q - 268435967 | 0, 24)) {
                case 0:
                  sI(D, 84133, 512);
                  break A;
                case 1:
                  sI(D, 84580, 512);
                  break A;
                case 2:
                  sI(D, 84747, 512);
                  break A;
                case 3:
                  sI(D, 85084, 512);
                  break A;
                case 4:
                  sI(D, 85251, 512);
                  break A;
                case 5:
                  sI(D, 85380, 512);
                  break A;
                case 6:
                  sI(D, 85607, 512);
                  break A;
                case 7:
                  sI(D, 85722, 512);
                  break A;
                case 8:
                  sI(D, 85913, 512);
                  break A;
                case 9:
                  sI(D, 86046, 512);
                  break A;
                case 10:
                  sI(D, 86153, 512);
                  break A;
                case 11:
                  sI(D, 86678, 512);
                  break A;
                case 12:
                  sI(D, 86773, 512);
                  break A;
                case 14:
                  sI(D, 86958, 512);
                  break A;
                case 15:
                  sI(D, 87071, 512);
                  break A;
                default:
                  break I;
              }
              if (1879048192 & Q) A[g >> 2] = Q, oC(D, 512, 87182, g);
              else {
                if (o = 0, U = a[123728 + ((Q >>> 0 <= 153 ? Q : 0) << 1) >> 1] + 121804 | 0, Q = A[A[56841] + 20 >> 2]) {
                  CA = A[Q + 4 >> 2], x = A[Q >> 2], v = A[x >> 2] + 1794895138 | 0, c = lg(A[x + 8 >> 2], v), E = lg(A[x + 12 >> 2], v), C = lg(A[x + 16 >> 2], v);
                  I: if (!(CA >>> 2 >>> 0 <= c >>> 0 || 3 & (C | E) | (Q = CA - (c << 2) | 0) >>> 0 <= E >>> 0 | C >>> 0 >= Q >>> 0)) for (S = C >>> 2 | 0, Y = E >>> 2 | 0; ; ) {
                    if (n = lg(A[(Q = ((C = (E = (w = c >>> 1 | 0) + EA | 0) << 1) + Y << 2) + x | 0) >> 2], v), (Q = lg(A[Q + 4 >> 2], v)) >>> 0 >= CA >>> 0 | n >>> 0 >= CA - Q >>> 0 | G[(Q + n | 0) + x | 0]) break I;
                    if (!(Q = aI(U, Q + x | 0))) {
                      if (C = lg(A[(Q = (C + S << 2) + x | 0) >> 2], v), (Q = lg(A[Q + 4 >> 2], v)) >>> 0 >= CA >>> 0 | C >>> 0 >= CA - Q >>> 0) break I;
                      o = G[(C + Q | 0) + x | 0] ? 0 : Q + x | 0;
                      break I;
                    }
                    if ((0 | c) == 1) break I;
                    c = (Q = (0 | Q) < 0) ? w : c - w | 0, EA = Q ? EA : E;
                  }
                }
                if ((Q = SA(C = o || U)) >>> 0 >= 512) {
                  bA(D, C, 511), M[D + 511 | 0] = 0;
                  break A;
                }
                bA(D, C, Q + 1 | 0);
              }
            }
            t = g + 16 | 0;
            A: if (AA) {
              I: switch (A[AA >> 2]) {
                case 0:
                  A[y + 16 >> 2] = A[AA + 4 >> 2], A[y + 20 >> 2] = y + 48, lI(V, 87384, y + 16 | 0);
                  break A;
                case 1:
                  break I;
                default:
                  break A;
              }
              C = A[AA + 12 >> 2], Q = A[AA + 8 >> 2], A[y + 36 >> 2] = A[AA + 4 >> 2], QA = Q, A[y + 40 >> 2] = C, A[y + 44 >> 2] = QA, A[y + 32 >> 2] = y + 48, lI(V, 87521, y + 32 | 0);
            } else A[y >> 2] = y + 48, lI(V, 87700, y);
            t = y + 560 | 0, (0 | _) != -12 && (Q = A[_ + 12 >> 2]) && (_A(A[Q + 4 >> 2]), _A(A[_ + 12 >> 2]), A[_ + 12 >> 2] = 0);
          }
          Q = A[24806], A[34389] = 0, A[32538] = Q, Q = (1e3 + ((Q = T(A[50754], 100)) - ((0 | Q) % 1e3 | 0) | 0) | 0) / 500 | 0, A[34390] = Q, Q = gC(A[34391], Q), A[34392] = Q, Q && (A[34391] = Q, A[34393] = 40, (Q = gC(A[34388], 1440)) && (A[34388] = Q)), A[47198] = 0, t = _ + 16 | 0, C = A[50754], A[33208] = C;
        }
        return A[I + 4 >> 2] = C, A[I >> 2] = IB(), 0 | I;
      }, Y: function(I, C, Q) {
        I |= 0, C |= 0, Q |= 0, A[34440] = Q, f(3, A[I + 12 >> 2]), f(1, A[I + 8 >> 2]), (I = A[I + 16 >> 2]) ? og(I) : $Q(1024), Og(C), A[34440] = 0;
      }, Z: function(I, C, Q) {
        return I |= 0, C |= 0, Q |= 0, A[34440] = 0, (I = yQ(Q, 1032)) ? (A[47195] = I, A[47197] = 130, I || (A[47195] = A[30450]), Og(C), A[47195] = 0, A[47197] = 0, A[47195] = A[30450], mI(I), 0) : -1;
      }, _: function(I) {
        return 36;
      }, $: function(I, C, Q) {
        var g;
        return I |= 0, C |= 0, t = g = t - 32 | 0, (Q |= 0) ? (A[g + 24 >> 2] = 0, A[g + 28 >> 2] = 0, A[g + 16 >> 2] = 0, A[g + 20 >> 2] = 0, A[g + 12 >> 2] = Q, A[g + 8 >> 2] = C, M[g + 21 | 0] = 0, C = og(g + 8 | 0)) : C = $Q(C), A[I + 16 >> 2] = 201188, t = g + 32 | 0, 0 | C;
      }, aa: function(I, C, Q, g) {
        var E;
        return I |= 0, C |= 0, t = E = t - 32 | 0, (Q |= 0) | (g |= 0) ? (A[E + 24 >> 2] = 0, A[E + 28 >> 2] = 0, A[E + 16 >> 2] = 0, A[E + 20 >> 2] = 0, A[E + 12 >> 2] = Q, A[E + 8 >> 2] = C, M[E + 22 | 0] = 0, M[E + 20 | 0] = g, C = og(E + 8 | 0)) : C = $Q(C), A[I + 16 >> 2] = 201188, t = E + 32 | 0, 0 | C;
      }, ba: function(I, C, Q, g, E) {
        var U;
        return I |= 0, C |= 0, t = U = t - 32 | 0, (g |= 0) | (E |= 0) | (Q |= 0) ? (A[U + 24 >> 2] = 0, A[U + 28 >> 2] = 0, A[U + 16 >> 2] = 0, A[U + 20 >> 2] = 0, A[U + 12 >> 2] = Q, A[U + 8 >> 2] = C, M[U + 21 | 0] = E, M[U + 20 | 0] = g, C = og(U + 8 | 0)) : C = $Q(C), A[I + 16 >> 2] = 201188, t = U + 32 | 0, 0 | C;
      }, ca: function(I, C, Q, g, E, U) {
        var w;
        return I |= 0, C |= 0, t = w = t - 32 | 0, (g |= 0) | (E |= 0) | (U |= 0) | (Q |= 0) ? (A[w + 24 >> 2] = 0, A[w + 28 >> 2] = 0, A[w + 16 >> 2] = 0, A[w + 20 >> 2] = 0, A[w + 12 >> 2] = Q, A[w + 8 >> 2] = C, M[w + 22 | 0] = U, M[w + 21 | 0] = E, M[w + 20 | 0] = g, C = og(w + 8 | 0)) : C = $Q(C), A[I + 16 >> 2] = 201188, t = w + 32 | 0, 0 | C;
      }, da: function(I, C) {
        return C |= 0, A[A[(I |= 0) >> 2] + (C << 2) >> 2];
      }, ea: function(I, C, Q) {
        C |= 0, Q |= 0, A[A[(I |= 0) >> 2] + (C << 2) >> 2] = Q;
      }, fa: FD, ga: uU, ha: UD, ia: RD, ja: function(I, C) {
        C |= 0, A[(I |= 0) + 12 >> 2] = C;
      }, ka: JU, la: function() {
        return 0;
      }, ma: function() {
        return 1;
      }, na: function() {
        return 2;
      }, oa: function() {
        return 3;
      }, pa: function() {
        return 4;
      }, qa: function() {
        return 5;
      }, ra: function() {
        return 6;
      }, sa: function() {
        return 7;
      }, ta: function() {
        return 8;
      }, ua: fA, va: function() {
        return 227192;
      }, wa: _A, xa: KI, ya: function(I) {
        return (I |= 0) ? 0 | !!(0 | eE(I, 125228)) : 0;
      } };
    }(F);
  }(R);
}, instantiate: function(B, R) {
  return { then: function(F) {
    var i = new ZB.Module(B);
    F({ instance: new ZB.Instance(i, R) });
  } };
}, RuntimeError: Error };
typeof ZB != "object" && pQ("no native wasm support detected");
var po = !1;
function Iw(B, R) {
  B || pQ(R);
}
var SC, KB, fU, JI, zI, to, Wo, AJ = typeof TextDecoder < "u" ? new TextDecoder("utf8") : void 0;
function YB(B, R, F) {
  for (var i = R + F, s = R; B[s] && !(s >= i); ) ++s;
  if (s - R > 16 && B.buffer && AJ) return AJ.decode(B.subarray(R, s));
  for (var N = ""; R < s; ) {
    var j = B[R++];
    if (128 & j) {
      var h = 63 & B[R++];
      if ((224 & j) != 192) {
        var l = 63 & B[R++];
        if ((j = (240 & j) == 224 ? (15 & j) << 12 | h << 6 | l : (7 & j) << 18 | h << 12 | l << 6 | 63 & B[R++]) < 65536) N += String.fromCharCode(j);
        else {
          var k = j - 65536;
          N += String.fromCharCode(55296 | k >> 10, 56320 | 1023 & k);
        }
      } else N += String.fromCharCode((31 & j) << 6 | h);
    } else N += String.fromCharCode(j);
  }
  return N;
}
function lB(B, R) {
  return B ? YB(KB, B, R) : "";
}
function uw(B, R, F, i) {
  if (!(i > 0)) return 0;
  for (var s = F, N = F + i - 1, j = 0; j < B.length; ++j) {
    var h = B.charCodeAt(j);
    if (h >= 55296 && h <= 57343 && (h = 65536 + ((1023 & h) << 10) | 1023 & B.charCodeAt(++j)), h <= 127) {
      if (F >= N) break;
      R[F++] = h;
    } else if (h <= 2047) {
      if (F + 1 >= N) break;
      R[F++] = 192 | h >> 6, R[F++] = 128 | 63 & h;
    } else if (h <= 65535) {
      if (F + 2 >= N) break;
      R[F++] = 224 | h >> 12, R[F++] = 128 | h >> 6 & 63, R[F++] = 128 | 63 & h;
    } else {
      if (F + 3 >= N) break;
      R[F++] = 240 | h >> 18, R[F++] = 128 | h >> 12 & 63, R[F++] = 128 | h >> 6 & 63, R[F++] = 128 | 63 & h;
    }
  }
  return R[F] = 0, F - s;
}
function Oo(B) {
  for (var R = 0, F = 0; F < B.length; ++F) {
    var i = B.charCodeAt(F);
    i <= 127 ? R++ : i <= 2047 ? R += 2 : i >= 55296 && i <= 57343 ? (R += 4, ++F) : R += 3;
  }
  return R;
}
var xQ, Cw = e.INITIAL_MEMORY || 16777216;
aU = e.wasmMemory ? e.wasmMemory : new ZB.Memory({ initial: Cw / 65536, maximum: Cw / 65536 }), xQ = aU.buffer, e.HEAP8 = SC = new Int8Array(xQ), e.HEAP16 = fU = new Int16Array(xQ), e.HEAP32 = JI = new Int32Array(xQ), e.HEAPU8 = KB = new Uint8Array(xQ), e.HEAPU16 = new Uint16Array(xQ), e.HEAPU32 = zI = new Uint32Array(xQ), e.HEAPF32 = to = new Float32Array(xQ), e.HEAPF64 = Wo = new Float64Array(xQ), Cw = aU.buffer.byteLength;
var IJ = [], zo = [], CJ = [], Xo = !1;
function ro(B) {
  zo.unshift(B);
}
var uA, TI, Tg = 0, nE = null;
function mo(B) {
  Tg++, e.monitorRunDependencies && e.monitorRunDependencies(Tg);
}
function eo(B) {
  if (Tg--, e.monitorRunDependencies && e.monitorRunDependencies(Tg), Tg == 0 && nE) {
    var R = nE;
    nE = null, R();
  }
}
function pQ(B) {
  throw e.onAbort && e.onAbort(B), aB(B = "Aborted(" + B + ")"), po = !0, B += ". Build with -sASSERTIONS for more info.", new ZB.RuntimeError(B);
}
function Ls(B) {
  this.name = "ExitStatus", this.message = "Program terminated with exit(" + B + ")", this.status = B;
}
function Qw(B) {
  for (; B.length > 0; ) B.shift()(e);
}
function Ys(B, R = "i8") {
  switch (R.endsWith("*") && (R = "*"), R) {
    case "i1":
    case "i8":
      return SC[B | 0];
    case "i16":
      return fU[B >> 1];
    case "i32":
    case "i64":
      return JI[B >> 2];
    case "float":
      return to[B >> 2];
    case "double":
      return Wo[B >> 3];
    case "*":
      return zI[B >> 2];
    default:
      pQ("invalid type for getValue: " + R);
  }
  return null;
}
function Ks(B) {
  this.excPtr = B, this.ptr = B - 24, this.set_type = function(R) {
    zI[this.ptr + 4 >> 2] = R;
  }, this.get_type = function() {
    return zI[this.ptr + 4 >> 2];
  }, this.set_destructor = function(R) {
    zI[this.ptr + 8 >> 2] = R;
  }, this.get_destructor = function() {
    return zI[this.ptr + 8 >> 2];
  }, this.set_refcount = function(R) {
    JI[this.ptr >> 2] = R;
  }, this.set_caught = function(R) {
    R = R ? 1 : 0, SC[this.ptr + 12 | 0] = R;
  }, this.get_caught = function() {
    return SC[this.ptr + 12 | 0] != 0;
  }, this.set_rethrown = function(R) {
    R = R ? 1 : 0, SC[this.ptr + 13 | 0] = R;
  }, this.get_rethrown = function() {
    return SC[this.ptr + 13 | 0] != 0;
  }, this.init = function(R, F) {
    this.set_adjusted_ptr(0), this.set_type(R), this.set_destructor(F), this.set_refcount(0), this.set_caught(!1), this.set_rethrown(!1);
  }, this.add_ref = function() {
    var R = JI[this.ptr >> 2];
    JI[this.ptr >> 2] = R + 1;
  }, this.release_ref = function() {
    var R = JI[this.ptr >> 2];
    return JI[this.ptr >> 2] = R - 1, R === 1;
  }, this.set_adjusted_ptr = function(R) {
    zI[this.ptr + 16 >> 2] = R;
  }, this.get_adjusted_ptr = function() {
    return zI[this.ptr + 16 >> 2];
  }, this.get_exception_ptr = function() {
    if (u0(this.get_type())) return zI[this.excPtr >> 2];
    var R = this.get_adjusted_ptr();
    return R !== 0 ? R : this.excPtr;
  };
}
var hI = { isAbs: (B) => B.charAt(0) === "/", splitPath: (B) => /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/.exec(B).slice(1), normalizeArray: (B, R) => {
  for (var F = 0, i = B.length - 1; i >= 0; i--) {
    var s = B[i];
    s === "." ? B.splice(i, 1) : s === ".." ? (B.splice(i, 1), F++) : F && (B.splice(i, 1), F--);
  }
  if (R) for (; F; F--) B.unshift("..");
  return B;
}, normalize: (B) => {
  var R = hI.isAbs(B), F = B.substr(-1) === "/";
  return (B = hI.normalizeArray(B.split("/").filter((i) => !!i), !R).join("/")) || R || (B = "."), B && F && (B += "/"), (R ? "/" : "") + B;
}, dirname: (B) => {
  var R = hI.splitPath(B), F = R[0], i = R[1];
  return F || i ? (i && (i = i.substr(0, i.length - 1)), F + i) : ".";
}, basename: (B) => {
  if (B === "/") return "/";
  var R = (B = (B = hI.normalize(B)).replace(/\/$/, "")).lastIndexOf("/");
  return R === -1 ? B : B.substr(R + 1);
}, join: function() {
  var B = Array.prototype.slice.call(arguments);
  return hI.normalize(B.join("/"));
}, join2: (B, R) => hI.normalize(B + "/" + R) }, Ug = { resolve: function() {
  for (var B = "", R = !1, F = arguments.length - 1; F >= -1 && !R; F--) {
    var i = F >= 0 ? arguments[F] : p.cwd();
    if (typeof i != "string") throw new TypeError("Arguments to path.resolve must be strings");
    if (!i) return "";
    B = i + "/" + B, R = hI.isAbs(i);
  }
  return (R ? "/" : "") + (B = hI.normalizeArray(B.split("/").filter((s) => !!s), !R).join("/")) || ".";
}, relative: (B, R) => {
  function F(k) {
    for (var q = 0; q < k.length && k[q] === ""; q++) ;
    for (var d = k.length - 1; d >= 0 && k[d] === ""; d--) ;
    return q > d ? [] : k.slice(q, d - q + 1);
  }
  B = Ug.resolve(B).substr(1), R = Ug.resolve(R).substr(1);
  for (var i = F(B.split("/")), s = F(R.split("/")), N = Math.min(i.length, s.length), j = N, h = 0; h < N; h++) if (i[h] !== s[h]) {
    j = h;
    break;
  }
  var l = [];
  for (h = j; h < i.length; h++) l.push("..");
  return (l = l.concat(s.slice(j))).join("/");
} };
function vo(B, R, F) {
  var i = Oo(B) + 1, s = new Array(i), N = uw(B, s, 0, s.length);
  return R && (s.length = N), s;
}
var bg = { ttys: [], init: function() {
}, shutdown: function() {
}, register: function(B, R) {
  bg.ttys[B] = { input: [], output: [], ops: R }, p.registerDevice(B, bg.stream_ops);
}, stream_ops: { open: function(B) {
  var R = bg.ttys[B.node.rdev];
  if (!R) throw new p.ErrnoError(43);
  B.tty = R, B.seekable = !1;
}, close: function(B) {
  B.tty.ops.fsync(B.tty);
}, fsync: function(B) {
  B.tty.ops.fsync(B.tty);
}, read: function(B, R, F, i, s) {
  if (!B.tty || !B.tty.ops.get_char) throw new p.ErrnoError(60);
  for (var N = 0, j = 0; j < i; j++) {
    var h;
    try {
      h = B.tty.ops.get_char(B.tty);
    } catch {
      throw new p.ErrnoError(29);
    }
    if (h === void 0 && N === 0) throw new p.ErrnoError(6);
    if (h == null) break;
    N++, R[F + j] = h;
  }
  return N && (B.node.timestamp = Date.now()), N;
}, write: function(B, R, F, i, s) {
  if (!B.tty || !B.tty.ops.put_char) throw new p.ErrnoError(60);
  try {
    for (var N = 0; N < i; N++) B.tty.ops.put_char(B.tty, R[F + N]);
  } catch {
    throw new p.ErrnoError(29);
  }
  return i && (B.node.timestamp = Date.now()), N;
} }, default_tty_ops: { put_char: function(B, R) {
  R === null || R === 10 ? (PU(YB(B.output, 0)), B.output = []) : R != 0 && B.output.push(R);
}, fsync: function(B) {
  B.output && B.output.length > 0 && (PU(YB(B.output, 0)), B.output = []);
} }, default_tty1_ops: { put_char: function(B, R) {
  R === null || R === 10 ? (aB(YB(B.output, 0)), B.output = []) : R != 0 && B.output.push(R);
}, fsync: function(B) {
  B.output && B.output.length > 0 && (aB(YB(B.output, 0)), B.output = []);
} } };
function uo(B) {
  pQ();
}
var BI = { ops_table: null, mount: function(B) {
  return BI.createNode(null, "/", 16895, 0);
}, createNode: function(B, R, F, i) {
  if (p.isBlkdev(F) || p.isFIFO(F)) throw new p.ErrnoError(63);
  BI.ops_table || (BI.ops_table = { dir: { node: { getattr: BI.node_ops.getattr, setattr: BI.node_ops.setattr, lookup: BI.node_ops.lookup, mknod: BI.node_ops.mknod, rename: BI.node_ops.rename, unlink: BI.node_ops.unlink, rmdir: BI.node_ops.rmdir, readdir: BI.node_ops.readdir, symlink: BI.node_ops.symlink }, stream: { llseek: BI.stream_ops.llseek } }, file: { node: { getattr: BI.node_ops.getattr, setattr: BI.node_ops.setattr }, stream: { llseek: BI.stream_ops.llseek, read: BI.stream_ops.read, write: BI.stream_ops.write, allocate: BI.stream_ops.allocate, mmap: BI.stream_ops.mmap, msync: BI.stream_ops.msync } }, link: { node: { getattr: BI.node_ops.getattr, setattr: BI.node_ops.setattr, readlink: BI.node_ops.readlink }, stream: {} }, chrdev: { node: { getattr: BI.node_ops.getattr, setattr: BI.node_ops.setattr }, stream: p.chrdev_stream_ops } });
  var s = p.createNode(B, R, F, i);
  return p.isDir(s.mode) ? (s.node_ops = BI.ops_table.dir.node, s.stream_ops = BI.ops_table.dir.stream, s.contents = {}) : p.isFile(s.mode) ? (s.node_ops = BI.ops_table.file.node, s.stream_ops = BI.ops_table.file.stream, s.usedBytes = 0, s.contents = null) : p.isLink(s.mode) ? (s.node_ops = BI.ops_table.link.node, s.stream_ops = BI.ops_table.link.stream) : p.isChrdev(s.mode) && (s.node_ops = BI.ops_table.chrdev.node, s.stream_ops = BI.ops_table.chrdev.stream), s.timestamp = Date.now(), B && (B.contents[R] = s, B.timestamp = s.timestamp), s;
}, getFileDataAsTypedArray: function(B) {
  return B.contents ? B.contents.subarray ? B.contents.subarray(0, B.usedBytes) : new Uint8Array(B.contents) : new Uint8Array(0);
}, expandFileStorage: function(B, R) {
  var F = B.contents ? B.contents.length : 0;
  if (!(F >= R)) {
    R = Math.max(R, F * (F < 1048576 ? 2 : 1.125) >>> 0), F != 0 && (R = Math.max(R, 256));
    var i = B.contents;
    B.contents = new Uint8Array(R), B.usedBytes > 0 && B.contents.set(i.subarray(0, B.usedBytes), 0);
  }
}, resizeFileStorage: function(B, R) {
  if (B.usedBytes != R) if (R == 0) B.contents = null, B.usedBytes = 0;
  else {
    var F = B.contents;
    B.contents = new Uint8Array(R), F && B.contents.set(F.subarray(0, Math.min(R, B.usedBytes))), B.usedBytes = R;
  }
}, node_ops: { getattr: function(B) {
  var R = {};
  return R.dev = p.isChrdev(B.mode) ? B.id : 1, R.ino = B.id, R.mode = B.mode, R.nlink = 1, R.uid = 0, R.gid = 0, R.rdev = B.rdev, p.isDir(B.mode) ? R.size = 4096 : p.isFile(B.mode) ? R.size = B.usedBytes : p.isLink(B.mode) ? R.size = B.link.length : R.size = 0, R.atime = new Date(B.timestamp), R.mtime = new Date(B.timestamp), R.ctime = new Date(B.timestamp), R.blksize = 4096, R.blocks = Math.ceil(R.size / R.blksize), R;
}, setattr: function(B, R) {
  R.mode !== void 0 && (B.mode = R.mode), R.timestamp !== void 0 && (B.timestamp = R.timestamp), R.size !== void 0 && BI.resizeFileStorage(B, R.size);
}, lookup: function(B, R) {
  throw p.genericErrors[44];
}, mknod: function(B, R, F, i) {
  return BI.createNode(B, R, F, i);
}, rename: function(B, R, F) {
  if (p.isDir(B.mode)) {
    var i;
    try {
      i = p.lookupNode(R, F);
    } catch {
    }
    if (i) for (var s in i.contents) throw new p.ErrnoError(55);
  }
  delete B.parent.contents[B.name], B.parent.timestamp = Date.now(), B.name = F, R.contents[F] = B, R.timestamp = B.parent.timestamp, B.parent = R;
}, unlink: function(B, R) {
  delete B.contents[R], B.timestamp = Date.now();
}, rmdir: function(B, R) {
  var F = p.lookupNode(B, R);
  for (var i in F.contents) throw new p.ErrnoError(55);
  delete B.contents[R], B.timestamp = Date.now();
}, readdir: function(B) {
  var R = [".", ".."];
  for (var F in B.contents) B.contents.hasOwnProperty(F) && R.push(F);
  return R;
}, symlink: function(B, R, F) {
  var i = BI.createNode(B, R, 41471, 0);
  return i.link = F, i;
}, readlink: function(B) {
  if (!p.isLink(B.mode)) throw new p.ErrnoError(28);
  return B.link;
} }, stream_ops: { read: function(B, R, F, i, s) {
  var N = B.node.contents;
  if (s >= B.node.usedBytes) return 0;
  var j = Math.min(B.node.usedBytes - s, i);
  if (j > 8 && N.subarray) R.set(N.subarray(s, s + j), F);
  else for (var h = 0; h < j; h++) R[F + h] = N[s + h];
  return j;
}, write: function(B, R, F, i, s, N) {
  if (!i) return 0;
  var j = B.node;
  if (j.timestamp = Date.now(), R.subarray && (!j.contents || j.contents.subarray)) {
    if (N) return j.contents = R.subarray(F, F + i), j.usedBytes = i, i;
    if (j.usedBytes === 0 && s === 0) return j.contents = R.slice(F, F + i), j.usedBytes = i, i;
    if (s + i <= j.usedBytes) return j.contents.set(R.subarray(F, F + i), s), i;
  }
  if (BI.expandFileStorage(j, s + i), j.contents.subarray && R.subarray) j.contents.set(R.subarray(F, F + i), s);
  else for (var h = 0; h < i; h++) j.contents[s + h] = R[F + h];
  return j.usedBytes = Math.max(j.usedBytes, s + i), i;
}, llseek: function(B, R, F) {
  var i = R;
  if (F === 1 ? i += B.position : F === 2 && p.isFile(B.node.mode) && (i += B.node.usedBytes), i < 0) throw new p.ErrnoError(28);
  return i;
}, allocate: function(B, R, F) {
  BI.expandFileStorage(B.node, R + F), B.node.usedBytes = Math.max(B.node.usedBytes, R + F);
}, mmap: function(B, R, F, i, s) {
  if (!p.isFile(B.node.mode)) throw new p.ErrnoError(43);
  var N, j, h = B.node.contents;
  if (2 & s || h.buffer !== SC.buffer) {
    if ((F > 0 || F + R < h.length) && (h = h.subarray ? h.subarray(F, F + R) : Array.prototype.slice.call(h, F, F + R)), j = !0, !(N = uo())) throw new p.ErrnoError(48);
    SC.set(h, N);
  } else j = !1, N = h.byteOffset;
  return { ptr: N, allocated: j };
}, msync: function(B, R, F, i, s) {
  return BI.stream_ops.write(B, R, 0, i, F, !1), 0;
} } }, p = { root: null, mounts: [], devices: {}, streams: [], nextInode: 1, nameTable: null, currentPath: "/", initialized: !1, ignorePermissions: !0, ErrnoError: null, genericErrors: {}, filesystems: null, syncFSRequests: 0, lookupPath: (B, R = {}) => {
  if (!(B = Ug.resolve(B))) return { path: "", node: null };
  if ((R = Object.assign({ follow_mount: !0, recurse_count: 0 }, R)).recurse_count > 8) throw new p.ErrnoError(32);
  for (var F = B.split("/").filter((k) => !!k), i = p.root, s = "/", N = 0; N < F.length; N++) {
    var j = N === F.length - 1;
    if (j && R.parent) break;
    if (i = p.lookupNode(i, F[N]), s = hI.join2(s, F[N]), p.isMountpoint(i) && (!j || j && R.follow_mount) && (i = i.mounted.root), !j || R.follow) for (var h = 0; p.isLink(i.mode); ) {
      var l = p.readlink(s);
      if (s = Ug.resolve(hI.dirname(s), l), i = p.lookupPath(s, { recurse_count: R.recurse_count + 1 }).node, h++ > 40) throw new p.ErrnoError(32);
    }
  }
  return { path: s, node: i };
}, getPath: (B) => {
  for (var R; ; ) {
    if (p.isRoot(B)) {
      var F = B.mount.mountpoint;
      return R ? F[F.length - 1] !== "/" ? F + "/" + R : F + R : F;
    }
    R = R ? B.name + "/" + R : B.name, B = B.parent;
  }
}, hashName: (B, R) => {
  for (var F = 0, i = 0; i < R.length; i++) F = (F << 5) - F + R.charCodeAt(i) | 0;
  return (B + F >>> 0) % p.nameTable.length;
}, hashAddNode: (B) => {
  var R = p.hashName(B.parent.id, B.name);
  B.name_next = p.nameTable[R], p.nameTable[R] = B;
}, hashRemoveNode: (B) => {
  var R = p.hashName(B.parent.id, B.name);
  if (p.nameTable[R] === B) p.nameTable[R] = B.name_next;
  else for (var F = p.nameTable[R]; F; ) {
    if (F.name_next === B) {
      F.name_next = B.name_next;
      break;
    }
    F = F.name_next;
  }
}, lookupNode: (B, R) => {
  var F = p.mayLookup(B);
  if (F) throw new p.ErrnoError(F, B);
  for (var i = p.hashName(B.id, R), s = p.nameTable[i]; s; s = s.name_next) {
    var N = s.name;
    if (s.parent.id === B.id && N === R) return s;
  }
  return p.lookup(B, R);
}, createNode: (B, R, F, i) => {
  var s = new p.FSNode(B, R, F, i);
  return p.hashAddNode(s), s;
}, destroyNode: (B) => {
  p.hashRemoveNode(B);
}, isRoot: (B) => B === B.parent, isMountpoint: (B) => !!B.mounted, isFile: (B) => (61440 & B) == 32768, isDir: (B) => (61440 & B) == 16384, isLink: (B) => (61440 & B) == 40960, isChrdev: (B) => (61440 & B) == 8192, isBlkdev: (B) => (61440 & B) == 24576, isFIFO: (B) => (61440 & B) == 4096, isSocket: (B) => !(49152 & ~B), flagModes: { r: 0, "r+": 2, w: 577, "w+": 578, a: 1089, "a+": 1090 }, modeStringToFlags: (B) => {
  var R = p.flagModes[B];
  if (R === void 0) throw new Error("Unknown file open mode: " + B);
  return R;
}, flagsToPermissionString: (B) => {
  var R = ["r", "w", "rw"][3 & B];
  return 512 & B && (R += "w"), R;
}, nodePermissions: (B, R) => p.ignorePermissions || (!R.includes("r") || 292 & B.mode) && (!R.includes("w") || 146 & B.mode) && (!R.includes("x") || 73 & B.mode) ? 0 : 2, mayLookup: (B) => {
  var R = p.nodePermissions(B, "x");
  return R || (B.node_ops.lookup ? 0 : 2);
}, mayCreate: (B, R) => {
  try {
    return p.lookupNode(B, R), 20;
  } catch {
  }
  return p.nodePermissions(B, "wx");
}, mayDelete: (B, R, F) => {
  var i;
  try {
    i = p.lookupNode(B, R);
  } catch (N) {
    return N.errno;
  }
  var s = p.nodePermissions(B, "wx");
  if (s) return s;
  if (F) {
    if (!p.isDir(i.mode)) return 54;
    if (p.isRoot(i) || p.getPath(i) === p.cwd()) return 10;
  } else if (p.isDir(i.mode)) return 31;
  return 0;
}, mayOpen: (B, R) => B ? p.isLink(B.mode) ? 32 : p.isDir(B.mode) && (p.flagsToPermissionString(R) !== "r" || 512 & R) ? 31 : p.nodePermissions(B, p.flagsToPermissionString(R)) : 44, MAX_OPEN_FDS: 4096, nextfd: (B = 0, R = p.MAX_OPEN_FDS) => {
  for (var F = B; F <= R; F++) if (!p.streams[F]) return F;
  throw new p.ErrnoError(33);
}, getStream: (B) => p.streams[B], createStream: (B, R, F) => {
  p.FSStream || (p.FSStream = function() {
    this.shared = {};
  }, p.FSStream.prototype = {}, Object.defineProperties(p.FSStream.prototype, { object: { get: function() {
    return this.node;
  }, set: function(s) {
    this.node = s;
  } }, isRead: { get: function() {
    return (2097155 & this.flags) != 1;
  } }, isWrite: { get: function() {
    return !!(2097155 & this.flags);
  } }, isAppend: { get: function() {
    return 1024 & this.flags;
  } }, flags: { get: function() {
    return this.shared.flags;
  }, set: function(s) {
    this.shared.flags = s;
  } }, position: { get: function() {
    return this.shared.position;
  }, set: function(s) {
    this.shared.position = s;
  } } })), B = Object.assign(new p.FSStream(), B);
  var i = p.nextfd(R, F);
  return B.fd = i, p.streams[i] = B, B;
}, closeStream: (B) => {
  p.streams[B] = null;
}, chrdev_stream_ops: { open: (B) => {
  var R = p.getDevice(B.node.rdev);
  B.stream_ops = R.stream_ops, B.stream_ops.open && B.stream_ops.open(B);
}, llseek: () => {
  throw new p.ErrnoError(70);
} }, major: (B) => B >> 8, minor: (B) => 255 & B, makedev: (B, R) => B << 8 | R, registerDevice: (B, R) => {
  p.devices[B] = { stream_ops: R };
}, getDevice: (B) => p.devices[B], getMounts: (B) => {
  for (var R = [], F = [B]; F.length; ) {
    var i = F.pop();
    R.push(i), F.push.apply(F, i.mounts);
  }
  return R;
}, syncfs: (B, R) => {
  typeof B == "function" && (R = B, B = !1), p.syncFSRequests++, p.syncFSRequests > 1 && aB("warning: " + p.syncFSRequests + " FS.syncfs operations in flight at once, probably just doing extra work");
  var F = p.getMounts(p.root.mount), i = 0;
  function s(j) {
    return p.syncFSRequests--, R(j);
  }
  function N(j) {
    if (j) return N.errored ? void 0 : (N.errored = !0, s(j));
    ++i >= F.length && s(null);
  }
  F.forEach((j) => {
    if (!j.type.syncfs) return N(null);
    j.type.syncfs(j, B, N);
  });
}, mount: (B, R, F) => {
  var i, s = F === "/", N = !F;
  if (s && p.root) throw new p.ErrnoError(10);
  if (!s && !N) {
    var j = p.lookupPath(F, { follow_mount: !1 });
    if (F = j.path, i = j.node, p.isMountpoint(i)) throw new p.ErrnoError(10);
    if (!p.isDir(i.mode)) throw new p.ErrnoError(54);
  }
  var h = { type: B, opts: R, mountpoint: F, mounts: [] }, l = B.mount(h);
  return l.mount = h, h.root = l, s ? p.root = l : i && (i.mounted = h, i.mount && i.mount.mounts.push(h)), l;
}, unmount: (B) => {
  var R = p.lookupPath(B, { follow_mount: !1 });
  if (!p.isMountpoint(R.node)) throw new p.ErrnoError(28);
  var F = R.node, i = F.mounted, s = p.getMounts(i);
  Object.keys(p.nameTable).forEach((j) => {
    for (var h = p.nameTable[j]; h; ) {
      var l = h.name_next;
      s.includes(h.mount) && p.destroyNode(h), h = l;
    }
  }), F.mounted = null;
  var N = F.mount.mounts.indexOf(i);
  F.mount.mounts.splice(N, 1);
}, lookup: (B, R) => B.node_ops.lookup(B, R), mknod: (B, R, F) => {
  var i = p.lookupPath(B, { parent: !0 }).node, s = hI.basename(B);
  if (!s || s === "." || s === "..") throw new p.ErrnoError(28);
  var N = p.mayCreate(i, s);
  if (N) throw new p.ErrnoError(N);
  if (!i.node_ops.mknod) throw new p.ErrnoError(63);
  return i.node_ops.mknod(i, s, R, F);
}, create: (B, R) => (R = R !== void 0 ? R : 438, R &= 4095, R |= 32768, p.mknod(B, R, 0)), mkdir: (B, R) => (R = R !== void 0 ? R : 511, R &= 1023, R |= 16384, p.mknod(B, R, 0)), mkdirTree: (B, R) => {
  for (var F = B.split("/"), i = "", s = 0; s < F.length; ++s) if (F[s]) {
    i += "/" + F[s];
    try {
      p.mkdir(i, R);
    } catch (N) {
      if (N.errno != 20) throw N;
    }
  }
}, mkdev: (B, R, F) => (F === void 0 && (F = R, R = 438), R |= 8192, p.mknod(B, R, F)), symlink: (B, R) => {
  if (!Ug.resolve(B)) throw new p.ErrnoError(44);
  var F = p.lookupPath(R, { parent: !0 }).node;
  if (!F) throw new p.ErrnoError(44);
  var i = hI.basename(R), s = p.mayCreate(F, i);
  if (s) throw new p.ErrnoError(s);
  if (!F.node_ops.symlink) throw new p.ErrnoError(63);
  return F.node_ops.symlink(F, i, B);
}, rename: (B, R) => {
  var F, i, s = hI.dirname(B), N = hI.dirname(R), j = hI.basename(B), h = hI.basename(R);
  if (F = p.lookupPath(B, { parent: !0 }).node, i = p.lookupPath(R, { parent: !0 }).node, !F || !i) throw new p.ErrnoError(44);
  if (F.mount !== i.mount) throw new p.ErrnoError(75);
  var l, k = p.lookupNode(F, j), q = Ug.relative(B, N);
  if (q.charAt(0) !== ".") throw new p.ErrnoError(28);
  if ((q = Ug.relative(R, s)).charAt(0) !== ".") throw new p.ErrnoError(55);
  try {
    l = p.lookupNode(i, h);
  } catch {
  }
  if (k !== l) {
    var d = p.isDir(k.mode), b = p.mayDelete(F, j, d);
    if (b) throw new p.ErrnoError(b);
    if (b = l ? p.mayDelete(i, h, d) : p.mayCreate(i, h)) throw new p.ErrnoError(b);
    if (!F.node_ops.rename) throw new p.ErrnoError(63);
    if (p.isMountpoint(k) || l && p.isMountpoint(l)) throw new p.ErrnoError(10);
    if (i !== F && (b = p.nodePermissions(F, "w"))) throw new p.ErrnoError(b);
    p.hashRemoveNode(k);
    try {
      F.node_ops.rename(k, i, h);
    } catch (P) {
      throw P;
    } finally {
      p.hashAddNode(k);
    }
  }
}, rmdir: (B) => {
  var R = p.lookupPath(B, { parent: !0 }).node, F = hI.basename(B), i = p.lookupNode(R, F), s = p.mayDelete(R, F, !0);
  if (s) throw new p.ErrnoError(s);
  if (!R.node_ops.rmdir) throw new p.ErrnoError(63);
  if (p.isMountpoint(i)) throw new p.ErrnoError(10);
  R.node_ops.rmdir(R, F), p.destroyNode(i);
}, readdir: (B) => {
  var R = p.lookupPath(B, { follow: !0 }).node;
  if (!R.node_ops.readdir) throw new p.ErrnoError(54);
  return R.node_ops.readdir(R);
}, unlink: (B) => {
  var R = p.lookupPath(B, { parent: !0 }).node;
  if (!R) throw new p.ErrnoError(44);
  var F = hI.basename(B), i = p.lookupNode(R, F), s = p.mayDelete(R, F, !1);
  if (s) throw new p.ErrnoError(s);
  if (!R.node_ops.unlink) throw new p.ErrnoError(63);
  if (p.isMountpoint(i)) throw new p.ErrnoError(10);
  R.node_ops.unlink(R, F), p.destroyNode(i);
}, readlink: (B) => {
  var R = p.lookupPath(B).node;
  if (!R) throw new p.ErrnoError(44);
  if (!R.node_ops.readlink) throw new p.ErrnoError(28);
  return Ug.resolve(p.getPath(R.parent), R.node_ops.readlink(R));
}, stat: (B, R) => {
  var F = p.lookupPath(B, { follow: !R }).node;
  if (!F) throw new p.ErrnoError(44);
  if (!F.node_ops.getattr) throw new p.ErrnoError(63);
  return F.node_ops.getattr(F);
}, lstat: (B) => p.stat(B, !0), chmod: (B, R, F) => {
  var i;
  if (typeof B == "string" ? i = p.lookupPath(B, { follow: !F }).node : i = B, !i.node_ops.setattr) throw new p.ErrnoError(63);
  i.node_ops.setattr(i, { mode: 4095 & R | -4096 & i.mode, timestamp: Date.now() });
}, lchmod: (B, R) => {
  p.chmod(B, R, !0);
}, fchmod: (B, R) => {
  var F = p.getStream(B);
  if (!F) throw new p.ErrnoError(8);
  p.chmod(F.node, R);
}, chown: (B, R, F, i) => {
  var s;
  if (typeof B == "string" ? s = p.lookupPath(B, { follow: !i }).node : s = B, !s.node_ops.setattr) throw new p.ErrnoError(63);
  s.node_ops.setattr(s, { timestamp: Date.now() });
}, lchown: (B, R, F) => {
  p.chown(B, R, F, !0);
}, fchown: (B, R, F) => {
  var i = p.getStream(B);
  if (!i) throw new p.ErrnoError(8);
  p.chown(i.node, R, F);
}, truncate: (B, R) => {
  if (R < 0) throw new p.ErrnoError(28);
  var F;
  if (typeof B == "string" ? F = p.lookupPath(B, { follow: !0 }).node : F = B, !F.node_ops.setattr) throw new p.ErrnoError(63);
  if (p.isDir(F.mode)) throw new p.ErrnoError(31);
  if (!p.isFile(F.mode)) throw new p.ErrnoError(28);
  var i = p.nodePermissions(F, "w");
  if (i) throw new p.ErrnoError(i);
  F.node_ops.setattr(F, { size: R, timestamp: Date.now() });
}, ftruncate: (B, R) => {
  var F = p.getStream(B);
  if (!F) throw new p.ErrnoError(8);
  if (!(2097155 & F.flags)) throw new p.ErrnoError(28);
  p.truncate(F.node, R);
}, utime: (B, R, F) => {
  var i = p.lookupPath(B, { follow: !0 }).node;
  i.node_ops.setattr(i, { timestamp: Math.max(R, F) });
}, open: (B, R, F) => {
  if (B === "") throw new p.ErrnoError(44);
  var i;
  if (F = F === void 0 ? 438 : F, F = 64 & (R = typeof R == "string" ? p.modeStringToFlags(R) : R) ? 4095 & F | 32768 : 0, typeof B == "object") i = B;
  else {
    B = hI.normalize(B);
    try {
      i = p.lookupPath(B, { follow: !(131072 & R) }).node;
    } catch {
    }
  }
  var s = !1;
  if (64 & R) if (i) {
    if (128 & R) throw new p.ErrnoError(20);
  } else i = p.mknod(B, F, 0), s = !0;
  if (!i) throw new p.ErrnoError(44);
  if (p.isChrdev(i.mode) && (R &= -513), 65536 & R && !p.isDir(i.mode)) throw new p.ErrnoError(54);
  if (!s) {
    var N = p.mayOpen(i, R);
    if (N) throw new p.ErrnoError(N);
  }
  512 & R && !s && p.truncate(i, 0), R &= -131713;
  var j = p.createStream({ node: i, path: p.getPath(i), flags: R, seekable: !0, position: 0, stream_ops: i.stream_ops, ungotten: [], error: !1 });
  return j.stream_ops.open && j.stream_ops.open(j), !e.logReadFiles || 1 & R || (p.readFiles || (p.readFiles = {}), B in p.readFiles || (p.readFiles[B] = 1)), j;
}, close: (B) => {
  if (p.isClosed(B)) throw new p.ErrnoError(8);
  B.getdents && (B.getdents = null);
  try {
    B.stream_ops.close && B.stream_ops.close(B);
  } catch (R) {
    throw R;
  } finally {
    p.closeStream(B.fd);
  }
  B.fd = null;
}, isClosed: (B) => B.fd === null, llseek: (B, R, F) => {
  if (p.isClosed(B)) throw new p.ErrnoError(8);
  if (!B.seekable || !B.stream_ops.llseek) throw new p.ErrnoError(70);
  if (F != 0 && F != 1 && F != 2) throw new p.ErrnoError(28);
  return B.position = B.stream_ops.llseek(B, R, F), B.ungotten = [], B.position;
}, read: (B, R, F, i, s) => {
  if (i < 0 || s < 0) throw new p.ErrnoError(28);
  if (p.isClosed(B)) throw new p.ErrnoError(8);
  if ((2097155 & B.flags) == 1) throw new p.ErrnoError(8);
  if (p.isDir(B.node.mode)) throw new p.ErrnoError(31);
  if (!B.stream_ops.read) throw new p.ErrnoError(28);
  var N = s !== void 0;
  if (N) {
    if (!B.seekable) throw new p.ErrnoError(70);
  } else s = B.position;
  var j = B.stream_ops.read(B, R, F, i, s);
  return N || (B.position += j), j;
}, write: (B, R, F, i, s, N) => {
  if (i < 0 || s < 0) throw new p.ErrnoError(28);
  if (p.isClosed(B)) throw new p.ErrnoError(8);
  if (!(2097155 & B.flags)) throw new p.ErrnoError(8);
  if (p.isDir(B.node.mode)) throw new p.ErrnoError(31);
  if (!B.stream_ops.write) throw new p.ErrnoError(28);
  B.seekable && 1024 & B.flags && p.llseek(B, 0, 2);
  var j = s !== void 0;
  if (j) {
    if (!B.seekable) throw new p.ErrnoError(70);
  } else s = B.position;
  var h = B.stream_ops.write(B, R, F, i, s, N);
  return j || (B.position += h), h;
}, allocate: (B, R, F) => {
  if (p.isClosed(B)) throw new p.ErrnoError(8);
  if (R < 0 || F <= 0) throw new p.ErrnoError(28);
  if (!(2097155 & B.flags)) throw new p.ErrnoError(8);
  if (!p.isFile(B.node.mode) && !p.isDir(B.node.mode)) throw new p.ErrnoError(43);
  if (!B.stream_ops.allocate) throw new p.ErrnoError(138);
  B.stream_ops.allocate(B, R, F);
}, mmap: (B, R, F, i, s) => {
  if (2 & i && !(2 & s) && (2097155 & B.flags) != 2) throw new p.ErrnoError(2);
  if ((2097155 & B.flags) == 1) throw new p.ErrnoError(2);
  if (!B.stream_ops.mmap) throw new p.ErrnoError(43);
  return B.stream_ops.mmap(B, R, F, i, s);
}, msync: (B, R, F, i, s) => B.stream_ops.msync ? B.stream_ops.msync(B, R, F, i, s) : 0, munmap: (B) => 0, ioctl: (B, R, F) => {
  if (!B.stream_ops.ioctl) throw new p.ErrnoError(59);
  return B.stream_ops.ioctl(B, R, F);
}, readFile: (B, R = {}) => {
  if (R.flags = R.flags || 0, R.encoding = R.encoding || "binary", R.encoding !== "utf8" && R.encoding !== "binary") throw new Error('Invalid encoding type "' + R.encoding + '"');
  var F, i = p.open(B, R.flags), s = p.stat(B).size, N = new Uint8Array(s);
  return p.read(i, N, 0, s, 0), R.encoding === "utf8" ? F = YB(N, 0) : R.encoding === "binary" && (F = N), p.close(i), F;
}, writeFile: (B, R, F = {}) => {
  F.flags = F.flags || 577;
  var i = p.open(B, F.flags, F.mode);
  if (typeof R == "string") {
    var s = new Uint8Array(Oo(R) + 1), N = uw(R, s, 0, s.length);
    p.write(i, s, 0, N, void 0, F.canOwn);
  } else {
    if (!ArrayBuffer.isView(R)) throw new Error("Unsupported data type");
    p.write(i, R, 0, R.byteLength, void 0, F.canOwn);
  }
  p.close(i);
}, cwd: () => p.currentPath, chdir: (B) => {
  var R = p.lookupPath(B, { follow: !0 });
  if (R.node === null) throw new p.ErrnoError(44);
  if (!p.isDir(R.node.mode)) throw new p.ErrnoError(54);
  var F = p.nodePermissions(R.node, "x");
  if (F) throw new p.ErrnoError(F);
  p.currentPath = R.path;
}, createDefaultDirectories: () => {
  p.mkdir("/tmp"), p.mkdir("/home"), p.mkdir("/home/web_user");
}, createDefaultDevices: () => {
  p.mkdir("/dev"), p.registerDevice(p.makedev(1, 3), { read: () => 0, write: (B, R, F, i, s) => i }), p.mkdev("/dev/null", p.makedev(1, 3)), bg.register(p.makedev(5, 0), bg.default_tty_ops), bg.register(p.makedev(6, 0), bg.default_tty1_ops), p.mkdev("/dev/tty", p.makedev(5, 0)), p.mkdev("/dev/tty1", p.makedev(6, 0)), p.mkdir("/dev/shm"), p.mkdir("/dev/shm/tmp");
}, createSpecialDirectories: () => {
  p.mkdir("/proc");
  var B = p.mkdir("/proc/self");
  p.mkdir("/proc/self/fd"), p.mount({ mount: () => {
    var R = p.createNode(B, "fd", 16895, 73);
    return R.node_ops = { lookup: (F, i) => {
      var s = +i, N = p.getStream(s);
      if (!N) throw new p.ErrnoError(8);
      var j = { parent: null, mount: { mountpoint: "fake" }, node_ops: { readlink: () => N.path } };
      return j.parent = j, j;
    } }, R;
  } }, {}, "/proc/self/fd");
}, createStandardStreams: () => {
  e.stdin ? p.createDevice("/dev", "stdin", e.stdin) : p.symlink("/dev/tty", "/dev/stdin"), e.stdout ? p.createDevice("/dev", "stdout", null, e.stdout) : p.symlink("/dev/tty", "/dev/stdout"), e.stderr ? p.createDevice("/dev", "stderr", null, e.stderr) : p.symlink("/dev/tty1", "/dev/stderr"), p.open("/dev/stdin", 0), p.open("/dev/stdout", 1), p.open("/dev/stderr", 1);
}, ensureErrnoError: () => {
  p.ErrnoError || (p.ErrnoError = function(B, R) {
    this.node = R, this.setErrno = function(F) {
      this.errno = F;
    }, this.setErrno(B), this.message = "FS error";
  }, p.ErrnoError.prototype = new Error(), p.ErrnoError.prototype.constructor = p.ErrnoError, [44].forEach((B) => {
    p.genericErrors[B] = new p.ErrnoError(B), p.genericErrors[B].stack = "<generic error, no stack>";
  }));
}, staticInit: () => {
  p.ensureErrnoError(), p.nameTable = new Array(4096), p.mount(BI, {}, "/"), p.createDefaultDirectories(), p.createDefaultDevices(), p.createSpecialDirectories(), p.filesystems = { MEMFS: BI };
}, init: (B, R, F) => {
  p.init.initialized = !0, p.ensureErrnoError(), e.stdin = B || e.stdin, e.stdout = R || e.stdout, e.stderr = F || e.stderr, p.createStandardStreams();
}, quit: () => {
  p.init.initialized = !1;
  for (var B = 0; B < p.streams.length; B++) {
    var R = p.streams[B];
    R && p.close(R);
  }
}, getMode: (B, R) => {
  var F = 0;
  return B && (F |= 365), R && (F |= 146), F;
}, findObject: (B, R) => {
  var F = p.analyzePath(B, R);
  return F.exists ? F.object : null;
}, analyzePath: (B, R) => {
  try {
    B = (i = p.lookupPath(B, { follow: !R })).path;
  } catch {
  }
  var F = { isRoot: !1, exists: !1, error: 0, name: null, path: null, object: null, parentExists: !1, parentPath: null, parentObject: null };
  try {
    var i = p.lookupPath(B, { parent: !0 });
    F.parentExists = !0, F.parentPath = i.path, F.parentObject = i.node, F.name = hI.basename(B), i = p.lookupPath(B, { follow: !R }), F.exists = !0, F.path = i.path, F.object = i.node, F.name = i.node.name, F.isRoot = i.path === "/";
  } catch (s) {
    F.error = s.errno;
  }
  return F;
}, createPath: (B, R, F, i) => {
  B = typeof B == "string" ? B : p.getPath(B);
  for (var s = R.split("/").reverse(); s.length; ) {
    var N = s.pop();
    if (N) {
      var j = hI.join2(B, N);
      try {
        p.mkdir(j);
      } catch {
      }
      B = j;
    }
  }
  return j;
}, createFile: (B, R, F, i, s) => {
  var N = hI.join2(typeof B == "string" ? B : p.getPath(B), R), j = p.getMode(i, s);
  return p.create(N, j);
}, createDataFile: (B, R, F, i, s, N) => {
  var j = R;
  B && (B = typeof B == "string" ? B : p.getPath(B), j = R ? hI.join2(B, R) : B);
  var h = p.getMode(i, s), l = p.create(j, h);
  if (F) {
    if (typeof F == "string") {
      for (var k = new Array(F.length), q = 0, d = F.length; q < d; ++q) k[q] = F.charCodeAt(q);
      F = k;
    }
    p.chmod(l, 146 | h);
    var b = p.open(l, 577);
    p.write(b, F, 0, F.length, 0, N), p.close(b), p.chmod(l, h);
  }
  return l;
}, createDevice: (B, R, F, i) => {
  var s = hI.join2(typeof B == "string" ? B : p.getPath(B), R), N = p.getMode(!!F, !!i);
  p.createDevice.major || (p.createDevice.major = 64);
  var j = p.makedev(p.createDevice.major++, 0);
  return p.registerDevice(j, { open: (h) => {
    h.seekable = !1;
  }, close: (h) => {
    i && i.buffer && i.buffer.length && i(10);
  }, read: (h, l, k, q, d) => {
    for (var b = 0, P = 0; P < q; P++) {
      var W;
      try {
        W = F();
      } catch {
        throw new p.ErrnoError(29);
      }
      if (W === void 0 && b === 0) throw new p.ErrnoError(6);
      if (W == null) break;
      b++, l[k + P] = W;
    }
    return b && (h.node.timestamp = Date.now()), b;
  }, write: (h, l, k, q, d) => {
    for (var b = 0; b < q; b++) try {
      i(l[k + b]);
    } catch {
      throw new p.ErrnoError(29);
    }
    return q && (h.node.timestamp = Date.now()), b;
  } }), p.mkdev(s, N, j);
}, forceLoadFile: (B) => {
  if (B.isDevice || B.isFolder || B.link || B.contents) return !0;
  throw typeof XMLHttpRequest < "u" ? new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.") : new Error("Cannot load without read() or XMLHttpRequest.");
}, createLazyFile: (B, R, F, i, s) => {
  function N() {
    this.lengthKnown = !1, this.chunks = [];
  }
  if (N.prototype.get = function(d) {
    if (!(d > this.length - 1 || d < 0)) {
      var b = d % this.chunkSize, P = d / this.chunkSize | 0;
      return this.getter(P)[b];
    }
  }, N.prototype.setDataGetter = function(d) {
    this.getter = d;
  }, N.prototype.cacheLength = function() {
    var d = new XMLHttpRequest();
    if (d.open("HEAD", F, !1), d.send(null), !(d.status >= 200 && d.status < 300 || d.status === 304)) throw new Error("Couldn't load " + F + ". Status: " + d.status);
    var b, P = Number(d.getResponseHeader("Content-length")), W = (b = d.getResponseHeader("Accept-Ranges")) && b === "bytes", r = (b = d.getResponseHeader("Content-Encoding")) && b === "gzip", $ = 1048576;
    W || ($ = P);
    var m = this;
    m.setDataGetter((z) => {
      var IA = z * $, M = (z + 1) * $ - 1;
      if (M = Math.min(M, P - 1), m.chunks[z] === void 0 && (m.chunks[z] = ((L, A) => {
        if (L > A) throw new Error("invalid range (" + L + ", " + A + ") or no bytes requested!");
        if (A > P - 1) throw new Error("only " + P + " bytes available! programmer error!");
        var G = new XMLHttpRequest();
        if (G.open("GET", F, !1), P !== $ && G.setRequestHeader("Range", "bytes=" + L + "-" + A), G.responseType = "arraybuffer", G.overrideMimeType && G.overrideMimeType("text/plain; charset=x-user-defined"), G.send(null), !(G.status >= 200 && G.status < 300 || G.status === 304)) throw new Error("Couldn't load " + F + ". Status: " + G.status);
        return G.response !== void 0 ? new Uint8Array(G.response || []) : vo(G.responseText || "", !0);
      })(IA, M)), m.chunks[z] === void 0) throw new Error("doXHR failed!");
      return m.chunks[z];
    }), !r && P || ($ = P = 1, P = this.getter(0).length, $ = P, PU("LazyFiles on gzip forces download of the whole file when length is accessed")), this._length = P, this._chunkSize = $, this.lengthKnown = !0;
  }, typeof XMLHttpRequest < "u") {
    if (!hs) throw "Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";
    var j = new N();
    Object.defineProperties(j, { length: { get: function() {
      return this.lengthKnown || this.cacheLength(), this._length;
    } }, chunkSize: { get: function() {
      return this.lengthKnown || this.cacheLength(), this._chunkSize;
    } } });
    var h = { isDevice: !1, contents: j };
  } else h = { isDevice: !1, url: F };
  var l = p.createFile(B, R, h, i, s);
  h.contents ? l.contents = h.contents : h.url && (l.contents = null, l.url = h.url), Object.defineProperties(l, { usedBytes: { get: function() {
    return this.contents.length;
  } } });
  var k = {};
  function q(d, b, P, W, r) {
    var $ = d.node.contents;
    if (r >= $.length) return 0;
    var m = Math.min($.length - r, W);
    if ($.slice) for (var z = 0; z < m; z++) b[P + z] = $[r + z];
    else for (z = 0; z < m; z++) b[P + z] = $.get(r + z);
    return m;
  }
  return Object.keys(l.stream_ops).forEach((d) => {
    var b = l.stream_ops[d];
    k[d] = function() {
      return p.forceLoadFile(l), b.apply(null, arguments);
    };
  }), k.read = (d, b, P, W, r) => (p.forceLoadFile(l), q(d, b, P, W, r)), k.mmap = (d, b, P, W, r) => {
    p.forceLoadFile(l);
    var $ = uo();
    if (!$) throw new p.ErrnoError(48);
    return q(d, SC, $, b, P), { ptr: $, allocated: !0 };
  }, l.stream_ops = k, l;
}, indexedDB: () => window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB, DB_NAME: () => "EM_FS_" + window.location.pathname, DB_VERSION: 20, DB_STORE_NAME: "FILE_DATA", saveFilesToDB: (B, R, F) => {
  R = R || (() => {
  }), F = F || (() => {
  });
  var i = p.indexedDB();
  try {
    var s = i.open(p.DB_NAME(), p.DB_VERSION);
  } catch (N) {
    return F(N);
  }
  s.onupgradeneeded = () => {
    PU("creating db"), s.result.createObjectStore(p.DB_STORE_NAME);
  }, s.onsuccess = () => {
    var N = s.result.transaction([p.DB_STORE_NAME], "readwrite"), j = N.objectStore(p.DB_STORE_NAME), h = 0, l = 0, k = B.length;
    function q() {
      l == 0 ? R() : F();
    }
    B.forEach((d) => {
      var b = j.put(p.analyzePath(d).object.contents, d);
      b.onsuccess = () => {
        ++h + l == k && q();
      }, b.onerror = () => {
        l++, h + l == k && q();
      };
    }), N.onerror = F;
  }, s.onerror = F;
}, loadFilesFromDB: (B, R, F) => {
  R = R || (() => {
  }), F = F || (() => {
  });
  var i = p.indexedDB();
  try {
    var s = i.open(p.DB_NAME(), p.DB_VERSION);
  } catch (N) {
    return F(N);
  }
  s.onupgradeneeded = F, s.onsuccess = () => {
    var N = s.result;
    try {
      var j = N.transaction([p.DB_STORE_NAME], "readonly");
    } catch (b) {
      return void F(b);
    }
    var h = j.objectStore(p.DB_STORE_NAME), l = 0, k = 0, q = B.length;
    function d() {
      k == 0 ? R() : F();
    }
    B.forEach((b) => {
      var P = h.get(b);
      P.onsuccess = () => {
        p.analyzePath(b).exists && p.unlink(b), p.createDataFile(hI.dirname(b), hI.basename(b), P.result, !0, !0, !0), ++l + k == q && d();
      }, P.onerror = () => {
        k++, l + k == q && d();
      };
    }), j.onerror = F;
  }, s.onerror = F;
} }, dI = { DEFAULT_POLLMASK: 5, calculateAt: function(B, R, F) {
  if (hI.isAbs(R)) return R;
  var i;
  if (B === -100 ? i = p.cwd() : i = dI.getStreamFromFD(B).path, R.length == 0) {
    if (!F) throw new p.ErrnoError(44);
    return i;
  }
  return hI.join2(i, R);
}, doStat: function(B, R, F) {
  try {
    var i = B(R);
  } catch (h) {
    if (h && h.node && hI.normalize(R) !== hI.normalize(p.getPath(h.node))) return -54;
    throw h;
  }
  JI[F >> 2] = i.dev, JI[F + 8 >> 2] = i.ino, JI[F + 12 >> 2] = i.mode, zI[F + 16 >> 2] = i.nlink, JI[F + 20 >> 2] = i.uid, JI[F + 24 >> 2] = i.gid, JI[F + 28 >> 2] = i.rdev, TI = [i.size >>> 0, (uA = i.size, +Math.abs(uA) >= 1 ? uA > 0 ? (0 | Math.min(+Math.floor(uA / 4294967296), 4294967295)) >>> 0 : ~~+Math.ceil((uA - +(~~uA >>> 0)) / 4294967296) >>> 0 : 0)], JI[F + 40 >> 2] = TI[0], JI[F + 44 >> 2] = TI[1], JI[F + 48 >> 2] = 4096, JI[F + 52 >> 2] = i.blocks;
  var s = i.atime.getTime(), N = i.mtime.getTime(), j = i.ctime.getTime();
  return TI = [Math.floor(s / 1e3) >>> 0, (uA = Math.floor(s / 1e3), +Math.abs(uA) >= 1 ? uA > 0 ? (0 | Math.min(+Math.floor(uA / 4294967296), 4294967295)) >>> 0 : ~~+Math.ceil((uA - +(~~uA >>> 0)) / 4294967296) >>> 0 : 0)], JI[F + 56 >> 2] = TI[0], JI[F + 60 >> 2] = TI[1], zI[F + 64 >> 2] = s % 1e3 * 1e3, TI = [Math.floor(N / 1e3) >>> 0, (uA = Math.floor(N / 1e3), +Math.abs(uA) >= 1 ? uA > 0 ? (0 | Math.min(+Math.floor(uA / 4294967296), 4294967295)) >>> 0 : ~~+Math.ceil((uA - +(~~uA >>> 0)) / 4294967296) >>> 0 : 0)], JI[F + 72 >> 2] = TI[0], JI[F + 76 >> 2] = TI[1], zI[F + 80 >> 2] = N % 1e3 * 1e3, TI = [Math.floor(j / 1e3) >>> 0, (uA = Math.floor(j / 1e3), +Math.abs(uA) >= 1 ? uA > 0 ? (0 | Math.min(+Math.floor(uA / 4294967296), 4294967295)) >>> 0 : ~~+Math.ceil((uA - +(~~uA >>> 0)) / 4294967296) >>> 0 : 0)], JI[F + 88 >> 2] = TI[0], JI[F + 92 >> 2] = TI[1], zI[F + 96 >> 2] = j % 1e3 * 1e3, TI = [i.ino >>> 0, (uA = i.ino, +Math.abs(uA) >= 1 ? uA > 0 ? (0 | Math.min(+Math.floor(uA / 4294967296), 4294967295)) >>> 0 : ~~+Math.ceil((uA - +(~~uA >>> 0)) / 4294967296) >>> 0 : 0)], JI[F + 104 >> 2] = TI[0], JI[F + 108 >> 2] = TI[1], 0;
}, doMsync: function(B, R, F, i, s) {
  if (!p.isFile(R.node.mode)) throw new p.ErrnoError(43);
  if (2 & i) return 0;
  var N = KB.slice(B, B + F);
  p.msync(R, N, s, F, i);
}, varargs: void 0, get: function() {
  return dI.varargs += 4, JI[dI.varargs - 4 >> 2];
}, getStr: function(B) {
  return lB(B);
}, getStreamFromFD: function(B) {
  var R = p.getStream(B);
  if (!R) throw new p.ErrnoError(8);
  return R;
} }, gw = {};
function dE() {
  if (!dE.strings) {
    var B = { USER: "web_user", LOGNAME: "web_user", PATH: "/", PWD: "/", HOME: "/home/web_user", LANG: (typeof navigator == "object" && navigator.languages && navigator.languages[0] || "C").replace("-", "_") + ".UTF-8", _: vw || "./this.program" };
    for (var R in gw) gw[R] === void 0 ? delete B[R] : B[R] = gw[R];
    var F = [];
    for (var R in B) F.push(R + "=" + B[R]);
    dE.strings = F;
  }
  return dE.strings;
}
var QJ = function(B, R, F, i) {
  B || (B = this), this.parent = B, this.mount = B.mount, this.mounted = null, this.id = p.nextInode++, this.name = R, this.mode = F, this.node_ops = {}, this.stream_ops = {}, this.rdev = i;
};
Object.defineProperties(QJ.prototype, { read: { get: function() {
  return !(365 & ~this.mode);
}, set: function(B) {
  B ? this.mode |= 365 : this.mode &= -366;
} }, write: { get: function() {
  return !(146 & ~this.mode);
}, set: function(B) {
  B ? this.mode |= 146 : this.mode &= -147;
} }, isFolder: { get: function() {
  return p.isDir(this.mode);
} }, isDevice: { get: function() {
  return p.isChrdev(this.mode);
} } }), p.FSNode = QJ, p.staticInit(), e.FS_createPath = p.createPath, e.FS_createDataFile = p.createDataFile, e.FS_unlink = p.unlink, e.FS_createLazyFile = p.createLazyFile, e.FS_createDevice = p.createDevice;
var ls = { g: function(B, R, F, i) {
  pQ("Assertion failed: " + lB(B) + ", at: " + [R ? lB(R) : "unknown filename", F, i ? lB(i) : "unknown function"]);
}, u: function(B, R, F) {
  throw new Ks(B).init(R, F), B;
}, d: function(B, R, F) {
  dI.varargs = F;
  try {
    var i = dI.getStreamFromFD(B);
    switch (R) {
      case 0:
        return (s = dI.get()) < 0 ? -28 : p.createStream(i, s).fd;
      case 1:
      case 2:
      case 6:
      case 7:
        return 0;
      case 3:
        return i.flags;
      case 4:
        var s = dI.get();
        return i.flags |= s, 0;
      case 5:
        return s = dI.get(), fU[s + 0 >> 1] = 2, 0;
      case 16:
      case 8:
      default:
        return -28;
      case 9:
        return N = 28, JI[v0() >> 2] = N, -1;
    }
  } catch (j) {
    if (p === void 0 || !(j instanceof p.ErrnoError)) throw j;
    return -j.errno;
  }
  var N;
}, q: function(B, R, F) {
  try {
    var i = dI.getStreamFromFD(B);
    i.getdents || (i.getdents = p.readdir(i.path));
    for (var s = 280, N = 0, j = p.llseek(i, 0, 1), h = Math.floor(j / s); h < i.getdents.length && N + s <= F; ) {
      var l, k, q = i.getdents[h];
      if (q === ".") l = i.node.id, k = 4;
      else if (q === "..")
        l = p.lookupPath(i.path, { parent: !0 }).node.id, k = 4;
      else {
        var d = p.lookupNode(i.node, q);
        l = d.id, k = p.isChrdev(d.mode) ? 2 : p.isDir(d.mode) ? 4 : p.isLink(d.mode) ? 10 : 8;
      }
      TI = [l >>> 0, (uA = l, +Math.abs(uA) >= 1 ? uA > 0 ? (0 | Math.min(+Math.floor(uA / 4294967296), 4294967295)) >>> 0 : ~~+Math.ceil((uA - +(~~uA >>> 0)) / 4294967296) >>> 0 : 0)], JI[R + N >> 2] = TI[0], JI[R + N + 4 >> 2] = TI[1], TI = [(h + 1) * s >>> 0, (uA = (h + 1) * s, +Math.abs(uA) >= 1 ? uA > 0 ? (0 | Math.min(+Math.floor(uA / 4294967296), 4294967295)) >>> 0 : ~~+Math.ceil((uA - +(~~uA >>> 0)) / 4294967296) >>> 0 : 0)], JI[R + N + 8 >> 2] = TI[0], JI[R + N + 12 >> 2] = TI[1], fU[R + N + 16 >> 1] = 280, SC[R + N + 18 | 0] = k, uw(q, KB, R + N + 19, 256), N += s, h += 1;
    }
    return p.llseek(i, h * s, 0), N;
  } catch (b) {
    if (p === void 0 || !(b instanceof p.ErrnoError)) throw b;
    return -b.errno;
  }
}, h: function(B, R, F) {
  dI.varargs = F;
  try {
    var i = dI.getStreamFromFD(B);
    switch (R) {
      case 21509:
      case 21505:
      case 21510:
      case 21511:
      case 21512:
      case 21506:
      case 21507:
      case 21508:
      case 21523:
      case 21524:
        return i.tty ? 0 : -59;
      case 21519:
        if (!i.tty) return -59;
        var s = dI.get();
        return JI[s >> 2] = 0, 0;
      case 21520:
        return i.tty ? -28 : -59;
      case 21531:
        return s = dI.get(), p.ioctl(i, R, s);
      default:
        return -28;
    }
  } catch (N) {
    if (p === void 0 || !(N instanceof p.ErrnoError)) throw N;
    return -N.errno;
  }
}, e: function(B, R, F, i) {
  dI.varargs = i;
  try {
    R = dI.getStr(R), R = dI.calculateAt(B, R);
    var s = i ? dI.get() : 0;
    return p.open(R, F, s).fd;
  } catch (N) {
    if (p === void 0 || !(N instanceof p.ErrnoError)) throw N;
    return -N.errno;
  }
}, o: function(B) {
  try {
    return B = dI.getStr(B), p.rmdir(B), 0;
  } catch (R) {
    if (p === void 0 || !(R instanceof p.ErrnoError)) throw R;
    return -R.errno;
  }
}, n: function(B, R) {
  try {
    return B = dI.getStr(B), dI.doStat(p.stat, B, R);
  } catch (F) {
    if (p === void 0 || !(F instanceof p.ErrnoError)) throw F;
    return -F.errno;
  }
}, p: function(B, R, F) {
  try {
    return R = dI.getStr(R), R = dI.calculateAt(B, R), F === 0 ? p.unlink(R) : F === 512 ? p.rmdir(R) : pQ("Invalid flags passed to unlinkat"), 0;
  } catch (i) {
    if (p === void 0 || !(i instanceof p.ErrnoError)) throw i;
    return -i.errno;
  }
}, i: function() {
  return !0;
}, l: function() {
  pQ("");
}, f: function() {
  return Date.now();
}, j: function(B, R, F) {
  KB.copyWithin(B, R, R + F);
}, m: function(B) {
  KB.length, pQ("OOM");
}, r: function(B, R) {
  var F = 0;
  return dE().forEach(function(i, s) {
    var N = R + F;
    zI[B + 4 * s >> 2] = N, function(j, h) {
      for (var l = 0; l < j.length; ++l) SC[0 | h++] = j.charCodeAt(l);
      SC[0 | h] = 0;
    }(i, N), F += i.length + 1;
  }), 0;
}, s: function(B, R) {
  var F = dE();
  zI[B >> 2] = F.length;
  var i = 0;
  return F.forEach(function(s) {
    i += s.length + 1;
  }), zI[R >> 2] = i, 0;
}, b: function(B) {
  try {
    var R = dI.getStreamFromFD(B);
    return p.close(R), 0;
  } catch (F) {
    if (p === void 0 || !(F instanceof p.ErrnoError)) throw F;
    return F.errno;
  }
}, t: function(B, R, F, i) {
  try {
    var s = function(N, j, h, l) {
      for (var k = 0, q = 0; q < h; q++) {
        var d = zI[j >> 2], b = zI[j + 4 >> 2];
        j += 8;
        var P = p.read(N, SC, d, b, l);
        if (P < 0) return -1;
        if (k += P, P < b) break;
      }
      return k;
    }(dI.getStreamFromFD(B), R, F);
    return zI[i >> 2] = s, 0;
  } catch (N) {
    if (p === void 0 || !(N instanceof p.ErrnoError)) throw N;
    return N.errno;
  }
}, k: function(B, R, F, i, s) {
  try {
    var N = (l = F) + 2097152 >>> 0 < 4194305 - !!(h = R) ? (h >>> 0) + 4294967296 * l : NaN;
    if (isNaN(N)) return 61;
    var j = dI.getStreamFromFD(B);
    return p.llseek(j, N, i), TI = [j.position >>> 0, (uA = j.position, +Math.abs(uA) >= 1 ? uA > 0 ? (0 | Math.min(+Math.floor(uA / 4294967296), 4294967295)) >>> 0 : ~~+Math.ceil((uA - +(~~uA >>> 0)) / 4294967296) >>> 0 : 0)], JI[s >> 2] = TI[0], JI[s + 4 >> 2] = TI[1], j.getdents && N === 0 && i === 0 && (j.getdents = null), 0;
  } catch (k) {
    if (p === void 0 || !(k instanceof p.ErrnoError)) throw k;
    return k.errno;
  }
  var h, l;
}, c: function(B, R, F, i) {
  try {
    var s = function(N, j, h, l) {
      for (var k = 0, q = 0; q < h; q++) {
        var d = zI[j >> 2], b = zI[j + 4 >> 2];
        j += 8;
        var P = p.write(N, SC, d, b, l);
        if (P < 0) return -1;
        k += P;
      }
      return k;
    }(dI.getStreamFromFD(B), R, F);
    return zI[i >> 2] = s, 0;
  } catch (N) {
    if (p === void 0 || !(N instanceof p.ErrnoError)) throw N;
    return N.errno;
  }
}, a: aU };
(function() {
  var B, R = { a: ls };
  function F(s, N) {
    var j = s.exports;
    e.asm = j, e.asm.ua, ro(e.asm.v), eo();
  }
  function i(s) {
    F(s.instance);
  }
  if (mo(), e.instantiateWasm) try {
    return e.instantiateWasm(R, F);
  } catch (s) {
    return aB("Module.instantiateWasm callback failed with error: " + s), !1;
  }
  B = i, async function() {
    return [];
  }().then(function(s) {
    return ZB.instantiate(s, R);
  }).then(function(s) {
    return s;
  }).then(B, function(s) {
    aB("failed to asynchronously prepare wasm: " + s), pQ(s);
  });
})(), e.___wasm_call_ctors = function() {
  return (e.___wasm_call_ctors = e.asm.v).apply(null, arguments);
};
var _o = e._emscripten_bind_VoidPtr___destroy___0 = function() {
  return (_o = e._emscripten_bind_VoidPtr___destroy___0 = e.asm.w).apply(null, arguments);
}, $o = e._emscripten_bind_espeak_VOICE_get_name_0 = function() {
  return ($o = e._emscripten_bind_espeak_VOICE_get_name_0 = e.asm.x).apply(null, arguments);
}, A0 = e._emscripten_bind_espeak_VOICE_set_name_1 = function() {
  return (A0 = e._emscripten_bind_espeak_VOICE_set_name_1 = e.asm.y).apply(null, arguments);
}, I0 = e._emscripten_bind_espeak_VOICE_get_languages_1 = function() {
  return (I0 = e._emscripten_bind_espeak_VOICE_get_languages_1 = e.asm.z).apply(null, arguments);
}, C0 = e._emscripten_bind_espeak_VOICE_get_identifier_0 = function() {
  return (C0 = e._emscripten_bind_espeak_VOICE_get_identifier_0 = e.asm.A).apply(null, arguments);
}, Q0 = e._emscripten_bind_espeak_VOICE_set_identifier_1 = function() {
  return (Q0 = e._emscripten_bind_espeak_VOICE_set_identifier_1 = e.asm.B).apply(null, arguments);
}, g0 = e._emscripten_bind_espeak_VOICE_get_gender_0 = function() {
  return (g0 = e._emscripten_bind_espeak_VOICE_get_gender_0 = e.asm.C).apply(null, arguments);
}, B0 = e._emscripten_bind_espeak_VOICE_set_gender_1 = function() {
  return (B0 = e._emscripten_bind_espeak_VOICE_set_gender_1 = e.asm.D).apply(null, arguments);
}, E0 = e._emscripten_bind_espeak_VOICE_get_age_0 = function() {
  return (E0 = e._emscripten_bind_espeak_VOICE_get_age_0 = e.asm.E).apply(null, arguments);
}, U0 = e._emscripten_bind_espeak_VOICE_set_age_1 = function() {
  return (U0 = e._emscripten_bind_espeak_VOICE_set_age_1 = e.asm.F).apply(null, arguments);
}, R0 = e._emscripten_bind_espeak_VOICE_get_variant_0 = function() {
  return (R0 = e._emscripten_bind_espeak_VOICE_get_variant_0 = e.asm.G).apply(null, arguments);
}, w0 = e._emscripten_bind_espeak_VOICE_set_variant_1 = function() {
  return (w0 = e._emscripten_bind_espeak_VOICE_set_variant_1 = e.asm.H).apply(null, arguments);
}, D0 = e._emscripten_bind_espeak_VOICE_get_xx1_0 = function() {
  return (D0 = e._emscripten_bind_espeak_VOICE_get_xx1_0 = e.asm.I).apply(null, arguments);
}, F0 = e._emscripten_bind_espeak_VOICE_set_xx1_1 = function() {
  return (F0 = e._emscripten_bind_espeak_VOICE_set_xx1_1 = e.asm.J).apply(null, arguments);
}, M0 = e._emscripten_bind_espeak_VOICE_get_score_0 = function() {
  return (M0 = e._emscripten_bind_espeak_VOICE_get_score_0 = e.asm.K).apply(null, arguments);
}, G0 = e._emscripten_bind_espeak_VOICE_set_score_1 = function() {
  return (G0 = e._emscripten_bind_espeak_VOICE_set_score_1 = e.asm.L).apply(null, arguments);
}, J0 = e._emscripten_bind_espeak_VOICE_get_spare_0 = function() {
  return (J0 = e._emscripten_bind_espeak_VOICE_get_spare_0 = e.asm.M).apply(null, arguments);
}, i0 = e._emscripten_bind_espeak_VOICE_set_spare_1 = function() {
  return (i0 = e._emscripten_bind_espeak_VOICE_set_spare_1 = e.asm.N).apply(null, arguments);
}, y0 = e._emscripten_bind_espeak_VOICE___destroy___0 = function() {
  return (y0 = e._emscripten_bind_espeak_VOICE___destroy___0 = e.asm.O).apply(null, arguments);
}, o0 = e._emscripten_bind_espeak_EVENT_get_type_0 = function() {
  return (o0 = e._emscripten_bind_espeak_EVENT_get_type_0 = e.asm.P).apply(null, arguments);
}, N0 = e._emscripten_bind_espeak_EVENT_get_unique_identifier_0 = function() {
  return (N0 = e._emscripten_bind_espeak_EVENT_get_unique_identifier_0 = e.asm.Q).apply(null, arguments);
}, s0 = e._emscripten_bind_espeak_EVENT_get_text_position_0 = function() {
  return (s0 = e._emscripten_bind_espeak_EVENT_get_text_position_0 = e.asm.R).apply(null, arguments);
}, j0 = e._emscripten_bind_espeak_EVENT_get_length_0 = function() {
  return (j0 = e._emscripten_bind_espeak_EVENT_get_length_0 = e.asm.S).apply(null, arguments);
}, S0 = e._emscripten_bind_espeak_EVENT_get_audio_position_0 = function() {
  return (S0 = e._emscripten_bind_espeak_EVENT_get_audio_position_0 = e.asm.T).apply(null, arguments);
}, h0 = e._emscripten_bind_espeak_EVENT_get_sample_0 = function() {
  return (h0 = e._emscripten_bind_espeak_EVENT_get_sample_0 = e.asm.U).apply(null, arguments);
}, L0 = e._emscripten_bind_espeak_EVENT_get_user_data_0 = function() {
  return (L0 = e._emscripten_bind_espeak_EVENT_get_user_data_0 = e.asm.V).apply(null, arguments);
}, Y0 = e._emscripten_bind_espeak_EVENT___destroy___0 = function() {
  return (Y0 = e._emscripten_bind_espeak_EVENT___destroy___0 = e.asm.W).apply(null, arguments);
}, K0 = e._emscripten_bind_eSpeakNGWorker_eSpeakNGWorker_0 = function() {
  return (K0 = e._emscripten_bind_eSpeakNGWorker_eSpeakNGWorker_0 = e.asm.X).apply(null, arguments);
}, l0 = e._emscripten_bind_eSpeakNGWorker_synth__2 = function() {
  return (l0 = e._emscripten_bind_eSpeakNGWorker_synth__2 = e.asm.Y).apply(null, arguments);
}, k0 = e._emscripten_bind_eSpeakNGWorker_synth_ipa__2 = function() {
  return (k0 = e._emscripten_bind_eSpeakNGWorker_synth_ipa__2 = e.asm.Z).apply(null, arguments);
}, c0 = e._emscripten_bind_eSpeakNGWorker_getSizeOfEventStruct__0 = function() {
  return (c0 = e._emscripten_bind_eSpeakNGWorker_getSizeOfEventStruct__0 = e.asm._).apply(null, arguments);
}, H0 = e._emscripten_bind_eSpeakNGWorker_set_voice_2 = function() {
  return (H0 = e._emscripten_bind_eSpeakNGWorker_set_voice_2 = e.asm.$).apply(null, arguments);
}, a0 = e._emscripten_bind_eSpeakNGWorker_set_voice_3 = function() {
  return (a0 = e._emscripten_bind_eSpeakNGWorker_set_voice_3 = e.asm.aa).apply(null, arguments);
}, Z0 = e._emscripten_bind_eSpeakNGWorker_set_voice_4 = function() {
  return (Z0 = e._emscripten_bind_eSpeakNGWorker_set_voice_4 = e.asm.ba).apply(null, arguments);
}, n0 = e._emscripten_bind_eSpeakNGWorker_set_voice_5 = function() {
  return (n0 = e._emscripten_bind_eSpeakNGWorker_set_voice_5 = e.asm.ca).apply(null, arguments);
}, d0 = e._emscripten_bind_eSpeakNGWorker_get_voices_1 = function() {
  return (d0 = e._emscripten_bind_eSpeakNGWorker_get_voices_1 = e.asm.da).apply(null, arguments);
}, q0 = e._emscripten_bind_eSpeakNGWorker_set_voices_2 = function() {
  return (q0 = e._emscripten_bind_eSpeakNGWorker_set_voices_2 = e.asm.ea).apply(null, arguments);
}, V0 = e._emscripten_bind_eSpeakNGWorker_get_samplerate_0 = function() {
  return (V0 = e._emscripten_bind_eSpeakNGWorker_get_samplerate_0 = e.asm.fa).apply(null, arguments);
}, b0 = e._emscripten_bind_eSpeakNGWorker_get_rate_0 = function() {
  return (b0 = e._emscripten_bind_eSpeakNGWorker_get_rate_0 = e.asm.ga).apply(null, arguments);
}, T0 = e._emscripten_bind_eSpeakNGWorker_set_rate_1 = function() {
  return (T0 = e._emscripten_bind_eSpeakNGWorker_set_rate_1 = e.asm.ha).apply(null, arguments);
}, x0 = e._emscripten_bind_eSpeakNGWorker_get_pitch_0 = function() {
  return (x0 = e._emscripten_bind_eSpeakNGWorker_get_pitch_0 = e.asm.ia).apply(null, arguments);
}, P0 = e._emscripten_bind_eSpeakNGWorker_set_pitch_1 = function() {
  return (P0 = e._emscripten_bind_eSpeakNGWorker_set_pitch_1 = e.asm.ja).apply(null, arguments);
}, f0 = e._emscripten_bind_eSpeakNGWorker___destroy___0 = function() {
  return (f0 = e._emscripten_bind_eSpeakNGWorker___destroy___0 = e.asm.ka).apply(null, arguments);
}, p0 = e._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_LIST_TERMINATED = function() {
  return (p0 = e._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_LIST_TERMINATED = e.asm.la).apply(null, arguments);
}, t0 = e._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_WORD = function() {
  return (t0 = e._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_WORD = e.asm.ma).apply(null, arguments);
}, W0 = e._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_SENTENCE = function() {
  return (W0 = e._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_SENTENCE = e.asm.na).apply(null, arguments);
}, O0 = e._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_MARK = function() {
  return (O0 = e._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_MARK = e.asm.oa).apply(null, arguments);
}, z0 = e._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_PLAY = function() {
  return (z0 = e._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_PLAY = e.asm.pa).apply(null, arguments);
}, X0 = e._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_END = function() {
  return (X0 = e._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_END = e.asm.qa).apply(null, arguments);
}, r0 = e._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_MSG_TERMINATED = function() {
  return (r0 = e._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_MSG_TERMINATED = e.asm.ra).apply(null, arguments);
}, m0 = e._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_PHONEME = function() {
  return (m0 = e._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_PHONEME = e.asm.sa).apply(null, arguments);
}, e0 = e._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_SAMPLERATE = function() {
  return (e0 = e._emscripten_enum_espeak_EVENT_TYPE_espeakEVENT_SAMPLERATE = e.asm.ta).apply(null, arguments);
}, v0 = e.___errno_location = function() {
  return (v0 = e.___errno_location = e.asm.va).apply(null, arguments);
};
e._free = function() {
  return (e._free = e.asm.wa).apply(null, arguments);
}, e._malloc = function() {
  return (e._malloc = e.asm.xa).apply(null, arguments);
};
var pU, u0 = e.___cxa_is_pointer_type = function() {
  return (u0 = e.___cxa_is_pointer_type = e.asm.ya).apply(null, arguments);
};
function _0(B) {
  function R() {
    pU || (pU = !0, e.calledRun = !0, po || (Xo = !0, e.noFSInit || p.init.initialized || p.init(), p.ignorePermissions = !1, Qw(zo), e.onRuntimeInitialized && e.onRuntimeInitialized(), function() {
      if (e.postRun) for (typeof e.postRun == "function" && (e.postRun = [e.postRun]); e.postRun.length; ) F = e.postRun.shift(), CJ.unshift(F);
      var F;
      Qw(CJ);
    }()));
  }
  Tg > 0 || (function() {
    if (e.preRun) for (typeof e.preRun == "function" && (e.preRun = [e.preRun]); e.preRun.length; ) F = e.preRun.shift(), IJ.unshift(F);
    var F;
    Qw(IJ);
  }(), Tg > 0 || (e.setStatus ? (e.setStatus("Running..."), setTimeout(function() {
    setTimeout(function() {
      e.setStatus("");
    }, 1), R();
  }, 1)) : R()));
}
if (e.___start_em_js = 132724, e.___stop_em_js = 132822, e.addRunDependency = mo, e.removeRunDependency = eo, e.FS_createPath = p.createPath, e.FS_createDataFile = p.createDataFile, e.FS_createLazyFile = p.createLazyFile, e.FS_createDevice = p.createDevice, e.FS_unlink = p.unlink, nE = function B() {
  pU || _0(), pU || (nE = B);
}, e.preInit) for (typeof e.preInit == "function" && (e.preInit = [e.preInit]); e.preInit.length > 0; ) e.preInit.pop()();
function nC() {
}
function tU(B) {
  return (B || nC).__cache__;
}
function kB(B, R) {
  var F = tU(R), i = F[B];
  return i || ((i = Object.create((R || nC).prototype)).ptr = B, F[B] = i);
}
_0(), nC.prototype = Object.create(nC.prototype), nC.prototype.constructor = nC, nC.prototype.__class__ = nC, nC.__cache__ = {}, e.WrapperObject = nC, e.getCache = tU, e.wrapPointer = kB, e.castObject = function(B, R) {
  return kB(B.ptr, R);
}, e.NULL = kB(0), e.destroy = function(B) {
  if (!B.__destroy__) throw "Error: Cannot destroy object. (Did you create it yourself?)";
  B.__destroy__(), delete tU(B.__class__)[B.ptr];
}, e.compare = function(B, R) {
  return B.ptr === R.ptr;
}, e.getPointer = function(B) {
  return B.ptr;
}, e.getClass = function(B) {
  return B.__class__;
};
var SI = { buffer: 0, size: 0, pos: 0, temps: [], needed: 0, prepare: function() {
  if (SI.needed) {
    for (var B = 0; B < SI.temps.length; B++) e._free(SI.temps[B]);
    SI.temps.length = 0, e._free(SI.buffer), SI.buffer = 0, SI.size += SI.needed, SI.needed = 0;
  }
  SI.buffer || (SI.size += 128, SI.buffer = e._malloc(SI.size), Iw(SI.buffer)), SI.pos = 0;
}, alloc: function(B, R) {
  Iw(SI.buffer);
  var F, i = R.BYTES_PER_ELEMENT, s = B.length * i;
  return s = s + 7 & -8, SI.pos + s >= SI.size ? (Iw(s > 0), SI.needed += s, F = e._malloc(s), SI.temps.push(F)) : (F = SI.buffer + SI.pos, SI.pos += s), F;
}, copy: function(B, R, F) {
  switch (F >>>= 0, R.BYTES_PER_ELEMENT) {
    case 2:
      F >>>= 1;
      break;
    case 4:
      F >>>= 2;
      break;
    case 8:
      F >>>= 3;
  }
  for (var i = 0; i < B.length; i++) R[F + i] = B[i];
} };
function ng(B) {
  if (typeof B == "string") {
    var R = vo(B), F = SI.alloc(R, SC);
    return SI.copy(R, SC, F), F;
  }
  return B;
}
function PQ() {
  throw "cannot construct a VoidPtr, no constructor in IDL";
}
function ZA() {
  throw "cannot construct a espeak_VOICE, no constructor in IDL";
}
function RI() {
  throw "cannot construct a espeak_EVENT, no constructor in IDL";
}
function AI() {
  this.ptr = K0(), tU(AI)[this.ptr] = this;
}
PQ.prototype = Object.create(nC.prototype), PQ.prototype.constructor = PQ, PQ.prototype.__class__ = PQ, PQ.__cache__ = {}, e.VoidPtr = PQ, PQ.prototype.__destroy__ = PQ.prototype.__destroy__ = function() {
  var B = this.ptr;
  _o(B);
}, ZA.prototype = Object.create(nC.prototype), ZA.prototype.constructor = ZA, ZA.prototype.__class__ = ZA, ZA.__cache__ = {}, e.espeak_VOICE = ZA, ZA.prototype.get_name = ZA.prototype.get_name = function() {
  var B = this.ptr;
  return lB($o(B));
}, ZA.prototype.set_name = ZA.prototype.set_name = function(B) {
  var R = this.ptr;
  SI.prepare(), B = B && typeof B == "object" ? B.ptr : ng(B), A0(R, B);
}, Object.defineProperty(ZA.prototype, "name", { get: ZA.prototype.get_name, set: ZA.prototype.set_name }), ZA.prototype.get_languages = ZA.prototype.get_languages = function(B) {
  var R = this.ptr;
  return B && typeof B == "object" && (B = B.ptr), I0(R, B);
}, Object.defineProperty(ZA.prototype, "languages", { get: ZA.prototype.get_languages }), ZA.prototype.get_identifier = ZA.prototype.get_identifier = function() {
  var B = this.ptr;
  return lB(C0(B));
}, ZA.prototype.set_identifier = ZA.prototype.set_identifier = function(B) {
  var R = this.ptr;
  SI.prepare(), B = B && typeof B == "object" ? B.ptr : ng(B), Q0(R, B);
}, Object.defineProperty(ZA.prototype, "identifier", { get: ZA.prototype.get_identifier, set: ZA.prototype.set_identifier }), ZA.prototype.get_gender = ZA.prototype.get_gender = function() {
  var B = this.ptr;
  return g0(B);
}, ZA.prototype.set_gender = ZA.prototype.set_gender = function(B) {
  var R = this.ptr;
  B && typeof B == "object" && (B = B.ptr), B0(R, B);
}, Object.defineProperty(ZA.prototype, "gender", { get: ZA.prototype.get_gender, set: ZA.prototype.set_gender }), ZA.prototype.get_age = ZA.prototype.get_age = function() {
  var B = this.ptr;
  return E0(B);
}, ZA.prototype.set_age = ZA.prototype.set_age = function(B) {
  var R = this.ptr;
  B && typeof B == "object" && (B = B.ptr), U0(R, B);
}, Object.defineProperty(ZA.prototype, "age", { get: ZA.prototype.get_age, set: ZA.prototype.set_age }), ZA.prototype.get_variant = ZA.prototype.get_variant = function() {
  var B = this.ptr;
  return R0(B);
}, ZA.prototype.set_variant = ZA.prototype.set_variant = function(B) {
  var R = this.ptr;
  B && typeof B == "object" && (B = B.ptr), w0(R, B);
}, Object.defineProperty(ZA.prototype, "variant", { get: ZA.prototype.get_variant, set: ZA.prototype.set_variant }), ZA.prototype.get_xx1 = ZA.prototype.get_xx1 = function() {
  var B = this.ptr;
  return D0(B);
}, ZA.prototype.set_xx1 = ZA.prototype.set_xx1 = function(B) {
  var R = this.ptr;
  B && typeof B == "object" && (B = B.ptr), F0(R, B);
}, Object.defineProperty(ZA.prototype, "xx1", { get: ZA.prototype.get_xx1, set: ZA.prototype.set_xx1 }), ZA.prototype.get_score = ZA.prototype.get_score = function() {
  var B = this.ptr;
  return M0(B);
}, ZA.prototype.set_score = ZA.prototype.set_score = function(B) {
  var R = this.ptr;
  B && typeof B == "object" && (B = B.ptr), G0(R, B);
}, Object.defineProperty(ZA.prototype, "score", { get: ZA.prototype.get_score, set: ZA.prototype.set_score }), ZA.prototype.get_spare = ZA.prototype.get_spare = function() {
  var B = this.ptr;
  return J0(B);
}, ZA.prototype.set_spare = ZA.prototype.set_spare = function(B) {
  var R = this.ptr;
  B && typeof B == "object" && (B = B.ptr), i0(R, B);
}, Object.defineProperty(ZA.prototype, "spare", { get: ZA.prototype.get_spare, set: ZA.prototype.set_spare }), ZA.prototype.__destroy__ = ZA.prototype.__destroy__ = function() {
  var B = this.ptr;
  y0(B);
}, RI.prototype = Object.create(nC.prototype), RI.prototype.constructor = RI, RI.prototype.__class__ = RI, RI.__cache__ = {}, e.espeak_EVENT = RI, RI.prototype.get_type = RI.prototype.get_type = function() {
  var B = this.ptr;
  return o0(B);
}, Object.defineProperty(RI.prototype, "type", { get: RI.prototype.get_type }), RI.prototype.get_unique_identifier = RI.prototype.get_unique_identifier = function() {
  var B = this.ptr;
  return N0(B);
}, Object.defineProperty(RI.prototype, "unique_identifier", { get: RI.prototype.get_unique_identifier }), RI.prototype.get_text_position = RI.prototype.get_text_position = function() {
  var B = this.ptr;
  return s0(B);
}, Object.defineProperty(RI.prototype, "text_position", { get: RI.prototype.get_text_position }), RI.prototype.get_length = RI.prototype.get_length = function() {
  var B = this.ptr;
  return j0(B);
}, Object.defineProperty(RI.prototype, "length", { get: RI.prototype.get_length }), RI.prototype.get_audio_position = RI.prototype.get_audio_position = function() {
  var B = this.ptr;
  return S0(B);
}, Object.defineProperty(RI.prototype, "audio_position", { get: RI.prototype.get_audio_position }), RI.prototype.get_sample = RI.prototype.get_sample = function() {
  var B = this.ptr;
  return h0(B);
}, Object.defineProperty(RI.prototype, "sample", { get: RI.prototype.get_sample }), RI.prototype.get_user_data = RI.prototype.get_user_data = function() {
  var B = this.ptr;
  return L0(B);
}, Object.defineProperty(RI.prototype, "user_data", { get: RI.prototype.get_user_data }), RI.prototype.__destroy__ = RI.prototype.__destroy__ = function() {
  var B = this.ptr;
  Y0(B);
}, AI.prototype = Object.create(nC.prototype), AI.prototype.constructor = AI, AI.prototype.__class__ = AI, AI.__cache__ = {}, e.eSpeakNGWorker = AI, AI.prototype.synth_ = AI.prototype.synth_ = function(B, R) {
  var F = this.ptr;
  SI.prepare(), B = B && typeof B == "object" ? B.ptr : ng(B), R && typeof R == "object" && (R = R.ptr), l0(F, B, R);
}, AI.prototype.synth_ipa_ = AI.prototype.synth_ipa_ = function(B, R) {
  var F = this.ptr;
  return SI.prepare(), B = B && typeof B == "object" ? B.ptr : ng(B), R = R && typeof R == "object" ? R.ptr : ng(R), k0(F, B, R);
}, AI.prototype.getSizeOfEventStruct_ = AI.prototype.getSizeOfEventStruct_ = function() {
  var B = this.ptr;
  return c0(B);
}, AI.prototype.set_voice = AI.prototype.set_voice = function(B, R, F, i, s) {
  var N = this.ptr;
  return SI.prepare(), B = B && typeof B == "object" ? B.ptr : ng(B), R = R && typeof R == "object" ? R.ptr : ng(R), F && typeof F == "object" && (F = F.ptr), i && typeof i == "object" && (i = i.ptr), s && typeof s == "object" && (s = s.ptr), F === void 0 ? H0(N, B, R) : i === void 0 ? a0(N, B, R, F) : s === void 0 ? Z0(N, B, R, F, i) : n0(N, B, R, F, i, s);
}, AI.prototype.get_voices = AI.prototype.get_voices = function(B) {
  var R = this.ptr;
  return B && typeof B == "object" && (B = B.ptr), kB(d0(R, B), ZA);
}, AI.prototype.set_voices = AI.prototype.set_voices = function(B, R) {
  var F = this.ptr;
  SI.prepare(), B && typeof B == "object" && (B = B.ptr), R && typeof R == "object" && (R = R.ptr), q0(F, B, R);
}, Object.defineProperty(AI.prototype, "voices", { get: AI.prototype.get_voices, set: AI.prototype.set_voices }), AI.prototype.get_samplerate = AI.prototype.get_samplerate = function() {
  var B = this.ptr;
  return V0(B);
}, Object.defineProperty(AI.prototype, "samplerate", { get: AI.prototype.get_samplerate }), AI.prototype.get_rate = AI.prototype.get_rate = function() {
  var B = this.ptr;
  return b0(B);
}, AI.prototype.set_rate = AI.prototype.set_rate = function(B) {
  var R = this.ptr;
  B && typeof B == "object" && (B = B.ptr), T0(R, B);
}, Object.defineProperty(AI.prototype, "rate", { get: AI.prototype.get_rate, set: AI.prototype.set_rate }), AI.prototype.get_pitch = AI.prototype.get_pitch = function() {
  var B = this.ptr;
  return x0(B);
}, AI.prototype.set_pitch = AI.prototype.set_pitch = function(B) {
  var R = this.ptr;
  B && typeof B == "object" && (B = B.ptr), P0(R, B);
}, Object.defineProperty(AI.prototype, "pitch", { get: AI.prototype.get_pitch, set: AI.prototype.set_pitch }), AI.prototype.__destroy__ = AI.prototype.__destroy__ = function() {
  var B = this.ptr;
  f0(B);
}, function() {
  function B() {
    e.espeakEVENT_LIST_TERMINATED = p0(), e.espeakEVENT_WORD = t0(), e.espeakEVENT_SENTENCE = W0(), e.espeakEVENT_MARK = O0(), e.espeakEVENT_PLAY = z0(), e.espeakEVENT_END = X0(), e.espeakEVENT_MSG_TERMINATED = r0(), e.espeakEVENT_PHONEME = m0(), e.espeakEVENT_SAMPLERATE = e0();
  }
  Xo ? B() : ro(B);
}(), AI.prototype.list_voices = function() {
  for (var B, R = [], F = this.get_voices(B = 0); F.ptr != 0; F = this.get_voices(++B)) {
    let h = function(l) {
      for (var k = "", q = l, d = F.get_languages(q++); d != 0; ) k += String.fromCharCode(d), d = F.get_languages(q++);
      return k;
    };
    for (var i = { name: F.get_name(), identifier: F.get_identifier(), languages: [] }, s = 0, N = F.get_languages(s); N != 0; ) {
      var j = { priority: N, name: h(++s) };
      i.languages.push(j), s += j.name.length + 1, N = F.get_languages(s);
    }
    R.push(i);
  }
  return R;
};
var ks = ["list_terminated", "word", "sentence", "mark", "play", "end", "msg_terminated", "phoneme", "samplerate"];
AI.prototype.synthesize = function(B, R) {
  var F = this.getSizeOfEventStruct_(), i = addFunction(function(s, N, j) {
    for (var h = new Float32Array(2 * N), l = 0; l < N; l++) h[2 * l] = Math.max(-1, Math.min(1, Ys(s + 2 * l, "i16") / 32768)), h[2 * l + 1] = h[2 * l];
    var k = [];
    for (s = j, ev = kB(s, RI); ev.get_type() != e.espeakEVENT_LIST_TERMINATED; ev = kB(s += F, RI)) k.push({ type: ks[ev.get_type()], text_position: ev.get_text_position(), word_length: ev.get_length(), audio_position: ev.get_audio_position() });
    return R(h, k) ? 1 : 0;
  });
  this.synth_(B, i), removeFunction(i);
}, AI.prototype.synthesize_ipa = function(B, R) {
  var F = "espeak-ng-ipa-tmp-" + Math.random().toString().substring(2), i = "", s = this.synth_ipa_(B, F);
  return s == 0 && (i = p.readFile(F, { encoding: "utf8" })), p.unlink(F), { code: s, ipa: i };
};
const $0 = new Promise((B) => {
  e.calledRun ? B(new e.eSpeakNGWorker()) : e.onRuntimeInitialized = () => B(new e.eSpeakNGWorker());
}), cs = ["en"], Hs = $0.then((B) => {
  const R = B.list_voices().map(({ name: i, identifier: s, languages: N }) => ({ name: i, identifier: s, languages: N.filter((j) => cs.includes(j.name.split("-")[0])) })).filter((i) => i.languages.length > 0), F = /* @__PURE__ */ new Set();
  for (const i of R) {
    F.add(i.identifier);
    for (const s of i.languages) F.add(s.name);
  }
  return { voices: R, identifiers: F };
}), as = async (B, R = "en-us") => {
  var s;
  const F = await $0, { identifiers: i } = await Hs;
  if (!i.has(R)) throw new Error(`Invalid language identifier: "${R}". Should be one of: ${Array.from(i).toSorted().join(", ")}.`);
  return F.set_voice(R), ((s = F.synthesize_ipa(B).ipa) == null ? void 0 : s.split(`
`).filter((N) => N.length > 0)) ?? [];
};
class Zs {
  constructor() {
    const N = ["$", ...Array.from(';:,.!?¡¿—…"«»"" '), ...Array.from("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz"), ...Array.from("ɑɐɒæɓʙβɔɕçɗɖðʤəɘɚɛɜɝɞɟʄɡɠɢʛɦɧħɥʜɨɪʝɭɬɫɮʟɱɯɰŋɳɲɴøɵɸθœɶʘɹɺɾɻʀʁɽʂʃʈʧʉʊʋⱱʌɣɤʍχʎʏʑʐʒʔʡʕʢǀǁǂǃˈˌːˑʼʴʰʱʲʷˠˤ˞↓↑→↗↘'̩'ᵻ")];
    this.wordIndexDictionary = {}, N.forEach((j, h) => {
      this.wordIndexDictionary[j] = h;
    });
  }
  clean(R) {
    const F = [];
    for (const i of R)
      this.wordIndexDictionary[i] !== void 0 && F.push(this.wordIndexDictionary[i]);
    return F;
  }
}
function ns(B) {
  return B.split(/\s+/).filter((R) => R.length > 0);
}
async function ds(B) {
  try {
    const R = await as(B, "en-us", {
      backend: "espeak",
      preserve_punctuation: !0,
      with_stress: !1
    });
    return (Array.isArray(R) ? R.map((i) => i) : R) || B;
  } catch (R) {
    return console.warn("Phonemization failed, using simplified version:", R), qs(B);
  }
}
function qs(B) {
  return B.toLowerCase().replace(/ph/g, "f").replace(/ch/g, "tʃ").replace(/sh/g, "ʃ").replace(/th/g, "θ").replace(/ng/g, "ŋ").replace(/a/g, "ə").replace(/e/g, "ɛ").replace(/i/g, "ɪ").replace(/o/g, "ɔ").replace(/u/g, "ʊ");
}
function Vs(B) {
  const R = B.length, F = new ArrayBuffer(44 + R * 2), i = new DataView(F), s = (l, k) => {
    for (let q = 0; q < k.length; q++)
      i.setUint8(l + q, k.charCodeAt(q));
  }, N = B.sampleRate;
  s(0, "RIFF"), i.setUint32(4, 36 + R * 2, !0), s(8, "WAVE"), s(12, "fmt "), i.setUint32(16, 16, !0), i.setUint16(20, 1, !0), i.setUint16(22, 1, !0), i.setUint32(24, N, !0), i.setUint32(28, N * 2, !0), i.setUint16(32, 2, !0), i.setUint16(34, 16, !0), s(36, "data"), i.setUint32(40, R * 2, !0);
  const j = B.getChannelData(0);
  let h = 44;
  for (let l = 0; l < R; l++) {
    const k = Math.max(-1, Math.min(1, j[l]));
    i.setInt16(h, k * 32767, !0), h += 2;
  }
  return F;
}
class bs {
  constructor() {
    this.session = null, this.voices = null, this.textCleaner = new Zs(), this.modelPath = "./model/kitten_tts_nano_v0_1.onnx", this.voicesPath = "./model/voices.json";
  }
  async init(R, F, i) {
    R && (this.modelPath = R), F && (this.voicesPath = F), i && (LI.wasm.wasmPaths = i, LI.wasm.numThreads = 1, LI.wasm.simd = !0), this.session = await Lw.create(this.modelPath);
    const N = await (await fetch(this.voicesPath)).json();
    this.voices = {};
    for (const [j, h] of Object.entries(N)) {
      const l = Array.isArray(h[0]) ? h.flat() : h;
      this.voices[j] = new Float32Array(l);
    }
    console.log("KittenTTS initialized with voices:", Object.keys(this.voices));
  }
  async generateSpeech(R, F = null, i = 1, s = 24e3) {
    if (!this.session || !this.voices)
      throw new Error("KittenTTS not initialized. Call init() first.");
    F || (F = Object.keys(this.voices)[0]), this.voices[F] || (console.error("Voice not found:", F, "Available voices:", Object.keys(this.voices)), F = Object.keys(this.voices)[0]);
    const N = await ds(R), j = Array.isArray(N) ? N.join(" ") : N, l = ns(j).join(" ");
    let k = this.textCleaner.clean(l);
    k.unshift(0), k.push(0);
    const q = new pC(
      "int64",
      BigInt64Array.from(k.map((T) => BigInt(T))),
      [1, k.length]
    ), d = new pC(
      "float32",
      this.voices[F],
      [1, this.voices[F].length]
    ), b = new pC(
      "float32",
      new Float32Array([i]),
      [1]
    ), P = {
      input_ids: q,
      style: d,
      speed: b
    }, W = await this.session.run(P), r = W[Object.keys(W)[0]];
    let $ = r.data;
    r.dims.length > 1 && ($ = new Float32Array(r.data));
    const m = Math.min(1e3, Math.floor($.length * 0.05)), z = Math.min(2e3, Math.floor($.length * 0.05)), IA = $.slice(m, $.length - z), L = new (window.AudioContext || window.webkitAudioContext)().createBuffer(1, IA.length, s), A = L.getChannelData(0);
    let G = 0;
    for (let T = 0; T < IA.length; T++)
      G = Math.max(G, Math.abs(IA[T]));
    const a = G > 0 ? 0.8 / G : 1;
    for (let T = 0; T < IA.length; T++)
      A[T] = IA[T] * a;
    const UA = Vs(L);
    return new Blob([UA], { type: "audio/wav" });
  }
  getVoices() {
    return this.voices ? Object.keys(this.voices) : [];
  }
}
typeof window < "u" && (window.KittenTTS = bs);
export {
  bs as KittenTTS
};
